(function () {
	'use strict';

	(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1:function(e,t,n){e.exports=n("EWLK");},EWLK:function(e,t,n){n.r(t),n("pDpN"),n("KJ4T"),void 0===window.customElements.upgrade&&(window.customElements.upgrade=()=>{});},KJ4T:function(e,t){!function(e,t){function n(){var e=L.splice(0,L.length);for(Je=0;e.length;)e.shift().call(null,e.shift());}function o(e,t){for(var n=0,o=e.length;n<o;n++)d(e[n],t);}function r(e){return function(t){Ae(t)&&(d(t,e),ae.length&&o(t.querySelectorAll(ae),e));}}function a(e){var t=Ve.call(e,"is"),n=e.nodeName.toUpperCase(),o=se.call(oe,t?ee+t.toUpperCase():Q+n);return t&&-1<o&&!i(n,t)?-1:o}function i(e,t){return -1<ae.indexOf(e+'[is="'+t+'"]')}function s(e){var t=e.currentTarget,n=e.attrChange,o=e.attrName,r=e.target,a=e[$]||2,i=e[X]||3;!ot||r&&r!==t||!t[V]||"style"===o||e.prevValue===e.newValue&&(""!==e.newValue||n!==a&&n!==i)||t[V](o,n===a?null:e.prevValue,n===i?null:e.newValue);}function c(e){var t=r(e);return function(e){L.push(t,e.target),Je&&clearTimeout(Je),Je=setTimeout(n,1);}}function l(e){nt&&(nt=!1,e.currentTarget.removeEventListener(J,l)),ae.length&&o((e.target||E).querySelectorAll(ae),e.detail===x?x:j),Ne&&function(){for(var e,t=0,n=Ie.length;t<n;t++)ie.contains(e=Ie[t])||(n--,Ie.splice(t--,1),d(e,x));}();}function u(e,t){var n=this;Be.call(n,e,t),M.call(n,{target:n});}function h(e,t,n){var o=t.apply(e,n),r=a(o);return -1<r&&Z(o,re[r]),n.pop()&&ae.length&&function(e){for(var t,n=0,o=e.length;n<o;n++)Z(t=e[n],re[a(t)]);}(o.querySelectorAll(ae)),o}function p(e,t){He(e,t),D?D.observe(e,Xe):(tt&&(e.setAttribute=u,e[A]=S(e),e[I](Y,M)),e[I](K,s)),e[G]&&ot&&(e.created=!0,e[G](),e.created=!1);}function f(e){throw new Error("A "+e+" type is already registered")}function d(e,t){var n,o,r=a(e);-1<r&&!xe.call(e,"TEMPLATE")&&(O(e,re[r]),r=0,t!==j||e[j]?t!==x||e[x]||(e[j]=!1,e[x]=!0,o="disconnected",r=1):(e[x]=!1,e[j]=!0,o="connected",r=1,Ne&&se.call(Ie,e)<0&&Ie.push(e)),r&&(n=e[t+R]||e[o+R])&&n.call(e));}function m(){}function g(e,t,n){var o=n&&n[F]||"",r=t.prototype,a=De(r),i=t.observedAttributes||pe,s={prototype:a};ze(a,G,{value:function(){if(we)we=!1;else if(!this[ye]){this[ye]=!0,new t(this),r[G]&&r[G].call(this);var e=Le[Ce.get(t)];(!_e||e.create.length>1)&&v(this);}}}),ze(a,V,{value:function(e){-1<se.call(i,e)&&r[V]&&r[V].apply(this,arguments);}}),r[q]&&ze(a,U,{value:r[q]}),r[B]&&ze(a,W,{value:r[B]}),o&&(s[F]=o),e=e.toUpperCase(),Le[e]={constructor:t,create:o?[o,Se(e)]:[e]},Ce.set(t,e),E[N](e.toLowerCase(),s),_(e),Me[e].r();}function T(e){var t=Le[e.toUpperCase()];return t&&t.constructor}function y(e){return "string"==typeof e?e:e&&e.is||""}function v(e){for(var t,n=e[V],o=n?e.attributes:pe,r=o.length;r--;)n.call(e,(t=o[r]).name||t.nodeName,null,t.value||t.nodeValue);}function _(e){return (e=e.toUpperCase())in Me||(Me[e]={},Me[e].p=new be(function(t){Me[e].r=t;})),Me[e].p}function k(){ve&&delete e.customElements,he(e,"customElements",{configurable:!0,value:new m}),he(e,"CustomElementRegistry",{configurable:!0,value:m});for(var t=w.get(/^HTML[A-Z]*[a-z]/),n=t.length;n--;function(t){var n=e[t];if(n){e[t]=function(e){var t,o;return e||(e=this),e[ye]||(we=!0,t=Le[Ce.get(e.constructor)],(e=(o=_e&&1===t.create.length)?Reflect.construct(n,pe,t.constructor):E.createElement.apply(E,t.create))[ye]=!0,we=!1,o||v(e)),e},e[t].prototype=n.prototype;try{n.prototype.constructor=e[t];}catch(o){he(n,ye,{value:e[t]});}}}(t[n]));E.createElement=function(e,t){var n=y(t);return n?$e.call(this,e,Se(n)):$e.call(this,e)},Ye||(et=!0,E[N](""));}var E=e.document,b=e.Object,w=function(e){var t,n,o,r,a=/^[A-Z]+[a-z]/,i=function(e,t){(t=t.toLowerCase())in s||(s[e]=(s[e]||[]).concat(t),s[t]=s[t.toUpperCase()]=e);},s=(b.create||b)(null),c={};for(n in e)for(r in e[n])for(s[r]=o=e[n][r],t=0;t<o.length;t++)s[o[t].toLowerCase()]=s[o[t].toUpperCase()]=r;return c.get=function(e){return "string"==typeof e?s[e]||(a.test(e)?[]:""):function(e){var t,n=[];for(t in s)e.test(t)&&n.push(t);return n}(e)},c.set=function(e,t){return a.test(e)?i(e,t):i(t,e),c},c}({collections:{HTMLAllCollection:["all"],HTMLCollection:["forms"],HTMLFormControlsCollection:["elements"],HTMLOptionsCollection:["options"]},elements:{Element:["element"],HTMLAnchorElement:["a"],HTMLAppletElement:["applet"],HTMLAreaElement:["area"],HTMLAttachmentElement:["attachment"],HTMLAudioElement:["audio"],HTMLBRElement:["br"],HTMLBaseElement:["base"],HTMLBodyElement:["body"],HTMLButtonElement:["button"],HTMLCanvasElement:["canvas"],HTMLContentElement:["content"],HTMLDListElement:["dl"],HTMLDataElement:["data"],HTMLDataListElement:["datalist"],HTMLDetailsElement:["details"],HTMLDialogElement:["dialog"],HTMLDirectoryElement:["dir"],HTMLDivElement:["div"],HTMLDocument:["document"],HTMLElement:["element","abbr","address","article","aside","b","bdi","bdo","cite","code","command","dd","dfn","dt","em","figcaption","figure","footer","header","i","kbd","mark","nav","noscript","rp","rt","ruby","s","samp","section","small","strong","sub","summary","sup","u","var","wbr"],HTMLEmbedElement:["embed"],HTMLFieldSetElement:["fieldset"],HTMLFontElement:["font"],HTMLFormElement:["form"],HTMLFrameElement:["frame"],HTMLFrameSetElement:["frameset"],HTMLHRElement:["hr"],HTMLHeadElement:["head"],HTMLHeadingElement:["h1","h2","h3","h4","h5","h6"],HTMLHtmlElement:["html"],HTMLIFrameElement:["iframe"],HTMLImageElement:["img"],HTMLInputElement:["input"],HTMLKeygenElement:["keygen"],HTMLLIElement:["li"],HTMLLabelElement:["label"],HTMLLegendElement:["legend"],HTMLLinkElement:["link"],HTMLMapElement:["map"],HTMLMarqueeElement:["marquee"],HTMLMediaElement:["media"],HTMLMenuElement:["menu"],HTMLMenuItemElement:["menuitem"],HTMLMetaElement:["meta"],HTMLMeterElement:["meter"],HTMLModElement:["del","ins"],HTMLOListElement:["ol"],HTMLObjectElement:["object"],HTMLOptGroupElement:["optgroup"],HTMLOptionElement:["option"],HTMLOutputElement:["output"],HTMLParagraphElement:["p"],HTMLParamElement:["param"],HTMLPictureElement:["picture"],HTMLPreElement:["pre"],HTMLProgressElement:["progress"],HTMLQuoteElement:["blockquote","q","quote"],HTMLScriptElement:["script"],HTMLSelectElement:["select"],HTMLShadowElement:["shadow"],HTMLSlotElement:["slot"],HTMLSourceElement:["source"],HTMLSpanElement:["span"],HTMLStyleElement:["style"],HTMLTableCaptionElement:["caption"],HTMLTableCellElement:["td","th"],HTMLTableColElement:["col","colgroup"],HTMLTableElement:["table"],HTMLTableRowElement:["tr"],HTMLTableSectionElement:["thead","tbody","tfoot"],HTMLTemplateElement:["template"],HTMLTextAreaElement:["textarea"],HTMLTimeElement:["time"],HTMLTitleElement:["title"],HTMLTrackElement:["track"],HTMLUListElement:["ul"],HTMLUnknownElement:["unknown","vhgroupv","vkeygen"],HTMLVideoElement:["video"]},nodes:{Attr:["node"],Audio:["audio"],CDATASection:["node"],CharacterData:["node"],Comment:["#comment"],Document:["#document"],DocumentFragment:["#document-fragment"],DocumentType:["node"],HTMLDocument:["#document"],Image:["img"],Option:["option"],ProcessingInstruction:["node"],ShadowRoot:["#shadow-root"],Text:["#text"],XMLDocument:["xml"]}});"object"!=typeof t&&(t={type:t||"auto"});var L,M,C,S,D,H,O,Z,P,N="registerElement",z=1e5*e.Math.random()>>0,A="__"+N+z,I="addEventListener",j="attached",R="Callback",x="detached",F="extends",V="attributeChanged"+R,U=j+R,q="connected"+R,B="disconnected"+R,G="created"+R,W=x+R,$="ADDITION",X="REMOVAL",K="DOMAttrModified",J="DOMContentLoaded",Y="DOMSubtreeModified",Q="<",ee="=",te=/^[A-Z][._A-Z0-9]*-[-._A-Z0-9]*$/,ne=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],oe=[],re=[],ae="",ie=E.documentElement,se=oe.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},ce=b.prototype,le=ce.hasOwnProperty,ue=ce.isPrototypeOf,he=b.defineProperty,pe=[],fe=b.getOwnPropertyDescriptor,de=b.getOwnPropertyNames,me=b.getPrototypeOf,ge=b.setPrototypeOf,Te=!!b.__proto__,ye="__dreCEv1",ve=e.customElements,_e=!/^force/.test(t.type)&&!!(ve&&ve.define&&ve.get&&ve.whenDefined),ke=b.create||b,Ee=e.Map||function(){var e,t=[],n=[];return {get:function(e){return n[se.call(t,e)]},set:function(o,r){(e=se.call(t,o))<0?n[t.push(o)-1]=r:n[e]=r;}}},be=e.Promise||function(e){function t(e){for(o=!0;n.length;)n.shift()(e);}var n=[],o=!1,r={catch:function(){return r},then:function(e){return n.push(e),o&&setTimeout(t,1),r}};return e(t),r},we=!1,Le=ke(null),Me=ke(null),Ce=new Ee,Se=function(e){return e.toLowerCase()},De=b.create||function e(t){return t?(e.prototype=t,new e):this},He=ge||(Te?function(e,t){return e.__proto__=t,e}:de&&fe?function(){function e(e,t){for(var n,o=de(t),r=0,a=o.length;r<a;r++)le.call(e,n=o[r])||he(e,n,fe(t,n));}return function(t,n){do{e(t,n);}while((n=me(n))&&!ue.call(n,t));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),Oe=e.MutationObserver||e.WebKitMutationObserver,Ze=e.HTMLAnchorElement,Pe=(e.HTMLElement||e.Element||e.Node).prototype,Ne=!ue.call(Pe,ie),ze=Ne?function(e,t,n){return e[t]=n.value,e}:he,Ae=Ne?function(e){return 1===e.nodeType}:function(e){return ue.call(Pe,e)},Ie=Ne&&[],je=Pe.attachShadow,Re=Pe.cloneNode,xe=Pe.closest||function(e){for(var t=this;t&&t.nodeName!==e;)t=t.parentNode;return t},Fe=Pe.dispatchEvent,Ve=Pe.getAttribute,Ue=Pe.hasAttribute,qe=Pe.removeAttribute,Be=Pe.setAttribute,Ge=E.createElement,We=E.importNode,$e=Ge,Xe=Oe&&{attributes:!0,characterData:!0,attributeOldValue:!0},Ke=Oe||function(e){tt=!1,ie.removeEventListener(K,Ke);},Je=0,Ye=N in E&&!/^force-all/.test(t.type),Qe=!0,et=!1,tt=!0,nt=!0,ot=!0;if(Oe&&((P=E.createElement("div")).innerHTML="<div><div></div></div>",new Oe(function(e,t){if(e[0]&&"childList"==e[0].type&&!e[0].removedNodes[0].childNodes.length){var n=(P=fe(Pe,"innerHTML"))&&P.set;n&&he(Pe,"innerHTML",{set:function(e){for(;this.lastChild;)this.removeChild(this.lastChild);n.call(this,e);}});}t.disconnect(),P=null;}).observe(P,{childList:!0,subtree:!0}),P.innerHTML=""),Ye||(ge||Te?(O=function(e,t){ue.call(t,e)||p(e,t);},Z=p):Z=O=function(e,t){e[A]||(e[A]=b(!0),p(e,t));},Ne?(tt=!1,function(){var e=fe(Pe,I),t=e.value,n=function(e){var t=new CustomEvent(K,{bubbles:!0});t.attrName=e,t.prevValue=Ve.call(this,e),t.newValue=null,t[X]=t.attrChange=2,qe.call(this,e),Fe.call(this,t);},o=function(e,t){var n=Ue.call(this,e),o=n&&Ve.call(this,e),r=new CustomEvent(K,{bubbles:!0});Be.call(this,e,t),r.attrName=e,r.prevValue=n?o:null,r.newValue=t,n?r.MODIFICATION=r.attrChange=1:r[$]=r.attrChange=0,Fe.call(this,r);},r=function(e){var t,n=e.currentTarget,o=n[A],r=e.propertyName;o.hasOwnProperty(r)&&(o=o[r],(t=new CustomEvent(K,{bubbles:!0})).attrName=o.name,t.prevValue=o.value||null,t.newValue=o.value=n[r]||null,null==t.prevValue?t[$]=t.attrChange=0:t.MODIFICATION=t.attrChange=1,Fe.call(n,t));};e.value=function(e,a,i){e===K&&this[V]&&this.setAttribute!==o&&(this[A]={className:{name:"class",value:this.className}},this.setAttribute=o,this.removeAttribute=n,t.call(this,"propertychange",r)),t.call(this,e,a,i);},he(Pe,I,e);}()):Oe||(ie[I](K,Ke),ie.setAttribute(A,1),ie.removeAttribute(A),tt&&(M=function(e){var t,n,o,r=this;if(r===e.target){for(o in t=r[A],r[A]=n=S(r),n){if(!(o in t))return C(0,r,o,t[o],n[o],$);if(n[o]!==t[o])return C(1,r,o,t[o],n[o],"MODIFICATION")}for(o in t)if(!(o in n))return C(2,r,o,t[o],n[o],X)}},C=function(e,t,n,o,r,a){var i={attrChange:e,currentTarget:t,attrName:n,prevValue:o,newValue:r};i[a]=e,s(i);},S=function(e){for(var t,n,o={},r=e.attributes,a=0,i=r.length;a<i;a++)"setAttribute"!==(n=(t=r[a]).name)&&(o[n]=t.value);return o})),E[N]=function(e,t){if(n=e.toUpperCase(),Qe&&(Qe=!1,Oe?(D=function(e,t){function n(e,t){for(var n=0,o=e.length;n<o;t(e[n++]));}return new Oe(function(o){for(var r,a,i,s=0,c=o.length;s<c;s++)"childList"===(r=o[s]).type?(n(r.addedNodes,e),n(r.removedNodes,t)):(a=r.target,ot&&a[V]&&"style"!==r.attributeName&&(i=Ve.call(a,r.attributeName))!==r.oldValue&&a[V](r.attributeName,r.oldValue,i));})}(r(j),r(x)),(H=function(e){return D.observe(e,{childList:!0,subtree:!0}),e})(E),je&&(Pe.attachShadow=function(){return H(je.apply(this,arguments))})):(L=[],E[I]("DOMNodeInserted",c(j)),E[I]("DOMNodeRemoved",c(x))),E[I](J,l),E[I]("readystatechange",l),E.importNode=function(e,t){switch(e.nodeType){case 1:return h(E,We,[e,!!t]);case 11:for(var n=E.createDocumentFragment(),o=e.childNodes,r=o.length,a=0;a<r;a++)n.appendChild(E.importNode(o[a],!!t));return n;default:return Re.call(e,!!t)}},Pe.cloneNode=function(e){return h(this,Re,[!!e])}),et)return et=!1;if(-2<se.call(oe,ee+n)+se.call(oe,Q+n)&&f(e),!te.test(n)||-1<se.call(ne,n))throw new Error("The type "+e+" is invalid");var n,a,i=function(){return u?E.createElement(p,n):E.createElement(p)},s=t||ce,u=le.call(s,F),p=u?t[F].toUpperCase():n;return u&&-1<se.call(oe,Q+p)&&f(p),a=oe.push((u?ee:Q)+n)-1,ae=ae.concat(ae.length?",":"",u?p+'[is="'+e.toLowerCase()+'"]':p),i.prototype=re[a]=le.call(s,"prototype")?s.prototype:De(Pe),ae.length&&o(E.querySelectorAll(ae),j),i},E.createElement=$e=function(e,t){var n=y(t),o=n?Ge.call(E,e,Se(n)):Ge.call(E,e),r=""+e,a=se.call(oe,(n?ee:Q)+(n||r).toUpperCase()),s=-1<a;return n&&(o.setAttribute("is",n=n.toLowerCase()),s&&(s=i(r.toUpperCase(),n))),ot=!E.createElement.innerHTMLHelper,s&&Z(o,re[a]),o}),addEventListener("beforeunload",function(){delete E.createElement,delete E.importNode,delete E[N];},!1),m.prototype={constructor:m,define:_e?function(e,t,n){if(n)g(e,t,n);else {var o=e.toUpperCase();Le[o]={constructor:t,create:[o]},Ce.set(t,o),ve.define(e,t);}}:g,get:_e?function(e){return ve.get(e)||T(e)}:T,whenDefined:_e?function(e){return be.race([ve.whenDefined(e),_(e)])}:_},!ve||/^force/.test(t.type))k();else if(!t.noBuiltIn)try{!function(t,n,o){var r=new RegExp("^<a\\s+is=('|\")"+o+"\\1></a>$");if(n[F]="a",(t.prototype=De(Ze.prototype)).constructor=t,e.customElements.define(o,t,n),!r.test(E.createElement("a",{is:o}).outerHTML)||!r.test((new t).outerHTML))throw n}(function e(){return Reflect.construct(Ze,[],e)},{},"document-register-element-a"+z);}catch(rt){k();}if(!t.noBuiltIn)try{if(Ge.call(E,"a","a").outerHTML.indexOf("is")<0)throw {}}catch(at){Se=function(e){return {is:e.toLowerCase()}};}}(window);},pDpN:function(e,t,n){var o,r;void 0===(r="function"==typeof(o=function(){!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e);}function o(e,n){t&&t.measure&&t.measure(e,n);}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function a(e){return r+e}const i=!0===e[a("forceDuplicateZoneCheck")];if(e.Zone){if(i||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class s{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t);}static assertZonePatched(){if(e.Promise!==D.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=s.current;for(;e.parent;)e=e.parent;return e}static get current(){return O.zone}static get currentTask(){return Z}static __load_patch(t,r){if(D.hasOwnProperty(t)){if(i)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const a="Zone:"+t;n(a),D[t]=r(e,s,H),o(a,a);}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent;}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){O={parent:O,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{O=O.parent;}}runGuarded(e,t=null,n,o){O={parent:O,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{O=O.parent;}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||v).name+"; Execution: "+this.name+")");if(e.state===_&&(e.type===S||e.type===C))return;const o=e.state!=b;o&&e._transitionTo(b,E),e.runCount++;const r=Z;Z=e,O={parent:O,zone:this};try{e.type==C&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(a){if(this._zoneDelegate.handleError(this,a))throw a}}finally{e.state!==_&&e.state!==L&&(e.type==S||e.data&&e.data.isPeriodic?o&&e._transitionTo(E,b):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(_,b,_))),O=O.parent,Z=r;}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent;}}e._transitionTo(k,_);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e);}catch(n){throw e._transitionTo(L,k,_),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==k&&e._transitionTo(E,k),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(M,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(C,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(S,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||v).name+"; Execution: "+this.name+")");e._transitionTo(w,E,b);try{this._zoneDelegate.cancelTask(this,e);}catch(t){throw e._transitionTo(L,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(_,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t);}}s.__symbol__=a;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,a)=>e.invokeTask(n,o,r,a),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone));}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new s(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return !this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else {if(t.type!=M)throw new Error("Task is missing scheduleFn.");T(t);}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else {if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t);}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t);}catch(n){this.handleError(e,n);}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e});}}class u{constructor(t,n,o,r,a,i){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=a,this.cancelFn=i,!o)throw new Error("callback is not defined");this.callback=o;const s=this;this.invoke=t===S&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,s,this,arguments)};}static invokeTask(e,t,n){e||(e=this),P++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==P&&y(),P--;}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(_,k);}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==_&&(this._zoneDelegates=null);}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return {type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=a("setTimeout"),p=a("Promise"),f=a("then");let d,m=[],g=!1;function T(t){if(0===P&&0===m.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,y);}else e[h](y,0);t&&m.push(t);}function y(){if(!g){for(g=!0;m.length;){const t=m;m=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null);}catch(e){H.onUnhandledError(e);}}}H.microtaskDrainDone(),g=!1;}}const v={name:"NO ZONE"},_="notScheduled",k="scheduling",E="scheduled",b="running",w="canceling",L="unknown",M="microTask",C="macroTask",S="eventTask",D={},H={symbol:a,currentZoneFrame:()=>O,onUnhandledError:N,microtaskDrainDone:N,scheduleMicroTask:T,showUncaughtError:()=>!s[a("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:N,patchMethod:()=>N,bindArguments:()=>[],patchThen:()=>N,patchMacroTask:()=>N,setNativePromise:e=>{e&&"function"==typeof e.resolve&&(d=e.resolve(0));},patchEventPrototype:()=>N,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>N,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>N,wrapWithCurrentZone:()=>N,filterProperties:()=>[],attachOriginToPatched:()=>N,_redefineProperty:()=>N,patchCallbacks:()=>N};let O={parent:null,zone:new s(null,null)},Z=null,P=0;function N(){}o("Zone","Zone"),e.Zone=s;}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global),Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,a=n.symbol,i=[],s=!0===e[a("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=a("Promise"),l=a("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e);}},n.microtaskDrainDone=()=>{for(;i.length;){const t=i.shift();try{t.zone.runGuarded(()=>{throw t});}catch(e){h(e);}}};const u=a("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e);}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return H.reject(e)}const m=a("state"),g=a("value"),T=a("finally"),y=a("parentPromiseValue"),v=a("parentPromiseState"),_=null,k=!0,E=!1;function b(e,t){return n=>{try{L(e,t,n);}catch(o){L(e,!1,o);}}}const w=a("currentTaskTrace");function L(e,o,a){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments));}}}();if(e===a)throw new TypeError("Promise resolved with itself");if(e[m]===_){let h=null;try{"object"!=typeof a&&"function"!=typeof a||(h=a&&a.then);}catch(u){return c(()=>{L(e,!1,u);})(),e}if(o!==E&&a instanceof H&&a.hasOwnProperty(m)&&a.hasOwnProperty(g)&&a[m]!==_)C(a),L(e,a[m],a[g]);else if(o!==E&&"function"==typeof h)try{h.call(a,c(b(e,o)),c(b(e,!1)));}catch(u){c(()=>{L(e,!1,u);})();}else {e[m]=o;const c=e[g];if(e[g]=a,e[T]===T&&o===k&&(e[m]=e[v],e[g]=e[y]),o===E&&a instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(a,w,{configurable:!0,enumerable:!1,writable:!0,value:e});}for(let t=0;t<c.length;)S(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==E){e[m]=0;let o=a;if(!s)try{throw new Error("Uncaught (in promise): "+((l=a)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(a&&a.stack?"\n"+a.stack:""))}catch(u){o=u;}o.rejection=a,o.promise=e,o.zone=t.current,o.task=t.currentTask,i.push(o),n.scheduleMicroTask();}}}var l;return e}const M=a("rejectionHandledHandler");function C(e){if(0===e[m]){try{const n=t[M];n&&"function"==typeof n&&n.call(this,{rejection:e[g],promise:e});}catch(n){}e[m]=E;for(let t=0;t<i.length;t++)e===i[t].promise&&i.splice(t,1);}}function S(e,t,n,o,r){C(e);const a=e[m],i=a?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[g],r=!!n&&T===n[T];r&&(n[y]=o,n[v]=a);const s=t.run(i,void 0,r&&i!==d&&i!==f?[]:[o]);L(n,!0,s);}catch(o){L(n,!1,o);}},n);}const D=function(){};class H{static toString(){return "function ZoneAwarePromise() { [native code] }"}static resolve(e){return L(new this(null),k,e)}static reject(e){return L(new this(null),E,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o;});function r(e){t(e);}function a(e){n(e);}for(let i of e)p(i)||(i=this.resolve(i)),i.then(r,a);return o}static all(e){return H.allWithCallback(e)}static allSettled(e){return (this&&this.prototype instanceof H?this:H).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t;}),a=2,i=0;const s=[];for(let l of e){p(l)||(l=this.resolve(l));const e=i;try{l.then(o=>{s[e]=t?t.thenCallback(o):o,a--,0===a&&n(s);},r=>{t?(s[e]=t.errorCallback(r),a--,0===a&&n(s)):o(r);});}catch(c){o(c);}a++,i++;}return a-=2,0===a&&n(s),r}constructor(e){const t=this;if(!(t instanceof H))throw new Error("Must be an instanceof Promise.");t[m]=_,t[g]=[];try{e&&e(b(t,k),b(t,E));}catch(n){L(t,!1,n);}}get[Symbol.toStringTag](){return "Promise"}get[Symbol.species](){return H}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||H);const r=new o(D),a=t.current;return this[m]==_?this[g].push(a,r,e,n):S(this,a,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=H);const o=new n(D);o[T]=T;const r=t.current;return this[m]==_?this[g].push(r,o,e,e):S(this,r,o,e,e),o}}H.resolve=H.resolve,H.reject=H.reject,H.race=H.race,H.all=H.all;const O=e[c]=e.Promise,Z=t.__symbol__("ZoneAwarePromise");let P=o(e,"Promise");P&&!P.configurable||(P&&delete P.writable,P&&delete P.value,P||(P={configurable:!0,enumerable:!0}),P.get=function(){return e[Z]?e[Z]:e[c]},P.set=function(t){t===H?e[Z]=t:(e[c]=t,t.prototype[l]||z(t),n.setNativePromise(t));},r(e,"Promise",P)),e.Promise=H;const N=a("thenPatched");function z(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new H((e,t)=>{r.call(this,e,t);}).then(e,t)},e[N]=!0;}if(n.patchThen=z,O){z(O);const t=e.fetch;"function"==typeof t&&(e[n.symbol("fetch")]=t,e.fetch=(A=t,function(){let e=A.apply(this,arguments);if(e instanceof H)return e;let t=e.constructor;return t[N]||z(t),e}));}var A;return Promise[t.__symbol__("uncaughtPromiseErrors")]=i,H});const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,a="addEventListener",i="removeEventListener",s=Zone.__symbol__(a),c=Zone.__symbol__(i),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,m="undefined"!=typeof window,g=m?window:void 0,T=m&&g||"object"==typeof self&&self||global,y=[null];function v(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function _(e){return !e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const k="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,E=!("nw"in T)&&void 0!==T.process&&"[object process]"==={}.toString.call(T.process),b=!E&&!k&&!(!m||!g.HTMLElement),w=void 0!==T.process&&"[object process]"==={}.toString.call(T.process)&&!k&&!(!m||!g.HTMLElement),L={},M=function(e){if(!(e=e||T.event))return;let t=L[e.type];t||(t=L[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||T,o=n[t];let r;if(b&&n===g&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault();}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function C(n,o,r){let a=e(n,o);if(!a&&r&&e(r,o)&&(a={enumerable:!0,configurable:!0}),!a||!a.configurable)return;const i=d("on"+o+"patched");if(n.hasOwnProperty(i)&&n[i])return;delete a.writable,delete a.value;const s=a.get,c=a.set,l=o.substr(2);let u=L[l];u||(u=L[l]=d("ON_PROPERTY"+l)),a.set=function(e){let t=this;t||n!==T||(t=T),t&&(t[u]&&t.removeEventListener(l,M),c&&c.apply(t,y),"function"==typeof e?(t[u]=e,t.addEventListener(l,M,!1)):t[u]=null);},a.get=function(){let e=this;if(e||n!==T||(e=T),!e)return null;const t=e[u];if(t)return t;if(s){let t=s&&s.call(this);if(t)return a.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,a),n[i]=!0;}function S(e,t,n){if(t)for(let o=0;o<t.length;o++)C(e,"on"+t[o],n);else {const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)C(e,t[o],n);}}const D=d("originalInstance");function H(e){const n=T[e];if(!n)return;T[d(e)]=n,T[e]=function(){const t=v(arguments,e);switch(t.length){case 0:this[D]=new n;break;case 1:this[D]=new n(t[0]);break;case 2:this[D]=new n(t[0],t[1]);break;case 3:this[D]=new n(t[0],t[1],t[2]);break;case 4:this[D]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},P(T[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?T[e].prototype[n]=function(){return this[D][n].apply(this[D],arguments)}:t(T[e].prototype,n,{set:function(t){"function"==typeof t?(this[D][n]=p(t,e+"."+n),P(this[D][n],t)):this[D][n]=t;},get:function(){return this[D][n]}});}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(T[e][r]=n[r]);}function O(t,o,r){let a=t;for(;a&&!a.hasOwnProperty(o);)a=n(a);!a&&t[o]&&(a=t);const i=d(o);let s=null;if(a&&!(s=a[i])&&(s=a[i]=a[o],_(a&&e(a,o)))){const e=r(s,i,o);a[o]=function(){return e(this,arguments)},P(a[o],s);}return s}function Z(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments);},o.apply(t.target,t.args),e}o=O(e,t,e=>function(t,o){const a=n(t,o);return a.cbIdx>=0&&"function"==typeof o[a.cbIdx]?f(a.name,o[a.cbIdx],a,r):e.apply(t,o)});}function P(e,t){e[d("OriginalDelegate")]=t;}let N=!1,z=!1;function A(){try{const e=g.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return !0}catch(e){}return !1}function I(){if(N)return z;N=!0;try{const e=g.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(z=!0);}catch(e){}return z}Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),a=function(){if("function"==typeof this){const a=this[n];if(a)return "function"==typeof a?t.call(a):Object.prototype.toString.call(a);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};a[n]=t,Function.prototype.toString=a;const i=Object.prototype.toString;Object.prototype.toString=function(){return this instanceof Promise?"[object Promise]":i.call(this)};});let j=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){j=!0;}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e);}catch(he){j=!1;}const R={useG:!0},x={},F={},V=new RegExp("^"+h+"(\\w+)(true|false)$"),U=d("propagationStopped");function q(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,a=h+o;x[e]={},x[e].false=r,x[e].true=a;}function B(e,t,o){const r=o&&o.add||a,s=o&&o.rm||i,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),m="."+r+":",g=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[s].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r);},T=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].false];if(o)if(1===o.length)g(o[0],n,t);else {const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t);}},y=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].true];if(o)if(1===o.length)g(o[0],n,t);else {const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t);}};function v(t,o){if(!t)return !1;let a=!0;o&&void 0!==o.useG&&(a=o.useG);const i=o&&o.vh;let g=!0;o&&void 0!==o.chkDup&&(g=o.chkDup);let v=!1;o&&void 0!==o.rt&&(v=o.rt);let _=t;for(;_&&!_.hasOwnProperty(r);)_=n(_);if(!_&&t[r]&&(_=t),!_)return !1;if(_[f])return !1;const k=o&&o.eventNameToString,b={},w=_[f]=_[r],L=_[d(s)]=_[s],M=_[d(c)]=_[c],C=_[d(p)]=_[p];let S;function D(e,t){return !j&&"object"==typeof e&&e?!!e.capture:j&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(S=_[d(o.prepend)]=_[o.prepend]);const H=a?function(e){if(!b.isExisting)return w.call(b.target,b.eventName,b.capture?y:T,b.options)}:function(e){return w.call(b.target,b.eventName,e.invoke,b.options)},O=a?function(e){if(!e.isRemoved){const t=x[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return L.call(e.target,e.eventName,e.capture?y:T,e.options)}:function(e){return L.call(e.target,e.eventName,e.invoke,e.options)},Z=o&&o.diff?o.diff:function(e,t){const n=typeof t;return "function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},N=Zone[d("BLACK_LISTED_EVENTS")],z=e[d("PASSIVE_EVENTS")],A=function(t,n,r,s,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(E&&"uncaughtException"===f)return t.apply(this,arguments);let m=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);m=!0;}if(i&&!i(t,d,p,arguments))return;const T=j&&!!z&&-1!==z.indexOf(f),y=D(arguments[2],T);if(N)for(let e=0;e<N.length;e++)if(f===N[e])return T?t.call(p,f,d,y):t.apply(this,arguments);const v=!!y&&("boolean"==typeof y||y.capture),_=!(!y||"object"!=typeof y)&&y.once,w=Zone.current;let L=x[f];L||(q(f,k),L=x[f]);const M=L[v?l:u];let C,S=p[M],H=!1;if(S){if(H=!0,g)for(let e=0;e<S.length;e++)if(Z(S[e],d))return}else S=p[M]=[];const O=p.constructor.name,P=F[O];P&&(C=P[f]),C||(C=O+n+(k?k(f):f)),b.options=y,_&&(b.options.once=!1),b.target=p,b.capture=v,b.eventName=f,b.isExisting=H;const A=a?R:void 0;A&&(A.taskData=b);const I=w.scheduleEventTask(C,d,A,r,s);return b.target=null,A&&(A.taskData=null),_&&(y.once=!0),(j||"boolean"!=typeof I.options)&&(I.options=y),I.target=p,I.capture=v,I.eventName=f,m&&(I.originalDelegate=d),h?S.unshift(I):S.push(I),c?p:void 0}};return _[r]=A(w,m,H,O,v),S&&(_.prependListener=A(S,".prependListener:",function(e){return S.call(b.target,b.eventName,e.invoke,b.options)},O,v,!0)),_[s]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],a=!!r&&("boolean"==typeof r||r.capture),s=arguments[1];if(!s)return L.apply(this,arguments);if(i&&!i(L,s,t,arguments))return;const c=x[n];let p;c&&(p=c[a?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(Z(o,s))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),v?t:void 0}return L.apply(this,arguments)},_[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],a=G(t,k?k(n):n);for(let e=0;e<a.length;e++){const t=a[e];r.push(t.originalDelegate?t.originalDelegate:t.callback);}return r},_[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=x[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options);}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options);}}}}else {const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=V.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o);}this[p].call(this,"removeListener");}if(v)return this},P(_[r],w),P(_[s],L),C&&P(_[p],C),M&&P(_[c],M),!0}let _=[];for(let n=0;n<t.length;n++)_[n]=v(t[n],o);return _}function G(e,t){if(!t){const n=[];for(let o in e){const r=V.exec(o);let a=r&&r[1];if(a&&(!t||a===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e]);}}return n}let n=x[t];n||(q(t),n=x[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function W(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[U]=!0,e&&e.apply(t,n);});}function $(e,t,n,o,r){const a=Zone.__symbol__(o);if(t[a])return;const i=t[a]=t[o];t[o]=function(a,s,c){return s&&s.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,a=s.prototype;if(a.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(a,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(s.prototype,t,n)):a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r));}else a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r));}),i.call(t,a,s,c)},e.attachOriginToPatched(t[o],i);}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],K=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],J=["load"],Y=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function ae(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ie(e,t,n,o){e&&S(e,ae(e,t,n),o);}function se(e,t){if(E&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(b){const e=window,t=A?[{target:e,ignoreProperties:["error"]}]:[];ie(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ie(Document.prototype,re,r),void 0!==e.SVGElement&&ie(e.SVGElement.prototype,re,r),ie(Element.prototype,re,r),ie(HTMLElement.prototype,re,r),ie(HTMLMediaElement.prototype,K,r),ie(HTMLFrameSetElement.prototype,X.concat(Y),r),ie(HTMLBodyElement.prototype,X.concat(Y),r),ie(HTMLFrameElement.prototype,J,r),ie(HTMLIFrameElement.prototype,J,r);const o=e.HTMLMarqueeElement;o&&ie(o.prototype,Q,r);const a=e.Worker;a&&ie(a.prototype,oe,r);}const a=t.XMLHttpRequest;a&&ie(a.prototype,ee,r);const i=t.XMLHttpRequestEventTarget;i&&ie(i&&i.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ie(IDBIndex.prototype,te,r),ie(IDBRequest.prototype,te,r),ie(IDBOpenDBRequest.prototype,te,r),ie(IDBDatabase.prototype,te,r),ie(IDBTransaction.prototype,te,r),ie(IDBCursor.prototype,te,r)),o&&ie(WebSocket.prototype,ne,r);}Zone.__load_patch("util",(n,s,c)=>{c.patchOnProperties=S,c.patchMethod=O,c.bindArguments=v,c.patchMacroTask=Z;const f=s.__symbol__("BLACK_LISTED_EVENTS"),d=s.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(s[f]=s[d]=n[f]),c.patchEventPrototype=W,c.patchEventTarget=B,c.isIEOrEdge=I,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=H,c.wrapWithCurrentZone=p,c.filterProperties=ae,c.attachOriginToPatched=P,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:x,eventNames:re,isBrowser:b,isMix:w,isNode:E,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:a,REMOVE_EVENT_LISTENER_STR:i});});const ce=d("zoneTask");function le(e,t,n,o){let r=null,a=null;n+=o;const i={};function s(t){const n=t.data;return n.args[0]=function(){try{t.invoke.apply(this,arguments);}finally{t.data&&t.data.isPeriodic||("number"==typeof n.handleId?delete i[n.handleId]:n.handleId&&(n.handleId[ce]=null));}},n.handleId=r.apply(e,n.args),t}function c(e){return a(e.data.handleId)}r=O(e,t+=o,n=>function(r,a){if("function"==typeof a[0]){const e=f(t,a[0],{isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?a[1]||0:void 0,args:a},s,c);if(!e)return e;const n=e.data.handleId;return "number"==typeof n?i[n]=e:n&&(n[ce]=e),n&&n.ref&&n.unref&&"function"==typeof n.ref&&"function"==typeof n.unref&&(e.ref=n.ref.bind(n),e.unref=n.unref.bind(n)),"number"==typeof n||n?n:e}return n.apply(e,a)}),a=O(e,n,t=>function(n,o){const r=o[0];let a;"number"==typeof r?a=i[r]:(a=r&&r[ce],a||(a=r)),a&&"string"==typeof a.type?"notScheduled"!==a.state&&(a.cancelFn&&a.data.isPeriodic||0===a.runCount)&&("number"==typeof r?delete i[r]:r&&(r[ce]=null),a.zone.cancelTask(a)):t.apply(e,o);});}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:a,ZONE_SYMBOL_PREFIX:i}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=i+(e+a),s=i+(e+r);o[e]={},o[e][a]=t,o[e][r]=s;}const s=e.EventTarget;return s&&s.prototype?(t.patchEventTarget(e,[s&&s.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t();}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate");}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame");}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)O(e,n[o],(n,o,r)=>function(o,a){return t.current.run(n,e,a,r)});}),Zone.__load_patch("EventTarget",(e,t,n)=>{(function(e,t){t.patchEventPrototype(e,t);})(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype]),H("MutationObserver"),H("WebKitMutationObserver"),H("IntersectionObserver"),H("FileReader");}),Zone.__load_patch("on_property",(e,t,n)=>{se(n,e);}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"]);}(e,n);}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[s],m=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[s],m=e[c];}}const g="readystatechange",T="scheduled";function y(e){const o=e.data,i=o.target;i[a]=!1,i[l]=!1;const u=i[r];p||(p=i[s],m=i[c]),u&&m.call(i,g,u);const h=i[r]=()=>{if(i.readyState===i.DONE)if(!o.aborted&&i[a]&&e.state===T){const n=i[t.__symbol__("loadfalse")];if(n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=i[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==T||r.call(e);},n.push(e);}else e.invoke();}else o.aborted||!1!==i[a]||(i[l]=!0);};return p.call(i,g,h),i[n]||(i[n]=e),w.apply(i,o.args),i[a]=!0,e}function v(){}function _(e){const t=e.data;return t.aborted=!0,L.apply(t.target,t.args)}const k=O(h,"open",()=>function(e,t){return e[o]=0==t[2],e[i]=t[1],k.apply(e,t)}),E=d("fetchTaskAborting"),b=d("fetchTaskScheduling"),w=O(h,"send",()=>function(e,n){if(!0===t.current[b])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[i],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",v,t,y,_);e&&!0===e[l]&&!t.aborted&&o.state===T&&o.invoke();}}),L=O(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r);}else if(!0===t.current[E])return L.apply(e,o)});}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),a=d("xhrScheduled"),i=d("xhrURL"),l=d("xhrErrorBeforeScheduled");}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const a=n[r],i=t[a];if(i){if(!_(e(t,a)))continue;t[a]=(e=>{const t=function(){return e.apply(this,v(arguments,o+"."+a))};return P(t,e),t})(i);}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"]);}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){G(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e);}});}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"));});})?o.call(t,n,t,e):o)||(e.exports=r);}},[[1,0]]]);

	!function(e){function r(r){for(var n,l,f=r[0],i=r[1],p=r[2],c=0,s=[];c<f.length;c++)l=f[c],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(a&&a(r);s.length;)s.shift()();return u.push.apply(u,p||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,f=1;f<t.length;f++)0!==o[t[f]]&&(n=!1);n&&(u.splice(r--,1),e=l(l.s=t[0]));}return e}var n={},o={0:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t});},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0});},l.t=function(e,r){if(1&r&&(e=l(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)l.d(t,n,(function(r){return e[r]}).bind(null,n));return t},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="";var f=window.webpackJsonp=window.webpackJsonp||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var p=0;p<f.length;p++)r(f[p]);var a=i;t();}([]);

	(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(t,e,n){t.exports=n("ClSp");},ClSp:function(t,e,n){function r(t){return "function"==typeof t}n.r(e);let s=!1;const i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){if(t){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack);}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=t;},get useDeprecatedSynchronousErrorHandling(){return s}};function o(t){setTimeout(()=>{throw t},0);}const a={closed:!0,next(t){},error(t){if(i.useDeprecatedSynchronousErrorHandling)throw t;o(t);},complete(){}},l=(()=>Array.isArray||(t=>t&&"number"==typeof t.length))();function c(t){return null!==t&&"object"==typeof t}const u=(()=>{function t(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((t,e)=>`${e+1}) ${t.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t})();let h=(()=>{class t{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t);}unsubscribe(){let e;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:i,_subscriptions:o}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(let t=0;t<n.length;++t)n[t].remove(this);if(r(i)){s&&(this._unsubscribe=void 0);try{i.call(this);}catch(a){e=a instanceof u?d(a.errors):[a];}}if(l(o)){let t=-1,n=o.length;for(;++t<n;){const n=o[t];if(c(n))try{n.unsubscribe();}catch(a){e=e||[],a instanceof u?e=e.concat(d(a.errors)):e.push(a);}}}if(e)throw new u(e)}add(e){let n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){const e=n;n=new t,n._subscriptions=[e];}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof t){if(r===this)return n;n._parentOrParents=[r,this];}else {if(-1!==r.indexOf(this))return n;r.push(this);}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(t){const e=this._subscriptions;if(e){const n=e.indexOf(t);-1!==n&&e.splice(n,1);}}}return t.EMPTY=function(t){return t.closed=!0,t}(new t),t})();function d(t){return t.reduce((t,e)=>t.concat(e instanceof u?e.errors:e),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(t,e,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!t){this.destination=a;break}if("object"==typeof t){t instanceof f?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new m(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new m(this,t,e,n);}}[p](){return this}static create(t,e,n){const r=new f(t,e,n);return r.syncErrorThrowable=!1,r}next(t){this.isStopped||this._next(t);}error(t){this.isStopped||(this.isStopped=!0,this._error(t));}complete(){this.isStopped||(this.isStopped=!0,this._complete());}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe());}_next(t){this.destination.next(t);}_error(t){this.destination.error(t),this.unsubscribe();}_complete(){this.destination.complete(),this.unsubscribe();}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class m extends f{constructor(t,e,n,s){let i;super(),this._parentSubscriber=t;let o=this;r(e)?i=e:e&&(i=e.next,n=e.error,s=e.complete,e!==a&&(o=Object.create(e),r(o.unsubscribe)&&this.add(o.unsubscribe.bind(o)),o.unsubscribe=this.unsubscribe.bind(this))),this._context=o,this._next=i,this._error=n,this._complete=s;}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:e}=this;i.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t);}}error(t){if(!this.isStopped){const{_parentSubscriber:e}=this,{useDeprecatedSynchronousErrorHandling:n}=i;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):o(t),this.unsubscribe();else {if(this.unsubscribe(),n)throw t;o(t);}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const e=()=>this._complete.call(this._context);i.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,e),this.unsubscribe()):(this.__tryOrUnsub(e),this.unsubscribe());}else this.unsubscribe();}}__tryOrUnsub(t,e){try{t.call(this._context,e);}catch(n){if(this.unsubscribe(),i.useDeprecatedSynchronousErrorHandling)throw n;o(n);}}__tryOrSetError(t,e,n){if(!i.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n);}catch(r){return i.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=r,t.syncErrorThrown=!0,!0):(o(r),!0)}return !1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe();}}const g=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function y(t){return t}let _=(()=>{class t{constructor(t){this._isScalar=!1,t&&(this._subscribe=t);}lift(e){const n=new t;return n.source=this,n.operator=e,n}subscribe(t,e,n){const{operator:r}=this,s=function(t,e,n){if(t){if(t instanceof f)return t;if(t[p])return t[p]()}return t||e||n?new f(t,e,n):new f(a)}(t,e,n);if(s.add(r?r.call(s,this.source):this.source||i.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),i.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(t){try{return this._subscribe(t)}catch(e){i.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){const{closed:e,destination:n,isStopped:r}=t;if(e||r)return !1;t=n&&n instanceof f?n:null;}return !0}(t)?t.error(e):console.warn(e);}}forEach(t,e){return new(e=v(e))((e,n)=>{let r;r=this.subscribe(e=>{try{t(e);}catch(s){n(s),r&&r.unsubscribe();}},n,e);})}_subscribe(t){const{source:e}=this;return e&&e.subscribe(t)}[g](){return this}pipe(...t){return 0===t.length?this:(0===(e=t).length?y:1===e.length?e[0]:function(t){return e.reduce((t,e)=>e(t),t)})(this);var e;}toPromise(t){return new(t=v(t))((t,e)=>{let n;this.subscribe(t=>n=t,t=>e(t),()=>t(n));})}}return t.create=e=>new t(e),t})();function v(t){if(t||(t=Promise),!t)throw new Error("no Promise impl found");return t}const w=(()=>{function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t})();class b extends h{constructor(t,e){super(),this.subject=t,this.subscriber=e,this.closed=!1;}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,e=t.observers;if(this.subject=null,!e||0===e.length||t.isStopped||t.closed)return;const n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1);}}class S extends f{constructor(t){super(t),this.destination=t;}}let E=(()=>{class t extends _{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null;}[p](){return new S(this)}lift(t){const e=new C(this,this);return e.operator=t,e}next(t){if(this.closed)throw new w;if(!this.isStopped){const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].next(t);}}error(t){if(this.closed)throw new w;this.hasError=!0,this.thrownError=t,this.isStopped=!0;const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].error(t);this.observers.length=0;}complete(){if(this.closed)throw new w;this.isStopped=!0;const{observers:t}=this,e=t.length,n=t.slice();for(let r=0;r<e;r++)n[r].complete();this.observers.length=0;}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null;}_trySubscribe(t){if(this.closed)throw new w;return super._trySubscribe(t)}_subscribe(t){if(this.closed)throw new w;return this.hasError?(t.error(this.thrownError),h.EMPTY):this.isStopped?(t.complete(),h.EMPTY):(this.observers.push(t),new b(this,t))}asObservable(){const t=new _;return t.source=this,t}}return t.create=(t,e)=>new C(t,e),t})();class C extends E{constructor(t,e){super(),this.destination=t,this.source=e;}next(t){const{destination:e}=this;e&&e.next&&e.next(t);}error(t){const{destination:e}=this;e&&e.error&&this.destination.error(t);}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete();}_subscribe(t){const{source:e}=this;return e?this.source.subscribe(t):h.EMPTY}}function T(t){return t&&"function"==typeof t.schedule}function x(t,e){return function(n){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new k(t,e))}}class k{constructor(t,e){this.project=t,this.thisArg=e;}call(t,e){return e.subscribe(new A(t,this.project,this.thisArg))}}class A extends f{constructor(t,e,n){super(t),this.project=e,this.count=0,this.thisArg=n||this;}_next(t){let e;try{e=this.project.call(this.thisArg,t,this.count++);}catch(n){return void this.destination.error(n)}this.destination.next(e);}}const I=t=>e=>{for(let n=0,r=t.length;n<r&&!e.closed;n++)e.next(t[n]);e.complete();};function O(){return "function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const R=O(),P=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function N(t){return !!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}const j=t=>{if(t&&"function"==typeof t[g])return r=t,t=>{const e=r[g]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if(P(t))return I(t);if(N(t))return n=t,t=>(n.then(e=>{t.closed||(t.next(e),t.complete());},e=>t.error(e)).then(null,o),t);if(t&&"function"==typeof t[R])return e=t,t=>{const n=e[R]();for(;;){let e;try{e=n.next();}catch(r){return t.error(r),t}if(e.done){t.complete();break}if(t.next(e.value),t.closed)break}return "function"==typeof n.return&&t.add(()=>{n.return&&n.return();}),t};{const e=c(t)?"an invalid object":`'${t}'`;throw new TypeError(`You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var e,n,r;};function D(t,e){return new _(n=>{const r=new h;let s=0;return r.add(e.schedule(function(){s!==t.length?(n.next(t[s++]),n.closed||r.add(this.schedule())):n.complete();})),r})}function F(t,e){return e?function(t,e){if(null!=t){if(function(t){return t&&"function"==typeof t[g]}(t))return function(t,e){return new _(n=>{const r=new h;return r.add(e.schedule(()=>{const s=t[g]();r.add(s.subscribe({next(t){r.add(e.schedule(()=>n.next(t)));},error(t){r.add(e.schedule(()=>n.error(t)));},complete(){r.add(e.schedule(()=>n.complete()));}}));})),r})}(t,e);if(N(t))return function(t,e){return new _(n=>{const r=new h;return r.add(e.schedule(()=>t.then(t=>{r.add(e.schedule(()=>{n.next(t),r.add(e.schedule(()=>n.complete()));}));},t=>{r.add(e.schedule(()=>n.error(t)));}))),r})}(t,e);if(P(t))return D(t,e);if(function(t){return t&&"function"==typeof t[R]}(t)||"string"==typeof t)return function(t,e){if(!t)throw new Error("Iterable cannot be null");return new _(n=>{const r=new h;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return();}),r.add(e.schedule(()=>{s=t[R](),r.add(e.schedule(function(){if(n.closed)return;let t,e;try{const n=s.next();t=n.value,e=n.done;}catch(r){return void n.error(r)}e?n.complete():(n.next(t),this.schedule());}));})),r})}(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}(t,e):t instanceof _?t:new _(j(t))}class M extends f{constructor(t){super(),this.parent=t;}_next(t){this.parent.notifyNext(t);}_error(t){this.parent.notifyError(t),this.unsubscribe();}_complete(){this.parent.notifyComplete(),this.unsubscribe();}}class U extends f{notifyNext(t){this.destination.next(t);}notifyError(t){this.destination.error(t);}notifyComplete(){this.destination.complete();}}function L(t,e){if(!e.closed)return t instanceof _?t.subscribe(e):j(t)(e)}function H(t,e,n=Number.POSITIVE_INFINITY){return "function"==typeof e?r=>r.pipe(H((n,r)=>F(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))),n)):("number"==typeof e&&(n=e),e=>e.lift(new $(t,n)))}class ${constructor(t,e=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=e;}call(t,e){return e.subscribe(new V(t,this.project,this.concurrent))}}class V extends U{constructor(t,e,n=Number.POSITIVE_INFINITY){super(t),this.project=e,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0;}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t);}_tryNext(t){let e;const n=this.index++;try{e=this.project(t,n);}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(e);}_innerSub(t){const e=new M(this),n=this.destination;n.add(e);const r=L(t,e);r!==e&&n.add(r);}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe();}notifyNext(t){this.destination.next(t);}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete();}}function q(t=Number.POSITIVE_INFINITY){return H(y,t)}function z(t,e){return e?D(t,e):new _(I(t))}function B(...t){let e=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return T(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(e=t.pop())):"number"==typeof r&&(e=t.pop()),null===n&&1===t.length&&t[0]instanceof _?t[0]:q(e)(z(t,n))}function Q(){return function(t){return t.lift(new W(t))}}class W{constructor(t){this.connectable=t;}call(t,e){const{connectable:n}=this;n._refCount++;const r=new Z(t,n),s=e.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class Z extends f{constructor(t,e){super(t),this.connectable=e;}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);const{connection:n}=this,r=t._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe();}}class G extends _{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._refCount=0,this._isComplete=!1;}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new h,t.add(this.source.subscribe(new Y(this.getSubject(),this))),t.closed&&(this._connection=null,t=h.EMPTY)),t}refCount(){return Q()(this)}}const K=(()=>{const t=G.prototype;return {operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:t._subscribe},_isComplete:{value:t._isComplete,writable:!0},getSubject:{value:t.getSubject},connect:{value:t.connect},refCount:{value:t.refCount}}})();class Y extends S{constructor(t,e){super(t),this.connectable=e;}_error(t){this._unsubscribe(),super._error(t);}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete();}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe();}}}function J(){return new E}function X(t){for(let e in t)if(t[e]===X)return e;throw Error("Could not find renamed property on target object.")}function tt(t){if("string"==typeof t)return t;if(Array.isArray(t))return "["+t.map(tt).join(", ")+"]";if(null==t)return ""+t;if(t.overriddenName)return ""+t.overriddenName;if(t.name)return ""+t.name;const e=t.toString();if(null==e)return ""+e;const n=e.indexOf("\n");return -1===n?e:e.substring(0,n)}function et(t,e){return null==t||""===t?null===e?"":e:null==e||""===e?t:t+" "+e}const nt=X({__forward_ref__:X});function rt(t){return t.__forward_ref__=rt,t.toString=function(){return tt(this())},t}function st(t){return "function"==typeof(e=t)&&e.hasOwnProperty(nt)&&e.__forward_ref__===rt?t():t;var e;}function it(t){return {token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function ot(t){return {factory:t.factory,providers:t.providers||[],imports:t.imports||[]}}function at(t){return lt(t,ut)||lt(t,dt)}function lt(t,e){return t.hasOwnProperty(e)?t[e]:null}function ct(t){return t&&(t.hasOwnProperty(ht)||t.hasOwnProperty(pt))?t[ht]:null}const ut=X({"\u0275prov":X}),ht=X({"\u0275inj":X}),dt=X({ngInjectableDef:X}),pt=X({ngInjectorDef:X});var ft=function(t){return t[t.Default=0]="Default",t[t.Host=1]="Host",t[t.Self=2]="Self",t[t.SkipSelf=4]="SkipSelf",t[t.Optional=8]="Optional",t}({});let mt;function gt(t){const e=mt;return mt=t,e}function yt(t,e,n){const r=at(t);if(r&&"root"==r.providedIn)return void 0===r.value?r.value=r.factory():r.value;if(n&ft.Optional)return null;if(void 0!==e)return e;throw new Error(`Injector: NOT_FOUND [${tt(t)}]`)}function _t(t){return {toString:t}.toString()}var vt=function(t){return t[t.OnPush=0]="OnPush",t[t.Default=1]="Default",t}({}),wt=function(t){return t[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",t}({});const bt="undefined"!=typeof globalThis&&globalThis,St="undefined"!=typeof window&&window,Et="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Ct="undefined"!=typeof global&&global,Tt=bt||Ct||St||Et,xt={},kt=[],At=X({"\u0275cmp":X}),It=X({"\u0275dir":X}),Ot=X({"\u0275pipe":X}),Rt=X({"\u0275mod":X}),Pt=X({"\u0275loc":X}),Nt=X({"\u0275fac":X}),jt=X({__NG_ELEMENT_ID__:X});let Dt=0;function Ft(t){return _t(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===vt.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||kt,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||wt.Emulated,id:"c",styles:t.styles||kt,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,s=t.features,i=t.pipes;return n.id+=Dt++,n.inputs=$t(t.inputs,e),n.outputs=$t(t.outputs),s&&s.forEach(t=>t(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map(Mt):null,n.pipeDefs=i?()=>("function"==typeof i?i():i).map(Ut):null,n})}function Mt(t){return qt(t)||function(t){return t[It]||null}(t)}function Ut(t){return function(t){return t[Ot]||null}(t)}const Lt={};function Ht(t){const e={type:t.type,bootstrap:t.bootstrap||kt,declarations:t.declarations||kt,imports:t.imports||kt,exports:t.exports||kt,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&_t(()=>{Lt[t.id]=t.type;}),e}function $t(t,e){if(null==t)return xt;const n={};for(const r in t)if(t.hasOwnProperty(r)){let s=t[r],i=s;Array.isArray(s)&&(i=s[1],s=s[0]),n[s]=r,e&&(e[s]=i);}return n}const Vt=Ft;function qt(t){return t[At]||null}function zt(t,e){const n=t[Rt]||null;if(!n&&!0===e)throw new Error(`Type ${tt(t)} does not have '\u0275mod' property.`);return n}const Bt=20,Qt=10;function Wt(t){return Array.isArray(t)&&"object"==typeof t[1]}function Zt(t){return Array.isArray(t)&&!0===t[1]}function Gt(t){return 0!=(8&t.flags)}function Kt(t){return 2==(2&t.flags)}function Yt(t){return 1==(1&t.flags)}function Jt(t){return null!==t.template}function Xt(t,e){return t.hasOwnProperty(Nt)?t[Nt]:null}class te extends Error{constructor(t,e){super(function(t,e){return `${t?`NG0${t}: `:""}${e}`}(t,e)),this.code=t;}}function ee(t){return "function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():function(t){return "string"==typeof t?t:null==t?"":String(t)}(t)}function ne(t,e){const n=e?" in "+e:"";throw new te("201",`No provider for ${ee(t)} found${n}`)}class re{constructor(t,e,n){this.previousValue=t,this.currentValue=e,this.firstChange=n;}isFirstChange(){return this.firstChange}}function se(){const t=oe(this),e=null==t?void 0:t.current;if(e){const n=t.previous;if(n===xt)t.previous=e;else for(let t in e)n[t]=e[t];t.current=null,this.ngOnChanges(e);}}function ie(t,e,n,r){const s=oe(t)||function(t,e){return t.__ngSimpleChanges__=e}(t,{previous:xt,current:null}),i=s.current||(s.current={}),o=s.previous,a=this.declaredInputs[n],l=o[a];i[a]=new re(l&&l.currentValue,e,o===xt),t[r]=e;}function oe(t){return t.__ngSimpleChanges__||null}let ae=void 0;function le(t){return !!t.listen}const ce={createRenderer:(t,e)=>void 0!==ae?ae:"undefined"!=typeof document?document:void 0};function ue(t){for(;Array.isArray(t);)t=t[0];return t}function he(t,e){return ue(e[t.index])}function de(t,e){const n=e[t];return Wt(n)?n:n[0]}function pe(t){const e=function(t){return t.__ngContext__||null}(t);return e?Array.isArray(e)?e:e.lView:null}function fe(t){return 128==(128&t[2])}function me(t,e){return null==e?null:t[e]}function ge(t){t[18]=0;}function ye(t,e){t[5]+=e;let n=t,r=t[3];for(;null!==r&&(1===e&&1===n[5]||-1===e&&0===n[5]);)r[5]+=e,n=r,r=r[3];}const _e={lFrame:De(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function we(){return _e.lFrame.lView}function be(){return _e.lFrame.tView}function Se(){let t=Ee();for(;null!==t&&64===t.type;)t=t.parent;return t}function Ee(){return _e.lFrame.currentTNode}function Ce(t,e){const n=_e.lFrame;n.currentTNode=t,n.isParent=e;}function Te(){return _e.lFrame.isParent}function xe(){return _e.isInCheckNoChangesMode}function ke(t){_e.isInCheckNoChangesMode=t;}function Ae(t,e){const n=_e.lFrame;n.bindingIndex=n.bindingRootIndex=t,Ie(e);}function Ie(t){_e.lFrame.currentDirectiveIndex=t;}function Oe(t){_e.lFrame.currentQueryIndex=t;}function Re(t){const e=t[1];return 2===e.type?e.declTNode:1===e.type?t[6]:null}function Pe(t,e,n){if(n&ft.SkipSelf){let r=e,s=t;for(;r=r.parent,!(null!==r||n&ft.Host||(r=Re(s),null===r)||(s=s[15],10&r.type)););if(null===r)return !1;e=r,t=s;}const r=_e.lFrame=je();return r.currentTNode=e,r.lView=t,!0}function Ne(t){const e=je(),n=t[1];_e.lFrame=e,e.currentTNode=n.firstChild,e.lView=t,e.tView=n,e.contextLView=t,e.bindingIndex=n.bindingStartIndex,e.inI18n=!1;}function je(){const t=_e.lFrame,e=null===t?null:t.child;return null===e?De(t):e}function De(t){const e={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=e),e}function Fe(){const t=_e.lFrame;return _e.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const Me=Fe;function Ue(){const t=Fe();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0;}function Le(t){_e.lFrame.selectedIndex=t;}function He(t,e){for(let n=e.directiveStart,r=e.directiveEnd;n<r;n++){const e=t.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:i,ngAfterViewChecked:o,ngOnDestroy:a}=e;r&&(t.contentHooks||(t.contentHooks=[])).push(-n,r),s&&((t.contentHooks||(t.contentHooks=[])).push(n,s),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(n,s)),i&&(t.viewHooks||(t.viewHooks=[])).push(-n,i),o&&((t.viewHooks||(t.viewHooks=[])).push(n,o),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(n,o)),null!=a&&(t.destroyHooks||(t.destroyHooks=[])).push(n,a);}}function $e(t,e,n){ze(t,e,3,n);}function Ve(t,e,n,r){(3&t[2])===n&&ze(t,e,n,r);}function qe(t,e){let n=t[2];(3&n)===e&&(n&=2047,n+=1,t[2]=n);}function ze(t,e,n,r){const s=null!=r?r:-1;let i=0;for(let o=void 0!==r?65535&t[18]:0;o<e.length;o++)if("number"==typeof e[o+1]){if(i=e[o],null!=r&&i>=r)break}else e[o]<0&&(t[18]+=65536),(i<s||-1==s)&&(Be(t,n,e,o),t[18]=(4294901760&t[18])+o+2),o++;}function Be(t,e,n,r){const s=n[r]<0,i=n[r+1],o=t[s?-n[r]:n[r]];s?t[2]>>11<t[18]>>16&&(3&t[2])===e&&(t[2]+=2048,i.call(o)):i.call(o);}const Qe=-1;class We{constructor(t,e,n){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=n;}}function Ze(t,e,n){const r=le(t);let s=0;for(;s<n.length;){const i=n[s];if("number"==typeof i){if(0!==i)break;s++;const o=n[s++],a=n[s++],l=n[s++];r?t.setAttribute(e,a,l,o):e.setAttributeNS(o,a,l);}else {const o=i,a=n[++s];64===o.charCodeAt(0)?r&&t.setProperty(e,o,a):r?t.setAttribute(e,o,a):e.setAttribute(o,a),s++;}}return s}function Ge(t){return 3===t||4===t||6===t}function Ke(t,e){if(null===e||0===e.length);else if(null===t||0===t.length)t=e.slice();else {let n=-1;for(let r=0;r<e.length;r++){const s=e[r];"number"==typeof s?n=s:0===n||Ye(t,n,s,null,-1===n||2===n?e[++r]:null);}}return t}function Ye(t,e,n,r,s){let i=0,o=t.length;if(-1===e)o=-1;else for(;i<t.length;){const n=t[i++];if("number"==typeof n){if(n===e){o=-1;break}if(n>e){o=i-1;break}}}for(;i<t.length;){const e=t[i];if("number"==typeof e)break;if(e===n){if(null===r)return void(null!==s&&(t[i+1]=s));if(r===t[i+1])return void(t[i+2]=s)}i++,null!==r&&i++,null!==s&&i++;}-1!==o&&(t.splice(o,0,e),i=o+1),t.splice(i++,0,n),null!==r&&t.splice(i++,0,r),null!==s&&t.splice(i++,0,s);}function Je(t){return t!==Qe}function Xe(t){return 32767&t}function tn(t,e){let n=t>>16,r=e;for(;n>0;)r=r[15],n--;return r}let en=!0;function nn(t){const e=en;return en=t,e}let rn=0;function sn(t,e){const n=an(t,e);if(-1!==n)return n;const r=e[1];r.firstCreatePass&&(t.injectorIndex=e.length,on(r.data,t),on(e,null),on(r.blueprint,null));const s=ln(t,e),i=t.injectorIndex;if(Je(s)){const t=Xe(s),n=tn(s,e),r=n[1].data;for(let s=0;s<8;s++)e[i+s]=n[t+s]|r[t+s];}return e[i+8]=s,i}function on(t,e){t.push(0,0,0,0,0,0,0,0,e);}function an(t,e){return -1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===e[t.injectorIndex+8]?-1:t.injectorIndex}function ln(t,e){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let n=0,r=null,s=e;for(;null!==s;){const t=s[1],e=t.type;if(r=2===e?t.declTNode:1===e?s[6]:null,null===r)return Qe;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return Qe}function cn(t,e,n){!function(t,e,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(jt)&&(r=n[jt]),null==r&&(r=n[jt]=rn++);const s=255&r,i=1<<s,o=64&s,a=32&s,l=e.data;128&s?o?a?l[t+7]|=i:l[t+6]|=i:a?l[t+5]|=i:l[t+4]|=i:o?a?l[t+3]|=i:l[t+2]|=i:a?l[t+1]|=i:l[t]|=i;}(t,e,n);}function un(t,e,n){if(n&ft.Optional)return t;ne(e,"NodeInjector");}function hn(t,e,n,r){if(n&ft.Optional&&void 0===r&&(r=null),0==(n&(ft.Self|ft.Host))){const s=t[9],i=gt(void 0);try{return s?s.get(e,r,n&ft.Optional):yt(e,r,n&ft.Optional)}finally{gt(i);}}return un(r,e,n)}function dn(t,e,n,r=ft.Default,s){if(null!==t){const i=function(t){if("string"==typeof t)return t.charCodeAt(0)||0;const e=t.hasOwnProperty(jt)?t[jt]:void 0;return "number"==typeof e?e>=0?255&e:fn:e}(n);if("function"==typeof i){if(!Pe(e,t,r))return r&ft.Host?un(s,n,r):hn(e,n,r,s);try{const t=i();if(null!=t||r&ft.Optional)return t;ne(n);}finally{Me();}}else if("number"==typeof i){let s=null,o=an(t,e),a=Qe,l=r&ft.Host?e[16][6]:null;for((-1===o||r&ft.SkipSelf)&&(a=-1===o?ln(t,e):e[o+8],a!==Qe&&_n(r,!1)?(s=e[1],o=Xe(a),e=tn(a,e)):o=-1);-1!==o;){const t=e[1];if(yn(i,o,t.data)){const t=mn(o,e,n,s,r,l);if(t!==pn)return t}a=e[o+8],a!==Qe&&_n(r,e[1].data[o+8]===l)&&yn(i,o,e)?(s=t,o=Xe(a),e=tn(a,e)):o=-1;}}}return hn(e,n,r,s)}const pn={};function fn(){return new vn(Se(),we())}function mn(t,e,n,r,s,i){const o=e[1],a=o.data[t+8],l=function(t,e,n,r,s){const i=t.providerIndexes,o=e.data,a=1048575&i,l=t.directiveStart,c=i>>20,u=s?a+c:t.directiveEnd;for(let h=r?a:a+c;h<u;h++){const t=o[h];if(h<l&&n===t||h>=l&&t.type===n)return h}if(s){const t=o[l];if(t&&Jt(t)&&t.type===n)return l}return null}(a,o,n,null==r?Kt(a)&&en:r!=o&&0!=(3&a.type),s&ft.Host&&i===a);return null!==l?gn(e,o,l,a):pn}function gn(t,e,n,r){let s=t[n];const i=e.data;if(s instanceof We){const o=s;o.resolving&&function(t,e){throw new te("200","Circular dependency in DI detected for "+t)}(ee(i[n]));const a=nn(o.canSeeViewProviders);o.resolving=!0;const l=o.injectImpl?gt(o.injectImpl):null;Pe(t,r,ft.Default);try{s=t[n]=o.factory(void 0,i,t,r),e.firstCreatePass&&n>=r.directiveStart&&function(t,e,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:i}=e.type.prototype;if(r){const r=((o=e).type.prototype.ngOnChanges&&(o.setInput=ie),se);(n.preOrderHooks||(n.preOrderHooks=[])).push(t,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,r);}var o;s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-t,s),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(t,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,i));}(n,i[n],e);}finally{null!==l&&gt(l),nn(a),o.resolving=!1,Me();}}return s}function yn(t,e,n){const r=64&t,s=32&t;let i;return i=128&t?r?s?n[e+7]:n[e+6]:s?n[e+5]:n[e+4]:r?s?n[e+3]:n[e+2]:s?n[e+1]:n[e],!!(i&1<<t)}function _n(t,e){return !(t&ft.Self||t&ft.Host&&e)}class vn{constructor(t,e){this._tNode=t,this._lView=e;}get(t,e){return dn(this._tNode,this._lView,t,void 0,e)}}const wn="__parameters__";function bn(t,e,n){return _t(()=>{const r=function(t){return function(...e){if(t){const n=t(...e);for(const t in n)this[t]=n[t];}}}(e);function s(...t){if(this instanceof s)return r.apply(this,t),this;const e=new s(...t);return n.annotation=e,n;function n(t,n,r){const s=t.hasOwnProperty(wn)?t[wn]:Object.defineProperty(t,wn,{value:[]})[wn];for(;s.length<=r;)s.push(null);return (s[r]=s[r]||[]).push(e),t}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=t,s.annotationCls=s,s})}class Sn{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=it({token:this,providedIn:e.providedIn||"root",factory:e.factory}));}toString(){return "InjectionToken "+this._desc}}const En=new Sn("AnalyzeForEntryComponents"),Cn=Function;function Tn(t,e){t.forEach(t=>Array.isArray(t)?Tn(t,e):e(t));}function xn(t,e,n){e>=t.length?t.push(n):t.splice(e,0,n);}function kn(t,e){return e>=t.length-1?t.pop():t.splice(e,1)[0]}const An=bn("Inject",t=>({token:t})),In=bn("Optional"),On=bn("Self"),Rn=bn("SkipSelf"),Pn={},Nn=/\n/gm,jn="__source",Dn=X({provide:String,useValue:X});let Fn=void 0;function Mn(t){const e=Fn;return Fn=t,e}function Un(t,e=ft.Default){if(void 0===Fn)throw new Error("inject() must be called from an injection context");return null===Fn?yt(t,void 0,e):Fn.get(t,e&ft.Optional?null:void 0,e)}function Ln(t,e=ft.Default){return (mt||Un)(st(t),e)}function Hn(t){const e=[];for(let n=0;n<t.length;n++){const r=st(t[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let t=void 0,n=ft.Default;for(let e=0;e<r.length;e++){const s=r[e];s instanceof In||"Optional"===s.ngMetadataName||s===In?n|=ft.Optional:s instanceof Rn||"SkipSelf"===s.ngMetadataName||s===Rn?n|=ft.SkipSelf:s instanceof On||"Self"===s.ngMetadataName||s===On?n|=ft.Self:t=s instanceof An||s===An?s.token:s;}e.push(Ln(t,n));}else e.push(Ln(r));}return e}function $n(t){return t.ngDebugContext}function Vn(t){return t.ngOriginalError}function qn(t,...e){t.error(...e);}class zn{constructor(){this._console=console;}handleError(t){const e=this._findOriginalError(t),n=this._findContext(t),r=function(t){return t.ngErrorLogger||qn}(t);r(this._console,"ERROR",t),e&&r(this._console,"ORIGINAL ERROR",e),n&&r(this._console,"ERROR CONTEXT",n);}_findContext(t){return t?$n(t)?$n(t):this._findContext(Vn(t)):null}_findOriginalError(t){let e=Vn(t);for(;e&&Vn(e);)e=Vn(e);return e}}function Bn(t,e){t.__ngContext__=e;}const Qn=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(Tt))();function Wn(t){return t instanceof Function?t():t}var Zn=function(t){return t[t.Important=1]="Important",t[t.DashCase=2]="DashCase",t}({});function Gn(t,e){return (void 0)(t,e)}function Kn(t){const e=t[3];return Zt(e)?e[3]:e}function Yn(t){return Xn(t[13])}function Jn(t){return Xn(t[4])}function Xn(t){for(;null!==t&&!Zt(t);)t=t[4];return t}function tr(t,e,n,r,s){if(null!=r){let i,o=!1;Zt(r)?i=r:Wt(r)&&(o=!0,r=r[0]);const a=ue(r);0===t&&null!==n?null==s?ar(e,n,a):or(e,n,a,s||null,!0):1===t&&null!==n?or(e,n,a,s||null,!0):2===t?function(t,e,n){const r=cr(t,e);r&&function(t,e,n,r){le(t)?t.removeChild(e,n,r):e.removeChild(n);}(t,r,e,n);}(e,a,o):3===t&&e.destroyNode(a),null!=i&&function(t,e,n,r,s){const i=n[7];i!==ue(n)&&tr(e,t,r,i,s);for(let o=Qt;o<n.length;o++){const s=n[o];fr(s[1],s,t,e,r,i);}}(e,t,i,n,s);}}function er(t,e,n){return le(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function nr(t,e){const n=t[9],r=n.indexOf(e),s=e[3];1024&e[2]&&(e[2]&=-1025,ye(s,-1)),n.splice(r,1);}function rr(t,e){if(t.length<=Qt)return;const n=Qt+e,r=t[n];if(r){const i=r[17];null!==i&&i!==t&&nr(i,r),e>0&&(t[n-1][4]=r[4]);const o=kn(t,Qt+e);fr(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const a=o[19];null!==a&&a.detachView(o[1]),r[3]=null,r[4]=null,r[2]&=-129;}var s;return r}function sr(t,e){if(!(256&e[2])){const n=e[11];le(n)&&n.destroyNode&&fr(t,e,n,3,null,null),function(t){let e=t[13];if(!e)return ir(t[1],t);for(;e;){let n=null;if(Wt(e))n=e[13];else {const t=e[10];t&&(n=t);}if(!n){for(;e&&!e[4]&&e!==t;)Wt(e)&&ir(e[1],e),e=e[3];null===e&&(e=t),Wt(e)&&ir(e[1],e),n=e&&e[4];}e=n;}}(e);}}function ir(t,e){if(!(256&e[2])){e[2]&=-129,e[2]|=256,function(t,e){let n;if(null!=t&&null!=(n=t.destroyHooks))for(let r=0;r<n.length;r+=2){const t=e[n[r]];if(!(t instanceof We)){const e=n[r+1];if(Array.isArray(e))for(let n=0;n<e.length;n+=2)e[n+1].call(t[e[n]]);else e.call(t);}}}(t,e),function(t,e){const n=t.cleanup,r=e[7];let s=-1;if(null!==n){for(let t=0;t<n.length-1;t+=2)if("string"==typeof n[t]){const i=n[t+1],o="function"==typeof i?i(e):ue(e[i]),a=r[s=n[t+2]],l=n[t+3];"boolean"==typeof l?o.removeEventListener(n[t],a,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),t+=2;}else {const e=r[s=n[t+1]];n[t].call(e);}if(null!==r)for(let t=s+1;t<r.length;t++)(0, r[t])();e[7]=null;}}(t,e),1===e[1].type&&le(e[11])&&e[11].destroy();const n=e[17];if(null!==n&&Zt(e[3])){n!==e[3]&&nr(n,e);const r=e[19];null!==r&&r.detachView(t);}}}function or(t,e,n,r,s){le(t)?t.insertBefore(e,n,r,s):e.insertBefore(n,r,s);}function ar(t,e,n){le(t)?t.appendChild(e,n):e.appendChild(n);}function lr(t,e,n,r,s){null!==r?or(t,e,n,r,s):ar(t,e,n);}function cr(t,e){return le(t)?t.parentNode(e):e.parentNode}function ur(t,e,n,r){const s=function(t,e,n){return function(t,e,n){let r=e;for(;null!==r&&40&r.type;)r=(e=r).parent;if(null===r)return n[0];if(2&r.flags){const e=t.data[r.directiveStart].encapsulation;if(e===wt.None||e===wt.Emulated)return null}return he(r,n)}(t,e.parent,n)}(t,r,e),i=e[11],o=function(t,e,n){return function(t,e,n){return 40&t.type?he(t,n):null}(t,0,n)}(r.parent||e[6],0,e);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)lr(i,s,n[a],o,!1);else lr(i,s,n,o,!1);}function hr(t,e){if(null!==e){const n=e.type;if(3&n)return he(e,t);if(4&n)return dr(-1,t[e.index]);if(8&n){const n=e.child;if(null!==n)return hr(t,n);{const n=t[e.index];return Zt(n)?dr(-1,n):ue(n)}}if(32&n)return Gn(e,t)()||ue(t[e.index]);{const n=t[16],r=n[6],s=Kn(n),i=r.projection[e.projection];return null!=i?hr(s,i):hr(t,e.next)}}return null}function dr(t,e){const n=Qt+t+1;if(n<e.length){const t=e[n],r=t[1].firstChild;if(null!==r)return hr(t,r)}return e[7]}function pr(t,e,n,r,s,i,o){for(;null!=n;){const a=r[n.index],l=n.type;if(o&&0===e&&(a&&Bn(ue(a),r),n.flags|=4),64!=(64&n.flags))if(8&l)pr(t,e,n.child,r,s,i,!1),tr(e,t,s,a,i);else if(32&l){const o=Gn(n,r);let l;for(;l=o();)tr(e,t,s,l,i);tr(e,t,s,a,i);}else 16&l?mr(t,e,r,n,s,i):tr(e,t,s,a,i);n=o?n.projectionNext:n.next;}}function fr(t,e,n,r,s,i){pr(n,r,t.firstChild,e,s,i,!1);}function mr(t,e,n,r,s,i){const o=n[16],a=o[6].projection[r.projection];if(Array.isArray(a))for(let l=0;l<a.length;l++)tr(e,t,s,a[l],i);else pr(t,e,a,o[3],s,i,!0);}function gr(t,e,n){le(t)?t.setAttribute(e,"style",n):e.style.cssText=n;}function yr(t,e,n){le(t)?""===n?t.removeAttribute(e,"class"):t.setAttribute(e,"class",n):e.className=n;}function _r(t,e,n){let r=t.length;for(;;){const s=t.indexOf(e,n);if(-1===s)return s;if(0===s||t.charCodeAt(s-1)<=32){const n=e.length;if(s+n===r||t.charCodeAt(s+n)<=32)return s}n=s+1;}}const vr="ng-template";function wr(t,e,n){let r=0;for(;r<t.length;){let s=t[r++];if(n&&"class"===s){if(s=t[r],-1!==_r(s.toLowerCase(),e,0))return !0}else if(1===s){for(;r<t.length&&"string"==typeof(s=t[r++]);)if(s.toLowerCase()===e)return !0;return !1}}return !1}function br(t){return 4===t.type&&t.value!==vr}function Sr(t,e,n){return e===(4!==t.type||n?t.value:vr)}function Er(t,e,n){let r=4;const s=t.attrs||[],i=function(t){for(let e=0;e<t.length;e++)if(Ge(t[e]))return e;return t.length}(s);let o=!1;for(let a=0;a<e.length;a++){const l=e[a];if("number"!=typeof l){if(!o)if(4&r){if(r=2|1&r,""!==l&&!Sr(t,l,n)||""===l&&1===e.length){if(Cr(r))return !1;o=!0;}}else {const c=8&r?l:e[++a];if(8&r&&null!==t.attrs){if(!wr(t.attrs,c,n)){if(Cr(r))return !1;o=!0;}continue}const u=Tr(8&r?"class":l,s,br(t),n);if(-1===u){if(Cr(r))return !1;o=!0;continue}if(""!==c){let t;t=u>i?"":s[u+1].toLowerCase();const e=8&r?t:null;if(e&&-1!==_r(e,c,0)||2&r&&c!==t){if(Cr(r))return !1;o=!0;}}}}else {if(!o&&!Cr(r)&&!Cr(l))return !1;if(o&&Cr(l))continue;o=!1,r=l|1&r;}}return Cr(r)||o}function Cr(t){return 0==(1&t)}function Tr(t,e,n,r){if(null===e)return -1;let s=0;if(r||!n){let n=!1;for(;s<e.length;){const r=e[s];if(r===t)return s;if(3===r||6===r)n=!0;else {if(1===r||2===r){let t=e[++s];for(;"string"==typeof t;)t=e[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2;}return -1}return function(t,e){let n=t.indexOf(4);if(n>-1)for(n++;n<t.length;){const r=t[n];if("number"==typeof r)return -1;if(r===e)return n;n++;}return -1}(e,t)}function xr(t,e,n=!1){for(let r=0;r<e.length;r++)if(Er(t,e[r],n))return !0;return !1}function kr(t,e){return t?":not("+e.trim()+")":e}function Ar(t){let e=t[0],n=1,r=2,s="",i=!1;for(;n<t.length;){let o=t[n];if("string"==typeof o)if(2&r){const e=t[++n];s+="["+o+(e.length>0?'="'+e+'"':"")+"]";}else 8&r?s+="."+o:4&r&&(s+=" "+o);else ""===s||Cr(o)||(e+=kr(i,s),s=""),r=o,i=i||!Cr(r);n++;}return ""!==s&&(e+=kr(i,s)),e}const Ir={};function Or(t,e){const n=t.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],i=n[r+1];if(-1!==i){const n=t.data[i];Oe(s),n.contentQueries(2,e[i],i);}}}function Rr(t,e,n,r,s,i,o,a,l,c){const u=e.blueprint.slice();return u[0]=s,u[2]=140|r,ge(u),u[3]=u[15]=t,u[8]=n,u[10]=o||t&&t[10],u[11]=a||t&&t[11],u[12]=l||t&&t[12]||null,u[9]=c||t&&t[9]||null,u[6]=i,u[16]=2==e.type?t[16]:u,u}function Pr(t,e,n,r,s){let i=t.data[e];if(null===i)i=function(t,e,n,r,s){const i=Ee(),o=Te(),a=t.data[e]=function(t,e,n,r,s,i){return {type:n,index:r,insertBeforeIndex:null,injectorIndex:e?e.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:e,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,o?i:i&&i.parent,n,e,r,s);return null===t.firstChild&&(t.firstChild=a),null!==i&&(o?null==i.child&&null!==a.parent&&(i.child=a):null===i.next&&(i.next=a)),a}(t,e,n,r,s),_e.lFrame.inI18n&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=s;const t=function(){const t=_e.lFrame,e=t.currentTNode;return t.isParent?e:e.parent}();i.injectorIndex=null===t?-1:t.injectorIndex;}return Ce(i,!0),i}function Nr(t,e,n,r){if(0===n)return -1;const s=e.length;for(let i=0;i<n;i++)e.push(r),t.blueprint.push(r),t.data.push(null);return s}function jr(t,e,n){Ne(e);try{const r=t.viewQuery;null!==r&&rs(1,r,n);const s=t.template;null!==s&&Mr(t,e,s,1,n),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&Or(t,e),t.staticViewQueries&&rs(2,t.viewQuery,n);const i=t.components;null!==i&&function(t,e){for(let n=0;n<e.length;n++)Jr(t,e[n]);}(e,i);}catch(r){throw t.firstCreatePass&&(t.incompleteFirstPass=!0),r}finally{e[2]&=-5,Ue();}}function Dr(t,e,n,r){const s=e[2];if(256==(256&s))return;Ne(e);const i=xe();try{ge(e),_e.lFrame.bindingIndex=t.bindingStartIndex,null!==n&&Mr(t,e,n,2,r);const o=3==(3&s);if(!i)if(o){const n=t.preOrderCheckHooks;null!==n&&$e(e,n,null);}else {const n=t.preOrderHooks;null!==n&&Ve(e,n,0,null),qe(e,0);}if(function(t){for(let e=Yn(t);null!==e;e=Jn(e)){if(!e[2])continue;const t=e[9];for(let e=0;e<t.length;e++){const n=t[e],r=n[3];0==(1024&n[2])&&ye(r,1),n[2]|=1024;}}}(e),function(t){for(let e=Yn(t);null!==e;e=Jn(e))for(let t=Qt;t<e.length;t++){const n=e[t],r=n[1];fe(n)&&Dr(r,n,r.template,n[8]);}}(e),null!==t.contentQueries&&Or(t,e),!i)if(o){const n=t.contentCheckHooks;null!==n&&$e(e,n);}else {const n=t.contentHooks;null!==n&&Ve(e,n,1),qe(e,1);}!function(t,e){const n=t.hostBindingOpCodes;if(null!==n)try{for(let t=0;t<n.length;t++){const r=n[t];if(r<0)Le(~r);else {const s=r,i=n[++t],o=n[++t];Ae(i,s),o(2,e[s]);}}}finally{Le(-1);}}(t,e);const a=t.components;null!==a&&function(t,e){for(let n=0;n<e.length;n++)Kr(t,e[n]);}(e,a);const l=t.viewQuery;if(null!==l&&rs(2,l,r),!i)if(o){const n=t.viewCheckHooks;null!==n&&$e(e,n);}else {const n=t.viewHooks;null!==n&&Ve(e,n,2),qe(e,2);}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),i||(e[2]&=-73),1024&e[2]&&(e[2]&=-1025,ye(e[3],-1));}finally{Ue();}}function Fr(t,e,n,r){const s=e[10],i=!xe(),o=4==(4&e[2]);try{i&&!o&&s.begin&&s.begin(),o&&jr(t,e,r),Dr(t,e,n,r);}finally{i&&!o&&s.end&&s.end();}}function Mr(t,e,n,r,s){const i=_e.lFrame.selectedIndex;try{Le(-1),2&r&&e.length>Bt&&function(t,e,n,r){if(!r)if(3==(3&e[2])){const n=t.preOrderCheckHooks;null!==n&&$e(e,n,20);}else {const n=t.preOrderHooks;null!==n&&Ve(e,n,0,20);}Le(20);}(t,e,0,xe()),n(r,s);}finally{Le(i);}}function Ur(t){const e=t.tView;return null===e||e.incompleteFirstPass?t.tView=Lr(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):e}function Lr(t,e,n,r,s,i,o,a,l,c){const u=Bt+r,h=u+s,d=function(t,e){const n=[];for(let r=0;r<e;r++)n.push(r<t?null:Ir);return n}(u,h),p="function"==typeof c?c():c;return d[1]={type:t,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:e,data:d.slice().fill(null,u),bindingStartIndex:u,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof o?o():o,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function Hr(t,e,n){for(let r in t)if(t.hasOwnProperty(r)){const s=t[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(e,s):n[r]=[e,s];}return n}function $r(t,e,n,r,s,i){const o=i.hostBindings;if(o){let n=t.hostBindingOpCodes;null===n&&(n=t.hostBindingOpCodes=[]);const i=~e.index;(function(t){let e=t.length;for(;e>0;){const n=t[--e];if("number"==typeof n&&n<0)return n}return 0})(n)!=i&&n.push(i),n.push(r,s,o);}}function Vr(t,e){null!==t.hostBindings&&t.hostBindings(1,e);}function qr(t,e){e.flags|=2,(t.components||(t.components=[])).push(e.index);}function zr(t,e,n){if(n){if(e.exportAs)for(let r=0;r<e.exportAs.length;r++)n[e.exportAs[r]]=t;Jt(e)&&(n[""]=t);}}function Br(t,e,n){t.flags|=1,t.directiveStart=e,t.directiveEnd=e+n,t.providerIndexes=e;}function Qr(t,e,n,r,s){t.data[r]=s;const i=s.factory||(s.factory=Xt(s.type)),o=new We(i,Jt(s),null);t.blueprint[r]=o,n[r]=o,$r(t,e,0,r,Nr(t,n,s.hostVars,Ir),s);}function Wr(t,e,n){const r=he(e,t),s=Ur(n),i=t[10],o=Xr(t,Rr(t,s,null,n.onPush?64:16,r,e,i,i.createRenderer(r,n),null,null));t[e.index]=o;}function Zr(t,e,n,r,s,i){const o=i[e];if(null!==o){const t=r.setInput;for(let e=0;e<o.length;){const s=o[e++],i=o[e++],a=o[e++];null!==t?r.setInput(n,a,s,i):n[i]=a;}}}function Gr(t,e){let n=null,r=0;for(;r<e.length;){const s=e[r];if(0!==s)if(5!==s){if("number"==typeof s)break;t.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,t[s],e[r+1])),r+=2;}else r+=2;else r+=4;}return n}function Kr(t,e){const n=de(e,t);if(fe(n)){const t=n[1];80&n[2]?Dr(t,n,t.template,n[8]):n[5]>0&&Yr(n);}}function Yr(t){for(let n=Yn(t);null!==n;n=Jn(n))for(let t=Qt;t<n.length;t++){const e=n[t];if(1024&e[2]){const t=e[1];Dr(t,e,t.template,e[8]);}else e[5]>0&&Yr(e);}const e=t[1].components;if(null!==e)for(let n=0;n<e.length;n++){const r=de(e[n],t);fe(r)&&r[5]>0&&Yr(r);}}function Jr(t,e){const n=de(e,t),r=n[1];!function(t,e){for(let n=e.length;n<t.blueprint.length;n++)e.push(t.blueprint[n]);}(r,n),jr(r,n,n[8]);}function Xr(t,e){return t[13]?t[14][4]=e:t[13]=e,t[14]=e,e}function ts(t){for(;t;){t[2]|=64;const e=Kn(t);if(0!=(512&t[2])&&!e)return t;t=e;}return null}function es(t,e,n){const r=e[10];r.begin&&r.begin();try{Dr(t,e,t.template,n);}catch(s){throw as(e,s),s}finally{r.end&&r.end();}}function ns(t){!function(t){for(let e=0;e<t.components.length;e++){const n=t.components[e],r=pe(n),s=r[1];Fr(s,r,s.template,n);}}(t[8]);}function rs(t,e,n){Oe(0),e(t,n);}const ss=(()=>Promise.resolve(null))();function is(t){return t[7]||(t[7]=[])}function os(t){return t.cleanup||(t.cleanup=[])}function as(t,e){const n=t[9],r=n?n.get(zn,null):null;r&&r.handleError(e);}function ls(t,e,n){let r=n?t.styles:null,s=n?t.classes:null,i=0;if(null!==e)for(let o=0;o<e.length;o++){const t=e[o];"number"==typeof t?i=t:1==i?s=et(s,t):2==i&&(r=et(r,t+": "+e[++o]+";"));}n?t.styles=r:t.stylesWithoutHost=r,n?t.classes=s:t.classesWithoutHost=s;}const cs=new Sn("INJECTOR",-1);class us{get(t,e=Pn){if(e===Pn){const e=new Error(`NullInjectorError: No provider for ${tt(t)}!`);throw e.name="NullInjectorError",e}return e}}const hs=new Sn("Set Injector scope."),ds={},ps={},fs=[];let ms=void 0;function gs(){return void 0===ms&&(ms=new us),ms}function ys(t,e=null,n=null,r){return new _s(t,n,e||gs(),r)}class _s{constructor(t,e,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];e&&Tn(e,n=>this.processProvider(n,t,e)),Tn([t],t=>this.processInjectorType(t,[],s)),this.records.set(cs,ws(void 0,this));const i=this.records.get(hs);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof t?null:tt(t));}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(t=>t.ngOnDestroy());}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear();}}get(t,e=Pn,n=ft.Default){this.assertNotDestroyed();const r=Mn(this);try{if(!(n&ft.SkipSelf)){let e=this.records.get(t);if(void 0===e){const n=("function"==typeof(s=t)||"object"==typeof s&&s instanceof Sn)&&at(t);e=n&&this.injectableDefInScope(n)?ws(vs(t),ds):null,this.records.set(t,e);}if(null!=e)return this.hydrate(t,e)}return (n&ft.Self?gs():this.parent).get(t,e=n&ft.Optional&&e===Pn?null:e)}catch(i){if("NullInjectorError"===i.name){if((i.ngTempTokenPath=i.ngTempTokenPath||[]).unshift(tt(t)),r)throw i;return function(t,e,n,r){const s=t.ngTempTokenPath;throw e[jn]&&s.unshift(e[jn]),t.message=function(t,e,n,r=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let s=tt(e);if(Array.isArray(e))s=e.map(tt).join(" -> ");else if("object"==typeof e){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let r=e[n];t.push(n+":"+("string"==typeof r?JSON.stringify(r):tt(r)));}s=`{${t.join(", ")}}`;}return `${n}${r?"("+r+")":""}[${s}]: ${t.replace(Nn,"\n  ")}`}("\n"+t.message,s,n,r),t.ngTokenPath=s,t.ngTempTokenPath=null,t}(i,t,"R3InjectorError",this.source)}throw i}finally{Mn(r);}var s;}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(t=>this.get(t));}toString(){const t=[];return this.records.forEach((e,n)=>t.push(tt(n))),`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(t,e,n){if(!(t=st(t)))return !1;let r=ct(t);const s=null==r&&t.ngModule||void 0,i=void 0===s?t:s,o=-1!==n.indexOf(i);if(void 0!==s&&(r=ct(s)),null==r)return !1;if(null!=r.imports&&!o){let t;n.push(i);try{Tn(r.imports,r=>{this.processInjectorType(r,e,n)&&(void 0===t&&(t=[]),t.push(r));});}finally{}if(void 0!==t)for(let e=0;e<t.length;e++){const{ngModule:n,providers:r}=t[e];Tn(r,t=>this.processProvider(t,n,r||fs));}}this.injectorDefTypes.add(i),this.records.set(i,ws(r.factory,ds));const a=r.providers;if(null!=a&&!o){const e=t;Tn(a,t=>this.processProvider(t,e,a));}return void 0!==s&&void 0!==t.providers}processProvider(t,e,n){let r=Ss(t=st(t))?t:st(t&&t.provide);const s=function(t,e,n){return bs(t)?ws(void 0,t.useValue):ws(function(t,e,n){let r=void 0;if(Ss(t)){const e=st(t);return Xt(e)||vs(e)}if(bs(t))r=()=>st(t.useValue);else if((s=t)&&s.useFactory)r=()=>t.useFactory(...Hn(t.deps||[]));else if(function(t){return !(!t||!t.useExisting)}(t))r=()=>Ln(st(t.useExisting));else {const e=st(t&&(t.useClass||t.provide));if(!function(t){return !!t.deps}(t))return Xt(e)||vs(e);r=()=>new e(...Hn(t.deps));}var s;return r}(t),ds)}(t);if(Ss(t)||!0!==t.multi)this.records.get(r);else {let e=this.records.get(r);e||(e=ws(void 0,ds,!0),e.factory=()=>Hn(e.multi),this.records.set(r,e)),r=t,e.multi.push(t);}this.records.set(r,s);}hydrate(t,e){var n;return e.value===ds&&(e.value=ps,e.value=e.factory()),"object"==typeof e.value&&e.value&&null!==(n=e.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(e.value),e.value}injectableDefInScope(t){return !!t.providedIn&&("string"==typeof t.providedIn?"any"===t.providedIn||t.providedIn===this.scope:this.injectorDefTypes.has(t.providedIn))}}function vs(t){const e=at(t),n=null!==e?e.factory:Xt(t);if(null!==n)return n;const r=ct(t);if(null!==r)return r.factory;if(t instanceof Sn)throw new Error(`Token ${tt(t)} is missing a \u0275prov definition.`);if(t instanceof Function)return function(t){const e=t.length;if(e>0){const n=function(t,e){const n=[];for(let r=0;r<t;r++)n.push("?");return n}(e);throw new Error(`Can't resolve all parameters for ${tt(t)}: (${n.join(", ")}).`)}const n=function(t){const e=t&&(t[ut]||t[dt]);if(e){const n=function(t){if(t.hasOwnProperty("name"))return t.name;const e=(""+t).match(/^function\s*([^\s(]+)/);return null===e?"":e[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),e}return null}(t);return null!==n?()=>n.factory(t):()=>new t}(t);throw new Error("unreachable")}function ws(t,e,n=!1){return {factory:t,value:e,multi:n?[]:void 0}}function bs(t){return null!==t&&"object"==typeof t&&Dn in t}function Ss(t){return "function"==typeof t}const Es=function(t,e,n){return function(t,e=null,n=null,r){const s=ys(t,e,n,r);return s._resolveInjectorDefTypes(),s}({name:n},e,t,n)};let Cs=(()=>{class t{static create(t,e){return Array.isArray(t)?Es(t,e,""):Es(t.providers,t.parent,t.name||"")}}return t.THROW_IF_NOT_FOUND=Pn,t.NULL=new us,t.\u0275prov=it({token:t,providedIn:"any",factory:()=>Ln(cs)}),t.__NG_ELEMENT_ID__=-1,t})();function Ts(t,e){He(pe(t)[1],Se());}let xs=null;function ks(){if(!xs){const t=Tt.Symbol;if(t&&t.iterator)xs=t.iterator;else {const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const n=t[e];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(xs=n);}}}return xs}function As(t){return !!Is(t)&&(Array.isArray(t)||!(t instanceof Map)&&ks()in t)}function Is(t){return null!==t&&("function"==typeof t||"object"==typeof t)}function Os(t,e=ft.Default){const n=we();return null===n?Ln(t,e):dn(Se(),n,st(t),e)}function Rs(t,e,n,r,s){const i=s?"class":"style";!function(t,e,n,r,s){for(let i=0;i<n.length;){const o=n[i++],a=n[i++],l=e[o],c=t.data[o];null!==c.setInput?c.setInput(l,s,r,a):l[a]=s;}}(t,n,e.inputs[i],i,r);}function Ps(t,e,n,r){const s=we(),i=be(),o=Bt+t,a=s[11],l=s[o]=er(a,e,_e.lFrame.currentNamespace),c=i.firstCreatePass?function(t,e,n,r,s,i,o){const a=e.consts,l=Pr(e,t,2,s,me(a,i));return function(t,e,n,r){{const i=function(t,e,n){const r=t.directiveRegistry;let s=null;if(r)for(let i=0;i<r.length;i++){const o=r[i];xr(n,o.selectors,!1)&&(s||(s=[]),cn(sn(n,e),t,o.type),Jt(o)?(qr(t,n),s.unshift(o)):s.push(o));}return s}(t,e,n),o=null===r?null:{"":-1};if(null!==i){Br(n,t.data.length,i.length);for(let t=0;t<i.length;t++){const e=i[t];e.providersResolver&&e.providersResolver(e);}let r=!1,a=!1,l=Nr(t,e,i.length,null);for(let s=0;s<i.length;s++){const c=i[s];n.mergedAttrs=Ke(n.mergedAttrs,c.hostAttrs),Qr(t,n,e,l,c),zr(l,c,o),null!==c.contentQueries&&(n.flags|=8),null===c.hostBindings&&null===c.hostAttrs&&0===c.hostVars||(n.flags|=128);const u=c.type.prototype;!r&&(u.ngOnChanges||u.ngOnInit||u.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(n.index),r=!0),a||!u.ngOnChanges&&!u.ngDoCheck||((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(n.index),a=!0),l++;}!function(t,e){const n=e.directiveEnd,r=t.data,s=e.attrs,i=[];let o=null,a=null;for(let l=e.directiveStart;l<n;l++){const t=r[l],n=t.inputs,c=null===s||br(e)?null:Gr(n,s);i.push(c),o=Hr(n,l,o),a=Hr(t.outputs,l,a);}null!==o&&(o.hasOwnProperty("class")&&(e.flags|=16),o.hasOwnProperty("style")&&(e.flags|=32)),e.initialInputs=i,e.inputs=o,e.outputs=a;}(t,n);}o&&function(t,e,n){if(e){const r=t.localNames=[];for(let t=0;t<e.length;t+=2){const s=n[e[t+1]];if(null==s)throw new te("301",`Export of name '${e[t+1]}' not found!`);r.push(e[t],s);}}}(n,r,o);}n.mergedAttrs=Ke(n.mergedAttrs,n.attrs);}(e,n,l,me(a,o)),null!==l.attrs&&ls(l,l.attrs,!1),null!==l.mergedAttrs&&ls(l,l.mergedAttrs,!0),null!==e.queries&&e.queries.elementStart(e,l),l}(o,i,s,0,e,n,r):i.data[o];Ce(c,!0);const u=c.mergedAttrs;null!==u&&Ze(a,l,u);const h=c.classes;null!==h&&yr(a,l,h);const d=c.styles;null!==d&&gr(a,l,d),64!=(64&c.flags)&&ur(i,s,l,c),0===_e.lFrame.elementDepthCount&&Bn(l,s),_e.lFrame.elementDepthCount++,Yt(c)&&(function(t,e,n){(function(t,e,n,r){const s=n.directiveStart,i=n.directiveEnd;t.firstCreatePass||sn(n,e),Bn(r,e);const o=n.initialInputs;for(let a=s;a<i;a++){const r=t.data[a],i=Jt(r);i&&Wr(e,n,r);const l=gn(e,t,a,n);Bn(l,e),null!==o&&Zr(0,a-s,l,r,0,o),i&&(de(n.index,e)[8]=l);}}(t,e,n,he(n,e)),128==(128&n.flags)&&function(t,e,n){const r=n.directiveStart,s=n.directiveEnd,i=n.index,o=_e.lFrame.currentDirectiveIndex;try{Le(i);for(let n=r;n<s;n++){const r=t.data[n],s=e[n];Ie(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||Vr(r,s);}}finally{Le(-1),Ie(o);}}(t,e,n));}(i,s,c),function(t,e,n){if(Gt(e)){const r=e.directiveEnd;for(let s=e.directiveStart;s<r;s++){const e=t.data[s];e.contentQueries&&e.contentQueries(1,n[s],s);}}}(i,c,s)),null!==r&&function(t,e,n=he){const r=e.localNames;if(null!==r){let s=e.index+1;for(let i=0;i<r.length;i+=2){const o=r[i+1],a=-1===o?n(e,t):t[o];t[s++]=a;}}}(s,c);}function Ns(){let t=Se();Te()?_e.lFrame.isParent=!1:(t=t.parent,Ce(t,!1));const e=t;_e.lFrame.elementDepthCount--;const n=be();n.firstCreatePass&&(He(n,t),Gt(t)&&n.queries.elementEnd(t)),null!=e.classesWithoutHost&&function(t){return 0!=(16&t.flags)}(e)&&Rs(n,e,we(),e.classesWithoutHost,!0),null!=e.stylesWithoutHost&&function(t){return 0!=(32&t.flags)}(e)&&Rs(n,e,we(),e.stylesWithoutHost,!1);}function js(t){return !!t&&"function"==typeof t.then}function Ds(t,e,n=!1,r){const s=we(),i=be(),o=Se();return function(t,e,n,r,s,i,o=!1,a){const l=Yt(r),c=t.firstCreatePass&&os(t),u=is(e);let h=!0;if(3&r.type){const d=he(r,e),p=a?a(d):xt,f=p.target||d,m=u.length,g=a?t=>a(ue(t[r.index])).target:r.index;if(le(n)){let o=null;if(!a&&l&&(o=function(t,e,n,r){const s=t.cleanup;if(null!=s)for(let i=0;i<s.length-1;i+=2){const t=s[i];if(t===n&&s[i+1]===r){const t=e[7],n=s[i+2];return t.length>n?t[n]:null}"string"==typeof t&&(i+=2);}return null}(t,e,s,r.index)),null!==o)(o.__ngLastListenerFn__||o).__ngNextListenerFn__=i,o.__ngLastListenerFn__=i,h=!1;else {i=Ms(r,e,i,!1);const t=n.listen(p.name||f,s,i);u.push(i,t),c&&c.push(s,g,m,m+1);}}else i=Ms(r,e,i,!0),f.addEventListener(s,i,o),u.push(i),c&&c.push(s,g,m,o);}else i=Ms(r,e,i,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const t=p.length;if(t)for(let n=0;n<t;n+=2){const t=e[p[n]][p[n+1]].subscribe(i),o=u.length;u.push(i,t),c&&c.push(s,r.index,o,-(o+1));}}}(i,s,s[11],o,t,e,n,r),Ds}function Fs(t,e,n){try{return !1!==e(n)}catch(r){return as(t,r),!1}}function Ms(t,e,n,r){return function s(i){if(i===Function)return n;const o=2&t.flags?de(t.index,e):e;0==(32&e[2])&&ts(o);let a=Fs(e,n,i),l=s.__ngNextListenerFn__;for(;l;)a=Fs(e,l,i)&&a,l=l.__ngNextListenerFn__;return r&&!1===a&&(i.preventDefault(),i.returnValue=!1),a}}const Us=void 0;var Ls=["en",[["a","p"],["AM","PM"],Us],[["AM","PM"],Us,Us],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],Us,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],Us,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",Us,"{1} 'at' {0}",Us],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(t){let e=Math.floor(Math.abs(t)),n=t.toString().replace(/^[^.]*\.?/,"").length;return 1===e&&0===n?1:5}];let Hs={};function $s(t){return t in Hs||(Hs[t]=Tt.ng&&Tt.ng.common&&Tt.ng.common.locales&&Tt.ng.common.locales[t]),Hs[t]}var Vs=function(t){return t[t.LocaleId=0]="LocaleId",t[t.DayPeriodsFormat=1]="DayPeriodsFormat",t[t.DayPeriodsStandalone=2]="DayPeriodsStandalone",t[t.DaysFormat=3]="DaysFormat",t[t.DaysStandalone=4]="DaysStandalone",t[t.MonthsFormat=5]="MonthsFormat",t[t.MonthsStandalone=6]="MonthsStandalone",t[t.Eras=7]="Eras",t[t.FirstDayOfWeek=8]="FirstDayOfWeek",t[t.WeekendRange=9]="WeekendRange",t[t.DateFormat=10]="DateFormat",t[t.TimeFormat=11]="TimeFormat",t[t.DateTimeFormat=12]="DateTimeFormat",t[t.NumberSymbols=13]="NumberSymbols",t[t.NumberFormats=14]="NumberFormats",t[t.CurrencyCode=15]="CurrencyCode",t[t.CurrencySymbol=16]="CurrencySymbol",t[t.CurrencyName=17]="CurrencyName",t[t.Currencies=18]="Currencies",t[t.Directionality=19]="Directionality",t[t.PluralCase=20]="PluralCase",t[t.ExtraData=21]="ExtraData",t}({});const qs="en-US";let zs=qs;function Bs(t){var e,n;n="Expected localeId to be defined",null==(e=t)&&function(t,e,n,r){throw new Error("ASSERTION ERROR: "+t+` [Expected=> null != ${e} <=Actual]`)}(n,e),"string"==typeof t&&(zs=t.toLowerCase().replace(/_/g,"-"));}class Qs{}class Ws{resolveComponentFactory(t){throw function(t){const e=Error(`No component factory found for ${tt(t)}. Did you add it to @NgModule.entryComponents?`);return e.ngComponent=t,e}(t)}}let Zs=(()=>{class t{}return t.NULL=new Ws,t})();function Gs(...t){}function Ks(t,e){return new Js(he(t,e))}const Ys=function(){return Ks(Se(),we())};let Js=(()=>{class t{constructor(t){this.nativeElement=t;}}return t.__NG_ELEMENT_ID__=Ys,t})();class Xs{}let ti=(()=>{class t{}return t.\u0275prov=it({token:t,providedIn:"root",factory:()=>null}),t})();class ei{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".");}}const ni=new ei("11.0.5");class ri{constructor(){}supports(t){return As(t)}create(t){return new ii(t)}}const si=(t,e)=>e;class ii{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||si;}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e);}forEachOperation(t){let e=this._itHead,n=this._removalsHead,r=0,s=null;for(;e||n;){const i=!n||e&&e.currentIndex<ci(n,r,s)?e:n,o=ci(i,r,s),a=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(e=e._next,null==i.previousIndex)r++;else {s||(s=[]);const t=o-r,e=a-r;if(t!=e){for(let n=0;n<t;n++){const r=n<s.length?s[n]:s[n]=0,i=r+n;e<=i&&i<t&&(s[n]=r+1);}s[i.previousIndex]=e-t;}}o!==a&&t(i,o,a);}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e);}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e);}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e);}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e);}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e);}diff(t){if(null==t&&(t=[]),!As(t))throw new Error(`Error trying to diff '${tt(t)}'. Only arrays and iterables are allowed`);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e,n,r,s=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let e=0;e<this.length;e++)n=t[e],r=this._trackByFn(e,n),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,n,r,e)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,e),i=!0),s=s._next;}else e=0,function(t,e){if(Array.isArray(t))for(let n=0;n<t.length;n++)e(t[n]);else {const n=t[ks()]();let r;for(;!(r=n.next()).done;)e(r.value);}}(t,t=>{r=this._trackByFn(e,t),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,t,r,e)),Object.is(s.item,t)||this._addIdentityChange(s,t)):(s=this._mismatch(s,t,r,e),i=!0),s=s._next,e++;}),this.length=e;return this._truncate(s),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null;}}_mismatch(t,e,n,r){let s;return null===t?s=this._itTail:(s=t._prev,this._remove(t)),null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,s,r)):null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,s,r)):t=this._addAfter(new oi(e,n),s,r),t}_verifyReinsertion(t,e,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?t=this._reinsertAfter(s,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e;}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null);}_reinsertAfter(t,e,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,s=t._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(t,e,n),this._addToMoves(t,n),t}_moveAfter(t,e,n){return this._unlink(t),this._insertAfter(t,e,n),this._addToMoves(t,n),t}_addAfter(t,e,n){return this._insertAfter(t,e,n),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,n){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new li),this._linkedRecords.put(t),t.currentIndex=n,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,n=t._next;return null===e?this._itHead=n:e._next=n,null===n?this._itTail=e:n._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new li),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class oi{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null;}}class ai{constructor(){this._head=null,this._tail=null;}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t);}get(t,e){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===e||e<=n.currentIndex)&&Object.is(n.trackById,t))return n;return null}remove(t){const e=t._prevDup,n=t._nextDup;return null===e?this._head=n:e._nextDup=n,null===n?this._tail=e:n._prevDup=e,null===this._head}}class li{constructor(){this.map=new Map;}put(t){const e=t.trackById;let n=this.map.get(e);n||(n=new ai,this.map.set(e,n)),n.add(t);}get(t,e){const n=this.map.get(t);return n?n.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear();}}function ci(t,e,n){const r=t.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+e+s}class ui{constructor(){}supports(t){return t instanceof Map||Is(t)}create(){return new hi}}class hi{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null;}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e);}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e);}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e);}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e);}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e);}diff(t){if(t){if(!(t instanceof Map||Is(t)))throw new Error(`Error trying to diff '${tt(t)}'. Only maps and objects are allowed`)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(t,n)=>{if(e&&e.key===n)this._maybeAddToChanges(e,t),this._appendAfter=e,e=e._next;else {const r=this._getOrCreateRecordForKey(n,t);e=this._insertBeforeOrAppend(e,r);}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let t=e;null!==t;t=t._nextRemoved)t===this._mapHead&&(this._mapHead=null),this._records.delete(t.key),t._nextRemoved=t._next,t.previousValue=t.currentValue,t.currentValue=null,t._prev=null,t._next=null;}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const n=t._prev;return e._next=t,e._prev=n,t._prev=e,n&&(n._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const n=this._records.get(t);this._maybeAddToChanges(n,e);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new di(t);return this._records.set(t,n),n.currentValue=e,this._addToAdditions(n),n}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null;}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t));}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t);}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t);}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(n=>e(t[n],n));}}class di{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null;}}let pi=(()=>{class t{constructor(t){this.factories=t;}static create(e,n){if(null!=n){const t=n.factories.slice();e=e.concat(t);}return new t(e)}static extend(e){return {provide:t,useFactory:n=>{if(!n)throw new Error("Cannot extend IterableDiffers without a parent injector");return t.create(e,n)},deps:[[t,new Rn,new In]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(null!=e)return e;throw new Error(`Cannot find a differ supporting object '${t}' of type '${n=t,n.name||typeof n}'`);var n;}}return t.\u0275prov=it({token:t,providedIn:"root",factory:()=>new t([new ri])}),t})(),fi=(()=>{class t{constructor(t){this.factories=t;}static create(e,n){if(n){const t=n.factories.slice();e=e.concat(t);}return new t(e)}static extend(e){return {provide:t,useFactory:n=>{if(!n)throw new Error("Cannot extend KeyValueDiffers without a parent injector");return t.create(e,n)},deps:[[t,new Rn,new In]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(e)return e;throw new Error(`Cannot find a differ supporting object '${t}'`)}}return t.\u0275prov=it({token:t,providedIn:"root",factory:()=>new t([new ui])}),t})();function mi(t,e,n,r,s=!1){for(;null!==n;){const i=e[n.index];if(null!==i&&r.push(ue(i)),Zt(i))for(let t=Qt;t<i.length;t++){const e=i[t],n=e[1].firstChild;null!==n&&mi(e[1],e,n,r);}const o=n.type;if(8&o)mi(t,e,n.child,r);else if(32&o){const t=Gn(n,e);let s;for(;s=t();)r.push(s);}else if(16&o){const t=e[16],s=t[6].projection[n.projection];if(Array.isArray(s))r.push(...s);else {const e=Kn(t);mi(e[1],e,s,r,!0);}}n=s?n.projectionNext:n.next;}return r}class gi{constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._viewContainerRef=null;}get rootNodes(){const t=this._lView,e=t[1];return mi(e,t,e.firstChild,[])}get context(){return this._lView[8]}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._viewContainerRef){const t=this._viewContainerRef.indexOf(this);t>-1&&this._viewContainerRef.detach(t),this._viewContainerRef=null;}sr(this._lView[1],this._lView);}onDestroy(t){!function(t,e,n,r){const s=is(e);s.push(r);}(0,this._lView,0,t);}markForCheck(){ts(this._cdRefInjectingView||this._lView);}detach(){this._lView[2]&=-129;}reattach(){this._lView[2]|=128;}detectChanges(){es(this._lView[1],this._lView,this.context);}checkNoChanges(){!function(t,e,n){ke(!0);try{es(t,e,n);}finally{ke(!1);}}(this._lView[1],this._lView,this.context);}attachToViewContainerRef(t){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._viewContainerRef=t;}detachFromAppRef(){var t;this._appRef=null,fr(this._lView[1],t=this._lView,t[11],2,null,null);}attachToAppRef(t){if(this._viewContainerRef)throw new Error("This view is already attached to a ViewContainer!");this._appRef=t;}}class yi extends gi{constructor(t){super(t),this._view=t;}detectChanges(){ns(this._view);}checkNoChanges(){!function(t){ke(!0);try{ns(t);}finally{ke(!1);}}(this._view);}get context(){return null}}const _i=function(t=!1){return function(t,e,n){if(!n&&Kt(t)){const n=de(t.index,e);return new gi(n,n)}return 47&t.type?new gi(e[16],e):null}(Se(),we(),t)};let vi=(()=>{class t{}return t.__NG_ELEMENT_ID__=_i,t.__ChangeDetectorRef__=!0,t})();const wi=[new ui],bi=new pi([new ri]),Si=new fi(wi);class Ei{}class Ci{}const Ti=function(){return function(t,e){let n;const r=e[t.index];if(Zt(r))n=r;else {let s;if(8&t.type)s=ue(r);else {const n=e[11];s=n.createComment("");const r=he(t,e);or(n,cr(n,r),s,function(t,e){return le(t)?t.nextSibling(e):e.nextSibling}(n,r),!1);}e[t.index]=n=new Array(r,!0,!1,e,null,0,t,s,null,null),Xr(e,n);}return new Ai(n,t,e)}(Se(),we())};let xi=(()=>{class t{}return t.__NG_ELEMENT_ID__=Ti,t})();const ki=xi,Ai=class extends ki{constructor(t,e,n){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=n;}get element(){return Ks(this._hostTNode,this._hostLView)}get injector(){return new vn(this._hostTNode,this._hostLView)}get parentInjector(){const t=ln(this._hostTNode,this._hostLView);if(Je(t)){const e=tn(t,this._hostLView),n=Xe(t);return new vn(e[1].data[n+8],e)}return new vn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1);}get(t){const e=Ii(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-Qt}createEmbeddedView(t,e,n){const r=t.createEmbeddedView(e||{});return this.insert(r,n),r}createComponent(t,e,n,r,s){const i=n||this.parentInjector;if(!s&&null==t.ngModule&&i){const t=i.get(Ei,null);t&&(s=t);}const o=t.create(i,r,void 0,s);return this.insert(o.hostView,e),o}insert(t,e){const n=t._lView,r=n[1];if(Zt(n[3])){const e=this.indexOf(t);if(-1!==e)this.detach(e);else {const e=n[3],r=new Ai(e,e[6],e[3]);r.detach(r.indexOf(t));}}const s=this._adjustIndex(e),i=this._lContainer;!function(t,e,n,r){const s=Qt+r,i=n.length;r>0&&(n[s-1][4]=e),r<i-Qt?(e[4]=n[s],xn(n,Qt+r,e)):(n.push(e),e[4]=null),e[3]=n;const o=e[17];null!==o&&n!==o&&function(t,e){const n=t[9];e[16]!==e[3][3][16]&&(t[2]=!0),null===n?t[9]=[e]:n.push(e);}(o,e);const a=e[19];null!==a&&a.insertView(t),e[2]|=128;}(r,n,i,s);const o=dr(s,i),a=n[11],l=cr(a,i[7]);return null!==l&&function(t,e,n,r,s,i){r[0]=s,r[6]=e,fr(t,r,n,1,s,i);}(r,i[6],a,n,l,o),t.attachToViewContainerRef(this),xn(Oi(i),s,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=Ii(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),n=rr(this._lContainer,e);n&&(kn(Oi(this._lContainer),e),sr(n[1],n));}detach(t){const e=this._adjustIndex(t,-1),n=rr(this._lContainer,e);return n&&null!=kn(Oi(this._lContainer),e)?new gi(n):null}_adjustIndex(t,e=0){return null==t?this.length+e:t}};function Ii(t){return t[8]}function Oi(t){return t[8]||(t[8]=[])}const Ri={};class Pi extends Zs{constructor(t){super(),this.ngModule=t;}resolveComponentFactory(t){const e=qt(t);return new Di(e,this.ngModule)}}function Ni(t){const e=[];for(let n in t)t.hasOwnProperty(n)&&e.push({propName:t[n],templateName:n});return e}const ji=new Sn("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Qn});class Di extends Qs{constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=t.selectors.map(Ar).join(","),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e;}get inputs(){return Ni(this.componentDef.inputs)}get outputs(){return Ni(this.componentDef.outputs)}create(t,e,n,r){const s=(r=r||this.ngModule)?function(t,e){return {get:(n,r,s)=>{const i=t.get(n,Ri,s);return i!==Ri||r===Ri?i:e.get(n,r,s)}}}(t,r.injector):t,i=s.get(Xs,ce),o=s.get(ti,null),a=i.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",c=n?function(t,e,n){if(le(t))return t.selectRootElement(e,n===wt.ShadowDom);let r="string"==typeof e?t.querySelector(e):e;return r.textContent="",r}(a,n,this.componentDef.encapsulation):er(i.createRenderer(null,this.componentDef),l,function(t){const e=t.toLowerCase();return "svg"===e?"http://www.w3.org/2000/svg":"math"===e?"http://www.w3.org/1998/MathML/":null}(l)),u=this.componentDef.onPush?576:528,h={components:[],scheduler:Qn,clean:ss,playerHandler:null,flags:0},d=Lr(0,null,null,1,0,null,null,null,null,null),p=Rr(null,d,h,u,null,null,i,a,o,s);let f,m;Ne(p);try{const t=function(t,e,n,r,s,i){const o=n[1];n[20]=t;const a=Pr(o,20,2,"#host",null),l=a.mergedAttrs=e.hostAttrs;null!==l&&(ls(a,l,!0),null!==t&&(Ze(s,t,l),null!==a.classes&&yr(s,t,a.classes),null!==a.styles&&gr(s,t,a.styles)));const c=r.createRenderer(t,e),u=Rr(n,Ur(e),null,e.onPush?64:16,n[20],a,r,c,null,null);return o.firstCreatePass&&(cn(sn(a,n),o,e.type),qr(o,a),Br(a,n.length,1)),Xr(n,u),n[20]=u}(c,this.componentDef,p,i,a);if(c)if(n)Ze(a,c,["ng-version",ni.full]);else {const{attrs:t,classes:e}=function(t){const e=[],n=[];let r=1,s=2;for(;r<t.length;){let i=t[r];if("string"==typeof i)2===s?""!==i&&e.push(i,t[++r]):8===s&&n.push(i);else {if(!Cr(s))break;s=i;}r++;}return {attrs:e,classes:n}}(this.componentDef.selectors[0]);t&&Ze(a,c,t),e&&e.length>0&&yr(a,c,e.join(" "));}if(m=d.data[20],void 0!==e){const t=m.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=e[n];t.push(null!=r?Array.from(r):null);}}f=function(t,e,n,r,s){const i=n[1],o=function(t,e,n){const r=Se();t.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Qr(t,r,e,Nr(t,e,1,null),n));const s=gn(e,t,r.directiveStart,r);Bn(s,e);const i=he(r,e);return i&&Bn(i,e),s}(i,n,e);if(r.components.push(o),t[8]=o,s&&s.forEach(t=>t(o,e)),e.contentQueries){const t=Se();e.contentQueries(1,o,t.directiveStart);}const a=Se();return !i.firstCreatePass||null===e.hostBindings&&null===e.hostAttrs||(Le(a.index),$r(n[1],a,0,a.directiveStart,a.directiveEnd,e),Vr(e,o)),o}(t,this.componentDef,p,h,[Ts]),jr(d,p,null);}finally{Ue();}return new Fi(this.componentType,f,Ks(m,p),p,m)}}class Fi extends class{}{constructor(t,e,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=e,this.hostView=this.changeDetectorRef=new yi(r),this.componentType=t;}get injector(){return new vn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy();}onDestroy(t){this.hostView.onDestroy(t);}}const Mi=new Map;class Ui extends Ei{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new Pi(this);const n=zt(t),r=t[Pt]||null;r&&Bs(r),this._bootstrapComponents=Wn(n.bootstrap),this._r3Injector=ys(t,e,[{provide:Ei,useValue:this},{provide:Zs,useValue:this.componentFactoryResolver}],tt(t)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(t);}get(t,e=Cs.THROW_IF_NOT_FOUND,n=ft.Default){return t===Cs||t===Ei||t===cs?this:this._r3Injector.get(t,e,n)}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(t=>t()),this.destroyCbs=null;}onDestroy(t){this.destroyCbs.push(t);}}class Li extends Ci{constructor(t){super(),this.moduleType=t,null!==zt(t)&&function(t){const e=new Set;!function t(n){const r=zt(n,!0),s=r.id;null!==s&&(function(t,e,n){if(e&&e!==n)throw new Error(`Duplicate module registered for ${t} - ${tt(e)} vs ${tt(e.name)}`)}(s,Mi.get(s),n),Mi.set(s,n));const i=Wn(r.imports);for(const o of i)e.has(o)||(e.add(o),t(o));}(t);}(t);}create(t){return new Ui(this.moduleType,t)}}const Hi=class extends E{constructor(t=!1){super(),this.__isAsync=t;}emit(t){super.next(t);}subscribe(t,e,n){let r,s=t=>null,i=()=>null;t&&"object"==typeof t?(r=this.__isAsync?e=>{setTimeout(()=>t.next(e));}:e=>{t.next(e);},t.error&&(s=this.__isAsync?e=>{setTimeout(()=>t.error(e));}:e=>{t.error(e);}),t.complete&&(i=this.__isAsync?()=>{setTimeout(()=>t.complete());}:()=>{t.complete();})):(r=this.__isAsync?e=>{setTimeout(()=>t(e));}:e=>{t(e);},e&&(s=this.__isAsync?t=>{setTimeout(()=>e(t));}:t=>{e(t);}),n&&(i=this.__isAsync?()=>{setTimeout(()=>n());}:()=>{n();}));const o=super.subscribe(r,s,i);return t instanceof h&&t.add(o),o}},$i=new Sn("Application Initializer");let Vi=(()=>{class t{constructor(t){this.appInits=t,this.resolve=Gs,this.reject=Gs,this.initialized=!1,this.done=!1,this.donePromise=new Promise((t,e)=>{this.resolve=t,this.reject=e;});}runInitializers(){if(this.initialized)return;const t=[],e=()=>{this.done=!0,this.resolve();};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const e=this.appInits[n]();js(e)&&t.push(e);}Promise.all(t).then(()=>{e();}).catch(t=>{this.reject(t);}),0===t.length&&e(),this.initialized=!0;}}return t.\u0275fac=function(e){return new(e||t)(Ln($i,8))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const qi=new Sn("AppId"),zi={provide:qi,useFactory:function(){return `${Bi()}${Bi()}${Bi()}`},deps:[]};function Bi(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Qi=new Sn("Platform Initializer"),Wi=new Sn("Platform ID"),Zi=new Sn("appBootstrapListener");let Gi=(()=>{class t{log(t){console.log(t);}warn(t){console.warn(t);}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const Ki=new Sn("LocaleId"),Yi=new Sn("DefaultCurrencyCode");class Ji{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e;}}const Xi=function(t){return new Li(t)},to=Xi,eo=function(t){return Promise.resolve(Xi(t))},no=function(t){const e=Xi(t),n=Wn(zt(t).declarations).reduce((t,e)=>{const n=qt(e);return n&&t.push(new Di(n)),t},[]);return new Ji(e,n)},ro=no,so=function(t){return Promise.resolve(no(t))};let io=(()=>{class t{constructor(){this.compileModuleSync=to,this.compileModuleAsync=eo,this.compileModuleAndAllComponentsSync=ro,this.compileModuleAndAllComponentsAsync=so;}clearCache(){}clearCacheFor(t){}getModuleId(t){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const oo=(()=>Promise.resolve(0))();function ao(t){"undefined"==typeof Zone?oo.then(()=>{t&&t.apply(null,null);}):Zone.current.scheduleMicroTask("scheduleMicrotask",t);}class lo{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new Hi(!1),this.onMicrotaskEmpty=new Hi(!1),this.onStable=new Hi(!1),this.onError=new Hi(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const n=this;n._nesting=0,n._outer=n._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(n._inner=n._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(n._inner=n._inner.fork(Zone.longStackTraceZoneSpec)),n.shouldCoalesceEventChangeDetection=e,n.lastRequestAnimationFrameId=-1,n.nativeRequestAnimationFrame=function(){let t=Tt.requestAnimationFrame,e=Tt.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&e){const n=t[Zone.__symbol__("OriginalDelegate")];n&&(t=n);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r);}return {nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function(t){const e=!!t.shouldCoalesceEventChangeDetection&&t.nativeRequestAnimationFrame&&(()=>{!function(t){-1===t.lastRequestAnimationFrameId&&(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(Tt,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,ho(t),uo(t);},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke();}),ho(t));}(t);});t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0,maybeDelayChangeDetection:e},onInvokeTask:(n,r,s,i,o,a)=>{try{return po(t),n.invokeTask(s,i,o,a)}finally{e&&"eventTask"===i.type&&e(),fo(t);}},onInvoke:(e,n,r,s,i,o,a)=>{try{return po(t),e.invoke(r,s,i,o,a)}finally{fo(t);}},onHasTask:(e,n,r,s)=>{e.hasTask(r,s),n===r&&("microTask"==s.change?(t._hasPendingMicrotasks=s.microTask,ho(t),uo(t)):"macroTask"==s.change&&(t.hasPendingMacrotasks=s.macroTask));},onHandleError:(e,n,r,s)=>(e.handleError(r,s),t.runOutsideAngular(()=>t.onError.emit(s)),!1)});}(n);}static isInAngularZone(){return !0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!lo.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(lo.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(t,e,n){return this._inner.run(t,e,n)}runTask(t,e,n,r){const s=this._inner,i=s.scheduleEventTask("NgZoneEvent: "+r,t,co,Gs,Gs);try{return s.runTask(i,e,n)}finally{s.cancelTask(i);}}runGuarded(t,e,n){return this._inner.runGuarded(t,e,n)}runOutsideAngular(t){return this._outer.run(t)}}const co={};function uo(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null);}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null));}finally{t.isStable=!0;}}}function ho(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||t.shouldCoalesceEventChangeDetection&&-1!==t.lastRequestAnimationFrameId);}function po(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null));}function fo(t){t._nesting--,uo(t);}class mo{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Hi,this.onMicrotaskEmpty=new Hi,this.onStable=new Hi,this.onError=new Hi;}run(t,e,n){return t.apply(e,n)}runGuarded(t,e,n){return t.apply(e,n)}runOutsideAngular(t){return t()}runTask(t,e,n,r){return t.apply(e,n)}}let go=(()=>{class t{constructor(t){this._ngZone=t,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),t.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone");});}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1;}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{lo.assertNotInAngularZone(),ao(()=>{this._isZoneStable=!0,this._runCallbacksIfReady();});}});});}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())ao(()=>{for(;0!==this._callbacks.length;){let t=this._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(this._didWork);}this._didWork=!1;});else {let t=this.getPendingTasks();this._callbacks=this._callbacks.filter(e=>!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)),this._didWork=!0;}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(t,e,n){let r=-1;e&&e>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(t=>t.timeoutId!==r),t(this._didWork,this.getPendingTasks());},e)),this._callbacks.push({doneCb:t,timeoutId:r,updateCb:n});}whenStable(t,e,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(t,e,n),this._runCallbacksIfReady();}getPendingRequestCount(){return this._pendingCount}findProviders(t,e,n){return []}}return t.\u0275fac=function(e){return new(e||t)(Ln(lo))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),yo=(()=>{class t{constructor(){this._applications=new Map,wo.addToWindow(this);}registerApplication(t,e){this._applications.set(t,e);}unregisterApplication(t){this._applications.delete(t);}unregisterAllApplications(){this._applications.clear();}getTestability(t){return this._applications.get(t)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(t,e=!0){return wo.findTestabilityInTree(this,t,e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();class _o{addToWindow(t){}findTestabilityInTree(t,e,n){return null}}let vo,wo=new _o,bo=!0,So=!1;function Eo(){return So=!0,bo}const Co=new Sn("AllowMultipleToken");class To{constructor(t,e){this.name=t,this.token=e;}}function xo(t,e,n=[]){const r="Platform: "+e,s=new Sn(r);return (e=[])=>{let i=ko();if(!i||i.injector.get(Co,!1))if(t)t(n.concat(e).concat({provide:s,useValue:!0}));else {const t=n.concat(e).concat({provide:s,useValue:!0},{provide:hs,useValue:"platform"});!function(t){if(vo&&!vo.destroyed&&!vo.injector.get(Co,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");vo=t.get(Ao);const e=t.get(Qi,null);e&&e.forEach(t=>t());}(Cs.create({providers:t,name:r}));}return function(t){const e=ko();if(!e)throw new Error("No platform exists!");if(!e.injector.get(t,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return e}(s)}}function ko(){return vo&&!vo.destroyed?vo:null}let Ao=(()=>{class t{constructor(t){this._injector=t,this._modules=[],this._destroyListeners=[],this._destroyed=!1;}bootstrapModuleFactory(t,e){const n=function(t,e){let n;return n="noop"===t?new mo:("zone.js"===t?void 0:t)||new lo({enableLongStackTrace:Eo(),shouldCoalesceEventChangeDetection:e}),n}(e?e.ngZone:void 0,e&&e.ngZoneEventCoalescing||!1),r=[{provide:lo,useValue:n}];return n.run(()=>{const e=Cs.create({providers:r,parent:this.injector,name:t.moduleType.name}),s=t.create(e),i=s.injector.get(zn,null);if(!i)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const t=n.onError.subscribe({next:t=>{i.handleError(t);}});s.onDestroy(()=>{Ro(this._modules,s),t.unsubscribe();});}),function(t,e,n){try{const r=n();return js(r)?r.catch(n=>{throw e.runOutsideAngular(()=>t.handleError(n)),n}):r}catch(r){throw e.runOutsideAngular(()=>t.handleError(r)),r}}(i,n,()=>{const t=s.injector.get(Vi);return t.runInitializers(),t.donePromise.then(()=>(Bs(s.injector.get(Ki,qs)||qs),this._moduleDoBootstrap(s),s))})})}bootstrapModule(t,e=[]){const n=Io({},e);return function(t,e,n){const r=new Li(n);return Promise.resolve(r)}(0,0,t).then(t=>this.bootstrapModuleFactory(t,n))}_moduleDoBootstrap(t){const e=t.injector.get(Oo);if(t._bootstrapComponents.length>0)t._bootstrapComponents.forEach(t=>e.bootstrap(t));else {if(!t.instance.ngDoBootstrap)throw new Error(`The module ${tt(t.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);t.instance.ngDoBootstrap(e);}this._modules.push(t);}onDestroy(t){this._destroyListeners.push(t);}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(t=>t.destroy()),this._destroyListeners.forEach(t=>t()),this._destroyed=!0;}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(Ln(Cs))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();function Io(t,e){return Array.isArray(e)?e.reduce(Io,t):Object.assign(Object.assign({},t),e)}let Oo=(()=>{class t{constructor(t,e,n,r,s,i){this._zone=t,this._console=e,this._injector=n,this._exceptionHandler=r,this._componentFactoryResolver=s,this._initStatus=i,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick();});}});const o=new _(t=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{t.next(this._stable),t.complete();});}),a=new _(t=>{let e;this._zone.runOutsideAngular(()=>{e=this._zone.onStable.subscribe(()=>{lo.assertNotInAngularZone(),ao(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,t.next(!0));});});});const n=this._zone.onUnstable.subscribe(()=>{lo.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{t.next(!1);}));});return ()=>{e.unsubscribe(),n.unsubscribe();}});this.isStable=B(o,a.pipe(t=>{return Q()((e=J,function(t){let n;n="function"==typeof e?e:function(){return e};const r=Object.create(t,K);return r.source=t,r.subjectFactory=n,r})(t));var e;}));}bootstrap(t,e){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=t instanceof Qs?t:this._componentFactoryResolver.resolveComponentFactory(t),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(Ei),s=n.create(Cs.NULL,[],e||n.selector,r),i=s.location.nativeElement,o=s.injector.get(go,null),a=o&&s.injector.get(yo);return o&&a&&a.registerApplication(i,o),s.onDestroy(()=>{this.detachView(s.hostView),Ro(this.components,s),a&&a.unregisterApplication(i);}),this._loadComponent(s),Eo()&&this._console.log("Angular is running in development mode. Call enableProdMode() to enable production mode."),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let t of this._views)t.detectChanges();}catch(t){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(t));}finally{this._runningTick=!1;}}attachView(t){const e=t;this._views.push(e),e.attachToAppRef(this);}detachView(t){const e=t;Ro(this._views,e),e.detachFromAppRef();}_loadComponent(t){this.attachView(t.hostView),this.tick(),this.components.push(t),this._injector.get(Zi,[]).concat(this._bootstrapListeners).forEach(e=>e(t));}ngOnDestroy(){this._views.slice().forEach(t=>t.destroy()),this._onMicrotaskEmptySubscription.unsubscribe();}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(Ln(lo),Ln(Gi),Ln(Cs),Ln(zn),Ln(Zs),Ln(Vi))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();function Ro(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1);}class Po{}class No{}const jo={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let Do=(()=>{class t{constructor(t,e){this._compiler=t,this._config=e||jo;}load(t){return this.loadAndCompile(t)}loadAndCompile(t){let[e,r]=t.split("#");return void 0===r&&(r="default"),n("HCt/")(e).then(t=>t[r]).then(t=>Fo(t,e,r)).then(t=>this._compiler.compileModuleAsync(t))}loadFactory(t){let[e,r]=t.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n("HCt/")(this._config.factoryPathPrefix+e+this._config.factoryPathSuffix).then(t=>t[r+s]).then(t=>Fo(t,e,r))}}return t.\u0275fac=function(e){return new(e||t)(Ln(io),Ln(No,8))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();function Fo(t,e,n){if(!t)throw new Error(`Cannot find '${n}' in '${e}'`);return t}const Mo=xo(null,"core",[{provide:Wi,useValue:"unknown"},{provide:Ao,deps:[Cs]},{provide:yo,deps:[]},{provide:Gi,deps:[]}]),Uo=[{provide:Oo,useClass:Oo,deps:[lo,Gi,Cs,zn,Zs,Vi]},{provide:ji,deps:[lo],useFactory:function(t){let e=[];return t.onStable.subscribe(()=>{for(;e.length;)e.pop()();}),function(t){e.push(t);}}},{provide:Vi,useClass:Vi,deps:[[new In,$i]]},{provide:io,useClass:io,deps:[]},zi,{provide:pi,useFactory:function(){return bi},deps:[]},{provide:fi,useFactory:function(){return Si},deps:[]},{provide:Ki,useFactory:function(t){return Bs(t=t||"undefined"!=typeof $localize&&$localize.locale||qs),t},deps:[[new An(Ki),new In,new Rn]]},{provide:Yi,useValue:"USD"}];let Lo=(()=>{class t{constructor(t){}}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)(Ln(Oo))},providers:Uo}),t})();class Ho extends h{constructor(t,e){super();}schedule(t,e=0){return this}}class $o extends Ho{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1;}schedule(t,e=0){if(this.closed)return this;this.state=t;const n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this}requestAsyncId(t,e,n=0){return setInterval(t.flush.bind(t,this),n)}recycleAsyncId(t,e,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e);}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null));}_execute(t,e){let n=!1,r=void 0;try{this.work(t);}catch(s){n=!0,r=!!s&&s||new Error(s);}if(n)return this.unsubscribe(),r}_unsubscribe(){const t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null;}}class Vo extends $o{constructor(t,e){super(t,e),this.scheduler=t,this.work=e;}schedule(t,e=0){return e>0?super.schedule(t,e):(this.delay=e,this.state=t,this.scheduler.flush(this),this)}execute(t,e){return e>0||this.closed?super.execute(t,e):this._execute(t,e)}requestAsyncId(t,e,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(t,e,n):t.flush(this)}}let qo=(()=>{class t{constructor(e,n=t.now){this.SchedulerAction=e,this.now=n;}schedule(t,e=0,n){return new this.SchedulerAction(this,t).schedule(n,e)}}return t.now=()=>Date.now(),t})();class zo extends qo{constructor(t,e=qo.now){super(t,()=>zo.delegate&&zo.delegate!==this?zo.delegate.now():e()),this.actions=[],this.active=!1,this.scheduled=void 0;}schedule(t,e=0,n){return zo.delegate&&zo.delegate!==this?zo.delegate.schedule(t,e,n):super.schedule(t,e,n)}flush(t){const{actions:e}=this;if(this.active)return void e.push(t);let n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}}class Bo extends zo{}const Qo=new Bo(Vo),Wo=new _(t=>t.complete());function Zo(t){return t?function(t){return new _(e=>t.schedule(()=>e.complete()))}(t):Wo}function Go(...t){let e=t[t.length-1];return T(e)?(t.pop(),D(t,e)):z(t)}let Ko=(()=>{class t{constructor(t,e,n){this.kind=t,this.value=e,this.error=n,this.hasValue="N"===t;}observe(t){switch(this.kind){case"N":return t.next&&t.next(this.value);case"E":return t.error&&t.error(this.error);case"C":return t.complete&&t.complete()}}do(t,e,n){switch(this.kind){case"N":return t&&t(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}}accept(t,e,n){return t&&"function"==typeof t.next?this.observe(t):this.do(t,e,n)}toObservable(){switch(this.kind){case"N":return Go(this.value);case"E":return t=this.error,new _(e=>e.error(t));case"C":return Zo()}var t;throw new Error("unexpected notification kind value")}static createNext(e){return void 0!==e?new t("N",e):t.undefinedValueNotification}static createError(e){return new t("E",void 0,e)}static createComplete(){return t.completeNotification}}return t.completeNotification=new t("C"),t.undefinedValueNotification=new t("N",void 0),t})();class Yo extends f{constructor(t,e,n=0){super(t),this.scheduler=e,this.delay=n;}static dispatch(t){const{notification:e,destination:n}=t;e.observe(n),this.unsubscribe();}scheduleMessage(t){this.destination.add(this.scheduler.schedule(Yo.dispatch,this.delay,new Jo(t,this.destination)));}_next(t){this.scheduleMessage(Ko.createNext(t));}_error(t){this.scheduleMessage(Ko.createError(t)),this.unsubscribe();}_complete(){this.scheduleMessage(Ko.createComplete()),this.unsubscribe();}}class Jo{constructor(t,e){this.notification=t,this.destination=e;}}class Xo extends E{constructor(t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=t<1?1:t,this._windowTime=e<1?1:e,e===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow;}nextInfiniteTimeWindow(t){if(!this.isStopped){const e=this._events;e.push(t),e.length>this._bufferSize&&e.shift();}super.next(t);}nextTimeWindow(t){this.isStopped||(this._events.push(new ta(this._getNow(),t)),this._trimBufferThenGetEvents()),super.next(t);}_subscribe(t){const e=this._infiniteTimeWindow,n=e?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,s=n.length;let i;if(this.closed)throw new w;if(this.isStopped||this.hasError?i=h.EMPTY:(this.observers.push(t),i=new b(this,t)),r&&t.add(t=new Yo(t,r)),e)for(let o=0;o<s&&!t.closed;o++)t.next(n[o]);else for(let o=0;o<s&&!t.closed;o++)t.next(n[o].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),i}_getNow(){return (this.scheduler||Qo).now()}_trimBufferThenGetEvents(){const t=this._getNow(),e=this._bufferSize,n=this._windowTime,r=this._events,s=r.length;let i=0;for(;i<s&&!(t-r[i].time<n);)i++;return s>e&&(i=Math.max(i,s-e)),i>0&&r.splice(0,i),r}}class ta{constructor(t,e){this.time=t,this.value=e;}}function ea(t,e){return "function"==typeof e?n=>n.pipe(ea((n,r)=>F(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))))):e=>e.lift(new na(t))}class na{constructor(t){this.project=t;}call(t,e){return e.subscribe(new ra(t,this.project))}}class ra extends U{constructor(t,e){super(t),this.project=e,this.index=0;}_next(t){let e;const n=this.index++;try{e=this.project(t,n);}catch(r){return void this.destination.error(r)}this._innerSub(e);}_innerSub(t){const e=this.innerSubscription;e&&e.unsubscribe();const n=new M(this),r=this.destination;r.add(n),this.innerSubscription=L(t,n),this.innerSubscription!==n&&r.add(this.innerSubscription);}_complete(){const{innerSubscription:t}=this;t&&!t.closed||super._complete(),this.unsubscribe();}_unsubscribe(){this.innerSubscription=void 0;}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete();}notifyNext(t){this.destination.next(t);}}const sa={schedule(t,e){const n=setTimeout(t,e);return ()=>clearTimeout(n)},scheduleBeforeRender(t){if("undefined"==typeof window)return sa.schedule(t,0);if(void 0===window.requestAnimationFrame)return sa.schedule(t,16);const e=window.requestAnimationFrame(t);return ()=>window.cancelAnimationFrame(e)}};let ia;function oa(t,e,n){let r=n;return function(t){return !!t&&t.nodeType===Node.ELEMENT_NODE}(t)&&e.some((e,n)=>!("*"===e||!function(t,e){if(!ia){const t=Element.prototype;ia=t.matches||t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector;}return t.nodeType===Node.ELEMENT_NODE&&ia.call(t,e)}(t,e)||(r=n,0))),r}class aa{constructor(t,e){this.componentFactory=e.get(Zs).resolveComponentFactory(t);}create(t){return new la(this.componentFactory,t)}}class la{constructor(t,e){this.componentFactory=t,this.injector=e,this.eventEmitters=new Xo(1),this.events=this.eventEmitters.pipe(ea(t=>B(...t))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:t})=>t)),this.ngZone=this.injector.get(lo),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current);}connect(t){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(t);});}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=sa.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null);},10));});}getInputValue(t){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(t):this.componentRef.instance[t])}setInputValue(t,e){this.runInZone(()=>{var n,r;null!==this.componentRef?((n=e)!==(r=this.getInputValue(t))&&(n==n||r==r)||void 0===e&&this.unchangedInputs.has(t))&&(this.recordInputChange(t,e),this.unchangedInputs.delete(t),this.hasInputChanges=!0,this.componentRef.instance[t]=e,this.scheduleDetectChanges()):this.initialInputValues.set(t,e);});}initializeComponent(t){const e=Cs.create({providers:[],parent:this.injector}),n=function(t,e){const n=t.childNodes,r=e.map(()=>[]);let s=-1;e.some((t,e)=>"*"===t&&(s=e,!0));for(let i=0,o=n.length;i<o;++i){const t=n[i],o=oa(t,e,s);-1!==o&&r[o].push(t);}return r}(t,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(e,n,t),this.viewChangeDetectorRef=this.componentRef.injector.get(vi),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(Oo).attachView(this.componentRef.hostView);}initializeInputs(){this.componentFactory.inputs.forEach(({propName:t})=>{this.initialInputValues.has(t)&&this.setInputValue(t,this.initialInputValues.get(t));}),this.initialInputValues.clear();}initializeOutputs(t){const e=this.componentFactory.outputs.map(({propName:e,templateName:n})=>t.instance[e].pipe(x(t=>({name:n,value:t}))));this.eventEmitters.next(e);}callNgOnChanges(t){if(!this.implementsOnChanges||null===this.inputChanges)return;const e=this.inputChanges;this.inputChanges=null,t.instance.ngOnChanges(e);}markViewForCheck(t){this.hasInputChanges&&(this.hasInputChanges=!1,t.markForCheck());}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=sa.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges();}));}recordInputChange(t,e){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[t];if(n)return void(n.currentValue=e);const r=this.unchangedInputs.has(t),s=r?void 0:this.getInputValue(t);this.inputChanges[t]=new re(s,e,r);}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges());}runInZone(t){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(t):t()}}class ca extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null;}}new ei("11.0.5");const ua=new zo($o);class ha{constructor(t,e){this.dueTime=t,this.scheduler=e;}call(t,e){return e.subscribe(new da(t,this.dueTime,this.scheduler))}}class da extends f{constructor(t,e,n){super(t),this.dueTime=e,this.scheduler=n,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1;}_next(t){this.clearDebounce(),this.lastValue=t,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(pa,this.dueTime,this));}_complete(){this.debouncedNext(),this.destination.complete();}debouncedNext(){if(this.clearDebounce(),this.hasValue){const{lastValue:t}=this;this.lastValue=null,this.hasValue=!1,this.destination.next(t);}}clearDebounce(){const t=this.debouncedSubscription;null!==t&&(this.remove(t),t.unsubscribe(),this.debouncedSubscription=null);}}function pa(t){t.debouncedNext();}let fa=(()=>{class t{create(t){return "undefined"==typeof MutationObserver?null:new MutationObserver(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({factory:function(){return new t},token:t,providedIn:"root"}),t})(),ma=(()=>{class t{constructor(t){this._mutationObserverFactory=t,this._observedElements=new Map;}ngOnDestroy(){this._observedElements.forEach((t,e)=>this._cleanupObserver(e));}observe(t){const e=function(t){return t instanceof Js?t.nativeElement:t}(t);return new _(t=>{const n=this._observeElement(e).subscribe(t);return ()=>{n.unsubscribe(),this._unobserveElement(e);}})}_observeElement(t){if(this._observedElements.has(t))this._observedElements.get(t).count++;else {const e=new E,n=this._mutationObserverFactory.create(t=>e.next(t));n&&n.observe(t,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(t,{observer:n,stream:e,count:1});}return this._observedElements.get(t).stream}_unobserveElement(t){this._observedElements.has(t)&&(this._observedElements.get(t).count--,this._observedElements.get(t).count||this._cleanupObserver(t));}_cleanupObserver(t){if(this._observedElements.has(t)){const{observer:e,stream:n}=this._observedElements.get(t);e&&e.disconnect(),n.complete(),this._observedElements.delete(t);}}}return t.\u0275fac=function(e){return new(e||t)(Ln(fa))},t.\u0275prov=it({factory:function(){return new t(Ln(fa))},token:t,providedIn:"root"}),t})(),ga=(()=>{class t{constructor(t,e,n){this._contentObserver=t,this._elementRef=e,this._ngZone=n,this.event=new Hi,this._disabled=!1,this._currentSubscription=null;}get disabled(){return this._disabled}set disabled(t){this._disabled=function(t){return null!=t&&""+t!="false"}(t),this._disabled?this._unsubscribe():this._subscribe();}get debounce(){return this._debounce}set debounce(t){this._debounce=function(t,e=0){return function(t){return !isNaN(parseFloat(t))&&!isNaN(Number(t))}(t)?Number(t):e}(t),this._subscribe();}ngAfterContentInit(){this._currentSubscription||this.disabled||this._subscribe();}ngOnDestroy(){this._unsubscribe();}_subscribe(){this._unsubscribe();const t=this._contentObserver.observe(this._elementRef);this._ngZone.runOutsideAngular(()=>{this._currentSubscription=(this.debounce?t.pipe(function(t,e=ua){return n=>n.lift(new ha(t,e))}(this.debounce)):t).subscribe(this.event);});}_unsubscribe(){var t;null===(t=this._currentSubscription)||void 0===t||t.unsubscribe();}}return t.\u0275fac=function(e){return new(e||t)(Os(ma),Os(Js),Os(lo))},t.\u0275dir=Vt({type:t,selectors:[["","cdkObserveContent",""]],inputs:{disabled:["cdkObserveContentDisabled","disabled"],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"]}),t})(),ya=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},providers:[fa]}),t})(),_a=null;function va(){return _a}const wa=new Sn("DocumentToken");let ba=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({factory:Sa,token:t,providedIn:"platform"}),t})();function Sa(){return Ln(Ca)}const Ea=new Sn("Location Initialized");let Ca=(()=>{class t extends ba{constructor(t){super(),this._doc=t,this._init();}_init(){this.location=va().getLocation(),this._history=va().getHistory();}getBaseHrefFromDOM(){return va().getBaseHref(this._doc)}onPopState(t){va().getGlobalEventTarget(this._doc,"window").addEventListener("popstate",t,!1);}onHashChange(t){va().getGlobalEventTarget(this._doc,"window").addEventListener("hashchange",t,!1);}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(t){this.location.pathname=t;}pushState(t,e,n){Ta()?this._history.pushState(t,e,n):this.location.hash=n;}replaceState(t,e,n){Ta()?this._history.replaceState(t,e,n):this.location.hash=n;}forward(){this._history.forward();}back(){this._history.back();}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(Ln(wa))},t.\u0275prov=it({factory:xa,token:t,providedIn:"platform"}),t})();function Ta(){return !!window.history.pushState}function xa(){return new Ca(Ln(wa))}function ka(t,e){if(0==t.length)return e;if(0==e.length)return t;let n=0;return t.endsWith("/")&&n++,e.startsWith("/")&&n++,2==n?t+e.substring(1):1==n?t+e:t+"/"+e}function Aa(t){const e=t.match(/#|\?|$/),n=e&&e.index||t.length;return t.slice(0,n-("/"===t[n-1]?1:0))+t.slice(n)}function Ia(t){return t&&"?"!==t[0]?"?"+t:t}let Oa=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({factory:Ra,token:t,providedIn:"root"}),t})();function Ra(t){const e=Ln(wa).location;return new Na(Ln(ba),e&&e.origin||"")}const Pa=new Sn("appBaseHref");let Na=(()=>{class t extends Oa{constructor(t,e){if(super(),this._platformLocation=t,null==e&&(e=this._platformLocation.getBaseHrefFromDOM()),null==e)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=e;}onPopState(t){this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t);}getBaseHref(){return this._baseHref}prepareExternalUrl(t){return ka(this._baseHref,t)}path(t=!1){const e=this._platformLocation.pathname+Ia(this._platformLocation.search),n=this._platformLocation.hash;return n&&t?`${e}${n}`:e}pushState(t,e,n,r){const s=this.prepareExternalUrl(n+Ia(r));this._platformLocation.pushState(t,e,s);}replaceState(t,e,n,r){const s=this.prepareExternalUrl(n+Ia(r));this._platformLocation.replaceState(t,e,s);}forward(){this._platformLocation.forward();}back(){this._platformLocation.back();}}return t.\u0275fac=function(e){return new(e||t)(Ln(ba),Ln(Pa,8))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),ja=(()=>{class t extends Oa{constructor(t,e){super(),this._platformLocation=t,this._baseHref="",null!=e&&(this._baseHref=e);}onPopState(t){this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t);}getBaseHref(){return this._baseHref}path(t=!1){let e=this._platformLocation.hash;return null==e&&(e="#"),e.length>0?e.substring(1):e}prepareExternalUrl(t){const e=ka(this._baseHref,t);return e.length>0?"#"+e:e}pushState(t,e,n,r){let s=this.prepareExternalUrl(n+Ia(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(t,e,s);}replaceState(t,e,n,r){let s=this.prepareExternalUrl(n+Ia(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(t,e,s);}forward(){this._platformLocation.forward();}back(){this._platformLocation.back();}}return t.\u0275fac=function(e){return new(e||t)(Ln(ba),Ln(Pa,8))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),Da=(()=>{class t{constructor(t,e){this._subject=new Hi,this._urlChangeListeners=[],this._platformStrategy=t;const n=this._platformStrategy.getBaseHref();this._platformLocation=e,this._baseHref=Aa(Ma(n)),this._platformStrategy.onPopState(t=>{this._subject.emit({url:this.path(!0),pop:!0,state:t.state,type:t.type});});}path(t=!1){return this.normalize(this._platformStrategy.path(t))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(t,e=""){return this.path()==this.normalize(t+Ia(e))}normalize(e){return t.stripTrailingSlash(function(t,e){return t&&e.startsWith(t)?e.substring(t.length):e}(this._baseHref,Ma(e)))}prepareExternalUrl(t){return t&&"/"!==t[0]&&(t="/"+t),this._platformStrategy.prepareExternalUrl(t)}go(t,e="",n=null){this._platformStrategy.pushState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Ia(e)),n);}replaceState(t,e="",n=null){this._platformStrategy.replaceState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Ia(e)),n);}forward(){this._platformStrategy.forward();}back(){this._platformStrategy.back();}onUrlChange(t){this._urlChangeListeners.push(t),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(t=>{this._notifyUrlChangeListeners(t.url,t.state);}));}_notifyUrlChangeListeners(t="",e){this._urlChangeListeners.forEach(n=>n(t,e));}subscribe(t,e,n){return this._subject.subscribe({next:t,error:e,complete:n})}}return t.\u0275fac=function(e){return new(e||t)(Ln(Oa),Ln(ba))},t.normalizeQueryParams=Ia,t.joinWithSlash=ka,t.stripTrailingSlash=Aa,t.\u0275prov=it({factory:Fa,token:t,providedIn:"root"}),t})();function Fa(){return new Da(Ln(Oa),Ln(ba))}function Ma(t){return t.replace(/\/index.html$/,"")}var Ua=function(t){return t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.Two=2]="Two",t[t.Few=3]="Few",t[t.Many=4]="Many",t[t.Other=5]="Other",t}({});class La{}let Ha=(()=>{class t extends La{constructor(t){super(),this.locale=t;}getPluralCategory(t,e){switch(function(t){return function(t){const e=function(t){return t.toLowerCase().replace(/_/g,"-")}(t);let n=$s(e);if(n)return n;const r=e.split("-")[0];if(n=$s(r),n)return n;if("en"===r)return Ls;throw new Error(`Missing locale data for the locale "${t}".`)}(t)[Vs.PluralCase]}(e||this.locale)(t)){case Ua.Zero:return "zero";case Ua.One:return "one";case Ua.Two:return "two";case Ua.Few:return "few";case Ua.Many:return "many";default:return "other"}}}return t.\u0275fac=function(e){return new(e||t)(Ln(Ki))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),$a=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},providers:[{provide:La,useClass:Ha}]}),t})(),Va=(()=>{class t{}return t.\u0275prov=it({token:t,providedIn:"root",factory:()=>new qa(Ln(wa),window,Ln(zn))}),t})();class qa{constructor(t,e,n){this.document=t,this.window=e,this.errorHandler=n,this.offset=()=>[0,0];}setOffset(t){this.offset=Array.isArray(t)?()=>t:t;}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1]);}scrollToAnchor(t){if(this.supportsScrolling()){const e=this.document.getElementById(t)||this.document.getElementsByName(t)[0];e&&this.scrollToElement(e);}}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t);}}scrollToElement(t){const e=t.getBoundingClientRect(),n=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1]);}supportScrollRestoration(){try{if(!this.supportsScrolling())return !1;const t=za(this.window.history)||za(Object.getPrototypeOf(this.window.history));return !(!t||!t.writable&&!t.set)}catch(t){return !1}}supportsScrolling(){try{return !!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(t){return !1}}}function za(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class Ba extends class extends class{}{constructor(){super();}supportsDOMEvents(){return !0}}{static makeCurrent(){var t;t=new Ba,_a||(_a=t);}getProperty(t,e){return t[e]}log(t){window.console&&window.console.log&&window.console.log(t);}logGroup(t){window.console&&window.console.group&&window.console.group(t);}logGroupEnd(){window.console&&window.console.groupEnd&&window.console.groupEnd();}onAndCancel(t,e,n){return t.addEventListener(e,n,!1),()=>{t.removeEventListener(e,n,!1);}}dispatchEvent(t,e){t.dispatchEvent(e);}remove(t){return t.parentNode&&t.parentNode.removeChild(t),t}getValue(t){return t.value}createElement(t,e){return (e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return "window"===e?window:"document"===e?t:"body"===e?t.body:null}getHistory(){return window.history}getLocation(){return window.location}getBaseHref(t){const e=Wa||(Wa=document.querySelector("base"),Wa)?Wa.getAttribute("href"):null;return null==e?null:(n=e,Qa||(Qa=document.createElement("a")),Qa.setAttribute("href",n),"/"===Qa.pathname.charAt(0)?Qa.pathname:"/"+Qa.pathname);var n;}resetBaseElement(){Wa=null;}getUserAgent(){return window.navigator.userAgent}performanceNow(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()}supportsCookies(){return !0}getCookie(t){return function(t,e){e=encodeURIComponent(e);for(const n of t.split(";")){const t=n.indexOf("="),[r,s]=-1==t?[n,""]:[n.slice(0,t),n.slice(t+1)];if(r.trim()===e)return decodeURIComponent(s)}return null}(document.cookie,t)}}let Qa,Wa=null;const Za=new Sn("TRANSITION_ID"),Ga=[{provide:$i,useFactory:function(t,e,n){return ()=>{n.get(Vi).donePromise.then(()=>{const n=va();Array.prototype.slice.apply(e.querySelectorAll("style[ng-transition]")).filter(e=>e.getAttribute("ng-transition")===t).forEach(t=>n.remove(t));});}},deps:[Za,wa,Cs],multi:!0}];class Ka{static init(){var t;t=new Ka,wo=t;}addToWindow(t){Tt.getAngularTestability=(e,n=!0)=>{const r=t.findTestabilityInTree(e,n);if(null==r)throw new Error("Could not find testability for element.");return r},Tt.getAllAngularTestabilities=()=>t.getAllTestabilities(),Tt.getAllAngularRootElements=()=>t.getAllRootElements(),Tt.frameworkStabilizers||(Tt.frameworkStabilizers=[]),Tt.frameworkStabilizers.push(t=>{const e=Tt.getAllAngularTestabilities();let n=e.length,r=!1;const s=function(e){r=r||e,n--,0==n&&t(r);};e.forEach(function(t){t.whenStable(s);});});}findTestabilityInTree(t,e,n){if(null==e)return null;const r=t.getTestability(e);return null!=r?r:n?va().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null}}const Ya=new Sn("EventManagerPlugins");let Ja=(()=>{class t{constructor(t,e){this._zone=e,this._eventNameToPlugin=new Map,t.forEach(t=>t.manager=this),this._plugins=t.slice().reverse();}addEventListener(t,e,n){return this._findPluginFor(e).addEventListener(t,e,n)}addGlobalEventListener(t,e,n){return this._findPluginFor(e).addGlobalEventListener(t,e,n)}getZone(){return this._zone}_findPluginFor(t){const e=this._eventNameToPlugin.get(t);if(e)return e;const n=this._plugins;for(let r=0;r<n.length;r++){const e=n[r];if(e.supports(t))return this._eventNameToPlugin.set(t,e),e}throw new Error("No event manager plugin found for event "+t)}}return t.\u0275fac=function(e){return new(e||t)(Ln(Ya),Ln(lo))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();class Xa{constructor(t){this._doc=t;}addGlobalEventListener(t,e,n){const r=va().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,n)}}let tl=(()=>{class t{constructor(){this._stylesSet=new Set;}addStyles(t){const e=new Set;t.forEach(t=>{this._stylesSet.has(t)||(this._stylesSet.add(t),e.add(t));}),this.onStylesAdded(e);}onStylesAdded(t){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),el=(()=>{class t extends tl{constructor(t){super(),this._doc=t,this._hostNodes=new Set,this._styleNodes=new Set,this._hostNodes.add(t.head);}_addStylesToHost(t,e){t.forEach(t=>{const n=this._doc.createElement("style");n.textContent=t,this._styleNodes.add(e.appendChild(n));});}addHost(t){this._addStylesToHost(this._stylesSet,t),this._hostNodes.add(t);}removeHost(t){this._hostNodes.delete(t);}onStylesAdded(t){this._hostNodes.forEach(e=>this._addStylesToHost(t,e));}ngOnDestroy(){this._styleNodes.forEach(t=>va().remove(t));}}return t.\u0275fac=function(e){return new(e||t)(Ln(wa))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const nl={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},rl=/%COMP%/g;function sl(t,e,n){for(let r=0;r<e.length;r++){let s=e[r];Array.isArray(s)?sl(t,s,n):(s=s.replace(rl,t),n.push(s));}return n}function il(t){return e=>{if("__ngUnwrap__"===e)return t;!1===t(e)&&(e.preventDefault(),e.returnValue=!1);}}let ol=(()=>{class t{constructor(t,e,n){this.eventManager=t,this.sharedStylesHost=e,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new al(t);}createRenderer(t,e){if(!t||!e)return this.defaultRenderer;switch(e.encapsulation){case wt.Emulated:{let n=this.rendererByCompId.get(e.id);return n||(n=new ll(this.eventManager,this.sharedStylesHost,e,this.appId),this.rendererByCompId.set(e.id,n)),n.applyToHost(t),n}case 1:case wt.ShadowDom:return new cl(this.eventManager,this.sharedStylesHost,t,e);default:if(!this.rendererByCompId.has(e.id)){const t=sl(e.id,e.styles,[]);this.sharedStylesHost.addStyles(t),this.rendererByCompId.set(e.id,this.defaultRenderer);}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(Ln(Ja),Ln(el),Ln(qi))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();class al{constructor(t){this.eventManager=t,this.data=Object.create(null);}destroy(){}createElement(t,e){return e?document.createElementNS(nl[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){t.appendChild(e);}insertBefore(t,e,n){t&&t.insertBefore(e,n);}removeChild(t,e){t&&t.removeChild(e);}selectRootElement(t,e){let n="string"==typeof t?document.querySelector(t):t;if(!n)throw new Error(`The selector "${t}" did not match any elements`);return e||(n.textContent=""),n}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,n,r){if(r){e=r+":"+e;const s=nl[r];s?t.setAttributeNS(s,e,n):t.setAttribute(e,n);}else t.setAttribute(e,n);}removeAttribute(t,e,n){if(n){const r=nl[n];r?t.removeAttributeNS(r,e):t.removeAttribute(`${n}:${e}`);}else t.removeAttribute(e);}addClass(t,e){t.classList.add(e);}removeClass(t,e){t.classList.remove(e);}setStyle(t,e,n,r){r&(Zn.DashCase|Zn.Important)?t.style.setProperty(e,n,r&Zn.Important?"important":""):t.style[e]=n;}removeStyle(t,e,n){n&Zn.DashCase?t.style.removeProperty(e):t.style[e]="";}setProperty(t,e,n){t[e]=n;}setValue(t,e){t.nodeValue=e;}listen(t,e,n){return "string"==typeof t?this.eventManager.addGlobalEventListener(t,e,il(n)):this.eventManager.addEventListener(t,e,il(n))}}class ll extends al{constructor(t,e,n,r){super(t),this.component=n;const s=sl(r+"-"+n.id,n.styles,[]);e.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(rl,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(rl,r+"-"+n.id);}applyToHost(t){super.setAttribute(t,this.hostAttr,"");}createElement(t,e){const n=super.createElement(t,e);return super.setAttribute(n,this.contentAttr,""),n}}class cl extends al{constructor(t,e,n,r){super(t),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=sl(r.id,r.styles,[]);for(let i=0;i<s.length;i++){const t=document.createElement("style");t.textContent=s[i],this.shadowRoot.appendChild(t);}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot);}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,n){return super.insertBefore(this.nodeOrShadowRoot(t),e,n)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let ul=(()=>{class t extends Xa{constructor(t){super(t);}supports(t){return !0}addEventListener(t,e,n){return t.addEventListener(e,n,!1),()=>this.removeEventListener(t,e,n)}removeEventListener(t,e,n){return t.removeEventListener(e,n)}}return t.\u0275fac=function(e){return new(e||t)(Ln(wa))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const hl=["alt","control","meta","shift"],dl={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},pl={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},fl={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let ml=(()=>{class t extends Xa{constructor(t){super(t);}supports(e){return null!=t.parseEventName(e)}addEventListener(e,n,r){const s=t.parseEventName(n),i=t.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>va().onAndCancel(e,s.domEventName,i))}static parseEventName(e){const n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=t._normalizeKey(n.pop());let i="";if(hl.forEach(t=>{const e=n.indexOf(t);e>-1&&(n.splice(e,1),i+=t+".");}),i+=s,0!=n.length||0===s.length)return null;const o={};return o.domEventName=r,o.fullKey=i,o}static getEventFullKey(t){let e="",n=function(t){let e=t.key;if(null==e){if(e=t.keyIdentifier,null==e)return "Unidentified";e.startsWith("U+")&&(e=String.fromCharCode(parseInt(e.substring(2),16)),3===t.location&&pl.hasOwnProperty(e)&&(e=pl[e]));}return dl[e]||e}(t);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),hl.forEach(r=>{r!=n&&(0, fl[r])(t)&&(e+=r+".");}),e+=n,e}static eventCallback(e,n,r){return s=>{t.getEventFullKey(s)===e&&r.runGuarded(()=>n(s));}}static _normalizeKey(t){switch(t){case"esc":return "escape";default:return t}}}return t.\u0275fac=function(e){return new(e||t)(Ln(wa))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const gl=xo(Mo,"browser",[{provide:Wi,useValue:"browser"},{provide:Qi,useValue:function(){Ba.makeCurrent(),Ka.init();},multi:!0},{provide:wa,useFactory:function(){return function(t){ae=t;}(document),document},deps:[]}]),yl=[[],{provide:hs,useValue:"root"},{provide:zn,useFactory:function(){return new zn},deps:[]},{provide:Ya,useClass:ul,multi:!0,deps:[wa,lo,Wi]},{provide:Ya,useClass:ml,multi:!0,deps:[wa]},[],{provide:ol,useClass:ol,deps:[Ja,el,qi]},{provide:Xs,useExisting:ol},{provide:tl,useExisting:el},{provide:el,useClass:el,deps:[wa]},{provide:go,useClass:go,deps:[lo]},{provide:Ja,useClass:Ja,deps:[Ya,lo]},[]];let _l=(()=>{class t{constructor(t){if(t)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return {ngModule:t,providers:[{provide:qi,useValue:e.appId},{provide:Za,useExisting:qi},Ga]}}}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)(Ln(t,12))},providers:yl,imports:[$a,Lo]}),t})();class vl extends E{constructor(t){super(),this._value=t;}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return e&&!e.closed&&t.next(this._value),e}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new w;return this._value}next(t){super.next(this._value=t);}}class wl extends f{notifyNext(t,e,n,r,s){this.destination.next(e);}notifyError(t,e){this.destination.error(t);}notifyComplete(t){this.destination.complete();}}class bl extends f{constructor(t,e,n){super(),this.parent=t,this.outerValue=e,this.outerIndex=n,this.index=0;}_next(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this);}_error(t){this.parent.notifyError(t,this),this.unsubscribe();}_complete(){this.parent.notifyComplete(this),this.unsubscribe();}}function Sl(t,e,n,r,s=new bl(t,n,r)){if(!s.closed)return e instanceof _?e.subscribe(s):j(e)(s)}const El={};class Cl{constructor(t){this.resultSelector=t;}call(t,e){return e.subscribe(new Tl(t,this.resultSelector))}}class Tl extends wl{constructor(t,e){super(t),this.resultSelector=e,this.active=0,this.values=[],this.observables=[];}_next(t){this.values.push(El),this.observables.push(t);}_complete(){const t=this.observables,e=t.length;if(0===e)this.destination.complete();else {this.active=e,this.toRespond=e;for(let n=0;n<e;n++)this.add(Sl(this,t[n],void 0,n));}}notifyComplete(t){0==(this.active-=1)&&this.destination.complete();}notifyNext(t,e,n){const r=this.values,s=this.toRespond?r[n]===El?--this.toRespond:this.toRespond:0;r[n]=e,0===s&&(this.resultSelector?this._tryResultSelector(r):this.destination.next(r.slice()));}_tryResultSelector(t){let e;try{e=this.resultSelector.apply(this,t);}catch(n){return void this.destination.error(n)}this.destination.next(e);}}const xl=(()=>{function t(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return t.prototype=Object.create(Error.prototype),t})();function kl(t){return new _(e=>{let n;try{n=t();}catch(r){return void e.error(r)}return (n?F(n):Zo()).subscribe(e)})}function Al(){return q(1)}function Il(t,e){return function(n){return n.lift(new Ol(t,e))}}class Ol{constructor(t,e){this.predicate=t,this.thisArg=e;}call(t,e){return e.subscribe(new Rl(t,this.predicate,this.thisArg))}}class Rl extends f{constructor(t,e,n){super(t),this.predicate=e,this.thisArg=n,this.count=0;}_next(t){let e;try{e=this.predicate.call(this.thisArg,t,this.count++);}catch(n){return void this.destination.error(n)}e&&this.destination.next(t);}}const Pl=(()=>{function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t})();function Nl(t){return function(e){return 0===t?Zo():e.lift(new jl(t))}}class jl{constructor(t){if(this.total=t,this.total<0)throw new Pl}call(t,e){return e.subscribe(new Dl(t,this.total))}}class Dl extends f{constructor(t,e){super(t),this.total=e,this.ring=new Array,this.count=0;}_next(t){const e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t;}_complete(){const t=this.destination;let e=this.count;if(e>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=e++%n;t.next(r[s]);}}t.complete();}}function Fl(t=Ll){return e=>e.lift(new Ml(t))}class Ml{constructor(t){this.errorFactory=t;}call(t,e){return e.subscribe(new Ul(t,this.errorFactory))}}class Ul extends f{constructor(t,e){super(t),this.errorFactory=e,this.hasValue=!1;}_next(t){this.hasValue=!0,this.destination.next(t);}_complete(){if(this.hasValue)return this.destination.complete();{let e;try{e=this.errorFactory();}catch(t){e=t;}this.destination.error(e);}}}function Ll(){return new xl}function Hl(t=null){return e=>e.lift(new $l(t))}class $l{constructor(t){this.defaultValue=t;}call(t,e){return e.subscribe(new Vl(t,this.defaultValue))}}class Vl extends f{constructor(t,e){super(t),this.defaultValue=e,this.isEmpty=!0;}_next(t){this.isEmpty=!1,this.destination.next(t);}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete();}}function ql(t){return e=>0===t?Zo():e.lift(new zl(t))}class zl{constructor(t){if(this.total=t,this.total<0)throw new Pl}call(t,e){return e.subscribe(new Bl(t,this.total))}}class Bl extends f{constructor(t,e){super(t),this.total=e,this.count=0;}_next(t){const e=this.total,n=++this.count;n<=e&&(this.destination.next(t),n===e&&(this.destination.complete(),this.unsubscribe()));}}function Ql(...t){return Al()(Go(...t))}class Wl{constructor(t,e,n=!1){this.accumulator=t,this.seed=e,this.hasSeed=n;}call(t,e){return e.subscribe(new Zl(t,this.accumulator,this.seed,this.hasSeed))}}class Zl extends f{constructor(t,e,n,r){super(t),this.accumulator=e,this._seed=n,this.hasSeed=r,this.index=0;}get seed(){return this._seed}set seed(t){this.hasSeed=!0,this._seed=t;}_next(t){if(this.hasSeed)return this._tryNext(t);this.seed=t,this.destination.next(t);}_tryNext(t){const e=this.index++;let n;try{n=this.accumulator(this.seed,t,e);}catch(r){this.destination.error(r);}this.seed=n,this.destination.next(n);}}function Gl(t){return function(e){const n=new Kl(t),r=e.lift(n);return n.caught=r}}class Kl{constructor(t){this.selector=t;}call(t,e){return e.subscribe(new Yl(t,this.selector,this.caught))}}class Yl extends U{constructor(t,e,n){super(t),this.selector=e,this.caught=n;}error(t){if(!this.isStopped){let n;try{n=this.selector(t,this.caught);}catch(e){return void super.error(e)}this._unsubscribeAndRecycle();const r=new M(this);this.add(r);const s=L(n,r);s!==r&&this.add(s);}}}function Jl(t,e){return H(t,e,1)}function Xl(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Il((e,n)=>t(e,n,r)):y,ql(1),n?Hl(e):Fl(()=>new xl))}function tc(){}function ec(t,e,n){return function(r){return r.lift(new nc(t,e,n))}}class nc{constructor(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n;}call(t,e){return e.subscribe(new rc(t,this.nextOrObserver,this.error,this.complete))}}class rc extends f{constructor(t,e,n,s){super(t),this._tapNext=tc,this._tapError=tc,this._tapComplete=tc,this._tapError=n||tc,this._tapComplete=s||tc,r(e)?(this._context=this,this._tapNext=e):e&&(this._context=e,this._tapNext=e.next||tc,this._tapError=e.error||tc,this._tapComplete=e.complete||tc);}_next(t){try{this._tapNext.call(this._context,t);}catch(e){return void this.destination.error(e)}this.destination.next(t);}_error(t){try{this._tapError.call(this._context,t);}catch(t){return void this.destination.error(t)}this.destination.error(t);}_complete(){try{this._tapComplete.call(this._context);}catch(t){return void this.destination.error(t)}return this.destination.complete()}}class sc{constructor(t){this.callback=t;}call(t,e){return e.subscribe(new ic(t,this.callback))}}class ic extends f{constructor(t,e){super(t),this.add(new h(e));}}class oc{constructor(t,e){this.id=t,this.url=e;}}class ac extends oc{constructor(t,e,n="imperative",r=null){super(t,e),this.navigationTrigger=n,this.restoredState=r;}toString(){return `NavigationStart(id: ${this.id}, url: '${this.url}')`}}class lc extends oc{constructor(t,e,n){super(t,e),this.urlAfterRedirects=n;}toString(){return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class cc extends oc{constructor(t,e,n){super(t,e),this.reason=n;}toString(){return `NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class uc extends oc{constructor(t,e,n){super(t,e),this.error=n;}toString(){return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class hc extends oc{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r;}toString(){return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class dc extends oc{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r;}toString(){return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class pc extends oc{constructor(t,e,n,r,s){super(t,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s;}toString(){return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class fc extends oc{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r;}toString(){return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class mc extends oc{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r;}toString(){return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class gc{constructor(t){this.route=t;}toString(){return `RouteConfigLoadStart(path: ${this.route.path})`}}class yc{constructor(t){this.route=t;}toString(){return `RouteConfigLoadEnd(path: ${this.route.path})`}}class _c{constructor(t){this.snapshot=t;}toString(){return `ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class vc{constructor(t){this.snapshot=t;}toString(){return `ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class wc{constructor(t){this.snapshot=t;}toString(){return `ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class bc{constructor(t){this.snapshot=t;}toString(){return `ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Sc{constructor(t,e,n){this.routerEvent=t,this.position=e,this.anchor=n;}toString(){return `Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const Ec="primary";class Cc{constructor(t){this.params=t||{};}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return []}get keys(){return Object.keys(this.params)}}function Tc(t){return new Cc(t)}function xc(t){const e=Error("NavigationCancelingError: "+t);return e.ngNavigationCancelingError=!0,e}function kc(t,e,n){const r=n.path.split("/");if(r.length>t.length)return null;if("full"===n.pathMatch&&(e.hasChildren()||r.length<t.length))return null;const s={};for(let i=0;i<r.length;i++){const e=r[i],n=t[i];if(e.startsWith(":"))s[e.substring(1)]=n;else if(e!==n.path)return null}return {consumed:t.slice(0,r.length),posParams:s}}function Ac(t,e){const n=Object.keys(t),r=Object.keys(e);if(!n||!r||n.length!=r.length)return !1;let s;for(let i=0;i<n.length;i++)if(s=n[i],!Ic(t[s],e[s]))return !1;return !0}function Ic(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return !1;const n=[...t].sort(),r=[...e].sort();return n.every((t,e)=>r[e]===t)}return t===e}function Oc(t){return Array.prototype.concat.apply([],t)}function Rc(t){return t.length>0?t[t.length-1]:null}function Pc(t,e){for(const n in t)t.hasOwnProperty(n)&&e(t[n],n);}function Nc(t){return (e=t)&&"function"==typeof e.subscribe?t:js(t)?F(Promise.resolve(t)):Go(t);var e;}function jc(t,e,n){return n?function(t,e){return Ac(t,e)}(t.queryParams,e.queryParams)&&Dc(t.root,e.root):function(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(n=>Ic(t[n],e[n]))}(t.queryParams,e.queryParams)&&Fc(t.root,e.root)}function Dc(t,e){if(!$c(t.segments,e.segments))return !1;if(t.numberOfChildren!==e.numberOfChildren)return !1;for(const n in e.children){if(!t.children[n])return !1;if(!Dc(t.children[n],e.children[n]))return !1}return !0}function Fc(t,e){return Mc(t,e,e.segments)}function Mc(t,e,n){if(t.segments.length>n.length)return !!$c(t.segments.slice(0,n.length),n)&&!e.hasChildren();if(t.segments.length===n.length){if(!$c(t.segments,n))return !1;for(const n in e.children){if(!t.children[n])return !1;if(!Fc(t.children[n],e.children[n]))return !1}return !0}{const r=n.slice(0,t.segments.length),s=n.slice(t.segments.length);return !!$c(t.segments,r)&&!!t.children.primary&&Mc(t.children.primary,e,s)}}class Uc{constructor(t,e,n){this.root=t,this.queryParams=e,this.fragment=n;}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Tc(this.queryParams)),this._queryParamMap}toString(){return Bc.serialize(this)}}class Lc{constructor(t,e){this.segments=t,this.children=e,this.parent=null,Pc(e,(t,e)=>t.parent=this);}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return Qc(this)}}class Hc{constructor(t,e){this.path=t,this.parameters=e;}get parameterMap(){return this._parameterMap||(this._parameterMap=Tc(this.parameters)),this._parameterMap}toString(){return Xc(this)}}function $c(t,e){return t.length===e.length&&t.every((t,n)=>t.path===e[n].path)}function Vc(t,e){let n=[];return Pc(t.children,(t,r)=>{r===Ec&&(n=n.concat(e(t,r)));}),Pc(t.children,(t,r)=>{r!==Ec&&(n=n.concat(e(t,r)));}),n}class qc{}class zc{parse(t){const e=new su(t);return new Uc(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){return `${"/"+Wc(t.root,!0)}${function(t){const e=Object.keys(t).map(e=>{const n=t[e];return Array.isArray(n)?n.map(t=>`${Gc(e)}=${Gc(t)}`).join("&"):`${Gc(e)}=${Gc(n)}`});return e.length?"?"+e.join("&"):""}(t.queryParams)}${"string"==typeof t.fragment?"#"+encodeURI(t.fragment):""}`}}const Bc=new zc;function Qc(t){return t.segments.map(t=>Xc(t)).join("/")}function Wc(t,e){if(!t.hasChildren())return Qc(t);if(e){const e=t.children.primary?Wc(t.children.primary,!1):"",n=[];return Pc(t.children,(t,e)=>{e!==Ec&&n.push(`${e}:${Wc(t,!1)}`);}),n.length>0?`${e}(${n.join("//")})`:e}{const e=Vc(t,(e,n)=>n===Ec?[Wc(t.children.primary,!1)]:[`${n}:${Wc(e,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children.primary?`${Qc(t)}/${e[0]}`:`${Qc(t)}/(${e.join("//")})`}}function Zc(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function Gc(t){return Zc(t).replace(/%3B/gi,";")}function Kc(t){return Zc(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Yc(t){return decodeURIComponent(t)}function Jc(t){return Yc(t.replace(/\+/g,"%20"))}function Xc(t){return `${Kc(t.path)}${e=t.parameters,Object.keys(e).map(t=>`;${Kc(t)}=${Kc(e[t])}`).join("")}`;var e;}const tu=/^[^\/()?;=#]+/;function eu(t){const e=t.match(tu);return e?e[0]:""}const nu=/^[^=?&#]+/,ru=/^[^?&#]+/;class su{constructor(t){this.url=t,this.remaining=t;}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new Lc([],{}):new Lc([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t);}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return {};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(n.primary=new Lc(t,e)),n}parseSegment(){const t=eu(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(t),new Hc(Yc(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=eu(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=eu(this.remaining);t&&(n=t,this.capture(n));}t[Yc(e)]=Yc(n);}parseQueryParam(t){const e=function(t){const e=t.match(nu);return e?e[0]:""}(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=function(t){const e=t.match(ru);return e?e[0]:""}(this.remaining);t&&(n=t,this.capture(n));}const r=Jc(e),s=Jc(n);if(t.hasOwnProperty(r)){let e=t[r];Array.isArray(e)||(e=[e],t[r]=e),e.push(s);}else t[r]=s;}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=eu(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s=void 0;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):t&&(s=Ec);const i=this.parseChildren();e[s]=1===Object.keys(i).length?i.primary:new Lc([],i),this.consumeOptional("//");}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return !!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new Error(`Expected "${t}".`)}}class iu{constructor(t){this._root=t;}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=ou(t,this._root);return e?e.children.map(t=>t.value):[]}firstChild(t){const e=ou(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=au(t,this._root);return e.length<2?[]:e[e.length-2].children.map(t=>t.value).filter(e=>e!==t)}pathFromRoot(t){return au(t,this._root).map(t=>t.value)}}function ou(t,e){if(t===e.value)return e;for(const n of e.children){const e=ou(t,n);if(e)return e}return null}function au(t,e){if(t===e.value)return [e];for(const n of e.children){const r=au(t,n);if(r.length)return r.unshift(e),r}return []}class lu{constructor(t,e){this.value=t,this.children=e;}toString(){return `TreeNode(${this.value})`}}function cu(t){const e={};return t&&t.children.forEach(t=>e[t.value.outlet]=t),e}class uu extends iu{constructor(t,e){super(t),this.snapshot=e,gu(this,t);}toString(){return this.snapshot.toString()}}function hu(t,e){const n=function(t,e){const n=new fu([],{},{},"",{},Ec,e,null,t.root,-1,{});return new mu("",new lu(n,[]))}(t,e),r=new vl([new Hc("",{})]),s=new vl({}),i=new vl({}),o=new vl({}),a=new vl(""),l=new du(r,s,o,a,i,Ec,e,n.root);return l.snapshot=n.root,new uu(new lu(l,[]),n)}class du{constructor(t,e,n,r,s,i,o,a){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this._futureSnapshot=a;}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(x(t=>Tc(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(x(t=>Tc(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function pu(t,e="emptyOnly"){const n=t.pathFromRoot;let r=0;if("always"!==e)for(r=n.length-1;r>=1;){const t=n[r],e=n[r-1];if(t.routeConfig&&""===t.routeConfig.path)r--;else {if(e.component)break;r--;}}return function(t){return t.reduce((t,e)=>({params:Object.assign(Object.assign({},t.params),e.params),data:Object.assign(Object.assign({},t.data),e.data),resolve:Object.assign(Object.assign({},t.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class fu{constructor(t,e,n,r,s,i,o,a,l,c,u){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this.routeConfig=a,this._urlSegment=l,this._lastPathIndex=c,this._resolve=u;}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Tc(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Tc(this.queryParams)),this._queryParamMap}toString(){return `Route(url:'${this.url.map(t=>t.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class mu extends iu{constructor(t,e){super(e),this.url=t,gu(this,e);}toString(){return yu(this._root)}}function gu(t,e){e.value._routerState=t,e.children.forEach(e=>gu(t,e));}function yu(t){const e=t.children.length>0?` { ${t.children.map(yu).join(", ")} } `:"";return `${t.value}${e}`}function _u(t){if(t.snapshot){const e=t.snapshot,n=t._futureSnapshot;t.snapshot=n,Ac(e.queryParams,n.queryParams)||t.queryParams.next(n.queryParams),e.fragment!==n.fragment&&t.fragment.next(n.fragment),Ac(e.params,n.params)||t.params.next(n.params),function(t,e){if(t.length!==e.length)return !1;for(let n=0;n<t.length;++n)if(!Ac(t[n],e[n]))return !1;return !0}(e.url,n.url)||t.url.next(n.url),Ac(e.data,n.data)||t.data.next(n.data);}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data);}function vu(t,e){var n,r;return Ac(t.params,e.params)&&$c(n=t.url,r=e.url)&&n.every((t,e)=>Ac(t.parameters,r[e].parameters))&&!(!t.parent!=!e.parent)&&(!t.parent||vu(t.parent,e.parent))}function wu(t,e,n){if(n&&t.shouldReuseRoute(e.value,n.value.snapshot)){const r=n.value;r._futureSnapshot=e.value;const s=function(t,e,n){return e.children.map(e=>{for(const r of n.children)if(t.shouldReuseRoute(e.value,r.value.snapshot))return wu(t,e,r);return wu(t,e)})}(t,e,n);return new lu(r,s)}{const n=t.retrieve(e.value);if(n){const t=n.route;return bu(e,t),t}{const n=new du(new vl((r=e.value).url),new vl(r.params),new vl(r.queryParams),new vl(r.fragment),new vl(r.data),r.outlet,r.component,r),s=e.children.map(e=>wu(t,e));return new lu(n,s)}}var r;}function bu(t,e){if(t.value.routeConfig!==e.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==e.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");e.value._futureSnapshot=t.value;for(let n=0;n<t.children.length;++n)bu(t.children[n],e.children[n]);}function Su(t){return "object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function Eu(t){return "object"==typeof t&&null!=t&&t.outlets}function Cu(t,e,n,r,s){let i={};return r&&Pc(r,(t,e)=>{i[e]=Array.isArray(t)?t.map(t=>""+t):""+t;}),new Uc(n.root===t?e:Tu(n.root,t,e),i,s)}function Tu(t,e,n){const r={};return Pc(t.children,(t,s)=>{r[s]=t===e?n:Tu(t,e,n);}),new Lc(t.segments,r)}class xu{constructor(t,e,n){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=n,t&&n.length>0&&Su(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find(Eu);if(r&&r!==Rc(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class ku{constructor(t,e,n){this.segmentGroup=t,this.processChildren=e,this.index=n;}}function Au(t,e,n){if(t||(t=new Lc([],{})),0===t.segments.length&&t.hasChildren())return Iu(t,e,n);const r=function(t,e,n){let r=0,s=e;const i={match:!1,pathIndex:0,commandIndex:0};for(;s<t.segments.length;){if(r>=n.length)return i;const e=t.segments[s],o=n[r];if(Eu(o))break;const a=""+o,l=r<n.length-1?n[r+1]:null;if(s>0&&void 0===a)break;if(a&&l&&"object"==typeof l&&void 0===l.outlets){if(!Nu(a,l,e))return i;r+=2;}else {if(!Nu(a,{},e))return i;r++;}s++;}return {match:!0,pathIndex:s,commandIndex:r}}(t,e,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<t.segments.length){const e=new Lc(t.segments.slice(0,r.pathIndex),{});return e.children.primary=new Lc(t.segments.slice(r.pathIndex),t.children),Iu(e,0,s)}return r.match&&0===s.length?new Lc(t.segments,{}):r.match&&!t.hasChildren()?Ou(t,e,n):r.match?Iu(t,0,s):Ou(t,e,n)}function Iu(t,e,n){if(0===n.length)return new Lc(t.segments,{});{const r=function(t){return Eu(t[0])?t[0].outlets:{[Ec]:t}}(n),s={};return Pc(r,(n,r)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[r]=Au(t.children[r],e,n));}),Pc(t.children,(t,e)=>{void 0===r[e]&&(s[e]=t);}),new Lc(t.segments,s)}}function Ou(t,e,n){const r=t.segments.slice(0,e);let s=0;for(;s<n.length;){const i=n[s];if(Eu(i)){const t=Ru(i.outlets);return new Lc(r,t)}if(0===s&&Su(n[0])){r.push(new Hc(t.segments[e].path,n[0])),s++;continue}const o=Eu(i)?i.outlets.primary:""+i,a=s<n.length-1?n[s+1]:null;o&&a&&Su(a)?(r.push(new Hc(o,Pu(a))),s+=2):(r.push(new Hc(o,{})),s++);}return new Lc(r,{})}function Ru(t){const e={};return Pc(t,(t,n)=>{"string"==typeof t&&(t=[t]),null!==t&&(e[n]=Ou(new Lc([],{}),0,t));}),e}function Pu(t){const e={};return Pc(t,(t,n)=>e[n]=""+t),e}function Nu(t,e,n){return t==n.path&&Ac(e,n.parameters)}class ju{constructor(t,e,n,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=n,this.forwardEvent=r;}activate(t){const e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,t),_u(this.futureState.root),this.activateChildRoutes(e,n,t);}deactivateChildRoutes(t,e,n){const r=cu(e);t.children.forEach(t=>{const e=t.value.outlet;this.deactivateRoutes(t,r[e],n),delete r[e];}),Pc(r,(t,e)=>{this.deactivateRouteAndItsChildren(t,n);});}deactivateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children);}else this.deactivateChildRoutes(t,e,n);else s&&this.deactivateRouteAndItsChildren(e,n);}deactivateRouteAndItsChildren(t,e){this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e);}detachAndStoreRouteSubtree(t,e){const n=e.getContext(t.value.outlet);if(n&&n.outlet){const e=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:e,route:t,contexts:r});}}deactivateRouteAndOutlet(t,e){const n=e.getContext(t.value.outlet);if(n){const r=cu(t),s=t.value.component?n.children:e;Pc(r,(t,e)=>this.deactivateRouteAndItsChildren(t,s)),n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated());}}activateChildRoutes(t,e,n){const r=cu(e);t.children.forEach(t=>{this.activateRoutes(t,r[t.value.outlet],n),this.forwardEvent(new bc(t.value.snapshot));}),t.children.length&&this.forwardEvent(new vc(t.value.snapshot));}activateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(_u(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children);}else this.activateChildRoutes(t,e,n);else if(r.component){const e=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const t=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),e.children.onOutletReAttached(t.contexts),e.attachRef=t.componentRef,e.route=t.route.value,e.outlet&&e.outlet.attach(t.componentRef,t.route.value),Du(t.route);}else {const n=function(t){for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig;if(t&&t.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;e.attachRef=null,e.route=r,e.resolver=s,e.outlet&&e.outlet.activateWith(r,s),this.activateChildRoutes(t,null,e.children);}}else this.activateChildRoutes(t,null,n);}}function Du(t){_u(t.value),t.children.forEach(Du);}class Fu{constructor(t,e){this.routes=t,this.module=e;}}function Mu(t){return "function"==typeof t}function Uu(t){return t instanceof Uc}const Lu=Symbol("INITIAL_VALUE");function Hu(){return ea(t=>function(...t){let e=void 0,n=void 0;return T(t[t.length-1])&&(n=t.pop()),"function"==typeof t[t.length-1]&&(e=t.pop()),1===t.length&&l(t[0])&&(t=t[0]),z(t,n).lift(new Cl(e))}(...t.map(t=>t.pipe(ql(1),function(...t){const e=t[t.length-1];return T(e)?(t.pop(),n=>Ql(t,n,e)):e=>Ql(t,e)}(Lu)))).pipe(function(t,e){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new Wl(t,e,n))}}((t,e)=>{let n=!1;return e.reduce((t,r,s)=>{if(t!==Lu)return t;if(r===Lu&&(n=!0),!n){if(!1===r)return r;if(s===e.length-1||Uu(r))return r}return t},t)},Lu),Il(t=>t!==Lu),x(t=>Uu(t)?t:!0===t),ql(1)))}let $u=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ft({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(t,e){1&t&&(Ps(0,"router-outlet",undefined,undefined),Ns());},directives:function(){return [Rh]},encapsulation:2}),t})();function Vu(t,e=""){for(let n=0;n<t.length;n++){const r=t[n];qu(r,zu(e,r));}}function qu(t,e){t.children&&Vu(t.children,e);}function zu(t,e){return e?t||e.path?t&&!e.path?t+"/":!t&&e.path?e.path:`${t}/${e.path}`:"":t}function Bu(t){const e=t.children&&t.children.map(Bu),n=e?Object.assign(Object.assign({},t),{children:e}):Object.assign({},t);return !n.component&&(e||n.loadChildren)&&n.outlet&&n.outlet!==Ec&&(n.component=$u),n}function Qu(t){return t.outlet||Ec}class Wu{constructor(t){this.segmentGroup=t||null;}}class Zu{constructor(t){this.urlTree=t;}}function Gu(t){return new _(e=>e.error(new Wu(t)))}function Ku(t){return new _(e=>e.error(new Zu(t)))}function Yu(t){return new _(e=>e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)))}class Ju{constructor(t,e,n,r,s){this.configLoader=e,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=t.get(Ei);}apply(){return this.expandSegmentGroup(this.ngModule,this.config,this.urlTree.root,Ec).pipe(x(t=>this.createUrlTree(t,this.urlTree.queryParams,this.urlTree.fragment))).pipe(Gl(t=>{if(t instanceof Zu)return this.allowRedirects=!1,this.match(t.urlTree);if(t instanceof Wu)throw this.noMatchError(t);throw t}))}match(t){return this.expandSegmentGroup(this.ngModule,this.config,t.root,Ec).pipe(x(e=>this.createUrlTree(e,t.queryParams,t.fragment))).pipe(Gl(t=>{if(t instanceof Wu)throw this.noMatchError(t);throw t}))}noMatchError(t){return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`)}createUrlTree(t,e,n){const r=t.segments.length>0?new Lc([],{[Ec]:t}):t;return new Uc(r,e,n)}expandSegmentGroup(t,e,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(t,e,n).pipe(x(t=>new Lc([],t))):this.expandSegment(t,n,e,n.segments,r,!0)}expandChildren(t,e,n){return function(t,e){if(0===Object.keys(t).length)return Go({});const n=[],r=[],s={};return Pc(t,(t,i)=>{const o=e(i,t).pipe(x(t=>s[i]=t));i===Ec?n.push(o):r.push(o);}),Go.apply(null,n.concat(r)).pipe(Al(),function(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Il((e,n)=>t(e,n,r)):y,Nl(1),n?Hl(e):Fl(()=>new xl))}(),x(()=>s))}(n.children,(n,r)=>this.expandSegmentGroup(t,e,r,n))}expandSegment(t,e,n,r,s,i){const o=function(t){return t.reduce((t,e)=>{const n=Qu(e);return t.has(n)?t.get(n).push(e):t.set(n,[e]),t},new Map)}(n);o.has(s)||o.set(s,[]);const a=n=>F(n).pipe(Jl(o=>this.expandSegmentAgainstRoute(t,e,n,o,r,s,i).pipe(Gl(t=>{if(t instanceof Wu)return Go(null);throw t}))),Xl(t=>null!==t),Gl(t=>{if(t instanceof xl||"EmptyError"===t.name){if(this.noLeftoversInUrl(e,r,s))return Go(new Lc([],{}));throw new Wu(e)}throw t}));return F(Array.from(o.entries()).map(([t,e])=>{const n=a(e);return t===s?n:n.pipe(x(()=>null),Gl(()=>Go(null)))})).pipe(t=>t.lift(new Cl(void 0)),Xl(),x(t=>t.find(t=>null!==t)))}noLeftoversInUrl(t,e,n){return 0===e.length&&!t.children[n]}expandSegmentAgainstRoute(t,e,n,r,s,i,o){return Qu(r)!==i&&""!==r.path?Gu(e):void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,s):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i):Gu(e)}expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){return "**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,n,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?Ku(s):this.lineralizeSegments(n,s).pipe(H(n=>{const s=new Lc(n,{});return this.expandSegment(t,s,e,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){const{matched:o,consumedSegments:a,lastChild:l,positionalParamSegments:c}=Xu(e,r,s);if(!o)return Gu(e);const u=this.applyRedirectCommands(a,r.redirectTo,c);return r.redirectTo.startsWith("/")?Ku(u):this.lineralizeSegments(r,u).pipe(H(r=>this.expandSegment(t,e,n,r.concat(s.slice(l)),i,!1)))}matchSegmentAgainstRoute(t,e,n,r){if("**"===n.path)return n.loadChildren?this.configLoader.load(t.injector,n).pipe(x(t=>(n._loadedConfig=t,new Lc(r,{})))):Go(new Lc(r,{}));const{matched:s,consumedSegments:i,lastChild:o}=Xu(e,n,r);if(!s)return Gu(e);const a=r.slice(o);return this.getChildConfig(t,n,r).pipe(H(t=>{const n=t.module,r=t.routes,{segmentGroup:s,slicedSegments:o}=function(t,e,n,r){return n.length>0&&function(t,e,n){return n.some(n=>eh(t,e,n)&&Qu(n)!==Ec)}(t,n,r)?{segmentGroup:th(new Lc(e,function(t,e){const n={};n.primary=e;for(const r of t)""===r.path&&Qu(r)!==Ec&&(n[Qu(r)]=new Lc([],{}));return n}(r,new Lc(n,t.children)))),slicedSegments:[]}:0===n.length&&function(t,e,n){return n.some(n=>eh(t,e,n))}(t,n,r)?{segmentGroup:th(new Lc(t.segments,function(t,e,n,r){const s={};for(const i of n)eh(t,e,i)&&!r[Qu(i)]&&(s[Qu(i)]=new Lc([],{}));return Object.assign(Object.assign({},r),s)}(t,n,r,t.children))),slicedSegments:n}:{segmentGroup:t,slicedSegments:n}}(e,i,a,r);return 0===o.length&&s.hasChildren()?this.expandChildren(n,r,s).pipe(x(t=>new Lc(i,t))):0===r.length&&0===o.length?Go(new Lc(i,{})):this.expandSegment(n,s,r,o,Ec,!0).pipe(x(t=>new Lc(i.concat(t.segments),t.children)))}))}getChildConfig(t,e,n){return e.children?Go(new Fu(e.children,t)):e.loadChildren?void 0!==e._loadedConfig?Go(e._loadedConfig):this.runCanLoadGuards(t.injector,e,n).pipe(H(n=>n?this.configLoader.load(t.injector,e).pipe(x(t=>(e._loadedConfig=t,t))):function(t){return new _(e=>e.error(xc(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`)))}(e))):Go(new Fu([],t))}runCanLoadGuards(t,e,n){const r=e.canLoad;return r&&0!==r.length?Go(r.map(r=>{const s=t.get(r);let i;if(function(t){return t&&Mu(t.canLoad)}(s))i=s.canLoad(e,n);else {if(!Mu(s))throw new Error("Invalid CanLoad guard");i=s(e,n);}return Nc(i)})).pipe(Hu(),ec(t=>{if(!Uu(t))return;const e=xc(`Redirecting to "${this.urlSerializer.serialize(t)}"`);throw e.url=t,e}),x(t=>!0===t)):Go(!0)}lineralizeSegments(t,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return Go(n);if(r.numberOfChildren>1||!r.children.primary)return Yu(t.redirectTo);r=r.children.primary;}}applyRedirectCommands(t,e,n){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),t,n)}applyRedirectCreatreUrlTree(t,e,n,r){const s=this.createSegmentGroup(t,e.root,n,r);return new Uc(s,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const n={};return Pc(t,(t,r)=>{if("string"==typeof t&&t.startsWith(":")){const s=t.substring(1);n[r]=e[s];}else n[r]=t;}),n}createSegmentGroup(t,e,n,r){const s=this.createSegments(t,e.segments,n,r);let i={};return Pc(e.children,(e,s)=>{i[s]=this.createSegmentGroup(t,e,n,r);}),new Lc(s,i)}createSegments(t,e,n,r){return e.map(e=>e.path.startsWith(":")?this.findPosParam(t,e,r):this.findOrReturn(e,n))}findPosParam(t,e,n){const r=n[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);return r}findOrReturn(t,e){let n=0;for(const r of e){if(r.path===t.path)return e.splice(n),r;n++;}return t}}function Xu(t,e,n){if(""===e.path)return "full"===e.pathMatch&&(t.hasChildren()||n.length>0)?{matched:!1,consumedSegments:[],lastChild:0,positionalParamSegments:{}}:{matched:!0,consumedSegments:[],lastChild:0,positionalParamSegments:{}};const r=(e.matcher||kc)(n,t,e);return r?{matched:!0,consumedSegments:r.consumed,lastChild:r.consumed.length,positionalParamSegments:r.posParams}:{matched:!1,consumedSegments:[],lastChild:0,positionalParamSegments:{}}}function th(t){if(1===t.numberOfChildren&&t.children.primary){const e=t.children.primary;return new Lc(t.segments.concat(e.segments),e.children)}return t}function eh(t,e,n){return (!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path&&void 0!==n.redirectTo}class nh{constructor(t){this.path=t,this.route=this.path[this.path.length-1];}}class rh{constructor(t,e){this.component=t,this.route=e;}}function sh(t,e,n){const r=t._root;return oh(r,e?e._root:null,n,[r.value])}function ih(t,e,n){const r=function(t){if(!t)return null;for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig}return null}(e);return (r?r.module.injector:n).get(t)}function oh(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=cu(e);return t.children.forEach(t=>{!function(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=e?e.value:null,a=n?n.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const l=function(t,e,n){if("function"==typeof n)return n(t,e);switch(n){case"pathParamsChange":return !$c(t.url,e.url);case"pathParamsOrQueryParamsChange":return !$c(t.url,e.url)||!Ac(t.queryParams,e.queryParams);case"always":return !0;case"paramsOrQueryParamsChange":return !vu(t,e)||!Ac(t.queryParams,e.queryParams);case"paramsChange":default:return !vu(t,e)}}(o,i,i.routeConfig.runGuardsAndResolvers);l?s.canActivateChecks.push(new nh(r)):(i.data=o.data,i._resolvedData=o._resolvedData),oh(t,e,i.component?a?a.children:null:n,r,s),l&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new rh(a.outlet.component,o));}else o&&ah(e,a,s),s.canActivateChecks.push(new nh(r)),oh(t,null,i.component?a?a.children:null:n,r,s);}(t,i[t.value.outlet],n,r.concat([t.value]),s),delete i[t.value.outlet];}),Pc(i,(t,e)=>ah(t,n.getContext(e),s)),s}function ah(t,e,n){const r=cu(t),s=t.value;Pc(r,(t,r)=>{ah(t,s.component?e?e.children.getContext(r):null:e,n);}),n.canDeactivateChecks.push(new rh(s.component&&e&&e.outlet&&e.outlet.isActivated?e.outlet.component:null,s));}function lh(t,e){return null!==t&&e&&e(new wc(t)),Go(!0)}function ch(t,e){return null!==t&&e&&e(new _c(t)),Go(!0)}function uh(t,e,n){const r=e.routeConfig?e.routeConfig.canActivate:null;return r&&0!==r.length?Go(r.map(r=>kl(()=>{const s=ih(r,e,n);let i;if(function(t){return t&&Mu(t.canActivate)}(s))i=Nc(s.canActivate(e,t));else {if(!Mu(s))throw new Error("Invalid CanActivate guard");i=Nc(s(e,t));}return i.pipe(Xl())}))).pipe(Hu()):Go(!0)}function hh(t,e,n){const r=e[e.length-1],s=e.slice(0,e.length-1).reverse().map(t=>function(t){const e=t.routeConfig?t.routeConfig.canActivateChild:null;return e&&0!==e.length?{node:t,guards:e}:null}(t)).filter(t=>null!==t).map(e=>kl(()=>Go(e.guards.map(s=>{const i=ih(s,e.node,n);let o;if(function(t){return t&&Mu(t.canActivateChild)}(i))o=Nc(i.canActivateChild(r,t));else {if(!Mu(i))throw new Error("Invalid CanActivateChild guard");o=Nc(i(r,t));}return o.pipe(Xl())})).pipe(Hu())));return Go(s).pipe(Hu())}class dh{}class ph{constructor(t,e,n,r,s,i){this.rootComponentType=t,this.config=e,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=i;}recognize(){try{const t=gh(this.urlTree.root,[],[],this.config,this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,t,Ec),n=new fu([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},Ec,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new lu(n,e),s=new mu(this.url,r);return this.inheritParamsAndData(s._root),Go(s)}catch(t){return new _(e=>e.error(t))}}inheritParamsAndData(t){const e=t.value,n=pu(e,this.paramsInheritanceStrategy);e.params=Object.freeze(n.params),e.data=Object.freeze(n.data),t.children.forEach(t=>this.inheritParamsAndData(t));}processSegmentGroup(t,e,n){return 0===e.segments.length&&e.hasChildren()?this.processChildren(t,e):this.processSegment(t,e,e.segments,n)}processChildren(t,e){const n=Vc(e,(e,n)=>this.processSegmentGroup(t,e,n));return function(t){const e={};t.forEach(t=>{const n=e[t.value.outlet];if(n){const e=n.url.map(t=>t.toString()).join("/"),r=t.value.url.map(t=>t.toString()).join("/");throw new Error(`Two segments cannot have the same outlet name: '${e}' and '${r}'.`)}e[t.value.outlet]=t.value;});}(n),n.sort((t,e)=>t.value.outlet===Ec?-1:e.value.outlet===Ec?1:t.value.outlet.localeCompare(e.value.outlet)),n}processSegment(t,e,n,r){for(const i of t)try{return this.processSegmentAgainstRoute(i,e,n,r)}catch(s){if(!(s instanceof dh))throw s}if(this.noLeftoversInUrl(e,n,r))return [];throw new dh}noLeftoversInUrl(t,e,n){return 0===e.length&&!t.children[n]}processSegmentAgainstRoute(t,e,n,r){if(t.redirectTo)throw new dh;if((t.outlet||Ec)!==r)throw new dh;let s,i=[],o=[];if("**"===t.path){const i=n.length>0?Rc(n).parameters:{};s=new fu(n,i,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,_h(t),r,t.component,t,fh(e),mh(e)+n.length,vh(t));}else {const a=function(t,e,n){if(""===e.path){if("full"===e.pathMatch&&(t.hasChildren()||n.length>0))throw new dh;return {consumedSegments:[],lastChild:0,parameters:{}}}const r=(e.matcher||kc)(n,t,e);if(!r)throw new dh;const s={};Pc(r.posParams,(t,e)=>{s[e]=t.path;});const i=r.consumed.length>0?Object.assign(Object.assign({},s),r.consumed[r.consumed.length-1].parameters):s;return {consumedSegments:r.consumed,lastChild:r.consumed.length,parameters:i}}(e,t,n);i=a.consumedSegments,o=n.slice(a.lastChild),s=new fu(i,a.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,_h(t),r,t.component,t,fh(e),mh(e)+i.length,vh(t));}const a=function(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(t),{segmentGroup:l,slicedSegments:c}=gh(e,i,o,a,this.relativeLinkResolution);if(0===c.length&&l.hasChildren()){const t=this.processChildren(a,l);return [new lu(s,t)]}if(0===a.length&&0===c.length)return [new lu(s,[])];const u=this.processSegment(a,l,c,Ec);return [new lu(s,u)]}}function fh(t){let e=t;for(;e._sourceSegment;)e=e._sourceSegment;return e}function mh(t){let e=t,n=e._segmentIndexShift?e._segmentIndexShift:0;for(;e._sourceSegment;)e=e._sourceSegment,n+=e._segmentIndexShift?e._segmentIndexShift:0;return n-1}function gh(t,e,n,r,s){if(n.length>0&&function(t,e,n){return n.some(n=>yh(t,e,n)&&Qu(n)!==Ec)}(t,n,r)){const s=new Lc(e,function(t,e,n,r){const s={};s.primary=r,r._sourceSegment=t,r._segmentIndexShift=e.length;for(const i of n)if(""===i.path&&Qu(i)!==Ec){const n=new Lc([],{});n._sourceSegment=t,n._segmentIndexShift=e.length,s[Qu(i)]=n;}return s}(t,e,r,new Lc(n,t.children)));return s._sourceSegment=t,s._segmentIndexShift=e.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(t,e,n){return n.some(n=>yh(t,e,n))}(t,n,r)){const i=new Lc(t.segments,function(t,e,n,r,s,i){const o={};for(const a of r)if(yh(t,n,a)&&!s[Qu(a)]){const n=new Lc([],{});n._sourceSegment=t,n._segmentIndexShift="legacy"===i?t.segments.length:e.length,o[Qu(a)]=n;}return Object.assign(Object.assign({},s),o)}(t,e,n,r,t.children,s));return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}const i=new Lc(t.segments,t.children);return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}function yh(t,e,n){return (!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path&&void 0===n.redirectTo}function _h(t){return t.data||{}}function vh(t){return t.resolve||{}}function wh(t){return function(e){return e.pipe(ea(e=>{const n=t(e);return n?F(n).pipe(x(()=>e)):F([e])}))}}class bh extends class{shouldDetach(t){return !1}store(t,e){}shouldAttach(t){return !1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}{}const Sh=new Sn("ROUTES");class Eh{constructor(t,e,n,r){this.loader=t,this.compiler=e,this.onLoadStartListener=n,this.onLoadEndListener=r;}load(t,e){return this.onLoadStartListener&&this.onLoadStartListener(e),this.loadModuleFactory(e.loadChildren).pipe(x(n=>{this.onLoadEndListener&&this.onLoadEndListener(e);const r=n.create(t);return new Fu(Oc(r.injector.get(Sh)).map(Bu),r)}))}loadModuleFactory(t){return "string"==typeof t?F(this.loader.load(t)):Nc(t()).pipe(H(t=>t instanceof Ci?Go(t):F(this.compiler.compileModuleAsync(t))))}}class Ch{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new Th,this.attachRef=null;}}class Th{constructor(){this.contexts=new Map;}onChildOutletCreated(t,e){const n=this.getOrCreateContext(t);n.outlet=e,this.contexts.set(t,n);}onChildOutletDestroyed(t){const e=this.getContext(t);e&&(e.outlet=null);}onOutletDeactivated(){const t=this.contexts;return this.contexts=new Map,t}onOutletReAttached(t){this.contexts=t;}getOrCreateContext(t){let e=this.getContext(t);return e||(e=new Ch,this.contexts.set(t,e)),e}getContext(t){return this.contexts.get(t)||null}}class xh{shouldProcessUrl(t){return !0}extract(t){return t}merge(t,e){return t}}function kh(t){throw t}function Ah(t,e,n){return e.parse("/")}function Ih(t,e){return Go(null)}let Oh=(()=>{class t{constructor(t,e,n,r,s,i,o,a){this.rootComponentType=t,this.urlSerializer=e,this.rootContexts=n,this.location=r,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.lastLocationChangeInfo=null,this.navigationId=0,this.isNgZoneEnabled=!1,this.events=new E,this.errorHandler=kh,this.malformedUriErrorHandler=Ah,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Ih,afterPreactivation:Ih},this.urlHandlingStrategy=new xh,this.routeReuseStrategy=new bh,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.ngModule=s.get(Ei),this.console=s.get(Gi);const l=s.get(lo);this.isNgZoneEnabled=l instanceof lo,this.resetConfig(a),this.currentUrlTree=new Uc(new Lc([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Eh(i,o,t=>this.triggerEvent(new gc(t)),t=>this.triggerEvent(new yc(t))),this.routerState=hu(this.currentUrlTree,this.rootComponentType),this.transitions=new vl({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations();}setupNavigations(t){const e=this.events;return t.pipe(Il(t=>0!==t.id),x(t=>Object.assign(Object.assign({},t),{extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)})),ea(t=>{let n=!1,r=!1;return Go(t).pipe(ec(t=>{this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null};}),ea(t=>{const n=!this.navigated||t.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return Go(t).pipe(ea(t=>{const n=this.transitions.getValue();return e.next(new ac(t.id,this.serializeUrl(t.extractedUrl),t.source,t.restoredState)),n!==this.transitions.getValue()?Wo:[t]}),ea(t=>Promise.resolve(t)),(r=this.ngModule.injector,s=this.configLoader,i=this.urlSerializer,o=this.config,function(t){return t.pipe(ea(t=>function(t,e,n,r,s){return new Ju(t,e,n,r,s).apply()}(r,s,i,t.extractedUrl,o).pipe(x(e=>Object.assign(Object.assign({},t),{urlAfterRedirects:e})))))}),ec(t=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:t.urlAfterRedirects});}),function(t,e,n,r,s){return function(i){return i.pipe(H(i=>function(t,e,n,r,s="emptyOnly",i="legacy"){return new ph(t,e,n,r,s,i).recognize()}(t,e,i.urlAfterRedirects,n(i.urlAfterRedirects),r,s).pipe(x(t=>Object.assign(Object.assign({},i),{targetSnapshot:t})))))}}(this.rootComponentType,this.config,t=>this.serializeUrl(t),this.paramsInheritanceStrategy,this.relativeLinkResolution),ec(t=>{"eager"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(t.urlAfterRedirects,!!t.extras.replaceUrl,t.id,t.extras.state),this.browserUrlTree=t.urlAfterRedirects);}),ec(t=>{const n=new hc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);e.next(n);}));var r,s,i,o;if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:i,extras:o}=t,a=new ac(n,this.serializeUrl(r),s,i);e.next(a);const l=hu(r,this.rootComponentType).snapshot;return Go(Object.assign(Object.assign({},t),{targetSnapshot:l,urlAfterRedirects:r,extras:Object.assign(Object.assign({},o),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=t.rawUrl,this.browserUrlTree=t.urlAfterRedirects,t.resolve(null),Wo}),wh(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.beforePreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),ec(t=>{const e=new dc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e);}),x(t=>Object.assign(Object.assign({},t),{guards:sh(t.targetSnapshot,t.currentSnapshot,this.rootContexts)})),function(t,e){return function(n){return n.pipe(H(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:i,canDeactivateChecks:o}}=n;return 0===o.length&&0===i.length?Go(Object.assign(Object.assign({},n),{guardsResult:!0})):function(t,e,n,r){return F(t).pipe(H(t=>function(t,e,n,r,s){const i=e&&e.routeConfig?e.routeConfig.canDeactivate:null;return i&&0!==i.length?Go(i.map(i=>{const o=ih(i,e,s);let a;if(function(t){return t&&Mu(t.canDeactivate)}(o))a=Nc(o.canDeactivate(t,e,n,r));else {if(!Mu(o))throw new Error("Invalid CanDeactivate guard");a=Nc(o(t,e,n,r));}return a.pipe(Xl())})).pipe(Hu()):Go(!0)}(t.component,t.route,n,e,r)),Xl(t=>!0!==t,!0))}(o,r,s,t).pipe(H(n=>n&&"boolean"==typeof n?function(t,e,n,r){return F(e).pipe(Jl(e=>F([ch(e.route.parent,r),lh(e.route,r),hh(t,e.path,n),uh(t,e.route,n)]).pipe(Al(),Xl(t=>!0!==t,!0))),Xl(t=>!0!==t,!0))}(r,i,t,e):Go(n)),x(t=>Object.assign(Object.assign({},n),{guardsResult:t})))}))}}(this.ngModule.injector,t=>this.triggerEvent(t)),ec(t=>{if(Uu(t.guardsResult)){const e=xc(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);throw e.url=t.guardsResult,e}}),ec(t=>{const e=new pc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.triggerEvent(e);}),Il(t=>{if(!t.guardsResult){this.resetUrlToCurrentUrlTree();const n=new cc(t.id,this.serializeUrl(t.extractedUrl),"");return e.next(n),t.resolve(!1),!1}return !0}),wh(t=>{if(t.guards.canActivateChecks.length)return Go(t).pipe(ec(t=>{const e=new fc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e);}),ea(t=>{let n=!1;return Go(t).pipe((r=this.paramsInheritanceStrategy,s=this.ngModule.injector,function(t){return t.pipe(H(t=>{const{targetSnapshot:e,guards:{canActivateChecks:n}}=t;if(!n.length)return Go(t);let i=0;return F(n).pipe(Jl(t=>function(t,e,n,r){return function(t,e,n,r){const s=Object.keys(t);if(0===s.length)return Go({});const i={};return F(s).pipe(H(s=>function(t,e,n,r){const s=ih(t,e,r);return Nc(s.resolve?s.resolve(e,n):s(e,n))}(t[s],e,n,r).pipe(ec(t=>{i[s]=t;}))),Nl(1),H(()=>Object.keys(i).length===s.length?Go(i):Wo))}(t._resolve,t,e,r).pipe(x(e=>(t._resolvedData=e,t.data=Object.assign(Object.assign({},t.data),pu(t,n).resolve),null)))}(t.route,e,r,s)),ec(()=>i++),Nl(1),H(e=>i===n.length?Go(t):Wo))}))}),ec({next:()=>n=!0,complete:()=>{if(!n){const n=new cc(t.id,this.serializeUrl(t.extractedUrl),"At least one route resolver didn't emit any value.");e.next(n),t.resolve(!1);}}}));var r,s;}),ec(t=>{const e=new mc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e);}))}),wh(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.afterPreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),x(t=>{const e=function(t,e,n){const r=wu(t,e._root,n?n._root:void 0);return new uu(r,e)}(this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return Object.assign(Object.assign({},t),{targetRouterState:e})}),ec(t=>{this.currentUrlTree=t.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,t.rawUrl),this.routerState=t.targetRouterState,"deferred"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,!!t.extras.replaceUrl,t.id,t.extras.state),this.browserUrlTree=t.urlAfterRedirects);}),(i=this.rootContexts,o=this.routeReuseStrategy,a=t=>this.triggerEvent(t),x(t=>(new ju(o,t.targetRouterState,t.currentRouterState,a).activate(i),t))),ec({next(){n=!0;},complete(){n=!0;}}),(s=()=>{if(!n&&!r){this.resetUrlToCurrentUrlTree();const n=new cc(t.id,this.serializeUrl(t.extractedUrl),`Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`);e.next(n),t.resolve(!1);}this.currentNavigation=null;},t=>t.lift(new sc(s))),Gl(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=Uu(n.url);r||(this.navigated=!0,this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl));const s=new cc(t.id,this.serializeUrl(t.extractedUrl),n.message);e.next(s),r?setTimeout(()=>{const e=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);return this.scheduleNavigation(e,"imperative",null,{skipLocationChange:t.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:t.resolve,reject:t.reject,promise:t.promise})},0):t.resolve(!1);}else {this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);const r=new uc(t.id,this.serializeUrl(t.extractedUrl),n);e.next(r);try{t.resolve(this.errorHandler(n));}catch(i){t.reject(i);}}var s;return Wo}));var s,i,o,a;}))}resetRootComponentType(t){this.rootComponentType=t,this.routerState.root.component=this.rootComponentType;}getTransition(){const t=this.transitions.value;return t.urlAfterRedirects=this.browserUrlTree,t}setTransition(t){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),t));}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0});}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(t=>{const e=this.extractLocationChangeInfoFromEvent(t);this.shouldScheduleNavigation(this.lastLocationChangeInfo,e)&&setTimeout(()=>{const{source:t,state:n,urlTree:r}=e,s={replaceUrl:!0};if(n){const t=Object.assign({},n);delete t.navigationId,0!==Object.keys(t).length&&(s.state=t);}this.scheduleNavigation(r,t,n,s);},0),this.lastLocationChangeInfo=e;}));}extractLocationChangeInfoFromEvent(t){var e;return {source:"popstate"===t.type?"popstate":"hashchange",urlTree:this.parseUrl(t.url),state:(null===(e=t.state)||void 0===e?void 0:e.navigationId)?t.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(t,e){if(!t)return !0;const n=e.urlTree.toString()===t.urlTree.toString();return !(e.transitionId===t.transitionId&&n&&("hashchange"===e.source&&"popstate"===t.source||"popstate"===e.source&&"hashchange"===t.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(t){this.events.next(t);}resetConfig(t){Vu(t),this.config=t.map(Bu),this.navigated=!1,this.lastSuccessfulId=-1;}ngOnDestroy(){this.dispose();}dispose(){this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0);}createUrlTree(t,e={}){const{relativeTo:n,queryParams:r,fragment:s,queryParamsHandling:i,preserveFragment:o}=e,a=n||this.routerState.root,l=o?this.currentUrlTree.fragment:s;let c=null;switch(i){case"merge":c=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":c=this.currentUrlTree.queryParams;break;default:c=r||null;}return null!==c&&(c=this.removeEmptyProps(c)),function(t,e,n,r,s){if(0===n.length)return Cu(e.root,e.root,e,r,s);const i=function(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new xu(!0,0,t);let e=0,n=!1;const r=t.reduce((t,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const e={};return Pc(r.outlets,(t,n)=>{e[n]="string"==typeof t?t.split("/"):t;}),[...t,{outlets:e}]}if(r.segmentPath)return [...t,r.segmentPath]}return "string"!=typeof r?[...t,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?e++:""!=r&&t.push(r));}),t):[...t,r]},[]);return new xu(n,e,r)}(n);if(i.toRoot())return Cu(e.root,new Lc([],{}),e,r,s);const o=function(t,e,n){if(t.isAbsolute)return new ku(e.root,!0,0);if(-1===n.snapshot._lastPathIndex){const t=n.snapshot._urlSegment;return new ku(t,t===e.root,0)}const r=Su(t.commands[0])?0:1;return function(t,e,n){let r=t,s=e,i=n;for(;i>s;){if(i-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length;}return new ku(r,!1,s-i)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,t.numberOfDoubleDots)}(i,e,t),a=o.processChildren?Iu(o.segmentGroup,o.index,i.commands):Au(o.segmentGroup,o.index,i.commands);return Cu(o.segmentGroup,a,e,r,s)}(a,this.currentUrlTree,t,c,l)}navigateByUrl(t,e={skipLocationChange:!1}){const n=Uu(t)?t:this.parseUrl(t),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);return this.scheduleNavigation(r,"imperative",null,e)}navigate(t,e={skipLocationChange:!1}){return function(t){for(let e=0;e<t.length;e++){const n=t[e];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${e}`)}}(t),this.navigateByUrl(this.createUrlTree(t,e),e)}serializeUrl(t){return this.urlSerializer.serialize(t)}parseUrl(t){let e;try{e=this.urlSerializer.parse(t);}catch(n){e=this.malformedUriErrorHandler(n,this.urlSerializer,t);}return e}isActive(t,e){if(Uu(t))return jc(this.currentUrlTree,t,e);const n=this.parseUrl(t);return jc(this.currentUrlTree,n,e)}removeEmptyProps(t){return Object.keys(t).reduce((e,n)=>{const r=t[n];return null!=r&&(e[n]=r),e},{})}processNavigations(){this.navigations.subscribe(t=>{this.navigated=!0,this.lastSuccessfulId=t.id,this.events.next(new lc(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,this.currentNavigation=null,t.resolve(!0);},t=>{this.console.warn("Unhandled Navigation Error: ");});}scheduleNavigation(t,e,n,r,s){const i=this.getTransition(),o="imperative"!==e&&"imperative"===(null==i?void 0:i.source),a=(this.lastSuccessfulId===i.id||this.currentNavigation?i.rawUrl:i.urlAfterRedirects).toString()===t.toString();if(o&&a)return Promise.resolve(!0);let l,c,u;s?(l=s.resolve,c=s.reject,u=s.promise):u=new Promise((t,e)=>{l=t,c=e;});const h=++this.navigationId;return this.setTransition({id:h,source:e,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:t,extras:r,resolve:l,reject:c,promise:u,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),u.catch(t=>Promise.reject(t))}setBrowserUrl(t,e,n,r){const s=this.urlSerializer.serialize(t);r=r||{},this.location.isCurrentPathEqualTo(s)||e?this.location.replaceState(s,"",Object.assign(Object.assign({},r),{navigationId:n})):this.location.go(s,"",Object.assign(Object.assign({},r),{navigationId:n}));}resetStateAndUrl(t,e,n){this.routerState=t,this.currentUrlTree=e,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree();}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",{navigationId:this.lastSuccessfulId});}}return t.\u0275fac=function(e){return new(e||t)(Ln(Cn),Ln(qc),Ln(Th),Ln(Da),Ln(Cs),Ln(Po),Ln(io),Ln(void 0))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),Rh=(()=>{class t{constructor(t,e,n,r,s){this.parentContexts=t,this.location=e,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new Hi,this.deactivateEvents=new Hi,this.name=r||Ec,t.onChildOutletCreated(this.name,this);}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name);}ngOnInit(){if(!this.activated){const t=this.parentContexts.getContext(this.name);t&&t.route&&(t.attachRef?this.attach(t.attachRef,t.route):this.activateWith(t.route,t.resolver||null));}}get isActivated(){return !!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const t=this.activated;return this.activated=null,this._activatedRoute=null,t}attach(t,e){this.activated=t,this._activatedRoute=e,this.location.insert(t.hostView);}deactivate(){if(this.activated){const t=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(t);}}activateWith(t,e){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=t;const n=(e=e||this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new Ph(t,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance);}}return t.\u0275fac=function(e){return new(e||t)(Os(Th),Os(xi),Os(Zs),(function(t,e){const n=t.attrs;if(n){const t=n.length;let r=0;for(;r<t;){const s=n[r];if(Ge(s))break;if(0===s)r+=2;else if("number"==typeof s)for(r++;r<t&&"string"==typeof n[r];)r++;else {if(s===e)return n[r+1];r+=2;}}}return null}(Se(),"name")),Os(vi))},t.\u0275dir=Vt({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),t})();class Ph{constructor(t,e,n){this.route=t,this.childContexts=e,this.parent=n;}get(t,e){return t===du?this.route:t===Th?this.childContexts:this.parent.get(t,e)}}class Nh{}class jh{preload(t,e){return Go(null)}}let Dh=(()=>{class t{constructor(t,e,n,r,s){this.router=t,this.injector=r,this.preloadingStrategy=s,this.loader=new Eh(e,n,e=>t.triggerEvent(new gc(e)),e=>t.triggerEvent(new yc(e)));}setUpPreloading(){this.subscription=this.router.events.pipe(Il(t=>t instanceof lc),Jl(()=>this.preload())).subscribe(()=>{});}preload(){const t=this.injector.get(Ei);return this.processRoutes(t,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe();}processRoutes(t,e){const n=[];for(const r of e)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const t=r._loadedConfig;n.push(this.processRoutes(t.module,t.routes));}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(t,r)):r.children&&n.push(this.processRoutes(t,r.children));return F(n).pipe(q(),x(t=>{}))}preloadConfig(t,e){return this.preloadingStrategy.preload(e,()=>this.loader.load(t.injector,e).pipe(H(t=>(e._loadedConfig=t,this.processRoutes(t.module,t.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(Ln(Oh),Ln(Po),Ln(io),Ln(Cs),Ln(Nh))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),Fh=(()=>{class t{constructor(t,e,n={}){this.router=t,this.viewportScroller=e,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled";}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents();}createScrollEvents(){return this.router.events.subscribe(t=>{t instanceof ac?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=t.navigationTrigger,this.restoredId=t.restoredState?t.restoredState.navigationId:0):t instanceof lc&&(this.lastId=t.id,this.scheduleScrollEvent(t,this.router.parseUrl(t.urlAfterRedirects).fragment));})}consumeScrollEvents(){return this.router.events.subscribe(t=>{t instanceof Sc&&(t.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(t.position):t.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(t.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]));})}scheduleScrollEvent(t,e){this.router.triggerEvent(new Sc(t,"popstate"===this.lastSource?this.store[this.restoredId]:null,e));}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe();}}return t.\u0275fac=function(e){return new(e||t)(Ln(Oh),Ln(Va),Ln(void 0))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const Mh=new Sn("ROUTER_CONFIGURATION"),Uh=new Sn("ROUTER_FORROOT_GUARD"),Lh=[Da,{provide:qc,useClass:zc},{provide:Oh,useFactory:function(t,e,n,r,s,i,o,a={},l,c){const u=new Oh(null,t,e,n,r,s,i,Oc(o));if(l&&(u.urlHandlingStrategy=l),c&&(u.routeReuseStrategy=c),function(t,e){t.errorHandler&&(e.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(e.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(e.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(e.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(e.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(e.urlUpdateStrategy=t.urlUpdateStrategy);}(a,u),a.enableTracing){const t=va();u.events.subscribe(e=>{t.logGroup("Router Event: "+e.constructor.name),t.log(e.toString()),t.log(e),t.logGroupEnd();});}return u},deps:[qc,Th,Da,Cs,Po,io,Sh,Mh,[class{},new In],[class{},new In]]},Th,{provide:du,useFactory:function(t){return t.routerState.root},deps:[Oh]},{provide:Po,useClass:Do},Dh,jh,class{preload(t,e){return e().pipe(Gl(()=>Go(null)))}},{provide:Mh,useValue:{enableTracing:!1}}];function Hh(){return new To("Router",Oh)}let $h=(()=>{class t{constructor(t,e){}static forRoot(e,n){return {ngModule:t,providers:[Lh,Bh(e),{provide:Uh,useFactory:zh,deps:[[Oh,new In,new Rn]]},{provide:Mh,useValue:n||{}},{provide:Oa,useFactory:qh,deps:[ba,[new An(Pa),new In],Mh]},{provide:Fh,useFactory:Vh,deps:[Oh,Va,Mh]},{provide:Nh,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:jh},{provide:To,multi:!0,useFactory:Hh},[Qh,{provide:$i,multi:!0,useFactory:Wh,deps:[Qh]},{provide:Gh,useFactory:Zh,deps:[Qh]},{provide:Zi,multi:!0,useExisting:Gh}]]}}static forChild(e){return {ngModule:t,providers:[Bh(e)]}}}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)(Ln(Uh,8),Ln(Oh,8))}}),t})();function Vh(t,e,n){return n.scrollOffset&&e.setOffset(n.scrollOffset),new Fh(t,e,n)}function qh(t,e,n={}){return n.useHash?new ja(t,e):new Na(t,e)}function zh(t){return "guarded"}function Bh(t){return [{provide:En,multi:!0,useValue:t},{provide:Sh,multi:!0,useValue:t}]}let Qh=(()=>{class t{constructor(t){this.injector=t,this.initNavigation=!1,this.resultOfPreactivationDone=new E;}appInitializer(){return this.injector.get(Ea,Promise.resolve(null)).then(()=>{let t=null;const e=new Promise(e=>t=e),n=this.injector.get(Oh),r=this.injector.get(Mh);return "disabled"===r.initialNavigation?(n.setUpLocationChangeListener(),t(!0)):"enabled"===r.initialNavigation||"enabledBlocking"===r.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?Go(null):(this.initNavigation=!0,t(!0),this.resultOfPreactivationDone),n.initialNavigation()):t(!0),e})}bootstrapListener(t){const e=this.injector.get(Mh),n=this.injector.get(Dh),r=this.injector.get(Fh),s=this.injector.get(Oh),i=this.injector.get(Oo);t===i.components[0]&&("enabledNonBlocking"!==e.initialNavigation&&void 0!==e.initialNavigation||s.initialNavigation(),n.setUpPreloading(),r.init(),s.resetRootComponentType(i.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete());}}return t.\u0275fac=function(e){return new(e||t)(Ln(Cs))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();function Wh(t){return t.appInitializer.bind(t)}function Zh(t){return t.bootstrapListener.bind(t)}const Gh=new Sn("Router Initializer"),Kh=[];let Yh=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},imports:[[$h.forRoot(Kh)],$h]}),t})();class Jh{}const Xh="*";function td(t,e=null){return {type:2,steps:t,options:e}}function ed(t){return {type:6,styles:t,offset:null}}function nd(t){Promise.resolve(null).then(t);}class rd{constructor(t=0,e=0){this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._started=!1,this._destroyed=!1,this._finished=!1,this._position=0,this.parentPlayer=null,this.totalTime=t+e;}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[]);}onStart(t){this._onStartFns.push(t);}onDone(t){this._onDoneFns.push(t);}onDestroy(t){this._onDestroyFns.push(t);}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0;}triggerMicrotask(){nd(()=>this._onFinish());}_onStart(){this._onStartFns.forEach(t=>t()),this._onStartFns=[];}pause(){}restart(){}finish(){this._onFinish();}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[]);}reset(){}setPosition(t){this._position=this.totalTime?t*this.totalTime:1;}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(t=>t()),e.length=0;}}class sd{constructor(t){this._onDoneFns=[],this._onStartFns=[],this._finished=!1,this._started=!1,this._destroyed=!1,this._onDestroyFns=[],this.parentPlayer=null,this.totalTime=0,this.players=t;let e=0,n=0,r=0;const s=this.players.length;0==s?nd(()=>this._onFinish()):this.players.forEach(t=>{t.onDone(()=>{++e==s&&this._onFinish();}),t.onDestroy(()=>{++n==s&&this._onDestroy();}),t.onStart(()=>{++r==s&&this._onStart();});}),this.totalTime=this.players.reduce((t,e)=>Math.max(t,e.totalTime),0);}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[]);}init(){this.players.forEach(t=>t.init());}onStart(t){this._onStartFns.push(t);}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach(t=>t()),this._onStartFns=[]);}onDone(t){this._onDoneFns.push(t);}onDestroy(t){this._onDestroyFns.push(t);}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach(t=>t.play());}pause(){this.players.forEach(t=>t.pause());}restart(){this.players.forEach(t=>t.restart());}finish(){this._onFinish(),this.players.forEach(t=>t.finish());}destroy(){this._onDestroy();}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach(t=>t.destroy()),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[]);}reset(){this.players.forEach(t=>t.reset()),this._destroyed=!1,this._finished=!1,this._started=!1;}setPosition(t){const e=t*this.totalTime;this.players.forEach(t=>{const n=t.totalTime?Math.min(1,e/t.totalTime):1;t.setPosition(n);});}getPosition(){const t=this.players.reduce((t,e)=>null===t||e.totalTime>t.totalTime?e:t,null);return null!=t?t.getPosition():0}beforeDestroy(){this.players.forEach(t=>{t.beforeDestroy&&t.beforeDestroy();});}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(t=>t()),e.length=0;}}function id(){return "undefined"!=typeof process&&"[object process]"==={}.toString.call(process)}function od(t){switch(t.length){case 0:return new rd;case 1:return t[0];default:return new sd(t)}}function ad(t,e,n,r,s={},i={}){const o=[],a=[];let l=-1,c=null;if(r.forEach(t=>{const n=t.offset,r=n==l,u=r&&c||{};Object.keys(t).forEach(n=>{let r=n,a=t[n];if("offset"!==n)switch(r=e.normalizePropertyName(r,o),a){case"!":a=s[n];break;case Xh:a=i[n];break;default:a=e.normalizeStyleValue(n,r,a,o);}u[r]=a;}),r||a.push(u),c=u,l=n;}),o.length){const t="\n - ";throw new Error(`Unable to animate due to the following errors:${t}${o.join(t)}`)}return a}function ld(t,e,n,r){switch(e){case"start":t.onStart(()=>r(n&&cd(n,"start",t)));break;case"done":t.onDone(()=>r(n&&cd(n,"done",t)));break;case"destroy":t.onDestroy(()=>r(n&&cd(n,"destroy",t)));}}function cd(t,e,n){const r=n.totalTime,s=ud(t.element,t.triggerName,t.fromState,t.toState,e||t.phaseName,null==r?t.totalTime:r,!!n.disabled),i=t._data;return null!=i&&(s._data=i),s}function ud(t,e,n,r,s="",i=0,o){return {element:t,triggerName:e,fromState:n,toState:r,phaseName:s,totalTime:i,disabled:!!o}}function hd(t,e,n){let r;return t instanceof Map?(r=t.get(e),r||t.set(e,r=n)):(r=t[e],r||(r=t[e]=n)),r}function dd(t){const e=t.indexOf(":");return [t.substring(1,e),t.substr(e+1)]}let pd=(t,e)=>!1,fd=(t,e)=>!1,md=(t,e,n)=>[];const gd=id();(gd||"undefined"!=typeof Element)&&(pd=(t,e)=>t.contains(e),fd=(()=>{if(gd||Element.prototype.matches)return (t,e)=>t.matches(e);{const t=Element.prototype,e=t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector;return e?(t,n)=>e.apply(t,[n]):fd}})(),md=(t,e,n)=>{let r=[];if(n){const n=t.querySelectorAll(e);for(let t=0;t<n.length;t++)r.push(n[t]);}else {const n=t.querySelector(e);n&&r.push(n);}return r});let yd=null,_d=!1;const vd=fd,wd=pd,bd=md;let Sd=(()=>{class t{validateStyleProperty(t){return function(t){yd||(yd=("undefined"!=typeof document?document.body:null)||{},_d=!!yd.style&&"WebkitAppearance"in yd.style);let e=!0;return yd.style&&!function(t){return "ebkit"==t.substring(1,6)}(t)&&(e=t in yd.style,!e&&_d)&&(e="Webkit"+t.charAt(0).toUpperCase()+t.substr(1)in yd.style),e}(t)}matchesElement(t,e){return vd(t,e)}containsElement(t,e){return wd(t,e)}query(t,e,n){return bd(t,e,n)}computeStyle(t,e,n){return n||""}animate(t,e,n,r,s,i=[],o){return new rd(n,r)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),Ed=(()=>{class t{}return t.NOOP=new Sd,t})();const Cd="ng-enter",Td="ng-leave",xd="ng-trigger",kd=".ng-trigger",Ad="ng-animating",Id=".ng-animating";function Od(t){if("number"==typeof t)return t;const e=t.match(/^(-?[\.\d]+)(m?s)/);return !e||e.length<2?0:Rd(parseFloat(e[1]),e[2])}function Rd(t,e){switch(e){case"s":return 1e3*t;default:return t}}function Pd(t,e,n){return t.hasOwnProperty("duration")?t:function(t,e,n){let r,s=0,i="";if("string"==typeof t){const n=t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===n)return e.push(`The provided timing value "${t}" is invalid.`),{duration:0,delay:0,easing:""};r=Rd(parseFloat(n[1]),n[2]);const o=n[3];null!=o&&(s=Rd(parseFloat(o),n[4]));const a=n[5];a&&(i=a);}else r=t;if(!n){let n=!1,i=e.length;r<0&&(e.push("Duration values below 0 are not allowed for this animation step."),n=!0),s<0&&(e.push("Delay values below 0 are not allowed for this animation step."),n=!0),n&&e.splice(i,0,`The provided timing value "${t}" is invalid.`);}return {duration:r,delay:s,easing:i}}(t,e,n)}function Nd(t,e={}){return Object.keys(t).forEach(n=>{e[n]=t[n];}),e}function jd(t,e,n={}){if(e)for(let r in t)n[r]=t[r];else Nd(t,n);return n}function Dd(t,e,n){return n?e+":"+n+";":""}function Fd(t){let e="";for(let n=0;n<t.style.length;n++){const r=t.style.item(n);e+=Dd(0,r,t.style.getPropertyValue(r));}for(const n in t.style)t.style.hasOwnProperty(n)&&!n.startsWith("_")&&(e+=Dd(0,n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),t.style[n]));t.setAttribute("style",e);}function Md(t,e,n){t.style&&(Object.keys(e).forEach(r=>{const s=Bd(r);n&&!n.hasOwnProperty(r)&&(n[r]=t.style[s]),t.style[s]=e[r];}),id()&&Fd(t));}function Ud(t,e){t.style&&(Object.keys(e).forEach(e=>{const n=Bd(e);t.style[n]="";}),id()&&Fd(t));}function Ld(t){return Array.isArray(t)?1==t.length?t[0]:td(t):t}const Hd=new RegExp("{{\\s*(.+?)\\s*}}","g");function $d(t){let e=[];if("string"==typeof t){let n;for(;n=Hd.exec(t);)e.push(n[1]);Hd.lastIndex=0;}return e}function Vd(t,e,n){const r=t.toString(),s=r.replace(Hd,(t,r)=>{let s=e[r];return e.hasOwnProperty(r)||(n.push("Please provide a value for the animation param "+r),s=""),s.toString()});return s==r?t:s}function qd(t){const e=[];let n=t.next();for(;!n.done;)e.push(n.value),n=t.next();return e}const zd=/-+([a-z0-9])/g;function Bd(t){return t.replace(zd,(...t)=>t[1].toUpperCase())}function Qd(t,e,n){switch(e.type){case 7:return t.visitTrigger(e,n);case 0:return t.visitState(e,n);case 1:return t.visitTransition(e,n);case 2:return t.visitSequence(e,n);case 3:return t.visitGroup(e,n);case 4:return t.visitAnimate(e,n);case 5:return t.visitKeyframes(e,n);case 6:return t.visitStyle(e,n);case 8:return t.visitReference(e,n);case 9:return t.visitAnimateChild(e,n);case 10:return t.visitAnimateRef(e,n);case 11:return t.visitQuery(e,n);case 12:return t.visitStagger(e,n);default:throw new Error("Unable to resolve animation metadata node #"+e.type)}}const Wd="*";function Zd(t,e){const n=[];return "string"==typeof t?t.split(/\s*,\s*/).forEach(t=>function(t,e,n){if(":"==t[0]){const r=function(t,e){switch(t){case":enter":return "void => *";case":leave":return "* => void";case":increment":return (t,e)=>parseFloat(e)>parseFloat(t);case":decrement":return (t,e)=>parseFloat(e)<parseFloat(t);default:return e.push(`The transition alias value "${t}" is not supported`),"* => *"}}(t,n);if("function"==typeof r)return void e.push(r);t=r;}const r=t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==r||r.length<4)return n.push(`The provided transition expression "${t}" is not supported`),e;const s=r[1],i=r[2],o=r[3];e.push(Yd(s,o)),"<"!=i[0]||s==Wd&&o==Wd||e.push(Yd(o,s));}(t,n,e)):n.push(t),n}const Gd=new Set(["true","1"]),Kd=new Set(["false","0"]);function Yd(t,e){const n=Gd.has(t)||Kd.has(t),r=Gd.has(e)||Kd.has(e);return (s,i)=>{let o=t==Wd||t==s,a=e==Wd||e==i;return !o&&n&&"boolean"==typeof s&&(o=s?Gd.has(t):Kd.has(t)),!a&&r&&"boolean"==typeof i&&(a=i?Gd.has(e):Kd.has(e)),o&&a}}const Jd=new RegExp("s*:selfs*,?","g");function Xd(t,e,n){return new tp(t).build(e,n)}class tp{constructor(t){this._driver=t;}build(t,e){const n=new ep(e);return this._resetContextStyleTimingState(n),Qd(this,Ld(t),n)}_resetContextStyleTimingState(t){t.currentQuerySelector="",t.collectedStyles={},t.collectedStyles[""]={},t.currentTime=0;}visitTrigger(t,e){let n=e.queryCount=0,r=e.depCount=0;const s=[],i=[];return "@"==t.name.charAt(0)&&e.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),t.definitions.forEach(t=>{if(this._resetContextStyleTimingState(e),0==t.type){const n=t,r=n.name;r.toString().split(/\s*,\s*/).forEach(t=>{n.name=t,s.push(this.visitState(n,e));}),n.name=r;}else if(1==t.type){const s=this.visitTransition(t,e);n+=s.queryCount,r+=s.depCount,i.push(s);}else e.errors.push("only state() and transition() definitions can sit inside of a trigger()");}),{type:7,name:t.name,states:s,transitions:i,queryCount:n,depCount:r,options:null}}visitState(t,e){const n=this.visitStyle(t.styles,e),r=t.options&&t.options.params||null;if(n.containsDynamicStyles){const s=new Set,i=r||{};if(n.styles.forEach(t=>{if(np(t)){const e=t;Object.keys(e).forEach(t=>{$d(e[t]).forEach(t=>{i.hasOwnProperty(t)||s.add(t);});});}}),s.size){const n=qd(s.values());e.errors.push(`state("${t.name}", ...) must define default values for all the following style substitutions: ${n.join(", ")}`);}}return {type:0,name:t.name,style:n,options:r?{params:r}:null}}visitTransition(t,e){e.queryCount=0,e.depCount=0;const n=Qd(this,Ld(t.animation),e);return {type:1,matchers:Zd(t.expr,e.errors),animation:n,queryCount:e.queryCount,depCount:e.depCount,options:rp(t.options)}}visitSequence(t,e){return {type:2,steps:t.steps.map(t=>Qd(this,t,e)),options:rp(t.options)}}visitGroup(t,e){const n=e.currentTime;let r=0;const s=t.steps.map(t=>{e.currentTime=n;const s=Qd(this,t,e);return r=Math.max(r,e.currentTime),s});return e.currentTime=r,{type:3,steps:s,options:rp(t.options)}}visitAnimate(t,e){const n=function(t,e){let n=null;if(t.hasOwnProperty("duration"))n=t;else if("number"==typeof t)return sp(Pd(t,e).duration,0,"");const r=t;if(r.split(/\s+/).some(t=>"{"==t.charAt(0)&&"{"==t.charAt(1))){const t=sp(0,0,"");return t.dynamic=!0,t.strValue=r,t}return n=n||Pd(r,e),sp(n.duration,n.delay,n.easing)}(t.timings,e.errors);let r;e.currentAnimateTimings=n;let s=t.styles?t.styles:ed({});if(5==s.type)r=this.visitKeyframes(s,e);else {let s=t.styles,i=!1;if(!s){i=!0;const t={};n.easing&&(t.easing=n.easing),s=ed(t);}e.currentTime+=n.duration+n.delay;const o=this.visitStyle(s,e);o.isEmptyStep=i,r=o;}return e.currentAnimateTimings=null,{type:4,timings:n,style:r,options:null}}visitStyle(t,e){const n=this._makeStyleAst(t,e);return this._validateStyleAst(n,e),n}_makeStyleAst(t,e){const n=[];Array.isArray(t.styles)?t.styles.forEach(t=>{"string"==typeof t?t==Xh?n.push(t):e.errors.push(`The provided style string value ${t} is not allowed.`):n.push(t);}):n.push(t.styles);let r=!1,s=null;return n.forEach(t=>{if(np(t)){const e=t,n=e.easing;if(n&&(s=n,delete e.easing),!r)for(let t in e)if(e[t].toString().indexOf("{{")>=0){r=!0;break}}}),{type:6,styles:n,easing:s,offset:t.offset,containsDynamicStyles:r,options:null}}_validateStyleAst(t,e){const n=e.currentAnimateTimings;let r=e.currentTime,s=e.currentTime;n&&s>0&&(s-=n.duration+n.delay),t.styles.forEach(t=>{"string"!=typeof t&&Object.keys(t).forEach(n=>{if(!this._driver.validateStyleProperty(n))return void e.errors.push(`The provided animation property "${n}" is not a supported CSS property for animations`);const i=e.collectedStyles[e.currentQuerySelector],o=i[n];let a=!0;o&&(s!=r&&s>=o.startTime&&r<=o.endTime&&(e.errors.push(`The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${r}ms"`),a=!1),s=o.startTime),a&&(i[n]={startTime:s,endTime:r}),e.options&&function(t,e,n){const r=e.params||{},s=$d(t);s.length&&s.forEach(t=>{r.hasOwnProperty(t)||n.push(`Unable to resolve the local animation param ${t} in the given list of values`);});}(t[n],e.options,e.errors);});});}visitKeyframes(t,e){const n={type:5,styles:[],options:null};if(!e.currentAnimateTimings)return e.errors.push("keyframes() must be placed inside of a call to animate()"),n;let r=0;const s=[];let i=!1,o=!1,a=0;const l=t.steps.map(t=>{const n=this._makeStyleAst(t,e);let l=null!=n.offset?n.offset:function(t){if("string"==typeof t)return null;let e=null;if(Array.isArray(t))t.forEach(t=>{if(np(t)&&t.hasOwnProperty("offset")){const n=t;e=parseFloat(n.offset),delete n.offset;}});else if(np(t)&&t.hasOwnProperty("offset")){const n=t;e=parseFloat(n.offset),delete n.offset;}return e}(n.styles),c=0;return null!=l&&(r++,c=n.offset=l),o=o||c<0||c>1,i=i||c<a,a=c,s.push(c),n});o&&e.errors.push("Please ensure that all keyframe offsets are between 0 and 1"),i&&e.errors.push("Please ensure that all keyframe offsets are in order");const c=t.steps.length;let u=0;r>0&&r<c?e.errors.push("Not all style() steps within the declared keyframes() contain offsets"):0==r&&(u=1/(c-1));const h=c-1,d=e.currentTime,p=e.currentAnimateTimings,f=p.duration;return l.forEach((t,r)=>{const i=u>0?r==h?1:u*r:s[r],o=i*f;e.currentTime=d+p.delay+o,p.duration=o,this._validateStyleAst(t,e),t.offset=i,n.styles.push(t);}),n}visitReference(t,e){return {type:8,animation:Qd(this,Ld(t.animation),e),options:rp(t.options)}}visitAnimateChild(t,e){return e.depCount++,{type:9,options:rp(t.options)}}visitAnimateRef(t,e){return {type:10,animation:this.visitReference(t.animation,e),options:rp(t.options)}}visitQuery(t,e){const n=e.currentQuerySelector,r=t.options||{};e.queryCount++,e.currentQuery=t;const[s,i]=function(t){const e=!!t.split(/\s*,\s*/).find(t=>":self"==t);return e&&(t=t.replace(Jd,"")),[t=t.replace(/@\*/g,kd).replace(/@\w+/g,t=>".ng-trigger-"+t.substr(1)).replace(/:animating/g,Id),e]}(t.selector);e.currentQuerySelector=n.length?n+" "+s:s,hd(e.collectedStyles,e.currentQuerySelector,{});const o=Qd(this,Ld(t.animation),e);return e.currentQuery=null,e.currentQuerySelector=n,{type:11,selector:s,limit:r.limit||0,optional:!!r.optional,includeSelf:i,animation:o,originalSelector:t.selector,options:rp(t.options)}}visitStagger(t,e){e.currentQuery||e.errors.push("stagger() can only be used inside of query()");const n="full"===t.timings?{duration:0,delay:0,easing:"full"}:Pd(t.timings,e.errors,!0);return {type:12,animation:Qd(this,Ld(t.animation),e),timings:n,options:null}}}class ep{constructor(t){this.errors=t,this.queryCount=0,this.depCount=0,this.currentTransition=null,this.currentQuery=null,this.currentQuerySelector=null,this.currentAnimateTimings=null,this.currentTime=0,this.collectedStyles={},this.options=null;}}function np(t){return !Array.isArray(t)&&"object"==typeof t}function rp(t){var e;return t?(t=Nd(t)).params&&(t.params=(e=t.params)?Nd(e):null):t={},t}function sp(t,e,n){return {duration:t,delay:e,easing:n}}function ip(t,e,n,r,s,i,o=null,a=!1){return {type:1,element:t,keyframes:e,preStyleProps:n,postStyleProps:r,duration:s,delay:i,totalTime:s+i,easing:o,subTimeline:a}}class op{constructor(){this._map=new Map;}consume(t){let e=this._map.get(t);return e?this._map.delete(t):e=[],e}append(t,e){let n=this._map.get(t);n||this._map.set(t,n=[]),n.push(...e);}has(t){return this._map.has(t)}clear(){this._map.clear();}}const ap=new RegExp(":enter","g"),lp=new RegExp(":leave","g");function cp(t,e,n,r,s,i={},o={},a,l,c=[]){return (new up).buildKeyframes(t,e,n,r,s,i,o,a,l,c)}class up{buildKeyframes(t,e,n,r,s,i,o,a,l,c=[]){l=l||new op;const u=new dp(t,e,l,r,s,c,[]);u.options=a,u.currentTimeline.setStyles([i],null,u.errors,a),Qd(this,n,u);const h=u.timelines.filter(t=>t.containsAnimation());if(h.length&&Object.keys(o).length){const t=h[h.length-1];t.allowOnlyTimelineStyles()||t.setStyles([o],null,u.errors,a);}return h.length?h.map(t=>t.buildKeyframes()):[ip(e,[],[],[],0,0,"",!1)]}visitTrigger(t,e){}visitState(t,e){}visitTransition(t,e){}visitAnimateChild(t,e){const n=e.subInstructions.consume(e.element);if(n){const r=e.createSubContext(t.options),s=e.currentTimeline.currentTime,i=this._visitSubInstructions(n,r,r.options);s!=i&&e.transformIntoNewTimeline(i);}e.previousNode=t;}visitAnimateRef(t,e){const n=e.createSubContext(t.options);n.transformIntoNewTimeline(),this.visitReference(t.animation,n),e.transformIntoNewTimeline(n.currentTimeline.currentTime),e.previousNode=t;}_visitSubInstructions(t,e,n){let r=e.currentTimeline.currentTime;const s=null!=n.duration?Od(n.duration):null,i=null!=n.delay?Od(n.delay):null;return 0!==s&&t.forEach(t=>{const n=e.appendInstructionToTimeline(t,s,i);r=Math.max(r,n.duration+n.delay);}),r}visitReference(t,e){e.updateOptions(t.options,!0),Qd(this,t.animation,e),e.previousNode=t;}visitSequence(t,e){const n=e.subContextCount;let r=e;const s=t.options;if(s&&(s.params||s.delay)&&(r=e.createSubContext(s),r.transformIntoNewTimeline(),null!=s.delay)){6==r.previousNode.type&&(r.currentTimeline.snapshotCurrentStyles(),r.previousNode=hp);const t=Od(s.delay);r.delayNextStep(t);}t.steps.length&&(t.steps.forEach(t=>Qd(this,t,r)),r.currentTimeline.applyStylesToKeyframe(),r.subContextCount>n&&r.transformIntoNewTimeline()),e.previousNode=t;}visitGroup(t,e){const n=[];let r=e.currentTimeline.currentTime;const s=t.options&&t.options.delay?Od(t.options.delay):0;t.steps.forEach(i=>{const o=e.createSubContext(t.options);s&&o.delayNextStep(s),Qd(this,i,o),r=Math.max(r,o.currentTimeline.currentTime),n.push(o.currentTimeline);}),n.forEach(t=>e.currentTimeline.mergeTimelineCollectedStyles(t)),e.transformIntoNewTimeline(r),e.previousNode=t;}_visitTiming(t,e){if(t.dynamic){const n=t.strValue;return Pd(e.params?Vd(n,e.params,e.errors):n,e.errors)}return {duration:t.duration,delay:t.delay,easing:t.easing}}visitAnimate(t,e){const n=e.currentAnimateTimings=this._visitTiming(t.timings,e),r=e.currentTimeline;n.delay&&(e.incrementTime(n.delay),r.snapshotCurrentStyles());const s=t.style;5==s.type?this.visitKeyframes(s,e):(e.incrementTime(n.duration),this.visitStyle(s,e),r.applyStylesToKeyframe()),e.currentAnimateTimings=null,e.previousNode=t;}visitStyle(t,e){const n=e.currentTimeline,r=e.currentAnimateTimings;!r&&n.getCurrentStyleProperties().length&&n.forwardFrame();const s=r&&r.easing||t.easing;t.isEmptyStep?n.applyEmptyStep(s):n.setStyles(t.styles,s,e.errors,e.options),e.previousNode=t;}visitKeyframes(t,e){const n=e.currentAnimateTimings,r=e.currentTimeline.duration,s=n.duration,i=e.createSubContext().currentTimeline;i.easing=n.easing,t.styles.forEach(t=>{i.forwardTime((t.offset||0)*s),i.setStyles(t.styles,t.easing,e.errors,e.options),i.applyStylesToKeyframe();}),e.currentTimeline.mergeTimelineCollectedStyles(i),e.transformIntoNewTimeline(r+s),e.previousNode=t;}visitQuery(t,e){const n=e.currentTimeline.currentTime,r=t.options||{},s=r.delay?Od(r.delay):0;s&&(6===e.previousNode.type||0==n&&e.currentTimeline.getCurrentStyleProperties().length)&&(e.currentTimeline.snapshotCurrentStyles(),e.previousNode=hp);let i=n;const o=e.invokeQuery(t.selector,t.originalSelector,t.limit,t.includeSelf,!!r.optional,e.errors);e.currentQueryTotal=o.length;let a=null;o.forEach((n,r)=>{e.currentQueryIndex=r;const o=e.createSubContext(t.options,n);s&&o.delayNextStep(s),n===e.element&&(a=o.currentTimeline),Qd(this,t.animation,o),o.currentTimeline.applyStylesToKeyframe(),i=Math.max(i,o.currentTimeline.currentTime);}),e.currentQueryIndex=0,e.currentQueryTotal=0,e.transformIntoNewTimeline(i),a&&(e.currentTimeline.mergeTimelineCollectedStyles(a),e.currentTimeline.snapshotCurrentStyles()),e.previousNode=t;}visitStagger(t,e){const n=e.parentContext,r=e.currentTimeline,s=t.timings,i=Math.abs(s.duration),o=i*(e.currentQueryTotal-1);let a=i*e.currentQueryIndex;switch(s.duration<0?"reverse":s.easing){case"reverse":a=o-a;break;case"full":a=n.currentStaggerTime;}const l=e.currentTimeline;a&&l.delayNextStep(a);const c=l.currentTime;Qd(this,t.animation,e),e.previousNode=t,n.currentStaggerTime=r.currentTime-c+(r.startTime-n.currentTimeline.startTime);}}const hp={};class dp{constructor(t,e,n,r,s,i,o,a){this._driver=t,this.element=e,this.subInstructions=n,this._enterClassName=r,this._leaveClassName=s,this.errors=i,this.timelines=o,this.parentContext=null,this.currentAnimateTimings=null,this.previousNode=hp,this.subContextCount=0,this.options={},this.currentQueryIndex=0,this.currentQueryTotal=0,this.currentStaggerTime=0,this.currentTimeline=a||new pp(this._driver,e,0),o.push(this.currentTimeline);}get params(){return this.options.params}updateOptions(t,e){if(!t)return;const n=t;let r=this.options;null!=n.duration&&(r.duration=Od(n.duration)),null!=n.delay&&(r.delay=Od(n.delay));const s=n.params;if(s){let t=r.params;t||(t=this.options.params={}),Object.keys(s).forEach(n=>{e&&t.hasOwnProperty(n)||(t[n]=Vd(s[n],t,this.errors));});}}_copyOptions(){const t={};if(this.options){const e=this.options.params;if(e){const n=t.params={};Object.keys(e).forEach(t=>{n[t]=e[t];});}}return t}createSubContext(t=null,e,n){const r=e||this.element,s=new dp(this._driver,r,this.subInstructions,this._enterClassName,this._leaveClassName,this.errors,this.timelines,this.currentTimeline.fork(r,n||0));return s.previousNode=this.previousNode,s.currentAnimateTimings=this.currentAnimateTimings,s.options=this._copyOptions(),s.updateOptions(t),s.currentQueryIndex=this.currentQueryIndex,s.currentQueryTotal=this.currentQueryTotal,s.parentContext=this,this.subContextCount++,s}transformIntoNewTimeline(t){return this.previousNode=hp,this.currentTimeline=this.currentTimeline.fork(this.element,t),this.timelines.push(this.currentTimeline),this.currentTimeline}appendInstructionToTimeline(t,e,n){const r={duration:null!=e?e:t.duration,delay:this.currentTimeline.currentTime+(null!=n?n:0)+t.delay,easing:""},s=new fp(this._driver,t.element,t.keyframes,t.preStyleProps,t.postStyleProps,r,t.stretchStartingKeyframe);return this.timelines.push(s),r}incrementTime(t){this.currentTimeline.forwardTime(this.currentTimeline.duration+t);}delayNextStep(t){t>0&&this.currentTimeline.delayNextStep(t);}invokeQuery(t,e,n,r,s,i){let o=[];if(r&&o.push(this.element),t.length>0){t=(t=t.replace(ap,"."+this._enterClassName)).replace(lp,"."+this._leaveClassName);let e=this._driver.query(this.element,t,1!=n);0!==n&&(e=n<0?e.slice(e.length+n,e.length):e.slice(0,n)),o.push(...e);}return s||0!=o.length||i.push(`\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`),o}}class pp{constructor(t,e,n,r){this._driver=t,this.element=e,this.startTime=n,this._elementTimelineStylesLookup=r,this.duration=0,this._previousKeyframe={},this._currentKeyframe={},this._keyframes=new Map,this._styleSummary={},this._pendingStyles={},this._backFill={},this._currentEmptyStepKeyframe=null,this._elementTimelineStylesLookup||(this._elementTimelineStylesLookup=new Map),this._localTimelineStyles=Object.create(this._backFill,{}),this._globalTimelineStyles=this._elementTimelineStylesLookup.get(e),this._globalTimelineStyles||(this._globalTimelineStyles=this._localTimelineStyles,this._elementTimelineStylesLookup.set(e,this._localTimelineStyles)),this._loadKeyframe();}containsAnimation(){switch(this._keyframes.size){case 0:return !1;case 1:return this.getCurrentStyleProperties().length>0;default:return !0}}getCurrentStyleProperties(){return Object.keys(this._currentKeyframe)}get currentTime(){return this.startTime+this.duration}delayNextStep(t){const e=1==this._keyframes.size&&Object.keys(this._pendingStyles).length;this.duration||e?(this.forwardTime(this.currentTime+t),e&&this.snapshotCurrentStyles()):this.startTime+=t;}fork(t,e){return this.applyStylesToKeyframe(),new pp(this._driver,t,e||this.currentTime,this._elementTimelineStylesLookup)}_loadKeyframe(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=Object.create(this._backFill,{}),this._keyframes.set(this.duration,this._currentKeyframe));}forwardFrame(){this.duration+=1,this._loadKeyframe();}forwardTime(t){this.applyStylesToKeyframe(),this.duration=t,this._loadKeyframe();}_updateStyle(t,e){this._localTimelineStyles[t]=e,this._globalTimelineStyles[t]=e,this._styleSummary[t]={time:this.currentTime,value:e};}allowOnlyTimelineStyles(){return this._currentEmptyStepKeyframe!==this._currentKeyframe}applyEmptyStep(t){t&&(this._previousKeyframe.easing=t),Object.keys(this._globalTimelineStyles).forEach(t=>{this._backFill[t]=this._globalTimelineStyles[t]||Xh,this._currentKeyframe[t]=Xh;}),this._currentEmptyStepKeyframe=this._currentKeyframe;}setStyles(t,e,n,r){e&&(this._previousKeyframe.easing=e);const s=r&&r.params||{},i=function(t,e){const n={};let r;return t.forEach(t=>{"*"===t?(r=r||Object.keys(e),r.forEach(t=>{n[t]=Xh;})):jd(t,!1,n);}),n}(t,this._globalTimelineStyles);Object.keys(i).forEach(t=>{const e=Vd(i[t],s,n);this._pendingStyles[t]=e,this._localTimelineStyles.hasOwnProperty(t)||(this._backFill[t]=this._globalTimelineStyles.hasOwnProperty(t)?this._globalTimelineStyles[t]:Xh),this._updateStyle(t,e);});}applyStylesToKeyframe(){const t=this._pendingStyles,e=Object.keys(t);0!=e.length&&(this._pendingStyles={},e.forEach(e=>{this._currentKeyframe[e]=t[e];}),Object.keys(this._localTimelineStyles).forEach(t=>{this._currentKeyframe.hasOwnProperty(t)||(this._currentKeyframe[t]=this._localTimelineStyles[t]);}));}snapshotCurrentStyles(){Object.keys(this._localTimelineStyles).forEach(t=>{const e=this._localTimelineStyles[t];this._pendingStyles[t]=e,this._updateStyle(t,e);});}getFinalKeyframe(){return this._keyframes.get(this.duration)}get properties(){const t=[];for(let e in this._currentKeyframe)t.push(e);return t}mergeTimelineCollectedStyles(t){Object.keys(t._styleSummary).forEach(e=>{const n=this._styleSummary[e],r=t._styleSummary[e];(!n||r.time>n.time)&&this._updateStyle(e,r.value);});}buildKeyframes(){this.applyStylesToKeyframe();const t=new Set,e=new Set,n=1===this._keyframes.size&&0===this.duration;let r=[];this._keyframes.forEach((s,i)=>{const o=jd(s,!0);Object.keys(o).forEach(n=>{const r=o[n];"!"==r?t.add(n):r==Xh&&e.add(n);}),n||(o.offset=i/this.duration),r.push(o);});const s=t.size?qd(t.values()):[],i=e.size?qd(e.values()):[];if(n){const t=r[0],e=Nd(t);t.offset=0,e.offset=1,r=[t,e];}return ip(this.element,r,s,i,this.duration,this.startTime,this.easing,!1)}}class fp extends pp{constructor(t,e,n,r,s,i,o=!1){super(t,e,i.delay),this.element=e,this.keyframes=n,this.preStyleProps=r,this.postStyleProps=s,this._stretchStartingKeyframe=o,this.timings={duration:i.duration,delay:i.delay,easing:i.easing};}containsAnimation(){return this.keyframes.length>1}buildKeyframes(){let t=this.keyframes,{delay:e,duration:n,easing:r}=this.timings;if(this._stretchStartingKeyframe&&e){const s=[],i=n+e,o=e/i,a=jd(t[0],!1);a.offset=0,s.push(a);const l=jd(t[0],!1);l.offset=mp(o),s.push(l);const c=t.length-1;for(let r=1;r<=c;r++){let o=jd(t[r],!1);o.offset=mp((e+o.offset*n)/i),s.push(o);}n=i,e=0,r="",t=s;}return ip(this.element,t,this.preStyleProps,this.postStyleProps,n,e,r,!0)}}function mp(t,e=3){const n=Math.pow(10,e-1);return Math.round(t*n)/n}class gp{}class yp extends gp{normalizePropertyName(t,e){return Bd(t)}normalizeStyleValue(t,e,n,r){let s="";const i=n.toString().trim();if(_p[e]&&0!==n&&"0"!==n)if("number"==typeof n)s="px";else {const e=n.match(/^[+-]?[\d\.]+([a-z]*)$/);e&&0==e[1].length&&r.push(`Please provide a CSS unit value for ${t}:${n}`);}return i+s}}const _p=(()=>function(t){const e={};return t.forEach(t=>e[t]=!0),e}("width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(",")))();function vp(t,e,n,r,s,i,o,a,l,c,u,h,d){return {type:0,element:t,triggerName:e,isRemovalTransition:s,fromState:n,fromStyles:i,toState:r,toStyles:o,timelines:a,queriedElements:l,preStyleProps:c,postStyleProps:u,totalTime:h,errors:d}}const wp={};class bp{constructor(t,e,n){this._triggerName=t,this.ast=e,this._stateStyles=n;}match(t,e,n,r){return function(t,e,n,r,s){return t.some(t=>t(e,n,r,s))}(this.ast.matchers,t,e,n,r)}buildStyles(t,e,n){const r=this._stateStyles["*"],s=this._stateStyles[t],i=r?r.buildStyles(e,n):{};return s?s.buildStyles(e,n):i}build(t,e,n,r,s,i,o,a,l,c){const u=[],h=this.ast.options&&this.ast.options.params||wp,d=this.buildStyles(n,o&&o.params||wp,u),p=a&&a.params||wp,f=this.buildStyles(r,p,u),m=new Set,g=new Map,y=new Map,_="void"===r,v={params:Object.assign(Object.assign({},h),p)},w=c?[]:cp(t,e,this.ast.animation,s,i,d,f,v,l,u);let b=0;if(w.forEach(t=>{b=Math.max(t.duration+t.delay,b);}),u.length)return vp(e,this._triggerName,n,r,_,d,f,[],[],g,y,b,u);w.forEach(t=>{const n=t.element,r=hd(g,n,{});t.preStyleProps.forEach(t=>r[t]=!0);const s=hd(y,n,{});t.postStyleProps.forEach(t=>s[t]=!0),n!==e&&m.add(n);});const S=qd(m.values());return vp(e,this._triggerName,n,r,_,d,f,w,S,g,y,b)}}class Sp{constructor(t,e){this.styles=t,this.defaultParams=e;}buildStyles(t,e){const n={},r=Nd(this.defaultParams);return Object.keys(t).forEach(e=>{const n=t[e];null!=n&&(r[e]=n);}),this.styles.styles.forEach(t=>{if("string"!=typeof t){const s=t;Object.keys(s).forEach(t=>{let i=s[t];i.length>1&&(i=Vd(i,r,e)),n[t]=i;});}}),n}}class Ep{constructor(t,e){this.name=t,this.ast=e,this.transitionFactories=[],this.states={},e.states.forEach(t=>{this.states[t.name]=new Sp(t.style,t.options&&t.options.params||{});}),Cp(this.states,"true","1"),Cp(this.states,"false","0"),e.transitions.forEach(e=>{this.transitionFactories.push(new bp(t,e,this.states));}),this.fallbackTransition=new bp(t,{type:1,animation:{type:2,steps:[],options:null},matchers:[(t,e)=>!0],options:null,queryCount:0,depCount:0},this.states);}get containsQueries(){return this.ast.queryCount>0}matchTransition(t,e,n,r){return this.transitionFactories.find(s=>s.match(t,e,n,r))||null}matchStyles(t,e,n){return this.fallbackTransition.buildStyles(t,e,n)}}function Cp(t,e,n){t.hasOwnProperty(e)?t.hasOwnProperty(n)||(t[n]=t[e]):t.hasOwnProperty(n)&&(t[e]=t[n]);}const Tp=new op;class xp{constructor(t,e,n){this.bodyNode=t,this._driver=e,this._normalizer=n,this._animations={},this._playersById={},this.players=[];}register(t,e){const n=[],r=Xd(this._driver,e,n);if(n.length)throw new Error("Unable to build the animation due to the following errors: "+n.join("\n"));this._animations[t]=r;}_buildPlayer(t,e,n){const r=t.element,s=ad(0,this._normalizer,0,t.keyframes,e,n);return this._driver.animate(r,s,t.duration,t.delay,t.easing,[],!0)}create(t,e,n={}){const r=[],s=this._animations[t];let i;const o=new Map;if(s?(i=cp(this._driver,e,s,Cd,Td,{},{},n,Tp,r),i.forEach(t=>{const e=hd(o,t.element,{});t.postStyleProps.forEach(t=>e[t]=null);})):(r.push("The requested animation doesn't exist or has already been destroyed"),i=[]),r.length)throw new Error("Unable to create the animation due to the following errors: "+r.join("\n"));o.forEach((t,e)=>{Object.keys(t).forEach(n=>{t[n]=this._driver.computeStyle(e,n,Xh);});});const a=od(i.map(t=>{const e=o.get(t.element);return this._buildPlayer(t,{},e)}));return this._playersById[t]=a,a.onDestroy(()=>this.destroy(t)),this.players.push(a),a}destroy(t){const e=this._getPlayer(t);e.destroy(),delete this._playersById[t];const n=this.players.indexOf(e);n>=0&&this.players.splice(n,1);}_getPlayer(t){const e=this._playersById[t];if(!e)throw new Error("Unable to find the timeline player referenced by "+t);return e}listen(t,e,n,r){const s=ud(e,"","","");return ld(this._getPlayer(t),n,s,r),()=>{}}command(t,e,n,r){if("register"==n)return void this.register(t,r[0]);if("create"==n)return void this.create(t,e,r[0]||{});const s=this._getPlayer(t);switch(n){case"play":s.play();break;case"pause":s.pause();break;case"reset":s.reset();break;case"restart":s.restart();break;case"finish":s.finish();break;case"init":s.init();break;case"setPosition":s.setPosition(parseFloat(r[0]));break;case"destroy":this.destroy(t);}}}const kp="ng-animate-queued",Ap="ng-animate-disabled",Ip=".ng-animate-disabled",Op=[],Rp={namespaceId:"",setForRemoval:!1,setForMove:!1,hasAnimation:!1,removedBeforeQueried:!1},Pp={namespaceId:"",setForMove:!1,setForRemoval:!1,hasAnimation:!1,removedBeforeQueried:!0};class Np{constructor(t,e=""){this.namespaceId=e;const n=t&&t.hasOwnProperty("value");if(this.value=null!=(r=n?t.value:t)?r:null,n){const e=Nd(t);delete e.value,this.options=e;}else this.options={};var r;this.options.params||(this.options.params={});}get params(){return this.options.params}absorbOptions(t){const e=t.params;if(e){const t=this.options.params;Object.keys(e).forEach(n=>{null==t[n]&&(t[n]=e[n]);});}}}const jp="void",Dp=new Np(jp);class Fp{constructor(t,e,n){this.id=t,this.hostElement=e,this._engine=n,this.players=[],this._triggers={},this._queue=[],this._elementListeners=new Map,this._hostClassName="ng-tns-"+t,qp(e,this._hostClassName);}listen(t,e,n,r){if(!this._triggers.hasOwnProperty(e))throw new Error(`Unable to listen on the animation trigger event "${n}" because the animation trigger "${e}" doesn't exist!`);if(null==n||0==n.length)throw new Error(`Unable to listen on the animation trigger "${e}" because the provided event is undefined!`);if("start"!=(s=n)&&"done"!=s)throw new Error(`The provided animation trigger event "${n}" for the animation trigger "${e}" is not supported!`);var s;const i=hd(this._elementListeners,t,[]),o={name:e,phase:n,callback:r};i.push(o);const a=hd(this._engine.statesByElement,t,{});return a.hasOwnProperty(e)||(qp(t,xd),qp(t,"ng-trigger-"+e),a[e]=Dp),()=>{this._engine.afterFlush(()=>{const t=i.indexOf(o);t>=0&&i.splice(t,1),this._triggers[e]||delete a[e];});}}register(t,e){return !this._triggers[t]&&(this._triggers[t]=e,!0)}_getTrigger(t){const e=this._triggers[t];if(!e)throw new Error(`The provided animation trigger "${t}" has not been registered!`);return e}trigger(t,e,n,r=!0){const s=this._getTrigger(e),i=new Up(this.id,e,t);let o=this._engine.statesByElement.get(t);o||(qp(t,xd),qp(t,"ng-trigger-"+e),this._engine.statesByElement.set(t,o={}));let a=o[e];const l=new Np(n,this.id);if(!(n&&n.hasOwnProperty("value"))&&a&&l.absorbOptions(a.options),o[e]=l,a||(a=Dp),l.value!==jp&&a.value===l.value){if(!function(t,e){const n=Object.keys(t),r=Object.keys(e);if(n.length!=r.length)return !1;for(let s=0;s<n.length;s++){const r=n[s];if(!e.hasOwnProperty(r)||t[r]!==e[r])return !1}return !0}(a.params,l.params)){const e=[],n=s.matchStyles(a.value,a.params,e),r=s.matchStyles(l.value,l.params,e);e.length?this._engine.reportError(e):this._engine.afterFlush(()=>{Ud(t,n),Md(t,r);});}return}const c=hd(this._engine.playersByElement,t,[]);c.forEach(t=>{t.namespaceId==this.id&&t.triggerName==e&&t.queued&&t.destroy();});let u=s.matchTransition(a.value,l.value,t,l.params),h=!1;if(!u){if(!r)return;u=s.fallbackTransition,h=!0;}return this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:e,transition:u,fromState:a,toState:l,player:i,isFallbackTransition:h}),h||(qp(t,kp),i.onStart(()=>{zp(t,kp);})),i.onDone(()=>{let e=this.players.indexOf(i);e>=0&&this.players.splice(e,1);const n=this._engine.playersByElement.get(t);if(n){let t=n.indexOf(i);t>=0&&n.splice(t,1);}}),this.players.push(i),c.push(i),i}deregister(t){delete this._triggers[t],this._engine.statesByElement.forEach((e,n)=>{delete e[t];}),this._elementListeners.forEach((e,n)=>{this._elementListeners.set(n,e.filter(e=>e.name!=t));});}clearElementCache(t){this._engine.statesByElement.delete(t),this._elementListeners.delete(t);const e=this._engine.playersByElement.get(t);e&&(e.forEach(t=>t.destroy()),this._engine.playersByElement.delete(t));}_signalRemovalForInnerTriggers(t,e){const n=this._engine.driver.query(t,kd,!0);n.forEach(t=>{if(t.__ng_removed)return;const n=this._engine.fetchNamespacesByElement(t);n.size?n.forEach(n=>n.triggerLeaveAnimation(t,e,!1,!0)):this.clearElementCache(t);}),this._engine.afterFlushAnimationsDone(()=>n.forEach(t=>this.clearElementCache(t)));}triggerLeaveAnimation(t,e,n,r){const s=this._engine.statesByElement.get(t);if(s){const i=[];if(Object.keys(s).forEach(e=>{if(this._triggers[e]){const n=this.trigger(t,e,jp,r);n&&i.push(n);}}),i.length)return this._engine.markElementAsRemoved(this.id,t,!0,e),n&&od(i).onDone(()=>this._engine.processLeaveNode(t)),!0}return !1}prepareLeaveAnimationListeners(t){const e=this._elementListeners.get(t);if(e){const n=new Set;e.forEach(e=>{const r=e.name;if(n.has(r))return;n.add(r);const s=this._triggers[r].fallbackTransition,i=this._engine.statesByElement.get(t)[r]||Dp,o=new Np(jp),a=new Up(this.id,r,t);this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:r,transition:s,fromState:i,toState:o,player:a,isFallbackTransition:!0});});}}removeNode(t,e){const n=this._engine;if(t.childElementCount&&this._signalRemovalForInnerTriggers(t,e),this.triggerLeaveAnimation(t,e,!0))return;let r=!1;if(n.totalAnimations){const e=n.players.length?n.playersByQueriedElement.get(t):[];if(e&&e.length)r=!0;else {let e=t;for(;e=e.parentNode;)if(n.statesByElement.get(e)){r=!0;break}}}if(this.prepareLeaveAnimationListeners(t),r)n.markElementAsRemoved(this.id,t,!1,e);else {const r=t.__ng_removed;r&&r!==Rp||(n.afterFlush(()=>this.clearElementCache(t)),n.destroyInnerAnimations(t),n._onRemovalComplete(t,e));}}insertNode(t,e){qp(t,this._hostClassName);}drainQueuedTransitions(t){const e=[];return this._queue.forEach(n=>{const r=n.player;if(r.destroyed)return;const s=n.element,i=this._elementListeners.get(s);i&&i.forEach(e=>{if(e.name==n.triggerName){const r=ud(s,n.triggerName,n.fromState.value,n.toState.value);r._data=t,ld(n.player,e.phase,r,e.callback);}}),r.markedForDestroy?this._engine.afterFlush(()=>{r.destroy();}):e.push(n);}),this._queue=[],e.sort((t,e)=>{const n=t.transition.ast.depCount,r=e.transition.ast.depCount;return 0==n||0==r?n-r:this._engine.driver.containsElement(t.element,e.element)?1:-1})}destroy(t){this.players.forEach(t=>t.destroy()),this._signalRemovalForInnerTriggers(this.hostElement,t);}elementContainsData(t){let e=!1;return this._elementListeners.has(t)&&(e=!0),e=!!this._queue.find(e=>e.element===t)||e,e}}class Mp{constructor(t,e,n){this.bodyNode=t,this.driver=e,this._normalizer=n,this.players=[],this.newHostElements=new Map,this.playersByElement=new Map,this.playersByQueriedElement=new Map,this.statesByElement=new Map,this.disabledNodes=new Set,this.totalAnimations=0,this.totalQueuedPlayers=0,this._namespaceLookup={},this._namespaceList=[],this._flushFns=[],this._whenQuietFns=[],this.namespacesByHostElement=new Map,this.collectedEnterElements=[],this.collectedLeaveElements=[],this.onRemovalComplete=(t,e)=>{};}_onRemovalComplete(t,e){this.onRemovalComplete(t,e);}get queuedPlayers(){const t=[];return this._namespaceList.forEach(e=>{e.players.forEach(e=>{e.queued&&t.push(e);});}),t}createNamespace(t,e){const n=new Fp(t,e,this);return e.parentNode?this._balanceNamespaceList(n,e):(this.newHostElements.set(e,n),this.collectEnterElement(e)),this._namespaceLookup[t]=n}_balanceNamespaceList(t,e){const n=this._namespaceList.length-1;if(n>=0){let r=!1;for(let s=n;s>=0;s--)if(this.driver.containsElement(this._namespaceList[s].hostElement,e)){this._namespaceList.splice(s+1,0,t),r=!0;break}r||this._namespaceList.splice(0,0,t);}else this._namespaceList.push(t);return this.namespacesByHostElement.set(e,t),t}register(t,e){let n=this._namespaceLookup[t];return n||(n=this.createNamespace(t,e)),n}registerTrigger(t,e,n){let r=this._namespaceLookup[t];r&&r.register(e,n)&&this.totalAnimations++;}destroy(t,e){if(!t)return;const n=this._fetchNamespace(t);this.afterFlush(()=>{this.namespacesByHostElement.delete(n.hostElement),delete this._namespaceLookup[t];const e=this._namespaceList.indexOf(n);e>=0&&this._namespaceList.splice(e,1);}),this.afterFlushAnimationsDone(()=>n.destroy(e));}_fetchNamespace(t){return this._namespaceLookup[t]}fetchNamespacesByElement(t){const e=new Set,n=this.statesByElement.get(t);if(n){const t=Object.keys(n);for(let r=0;r<t.length;r++){const s=n[t[r]].namespaceId;if(s){const t=this._fetchNamespace(s);t&&e.add(t);}}}return e}trigger(t,e,n,r){if(Lp(e)){const s=this._fetchNamespace(t);if(s)return s.trigger(e,n,r),!0}return !1}insertNode(t,e,n,r){if(!Lp(e))return;const s=e.__ng_removed;if(s&&s.setForRemoval){s.setForRemoval=!1,s.setForMove=!0;const t=this.collectedLeaveElements.indexOf(e);t>=0&&this.collectedLeaveElements.splice(t,1);}if(t){const r=this._fetchNamespace(t);r&&r.insertNode(e,n);}r&&this.collectEnterElement(e);}collectEnterElement(t){this.collectedEnterElements.push(t);}markElementAsDisabled(t,e){e?this.disabledNodes.has(t)||(this.disabledNodes.add(t),qp(t,Ap)):this.disabledNodes.has(t)&&(this.disabledNodes.delete(t),zp(t,Ap));}removeNode(t,e,n,r){if(Lp(e)){const s=t?this._fetchNamespace(t):null;if(s?s.removeNode(e,r):this.markElementAsRemoved(t,e,!1,r),n){const n=this.namespacesByHostElement.get(e);n&&n.id!==t&&n.removeNode(e,r);}}else this._onRemovalComplete(e,r);}markElementAsRemoved(t,e,n,r){this.collectedLeaveElements.push(e),e.__ng_removed={namespaceId:t,setForRemoval:r,hasAnimation:n,removedBeforeQueried:!1};}listen(t,e,n,r,s){return Lp(e)?this._fetchNamespace(t).listen(e,n,r,s):()=>{}}_buildInstruction(t,e,n,r,s){return t.transition.build(this.driver,t.element,t.fromState.value,t.toState.value,n,r,t.fromState.options,t.toState.options,e,s)}destroyInnerAnimations(t){let e=this.driver.query(t,kd,!0);e.forEach(t=>this.destroyActiveAnimationsForElement(t)),0!=this.playersByQueriedElement.size&&(e=this.driver.query(t,Id,!0),e.forEach(t=>this.finishActiveQueriedAnimationOnElement(t)));}destroyActiveAnimationsForElement(t){const e=this.playersByElement.get(t);e&&e.forEach(t=>{t.queued?t.markedForDestroy=!0:t.destroy();});}finishActiveQueriedAnimationOnElement(t){const e=this.playersByQueriedElement.get(t);e&&e.forEach(t=>t.finish());}whenRenderingDone(){return new Promise(t=>{if(this.players.length)return od(this.players).onDone(()=>t());t();})}processLeaveNode(t){const e=t.__ng_removed;if(e&&e.setForRemoval){if(t.__ng_removed=Rp,e.namespaceId){this.destroyInnerAnimations(t);const n=this._fetchNamespace(e.namespaceId);n&&n.clearElementCache(t);}this._onRemovalComplete(t,e.setForRemoval);}this.driver.matchesElement(t,Ip)&&this.markElementAsDisabled(t,!1),this.driver.query(t,Ip,!0).forEach(t=>{this.markElementAsDisabled(t,!1);});}flush(t=-1){let e=[];if(this.newHostElements.size&&(this.newHostElements.forEach((t,e)=>this._balanceNamespaceList(t,e)),this.newHostElements.clear()),this.totalAnimations&&this.collectedEnterElements.length)for(let n=0;n<this.collectedEnterElements.length;n++)qp(this.collectedEnterElements[n],"ng-star-inserted");if(this._namespaceList.length&&(this.totalQueuedPlayers||this.collectedLeaveElements.length)){const n=[];try{e=this._flushAnimations(n,t);}finally{for(let t=0;t<n.length;t++)n[t]();}}else for(let n=0;n<this.collectedLeaveElements.length;n++)this.processLeaveNode(this.collectedLeaveElements[n]);if(this.totalQueuedPlayers=0,this.collectedEnterElements.length=0,this.collectedLeaveElements.length=0,this._flushFns.forEach(t=>t()),this._flushFns=[],this._whenQuietFns.length){const t=this._whenQuietFns;this._whenQuietFns=[],e.length?od(e).onDone(()=>{t.forEach(t=>t());}):t.forEach(t=>t());}}reportError(t){throw new Error("Unable to process animations due to the following failed trigger transitions\n "+t.join("\n"))}_flushAnimations(t,e){const n=new op,r=[],s=new Map,i=[],o=new Map,a=new Map,l=new Map,c=new Set;this.disabledNodes.forEach(t=>{c.add(t);const e=this.driver.query(t,".ng-animate-queued",!0);for(let n=0;n<e.length;n++)c.add(e[n]);});const u=this.bodyNode,h=Array.from(this.statesByElement.keys()),d=Vp(h,this.collectedEnterElements),p=new Map;let f=0;d.forEach((t,e)=>{const n=Cd+f++;p.set(e,n),t.forEach(t=>qp(t,n));});const m=[],g=new Set,y=new Set;for(let O=0;O<this.collectedLeaveElements.length;O++){const t=this.collectedLeaveElements[O],e=t.__ng_removed;e&&e.setForRemoval&&(m.push(t),g.add(t),e.hasAnimation?this.driver.query(t,".ng-star-inserted",!0).forEach(t=>g.add(t)):y.add(t));}const _=new Map,v=Vp(h,Array.from(g));v.forEach((t,e)=>{const n=Td+f++;_.set(e,n),t.forEach(t=>qp(t,n));}),t.push(()=>{d.forEach((t,e)=>{const n=p.get(e);t.forEach(t=>zp(t,n));}),v.forEach((t,e)=>{const n=_.get(e);t.forEach(t=>zp(t,n));}),m.forEach(t=>{this.processLeaveNode(t);});});const w=[],b=[];for(let O=this._namespaceList.length-1;O>=0;O--)this._namespaceList[O].drainQueuedTransitions(e).forEach(t=>{const e=t.player,s=t.element;if(w.push(e),this.collectedEnterElements.length){const t=s.__ng_removed;if(t&&t.setForMove)return void e.destroy()}const c=!u||!this.driver.containsElement(u,s),h=_.get(s),d=p.get(s),f=this._buildInstruction(t,n,d,h,c);if(f.errors&&f.errors.length)b.push(f);else {if(c)return e.onStart(()=>Ud(s,f.fromStyles)),e.onDestroy(()=>Md(s,f.toStyles)),void r.push(e);if(t.isFallbackTransition)return e.onStart(()=>Ud(s,f.fromStyles)),e.onDestroy(()=>Md(s,f.toStyles)),void r.push(e);f.timelines.forEach(t=>t.stretchStartingKeyframe=!0),n.append(s,f.timelines),i.push({instruction:f,player:e,element:s}),f.queriedElements.forEach(t=>hd(o,t,[]).push(e)),f.preStyleProps.forEach((t,e)=>{const n=Object.keys(t);if(n.length){let t=a.get(e);t||a.set(e,t=new Set),n.forEach(e=>t.add(e));}}),f.postStyleProps.forEach((t,e)=>{const n=Object.keys(t);let r=l.get(e);r||l.set(e,r=new Set),n.forEach(t=>r.add(t));});}});if(b.length){const t=[];b.forEach(e=>{t.push(`@${e.triggerName} has failed due to:\n`),e.errors.forEach(e=>t.push(`- ${e}\n`));}),w.forEach(t=>t.destroy()),this.reportError(t);}const S=new Map,E=new Map;i.forEach(t=>{const e=t.element;n.has(e)&&(E.set(e,e),this._beforeAnimationBuild(t.player.namespaceId,t.instruction,S));}),r.forEach(t=>{const e=t.element;this._getPreviousPlayers(e,!1,t.namespaceId,t.triggerName,null).forEach(t=>{hd(S,e,[]).push(t),t.destroy();});});const C=m.filter(t=>Wp(t,a,l)),T=new Map;$p(T,this.driver,y,l,Xh).forEach(t=>{Wp(t,a,l)&&C.push(t);});const x=new Map;d.forEach((t,e)=>{$p(x,this.driver,new Set(t),a,"!");}),C.forEach(t=>{const e=T.get(t),n=x.get(t);T.set(t,Object.assign(Object.assign({},e),n));});const k=[],A=[],I={};i.forEach(t=>{const{element:e,player:i,instruction:o}=t;if(n.has(e)){if(c.has(e))return i.onDestroy(()=>Md(e,o.toStyles)),i.disabled=!0,i.overrideTotalTime(o.totalTime),void r.push(i);let t=I;if(E.size>1){let n=e;const r=[];for(;n=n.parentNode;){const e=E.get(n);if(e){t=e;break}r.push(n);}r.forEach(e=>E.set(e,t));}const n=this._buildAnimation(i.namespaceId,o,S,s,x,T);if(i.setRealPlayer(n),t===I)k.push(i);else {const e=this.playersByElement.get(t);e&&e.length&&(i.parentPlayer=od(e)),r.push(i);}}else Ud(e,o.fromStyles),i.onDestroy(()=>Md(e,o.toStyles)),A.push(i),c.has(e)&&r.push(i);}),A.forEach(t=>{const e=s.get(t.element);if(e&&e.length){const n=od(e);t.setRealPlayer(n);}}),r.forEach(t=>{t.parentPlayer?t.syncPlayerEvents(t.parentPlayer):t.destroy();});for(let O=0;O<m.length;O++){const t=m[O],e=t.__ng_removed;if(zp(t,Td),e&&e.hasAnimation)continue;let n=[];if(o.size){let e=o.get(t);e&&e.length&&n.push(...e);let r=this.driver.query(t,Id,!0);for(let t=0;t<r.length;t++){let e=o.get(r[t]);e&&e.length&&n.push(...e);}}const r=n.filter(t=>!t.destroyed);r.length?Bp(this,t,r):this.processLeaveNode(t);}return m.length=0,k.forEach(t=>{this.players.push(t),t.onDone(()=>{t.destroy();const e=this.players.indexOf(t);this.players.splice(e,1);}),t.play();}),k}elementContainsData(t,e){let n=!1;const r=e.__ng_removed;return r&&r.setForRemoval&&(n=!0),this.playersByElement.has(e)&&(n=!0),this.playersByQueriedElement.has(e)&&(n=!0),this.statesByElement.has(e)&&(n=!0),this._fetchNamespace(t).elementContainsData(e)||n}afterFlush(t){this._flushFns.push(t);}afterFlushAnimationsDone(t){this._whenQuietFns.push(t);}_getPreviousPlayers(t,e,n,r,s){let i=[];if(e){const e=this.playersByQueriedElement.get(t);e&&(i=e);}else {const e=this.playersByElement.get(t);if(e){const t=!s||s==jp;e.forEach(e=>{e.queued||(t||e.triggerName==r)&&i.push(e);});}}return (n||r)&&(i=i.filter(t=>!(n&&n!=t.namespaceId||r&&r!=t.triggerName))),i}_beforeAnimationBuild(t,e,n){const r=e.element,s=e.isRemovalTransition?void 0:t,i=e.isRemovalTransition?void 0:e.triggerName;for(const o of e.timelines){const t=o.element,a=t!==r,l=hd(n,t,[]);this._getPreviousPlayers(t,a,s,i,e.toState).forEach(t=>{const e=t.getRealPlayer();e.beforeDestroy&&e.beforeDestroy(),t.destroy(),l.push(t);});}Ud(r,e.fromStyles);}_buildAnimation(t,e,n,r,s,i){const o=e.triggerName,a=e.element,l=[],c=new Set,u=new Set,h=e.timelines.map(e=>{const h=e.element;c.add(h);const d=h.__ng_removed;if(d&&d.removedBeforeQueried)return new rd(e.duration,e.delay);const p=h!==a,f=function(t){const e=[];return Qp(t,e),e}((n.get(h)||Op).map(t=>t.getRealPlayer())).filter(t=>!!t.element&&t.element===h),m=s.get(h),g=i.get(h),y=ad(0,this._normalizer,0,e.keyframes,m,g),_=this._buildPlayer(e,y,f);if(e.subTimeline&&r&&u.add(h),p){const e=new Up(t,o,h);e.setRealPlayer(_),l.push(e);}return _});l.forEach(t=>{hd(this.playersByQueriedElement,t.element,[]).push(t),t.onDone(()=>function(t,e,n){let r;if(t instanceof Map){if(r=t.get(e),r){if(r.length){const t=r.indexOf(n);r.splice(t,1);}0==r.length&&t.delete(e);}}else if(r=t[e],r){if(r.length){const t=r.indexOf(n);r.splice(t,1);}0==r.length&&delete t[e];}return r}(this.playersByQueriedElement,t.element,t));}),c.forEach(t=>qp(t,Ad));const d=od(h);return d.onDestroy(()=>{c.forEach(t=>zp(t,Ad)),Md(a,e.toStyles);}),u.forEach(t=>{hd(r,t,[]).push(d);}),d}_buildPlayer(t,e,n){return e.length>0?this.driver.animate(t.element,e,t.duration,t.delay,t.easing,n):new rd(t.duration,t.delay)}}class Up{constructor(t,e,n){this.namespaceId=t,this.triggerName=e,this.element=n,this._player=new rd,this._containsRealPlayer=!1,this._queuedCallbacks={},this.destroyed=!1,this.markedForDestroy=!1,this.disabled=!1,this.queued=!0,this.totalTime=0;}setRealPlayer(t){this._containsRealPlayer||(this._player=t,Object.keys(this._queuedCallbacks).forEach(e=>{this._queuedCallbacks[e].forEach(n=>ld(t,e,void 0,n));}),this._queuedCallbacks={},this._containsRealPlayer=!0,this.overrideTotalTime(t.totalTime),this.queued=!1);}getRealPlayer(){return this._player}overrideTotalTime(t){this.totalTime=t;}syncPlayerEvents(t){const e=this._player;e.triggerCallback&&t.onStart(()=>e.triggerCallback("start")),t.onDone(()=>this.finish()),t.onDestroy(()=>this.destroy());}_queueEvent(t,e){hd(this._queuedCallbacks,t,[]).push(e);}onDone(t){this.queued&&this._queueEvent("done",t),this._player.onDone(t);}onStart(t){this.queued&&this._queueEvent("start",t),this._player.onStart(t);}onDestroy(t){this.queued&&this._queueEvent("destroy",t),this._player.onDestroy(t);}init(){this._player.init();}hasStarted(){return !this.queued&&this._player.hasStarted()}play(){!this.queued&&this._player.play();}pause(){!this.queued&&this._player.pause();}restart(){!this.queued&&this._player.restart();}finish(){this._player.finish();}destroy(){this.destroyed=!0,this._player.destroy();}reset(){!this.queued&&this._player.reset();}setPosition(t){this.queued||this._player.setPosition(t);}getPosition(){return this.queued?0:this._player.getPosition()}triggerCallback(t){const e=this._player;e.triggerCallback&&e.triggerCallback(t);}}function Lp(t){return t&&1===t.nodeType}function Hp(t,e){const n=t.style.display;return t.style.display=null!=e?e:"none",n}function $p(t,e,n,r,s){const i=[];n.forEach(t=>i.push(Hp(t)));const o=[];r.forEach((n,r)=>{const i={};n.forEach(t=>{const n=i[t]=e.computeStyle(r,t,s);n&&0!=n.length||(r.__ng_removed=Pp,o.push(r));}),t.set(r,i);});let a=0;return n.forEach(t=>Hp(t,i[a++])),o}function Vp(t,e){const n=new Map;if(t.forEach(t=>n.set(t,[])),0==e.length)return n;const r=new Set(e),s=new Map;function i(t){if(!t)return 1;let e=s.get(t);if(e)return e;const o=t.parentNode;return e=n.has(o)?o:r.has(o)?1:i(o),s.set(t,e),e}return e.forEach(t=>{const e=i(t);1!==e&&n.get(e).push(t);}),n}function qp(t,e){if(t.classList)t.classList.add(e);else {let n=t.$$classes;n||(n=t.$$classes={}),n[e]=!0;}}function zp(t,e){if(t.classList)t.classList.remove(e);else {let n=t.$$classes;n&&delete n[e];}}function Bp(t,e,n){od(n).onDone(()=>t.processLeaveNode(e));}function Qp(t,e){for(let n=0;n<t.length;n++){const r=t[n];r instanceof sd?Qp(r.players,e):e.push(r);}}function Wp(t,e,n){const r=n.get(t);if(!r)return !1;let s=e.get(t);return s?r.forEach(t=>s.add(t)):e.set(t,r),n.delete(t),!0}class Zp{constructor(t,e,n){this.bodyNode=t,this._driver=e,this._triggerCache={},this.onRemovalComplete=(t,e)=>{},this._transitionEngine=new Mp(t,e,n),this._timelineEngine=new xp(t,e,n),this._transitionEngine.onRemovalComplete=(t,e)=>this.onRemovalComplete(t,e);}registerTrigger(t,e,n,r,s){const i=t+"-"+r;let o=this._triggerCache[i];if(!o){const t=[],e=Xd(this._driver,s,t);if(t.length)throw new Error(`The animation trigger "${r}" has failed to build due to the following errors:\n - ${t.join("\n - ")}`);o=function(t,e){return new Ep(t,e)}(r,e),this._triggerCache[i]=o;}this._transitionEngine.registerTrigger(e,r,o);}register(t,e){this._transitionEngine.register(t,e);}destroy(t,e){this._transitionEngine.destroy(t,e);}onInsert(t,e,n,r){this._transitionEngine.insertNode(t,e,n,r);}onRemove(t,e,n,r){this._transitionEngine.removeNode(t,e,r||!1,n);}disableAnimations(t,e){this._transitionEngine.markElementAsDisabled(t,e);}process(t,e,n,r){if("@"==n.charAt(0)){const[t,s]=dd(n);this._timelineEngine.command(t,e,s,r);}else this._transitionEngine.trigger(t,e,n,r);}listen(t,e,n,r,s){if("@"==n.charAt(0)){const[t,r]=dd(n);return this._timelineEngine.listen(t,e,r,s)}return this._transitionEngine.listen(t,e,n,r,s)}flush(t=-1){this._transitionEngine.flush(t);}get players(){return this._transitionEngine.players.concat(this._timelineEngine.players)}whenRenderingDone(){return this._transitionEngine.whenRenderingDone()}}let Gp=(()=>{class t extends Jh{constructor(t,e){super(),this._nextAnimationId=0,this._renderer=t.createRenderer(e.body,{id:"0",encapsulation:wt.None,styles:[],data:{animation:[]}});}build(t){const e=this._nextAnimationId.toString();this._nextAnimationId++;const n=Array.isArray(t)?td(t):t;return Jp(this._renderer,null,e,"register",[n]),new Kp(e,this._renderer)}}return t.\u0275fac=function(e){return new(e||t)(Ln(Xs),Ln(wa))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();class Kp extends class{}{constructor(t,e){super(),this._id=t,this._renderer=e;}create(t,e){return new Yp(this._id,t,e||{},this._renderer)}}class Yp{constructor(t,e,n,r){this.id=t,this.element=e,this._renderer=r,this.parentPlayer=null,this._started=!1,this.totalTime=0,this._command("create",n);}_listen(t,e){return this._renderer.listen(this.element,`@@${this.id}:${t}`,e)}_command(t,...e){return Jp(this._renderer,this.element,this.id,t,e)}onDone(t){this._listen("done",t);}onStart(t){this._listen("start",t);}onDestroy(t){this._listen("destroy",t);}init(){this._command("init");}hasStarted(){return this._started}play(){this._command("play"),this._started=!0;}pause(){this._command("pause");}restart(){this._command("restart");}finish(){this._command("finish");}destroy(){this._command("destroy");}reset(){this._command("reset");}setPosition(t){this._command("setPosition",t);}getPosition(){var t,e;return null!==(e=null===(t=this._renderer.engine.players[+this.id])||void 0===t?void 0:t.getPosition())&&void 0!==e?e:0}}function Jp(t,e,n,r,s){return t.setProperty(e,`@@${n}:${r}`,s)}const Xp="@",tf="@.disabled";let ef=(()=>{class t{constructor(t,e,n){this.delegate=t,this.engine=e,this._zone=n,this._currentId=0,this._microtaskId=1,this._animationCallbacksBuffer=[],this._rendererCache=new Map,this._cdRecurDepth=0,this.promise=Promise.resolve(0),e.onRemovalComplete=(t,e)=>{e&&e.parentNode(t)&&e.removeChild(t.parentNode,t);};}createRenderer(t,e){const n=this.delegate.createRenderer(t,e);if(!(t&&e&&e.data&&e.data.animation)){let t=this._rendererCache.get(n);return t||(t=new nf("",n,this.engine),this._rendererCache.set(n,t)),t}const r=e.id,s=e.id+"-"+this._currentId;this._currentId++,this.engine.register(s,t);const i=e=>{Array.isArray(e)?e.forEach(i):this.engine.registerTrigger(r,s,t,e.name,e);};return e.data.animation.forEach(i),new rf(this,s,n,this.engine)}begin(){this._cdRecurDepth++,this.delegate.begin&&this.delegate.begin();}_scheduleCountTask(){this.promise.then(()=>{this._microtaskId++;});}scheduleListenerCallback(t,e,n){t>=0&&t<this._microtaskId?this._zone.run(()=>e(n)):(0==this._animationCallbacksBuffer.length&&Promise.resolve(null).then(()=>{this._zone.run(()=>{this._animationCallbacksBuffer.forEach(t=>{const[e,n]=t;e(n);}),this._animationCallbacksBuffer=[];});}),this._animationCallbacksBuffer.push([e,n]));}end(){this._cdRecurDepth--,0==this._cdRecurDepth&&this._zone.runOutsideAngular(()=>{this._scheduleCountTask(),this.engine.flush(this._microtaskId);}),this.delegate.end&&this.delegate.end();}whenRenderingDone(){return this.engine.whenRenderingDone()}}return t.\u0275fac=function(e){return new(e||t)(Ln(Xs),Ln(Zp),Ln(lo))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();class nf{constructor(t,e,n){this.namespaceId=t,this.delegate=e,this.engine=n,this.destroyNode=this.delegate.destroyNode?t=>e.destroyNode(t):null;}get data(){return this.delegate.data}destroy(){this.engine.destroy(this.namespaceId,this.delegate),this.delegate.destroy();}createElement(t,e){return this.delegate.createElement(t,e)}createComment(t){return this.delegate.createComment(t)}createText(t){return this.delegate.createText(t)}appendChild(t,e){this.delegate.appendChild(t,e),this.engine.onInsert(this.namespaceId,e,t,!1);}insertBefore(t,e,n,r=!0){this.delegate.insertBefore(t,e,n),this.engine.onInsert(this.namespaceId,e,t,r);}removeChild(t,e,n){this.engine.onRemove(this.namespaceId,e,this.delegate,n);}selectRootElement(t,e){return this.delegate.selectRootElement(t,e)}parentNode(t){return this.delegate.parentNode(t)}nextSibling(t){return this.delegate.nextSibling(t)}setAttribute(t,e,n,r){this.delegate.setAttribute(t,e,n,r);}removeAttribute(t,e,n){this.delegate.removeAttribute(t,e,n);}addClass(t,e){this.delegate.addClass(t,e);}removeClass(t,e){this.delegate.removeClass(t,e);}setStyle(t,e,n,r){this.delegate.setStyle(t,e,n,r);}removeStyle(t,e,n){this.delegate.removeStyle(t,e,n);}setProperty(t,e,n){e.charAt(0)==Xp&&e==tf?this.disableAnimations(t,!!n):this.delegate.setProperty(t,e,n);}setValue(t,e){this.delegate.setValue(t,e);}listen(t,e,n){return this.delegate.listen(t,e,n)}disableAnimations(t,e){this.engine.disableAnimations(t,e);}}class rf extends nf{constructor(t,e,n,r){super(e,n,r),this.factory=t,this.namespaceId=e;}setProperty(t,e,n){e.charAt(0)==Xp?"."==e.charAt(1)&&e==tf?this.disableAnimations(t,n=void 0===n||!!n):this.engine.process(this.namespaceId,t,e.substr(1),n):this.delegate.setProperty(t,e,n);}listen(t,e,n){if(e.charAt(0)==Xp){const r=function(t){switch(t){case"body":return document.body;case"document":return document;case"window":return window;default:return t}}(t);let s=e.substr(1),i="";return s.charAt(0)!=Xp&&([s,i]=function(t){const e=t.indexOf(".");return [t.substring(0,e),t.substr(e+1)]}(s)),this.engine.listen(this.namespaceId,r,s,i,t=>{this.factory.scheduleListenerCallback(t._data||-1,n,t);})}return this.delegate.listen(t,e,n)}}let sf=(()=>{class t extends Zp{constructor(t,e,n){super(t.body,e,n);}}return t.\u0275fac=function(e){return new(e||t)(Ln(wa),Ln(Ed),Ln(gp))},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})();const of=[{provide:Ed,useClass:Sd},{provide:new Sn("AnimationModuleType"),useValue:"NoopAnimations"},{provide:Jh,useClass:Gp},{provide:gp,useFactory:function(){return new yp}},{provide:Zp,useClass:sf},{provide:Xs,useFactory:function(t,e,n){return new ef(t,e,n)},deps:[ol,Zp,lo]}];let af=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},providers:of,imports:[_l]}),t})(),lf=(()=>{class t{constructor(){this._accessors=[];}add(t,e){this._accessors.push([t,e]);}remove(t){for(let e=this._accessors.length-1;e>=0;--e)if(this._accessors[e][1]===t)return void this._accessors.splice(e,1)}select(t){this._accessors.forEach(e=>{this._isSameGroup(e,t)&&e[1]!==t&&e[1].fireUncheck(t.value);});}_isSameGroup(t,e){return !!t[0].control&&t[0]._parent===e._control._parent&&t[1].name===e.name}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=it({token:t,factory:t.\u0275fac}),t})(),cf=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)}}),t})(),uf=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},providers:[lf],imports:[cf]}),t})(),hf=(()=>{class t{}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)},imports:[[uf,ya,_l,Yh,af],uf,ya,_l,Yh,af]}),t})(),df=(()=>{class t{constructor(t){this.changeDetectorRef=t;}ngOnInit(){}observeContent(){this.changeDetectorRef.detectChanges();}}return t.\u0275fac=function(e){return new(e||t)(Os(vi))},t.\u0275cmp=Ft({type:t,selectors:[["app-yalento-league-club"]],decls:3,vars:0,consts:[[1,"app-yalento-league-club",3,"cdkObserveContent"]],template:function(t,e){1&t&&(Ps(0,"div",0),Ds("cdkObserveContent",function(){return e.observeContent()}),Ps(1,"p"),function(t,e=""){const n=we(),r=be(),s=t+Bt,i=r.firstCreatePass?Pr(r,s,1,e,null):r.data[s],o=n[s]=function(t,e){return le(t)?t.createText(e):t.createTextNode(e)}(n[11],e);ur(r,n,o,i),Ce(i,!1);}(2,"club works11!"),Ns(),Ns());},directives:[ga],styles:[".app-yalento-league-club[_ngcontent-%COMP%]{border:1px solid red}"]}),t})(),pf=(()=>{class t{constructor(t){this.injector=t;}ngDoBootstrap(){customElements.define("app-yalento-league-club",function(t,e){const n=function(t,e){return e.get(Zs).resolveComponentFactory(t).inputs}(t,e.injector),r=e.strategyFactory||new aa(t,e.injector),s=function(t){const e={};return t.forEach(({propName:t,templateName:n})=>{var r;e[(r=n,r.replace(/[A-Z]/g,t=>"-"+t.toLowerCase()))]=t;}),e}(n);class i extends ca{constructor(t){super(),this.injector=t;}get ngElementStrategy(){if(!this._ngElementStrategy){const t=this._ngElementStrategy=r.create(this.injector||e.injector);n.forEach(({propName:e})=>{if(!this.hasOwnProperty(e))return;const n=this[e];delete this[e],t.setInputValue(e,n);});}return this._ngElementStrategy}attributeChangedCallback(t,e,n,r){this.ngElementStrategy.setInputValue(s[t],n);}connectedCallback(){let t=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),t=!0),this.ngElementStrategy.connect(this),t||this.subscribeToEvents();}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null);}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(t=>{const e=function(t,e,n){if("function"!=typeof CustomEvent){const r=t.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!1,n),r}return new CustomEvent(e,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,t.name,t.value);this.dispatchEvent(e);});}}return i.observedAttributes=Object.keys(s),n.forEach(({propName:t})=>{Object.defineProperty(i.prototype,t,{get(){return this.ngElementStrategy.getInputValue(t)},set(e){this.ngElementStrategy.setInputValue(t,e);},configurable:!0,enumerable:!0});}),i}(df,{injector:this.injector}));}}return t.\u0275mod=Ht({type:t}),t.\u0275inj=ot({factory:function(e){return new(e||t)(Ln(Cs))},providers:[],imports:[[hf]]}),t})();(function(){if(So)throw new Error("Cannot enable prod mode after platform setup.");bo=!1;})(),gl().bootstrapModule(pf).catch(t=>console.error(t));},"HCt/":function(t,e){function n(t){return Promise.resolve().then(function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}n.keys=function(){return []},n.resolve=n,t.exports=n,n.id="HCt/";}},[[0,0]]]);

	const fetchPromises = new Map();
	const jsonPromises = new Map();
	const textPromises = new Map();

	const fetchTextOnce = async url => {
		if (!fetchPromises.get(url)) {
			fetchPromises.set(url, fetch(url));
		}
		const response = await fetchPromises.get(url);

		if (!textPromises.get(url)) {
			textPromises.set(url, response.text());
		}

		return textPromises.get(url);
	};

	const fetchJsonOnce = async url => {
		if (!fetchPromises.get(url)) {
			fetchPromises.set(url, fetch(url));
		}
		const response = await fetchPromises.get(url);

		if (!jsonPromises.get(url)) {
			jsonPromises.set(url, response.json());
		}

		return jsonPromises.get(url);
	};

	class EventProvider {
		constructor() {
			this._eventRegistry = {};
		}

		attachEvent(eventName, fnFunction) {
			const eventRegistry = this._eventRegistry;
			let eventListeners = eventRegistry[eventName];

			if (!Array.isArray(eventListeners)) {
				eventRegistry[eventName] = [];
				eventListeners = eventRegistry[eventName];
			}

			eventListeners.push({
				"function": fnFunction,
			});
		}

		detachEvent(eventName, fnFunction) {
			const eventRegistry = this._eventRegistry;
			let eventListeners = eventRegistry[eventName];

			if (!eventListeners) {
				return;
			}

			eventListeners = eventListeners.filter(event => {
				return event["function"] !== fnFunction; // eslint-disable-line
			});

			if (eventListeners.length === 0) {
				delete eventRegistry[eventName];
			}
		}

		/**
		 * Fires an event and returns the results of all event listeners as an array.
		 * Example: If listeners return promises, you can: await fireEvent("myEvent") to know when all listeners have finished.
		 *
		 * @param eventName the event to fire
		 * @param data optional data to pass to each event listener
		 * @returns {Array} an array with the results of all event listeners
		 */
		fireEvent(eventName, data) {
			const eventRegistry = this._eventRegistry;
			const eventListeners = eventRegistry[eventName];

			if (!eventListeners) {
				return [];
			}

			return eventListeners.map(event => {
				return event["function"].call(this, data); // eslint-disable-line
			});
		}

		isHandlerAttached(eventName, fnFunction) {
			const eventRegistry = this._eventRegistry;
			const eventListeners = eventRegistry[eventName];

			if (!eventListeners) {
				return false;
			}

			for (let i = 0; i < eventListeners.length; i++) {
				const event = eventListeners[i];
				if (event["function"] === fnFunction) { // eslint-disable-line
					return true;
				}
			}

			return false;
		}

		hasListeners(eventName) {
			return !!this._eventRegistry[eventName];
		}
	}

	const eventProvider = new EventProvider();
	const LANG_CHANGE = "languageChange";

	const attachLanguageChange = listener => {
		eventProvider.attachEvent(LANG_CHANGE, listener);
	};

	const assetParameters = {"themes":{"default":"sap_fiori_3","all":["sap_fiori_3","sap_fiori_3_dark","sap_belize","sap_belize_hcb","sap_belize_hcw","sap_fiori_3_hcb","sap_fiori_3_hcw"]},"languages":{"default":"en","all":["ar","bg","ca","cs","da","de","el","en","es","et","fi","fr","hi","hr","hu","it","iw","ja","kk","ko","lt","lv","ms","nl","no","pl","pt","ro","ru","sh","sk","sl","sv","th","tr","uk","vi","zh_CN","zh_TW"]},"locales":{"default":"en","all":["ar","ar_EG","ar_SA","bg","ca","cs","da","de","de_AT","de_CH","el","el_CY","en","en_AU","en_GB","en_HK","en_IE","en_IN","en_NZ","en_PG","en_SG","en_ZA","es","es_AR","es_BO","es_CL","es_CO","es_MX","es_PE","es_UY","es_VE","et","fa","fi","fr","fr_BE","fr_CA","fr_CH","fr_LU","he","hi","hr","hu","id","it","it_CH","ja","kk","ko","lt","lv","ms","nb","nl","nl_BE","pl","pt","pt_PT","ro","ru","ru_UA","sk","sl","sr","sv","th","tr","uk","vi","zh_CN","zh_HK","zh_SG","zh_TW"]}};

	const DEFAULT_THEME = assetParameters.themes.default;
	const DEFAULT_LANGUAGE = assetParameters.languages.default;
	const DEFAULT_LOCALE = assetParameters.locales.default;
	const SUPPORTED_LOCALES = assetParameters.locales.all;

	var detectNavigatorLanguage = () => {
		const browserLanguages = navigator.languages;

		const navigatorLanguage = () => {
			return navigator.language;
		};

		const rawLocale = (browserLanguages && browserLanguages[0]) || navigatorLanguage() || navigator.userLanguage || navigator.browserLanguage;

		return rawLocale || DEFAULT_LANGUAGE;
	};

	var class2type = {};
	var hasOwn = class2type.hasOwnProperty;
	var toString = class2type.toString;
	var fnToString = hasOwn.toString;
	var ObjectFunctionString = fnToString.call(Object);
	var fnIsPlainObject = function (obj) {
	  var proto, Ctor;
	  if (!obj || toString.call(obj) !== "[object Object]") {
	    return false;
	  }
	  proto = Object.getPrototypeOf(obj);
	  if (!proto) {
	    return true;
	  }
	  Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
	  return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
	};

	var oToken = Object.create(null);
	var fnMerge = function () {
	    var src, copyIsArray, copy, name, options, clone, target = arguments[2] || {}, i = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? undefined : oToken;
	    if (typeof target !== 'object' && typeof target !== 'function') {
	        target = {};
	    }
	    for (; i < length; i++) {
	        if ((options = arguments[i]) != null) {
	            for (name in options) {
	                src = target[name];
	                copy = options[name];
	                if (name === '__proto__' || target === copy) {
	                    continue;
	                }
	                if (deep && copy && (fnIsPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
	                    if (copyIsArray) {
	                        copyIsArray = false;
	                        clone = src && Array.isArray(src) ? src : [];
	                    } else {
	                        clone = src && fnIsPlainObject(src) ? src : {};
	                    }
	                    target[name] = fnMerge(deep, arguments[1], clone, copy);
	                } else if (copy !== skipToken) {
	                    target[name] = copy;
	                }
	            }
	        }
	    }
	    return target;
	};

	var fnMerge$1 = function () {
	    var args = [
	        true,
	        false
	    ];
	    args.push.apply(args, arguments);
	    return fnMerge.apply(null, args);
	};

	const features = new Map();

	const getFeature = name => {
		return features.get(name);
	};

	let initialized = false;

	let initialConfig = {
		animationMode: "full",
		theme: DEFAULT_THEME,
		rtl: null,
		language: null,
		calendarType: null,
		noConflict: false, // no URL
		formatSettings: {},
		useDefaultLanguage: false,
		assetsPath: "",
	};

	/* General settings */
	const getAnimationMode = () => {
		initConfiguration();
		return initialConfig.animationMode;
	};

	const getTheme = () => {
		initConfiguration();
		return initialConfig.theme;
	};

	const getRTL = () => {
		initConfiguration();
		return initialConfig.rtl;
	};

	const getLanguage = () => {
		initConfiguration();
		return initialConfig.language;
	};

	/**
	 * Returns if the default language, that is inlined build time,
	 * should be used, instead of trying fetching the language over the network.
	 * @returns {Boolean}
	 */
	const getUseDefaultLanguage = () => {
		initConfiguration();
		return initialConfig.useDefaultLanguage;
	};

	const getNoConflict = () => {
		initConfiguration();
		return initialConfig.noConflict;
	};

	const getCalendarType = () => {
		initConfiguration();
		return initialConfig.calendarType;
	};

	const getFormatSettings = () => {
		initConfiguration();
		return initialConfig.formatSettings;
	};

	const getAssetsPath = () => {
		initConfiguration();
		return initialConfig.assetsPath;
	};

	const booleanMapping = new Map();
	booleanMapping.set("true", true);
	booleanMapping.set("false", false);

	const parseConfigurationScript = () => {
		const configScript = document.querySelector("[data-ui5-config]") || document.querySelector("[data-id='sap-ui-config']"); // for backward compatibility

		let configJSON;

		if (configScript) {
			try {
				configJSON = JSON.parse(configScript.innerHTML);
			} catch (err) {
				console.warn("Incorrect data-sap-ui-config format. Please use JSON"); /* eslint-disable-line */
			}

			if (configJSON) {
				initialConfig = fnMerge$1(initialConfig, configJSON);
			}
		}
	};

	const parseURLParameters = () => {
		const params = new URLSearchParams(window.location.search);

		params.forEach((value, key) => {
			if (!key.startsWith("sap-ui")) {
				return;
			}

			const lowerCaseValue = value.toLowerCase();

			const param = key.split("sap-ui-")[1];

			if (booleanMapping.has(value)) {
				value = booleanMapping.get(lowerCaseValue);
			}

			initialConfig[param] = value;
		});
	};

	const applyOpenUI5Configuration = () => {
		const OpenUI5Support = getFeature("OpenUI5Support");
		if (!OpenUI5Support || !OpenUI5Support.isLoaded()) {
			return;
		}

		const OpenUI5Config = OpenUI5Support.getConfigurationSettingsObject();
		initialConfig = fnMerge$1(initialConfig, OpenUI5Config);
	};


	const initConfiguration = () => {
		if (initialized) {
			return;
		}

		// 1. Lowest priority - configuration script
		parseConfigurationScript();

		// 2. URL parameters overwrite configuration script parameters
		parseURLParameters();

		// 3. If OpenUI5 is detected, it has the highest priority
		applyOpenUI5Configuration();

		initialized = true;
	};

	const MAX_PROCESS_COUNT = 10;

	class RenderQueue {
		constructor() {
			this.list = []; // Used to store the web components in order
			this.lookup = new Set(); // Used for faster search
		}

		add(webComponent) {
			if (this.lookup.has(webComponent)) {
				return;
			}

			this.list.push(webComponent);
			this.lookup.add(webComponent);
		}

		remove(webComponent) {
			if (!this.lookup.has(webComponent)) {
				return;
			}

			this.list = this.list.filter(item => item !== webComponent);
			this.lookup.delete(webComponent);
		}

		shift() {
			const webComponent = this.list.shift();
			if (webComponent) {
				this.lookup.delete(webComponent);
				return webComponent;
			}
		}

		isEmpty() {
			return this.list.length === 0;
		}

		isAdded(webComponent) {
			return this.lookup.has(webComponent);
		}

		/**
		 * Processes the whole queue by executing the callback on each component,
		 * while also imposing restrictions on how many times a component may be processed.
		 *
		 * @param callback - function with one argument (the web component to be processed)
		 */
		process(callback) {
			let webComponent;
			const stats = new Map();

			webComponent = this.shift();
			while (webComponent) {
				const timesProcessed = stats.get(webComponent) || 0;
				if (timesProcessed > MAX_PROCESS_COUNT) {
					throw new Error(`Web component processed too many times this task, max allowed is: ${MAX_PROCESS_COUNT}`);
				}
				callback(webComponent);
				stats.set(webComponent, timesProcessed + 1);
				webComponent = this.shift();
			}
		}
	}

	// This is needed as IE11 doesn't have Set.prototype.keys/values/entries, so [...mySet.values()] is not an option
	const setToArray = s => {
		const arr = [];
		s.forEach(item => {
			arr.push(item);
		});
		return arr;
	};

	const Definitions = new Set();
	const Failures = new Set();
	let failureTimeout;

	const registerTag = tag => {
		Definitions.add(tag);
	};

	const isTagRegistered = tag => {
		return Definitions.has(tag);
	};

	const getAllRegisteredTags = () => {
		return setToArray(Definitions);
	};

	const recordTagRegistrationFailure = tag => {
		Failures.add(tag);
		if (!failureTimeout) {
			failureTimeout = setTimeout(() => {
				displayFailedRegistrations();
				failureTimeout = undefined;
			}, 1000);
		}
	};

	const displayFailedRegistrations = () => {
		console.warn(`The following tags have already been defined by a different UI5 Web Components version: ${setToArray(Failures).join(", ")}`); // eslint-disable-line
		Failures.clear();
	};

	const rtlAwareSet = new Set();

	const markAsRtlAware = klass => {
		rtlAwareSet.add(klass);
	};

	const isRtlAware = klass => {
		return rtlAwareSet.has(klass);
	};

	const registeredElements = new Set();

	// Queue for invalidated web components
	const invalidatedWebComponents = new RenderQueue();

	let renderTaskPromise,
		renderTaskPromiseResolve;

	let mutationObserverTimer;

	let queuePromise;

	/**
	 * Class that manages the rendering/re-rendering of web components
	 * This is always asynchronous
	 */
	class RenderScheduler {
		constructor() {
			throw new Error("Static class");
		}

		/**
		 * Schedules a render task (if not already scheduled) to render the component
		 *
		 * @param webComponent
		 * @returns {Promise}
		 */
		static async renderDeferred(webComponent) {
			// Enqueue the web component
			invalidatedWebComponents.add(webComponent);

			// Schedule a rendering task
			await RenderScheduler.scheduleRenderTask();
		}

		/**
		 * Renders a component synchronously
		 *
		 * @param webComponent
		 */
		static renderImmediately(webComponent) {
			webComponent._render();
		}

		/**
		 * Cancels the rendering of a component, added to the queue with renderDeferred
		 *
		 * @param webComponent
		 */
		static cancelRender(webComponent) {
			invalidatedWebComponents.remove(webComponent);
		}

		/**
		 * Schedules a rendering task, if not scheduled already
		 */
		static async scheduleRenderTask() {
			if (!queuePromise) {
				queuePromise = new Promise(resolve => {
					window.requestAnimationFrame(() => {
						// Render all components in the queue

						// console.log(`--------------------RENDER TASK START------------------------------`); // eslint-disable-line
						invalidatedWebComponents.process(component => component._render());
						// console.log(`--------------------RENDER TASK END------------------------------`); // eslint-disable-line

						// Resolve the promise so that callers of renderDeferred can continue
						queuePromise = null;
						resolve();

						// Wait for Mutation observer before the render task is considered finished
						if (!mutationObserverTimer) {
							mutationObserverTimer = setTimeout(() => {
								mutationObserverTimer = undefined;
								if (invalidatedWebComponents.isEmpty()) {
									RenderScheduler._resolveTaskPromise();
								}
							}, 200);
						}
					});
				});
			}

			await queuePromise;
		}

		/**
		 * return a promise that will be resolved once all invalidated web components are rendered
		 */
		static whenDOMUpdated() {
			if (renderTaskPromise) {
				return renderTaskPromise;
			}

			renderTaskPromise = new Promise(resolve => {
				renderTaskPromiseResolve = resolve;
				window.requestAnimationFrame(() => {
					if (invalidatedWebComponents.isEmpty()) {
						renderTaskPromise = undefined;
						resolve();
					}
				});
			});

			return renderTaskPromise;
		}

		static whenAllCustomElementsAreDefined() {
			const definedPromises = getAllRegisteredTags().map(tag => customElements.whenDefined(tag));
			return Promise.all(definedPromises);
		}

		static async whenFinished() {
			await RenderScheduler.whenAllCustomElementsAreDefined();
			await RenderScheduler.whenDOMUpdated();
		}

		static _resolveTaskPromise() {
			if (!invalidatedWebComponents.isEmpty()) {
				// More updates are pending. Resolve will be called again
				return;
			}

			if (renderTaskPromiseResolve) {
				renderTaskPromiseResolve.call(this);
				renderTaskPromiseResolve = undefined;
				renderTaskPromise = undefined;
			}
		}

		static register(element) {
			registeredElements.add(element);
		}

		static deregister(element) {
			registeredElements.delete(element);
		}

		/**
		 * Re-renders all UI5 Elements on the page, with the option to specify filters to rerender only some components.
		 *
		 * Usage:
		 * reRenderAllUI5Elements() -> rerenders all components
		 * reRenderAllUI5Elements({tag: "ui5-button"}) -> re-renders only instances of ui5-button
		 * reRenderAllUI5Elements({rtlAware: true}) -> re-renders only rtlAware components
		 * reRenderAllUI5Elements({languageAware: true}) -> re-renders only languageAware components
		 * reRenderAllUI5Elements({rtlAware: true, languageAware: true}) -> re-renders components that are rtlAware or languageAware
		 * etc...
		 *
		 * @public
		 * @param {Object|undefined} filters - Object with keys that can be "rtlAware" or "languageAware"
		 */
		static reRenderAllUI5Elements(filters) {
			registeredElements.forEach(element => {
				const tag = element.constructor.getMetadata().getTag();
				const rtlAware = isRtlAware(element.constructor);
				const languageAware = element.constructor.getMetadata().isLanguageAware();
				if (!filters || (filters.tag === tag) || (filters.rtlAware && rtlAware) || (filters.languageAware && languageAware)) {
					RenderScheduler.renderDeferred(element);
				}
			});
		}
	}

	let language;
	let useDefaultLanguage;

	/**
	 * Returns the currently configured language, or the browser language as a fallback
	 * @returns {String}
	 */
	const getLanguage$1 = () => {
		if (language === undefined) {
			language = getLanguage();
		}
		return language;
	};

	/**
	 * Defines if the default language, that is inlined, should be used,
	 * instead of fetching the language over the network.
	 * <b>Note:</b> By default the language will be fetched.
	 *
	 * @param {Boolean} useDefaultLanguage
	 */
	const setUseDefaultLanguage = useDefaultLang => {
		useDefaultLanguage = useDefaultLang;
	};

	/**
	 * Returns if the default language, that is inlined, should be used.
	 * @returns {Boolean}
	 */
	const getUseDefaultLanguage$1 = () => {
		if (useDefaultLanguage === undefined) {
			setUseDefaultLanguage(getUseDefaultLanguage());
		}

		return useDefaultLanguage;
	};

	const rLocale = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;

	class Locale {
		constructor(sLocaleId) {
			const aResult = rLocale.exec(sLocaleId.replace(/_/g, "-"));
			if (aResult === null) {
				throw new Error(`The given language ${sLocaleId} does not adhere to BCP-47.`);
			}
			this.sLocaleId = sLocaleId;
			this.sLanguage = aResult[1] || null;
			this.sScript = aResult[2] || null;
			this.sRegion = aResult[3] || null;
			this.sVariant = (aResult[4] && aResult[4].slice(1)) || null;
			this.sExtension = (aResult[5] && aResult[5].slice(1)) || null;
			this.sPrivateUse = aResult[6] || null;
			if (this.sLanguage) {
				this.sLanguage = this.sLanguage.toLowerCase();
			}
			if (this.sScript) {
				this.sScript = this.sScript.toLowerCase().replace(/^[a-z]/, s => {
					return s.toUpperCase();
				});
			}
			if (this.sRegion) {
				this.sRegion = this.sRegion.toUpperCase();
			}
		}

		getLanguage() {
			return this.sLanguage;
		}

		getScript() {
			return this.sScript;
		}

		getRegion() {
			return this.sRegion;
		}

		getVariant() {
			return this.sVariant;
		}

		getVariantSubtags() {
			return this.sVariant ? this.sVariant.split("-") : [];
		}

		getExtension() {
			return this.sExtension;
		}

		getExtensionSubtags() {
			return this.sExtension ? this.sExtension.slice(2).split("-") : [];
		}

		getPrivateUse() {
			return this.sPrivateUse;
		}

		getPrivateUseSubtags() {
			return this.sPrivateUse ? this.sPrivateUse.slice(2).split("-") : [];
		}

		hasPrivateUseSubtag(sSubtag) {
			return this.getPrivateUseSubtags().indexOf(sSubtag) >= 0;
		}

		toString() {
			const r = [this.sLanguage];

			if (this.sScript) {
				r.push(this.sScript);
			}
			if (this.sRegion) {
				r.push(this.sRegion);
			}
			if (this.sVariant) {
				r.push(this.sVariant);
			}
			if (this.sExtension) {
				r.push(this.sExtension);
			}
			if (this.sPrivateUse) {
				r.push(this.sPrivateUse);
			}
			return r.join("-");
		}
	}

	const cache = new Map();

	const getLocaleInstance = lang => {
		if (!cache.has(lang)) {
			cache.set(lang, new Locale(lang));
		}

		return cache.get(lang);
	};

	const convertToLocaleOrNull = lang => {
		try {
			if (lang && typeof lang === "string") {
				return getLocaleInstance(lang);
			}
		} catch (e) {
			// ignore
		}
	};

	/**
	 * Returns the locale based on the parameter or configured language Configuration#getLanguage
	 * If no language has been configured - a new locale based on browser language is returned
	 */
	const getLocale = lang => {
		if (lang) {
			return convertToLocaleOrNull(lang);
		}

		if (getLanguage$1()) {
			return getLocaleInstance(getLanguage$1());
		}

		return convertToLocaleOrNull(detectNavigatorLanguage());
	};

	let assetsPath;

	const getAssetsPath$1 = () => {
		if (assetsPath === undefined) {
			assetsPath = getAssetsPath();
		}

		return assetsPath;
	};

	let assetPathMappingFn = assetName => assetName;

	const getEffectiveAssetPath = assetName => {
		if (typeof assetName !== "string") {
			return assetName;
		}

		assetName = assetPathMappingFn(assetName);

		const assetsPathPrefix = getAssetsPath$1();
		if (assetsPathPrefix) {
			return `${assetsPathPrefix}${assetName}`;
		}

		return assetName;
	};

	const resources = new Map();
	const cldrData = {};
	const cldrUrls = {};

	// externally configurable mapping function for resolving (localeId -> URL)
	// default implementation - ui5 CDN
	let cldrMappingFn = locale => `https://ui5.sap.com/1.60.2/resources/sap/ui/core/cldr/${locale}.json`;

	const M_ISO639_OLD_TO_NEW = {
		"iw": "he",
		"ji": "yi",
		"in": "id",
		"sh": "sr",
	};

	const calcLocale = (language, region, script) => {
		// normalize language and handle special cases
		language = (language && M_ISO639_OLD_TO_NEW[language]) || language;
		// Special case 1: in an SAP context, the inclusive language code "no" always means Norwegian Bokmal ("nb")
		if (language === "no") {
			language = "nb";
		}
		// Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)
		if (language === "zh" && !region) {
			if (script === "Hans") {
				region = "CN";
			} else if (script === "Hant") {
				region = "TW";
			}
		}

		// try language + region
		let localeId = `${language}_${region}`;
		if (!SUPPORTED_LOCALES.includes(localeId)) {
			// fallback to language only
			localeId = language;
		}
		if (!SUPPORTED_LOCALES.includes(localeId)) {
			// fallback to english
			localeId = DEFAULT_LOCALE;
		}

		return localeId;
	};


	const resolveMissingMappings = () => {
		if (!cldrMappingFn) {
			return;
		}

		const missingLocales = SUPPORTED_LOCALES.filter(locale => !cldrData[locale] && !cldrUrls[locale]);
		missingLocales.forEach(locale => {
			cldrUrls[locale] = cldrMappingFn(locale);
		});
	};

	const registerModuleContent = (moduleName, content) => {
		resources.set(moduleName, content);
	};

	const getModuleContent = moduleName => {
		const moduleContent = resources.get(moduleName);
		if (moduleContent) {
			return moduleContent;
		}

		const missingModule = moduleName.match(/sap\/ui\/core\/cldr\/(\w+)\.json/);
		if (missingModule) {
			throw new Error(`CLDR data for locale ${missingModule[1]} is not loaded!`);
		}

		throw new Error(`Unknown module ${moduleName}`);
	};

	const fetchCldr = async (language, region, script) => {
		resolveMissingMappings();
		const localeId = calcLocale(language, region, script);

		let cldrObj = cldrData[localeId];
		const url = cldrUrls[localeId];

		const OpenUI5Support = getFeature("OpenUI5Support");
		if (!cldrObj && OpenUI5Support) {
			cldrObj = OpenUI5Support.getLocaleDataObject();
		}

		if (cldrObj) {
			// inlined from build or fetched independently
			registerModuleContent(`sap/ui/core/cldr/${localeId}.json`, cldrObj);
		} else if (url) {
			// fetch it
			const cldrContent = await fetchJsonOnce(getEffectiveAssetPath(url));
			registerModuleContent(`sap/ui/core/cldr/${localeId}.json`, cldrContent);
		}
	};

	const registerCldr = (locale, url) => {
		cldrUrls[locale] = url;
	};

	const setCldrData = (locale, data) => {
		cldrData[locale] = data;
	};

	// When the language changes dynamically (the user calls setLanguage),
	// re-fetch the required CDRD data.
	attachLanguageChange(() => {
		const locale = getLocale();
		return fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());
	});

	var ar = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ar.43441c1da168c24d.json";

	var ar_EG = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ar_EG.2c9d7bc8c6cc480e.json";

	var ar_SA = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ar_SA.5a58dac7851f3491.json";

	var bg = "/_Resources/Static/Packages/Yalento.Neos.League/dist/bg.ed8d32010cf321a6.json";

	var ca = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ca.e7ad42298985cd11.json";

	var cs = "/_Resources/Static/Packages/Yalento.Neos.League/dist/cs.9c679acdc4b03e38.json";

	var da = "/_Resources/Static/Packages/Yalento.Neos.League/dist/da.ba9951ef39b201a6.json";

	var de = "/_Resources/Static/Packages/Yalento.Neos.League/dist/de.6caccc36abcd1ecf.json";

	var de_AT = "/_Resources/Static/Packages/Yalento.Neos.League/dist/de_AT.0f4ffe37737725a0.json";

	var de_CH = "/_Resources/Static/Packages/Yalento.Neos.League/dist/de_CH.c148cbc7ceb1a7a5.json";

	var el = "/_Resources/Static/Packages/Yalento.Neos.League/dist/el.11c4c67dcb9fadcc.json";

	var el_CY = "/_Resources/Static/Packages/Yalento.Neos.League/dist/el_CY.ed3bddd6e79dc343.json";

	var en = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en.c4465af466100b5b.json";

	var en_AU = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_AU.5cb9fccc9ce24663.json";

	var en_GB = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_GB.e31daeeb57c2f1d1.json";

	var en_HK = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_HK.0a22405bb092bec2.json";

	var en_IE = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_IE.6a062df10dabdb1c.json";

	var en_IN = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_IN.bfd20b07e9079267.json";

	var en_NZ = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_NZ.18303e8298e4752a.json";

	var en_PG = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_PG.9f604c968f3ab77e.json";

	var en_SG = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_SG.cc59a6a409e1617e.json";

	var en_ZA = "/_Resources/Static/Packages/Yalento.Neos.League/dist/en_ZA.198f9641a502d660.json";

	var es = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es.c10bf80f473caf30.json";

	var es_AR = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_AR.7708d7dd7a6d2a15.json";

	var es_BO = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_BO.4a1616d9f3425fba.json";

	var es_CL = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_CL.5637126713317a15.json";

	var es_CO = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_CO.c9436572ca8f4da8.json";

	var es_MX = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_MX.b4bce7dc951eb8f4.json";

	var es_PE = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_PE.65f448fde1f0de13.json";

	var es_UY = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_UY.9ec44031491e9b95.json";

	var es_VE = "/_Resources/Static/Packages/Yalento.Neos.League/dist/es_VE.152233c7f57ecdab.json";

	var et = "/_Resources/Static/Packages/Yalento.Neos.League/dist/et.bbc93e8a17832e8f.json";

	var fa = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fa.083b927b3586b3a3.json";

	var fi = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fi.1b4c89f38783556e.json";

	var fr = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fr.ddbb9df1e0bdb6ac.json";

	var fr_BE = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fr_BE.bf3609280b7b93ee.json";

	var fr_CA = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fr_CA.b64d0bcd23a5cd3e.json";

	var fr_CH = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fr_CH.349b221a02887244.json";

	var fr_LU = "/_Resources/Static/Packages/Yalento.Neos.League/dist/fr_LU.ef7d7c8bb3328d28.json";

	var he = "/_Resources/Static/Packages/Yalento.Neos.League/dist/he.d628e8bf13a8a2c8.json";

	var hi = "/_Resources/Static/Packages/Yalento.Neos.League/dist/hi.cc34df8229f656f5.json";

	var hr = "/_Resources/Static/Packages/Yalento.Neos.League/dist/hr.c920290f50173516.json";

	var hu = "/_Resources/Static/Packages/Yalento.Neos.League/dist/hu.2d9fa4a9163cd7c0.json";

	var id = "/_Resources/Static/Packages/Yalento.Neos.League/dist/id.163fdd2a7dbd1dd3.json";

	var it = "/_Resources/Static/Packages/Yalento.Neos.League/dist/it.b5acbefdd6794dfc.json";

	var it_CH = "/_Resources/Static/Packages/Yalento.Neos.League/dist/it_CH.ade4cbfb2e49424a.json";

	var ja = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ja.d882fade5c3e04b5.json";

	var kk = "/_Resources/Static/Packages/Yalento.Neos.League/dist/kk.ab96b18c66676a99.json";

	var ko = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ko.a0d63a1580dcbefd.json";

	var lt = "/_Resources/Static/Packages/Yalento.Neos.League/dist/lt.93bb00f91a74d613.json";

	var lv = "/_Resources/Static/Packages/Yalento.Neos.League/dist/lv.3c272216d7d4d61c.json";

	var ms = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ms.e26b54937e5d1516.json";

	var nb = "/_Resources/Static/Packages/Yalento.Neos.League/dist/nb.a6e9993590a73989.json";

	var nl = "/_Resources/Static/Packages/Yalento.Neos.League/dist/nl.cac914c3529b7b01.json";

	var nl_BE = "/_Resources/Static/Packages/Yalento.Neos.League/dist/nl_BE.a3ac6f9f99feba7b.json";

	var pl = "/_Resources/Static/Packages/Yalento.Neos.League/dist/pl.2cc1c94da23f8c37.json";

	var pt = "/_Resources/Static/Packages/Yalento.Neos.League/dist/pt.fc8dd9656bc363a4.json";

	var pt_PT = "/_Resources/Static/Packages/Yalento.Neos.League/dist/pt_PT.be31b641eedfdb48.json";

	var ro = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ro.fc6a48bc63cf435e.json";

	var ru = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ru.77f0de46b3b490b1.json";

	var ru_UA = "/_Resources/Static/Packages/Yalento.Neos.League/dist/ru_UA.4c4e0034fbd799c6.json";

	var sk = "/_Resources/Static/Packages/Yalento.Neos.League/dist/sk.0d62a8cca83c1dec.json";

	var sl = "/_Resources/Static/Packages/Yalento.Neos.League/dist/sl.7b303551cc238560.json";

	var sr = "/_Resources/Static/Packages/Yalento.Neos.League/dist/sr.7fb9ac6ed054ff7d.json";

	var sv = "/_Resources/Static/Packages/Yalento.Neos.League/dist/sv.6ea04dfd8d1c331b.json";

	var th = "/_Resources/Static/Packages/Yalento.Neos.League/dist/th.8e8d734a66ed1c51.json";

	var tr = "/_Resources/Static/Packages/Yalento.Neos.League/dist/tr.dbb9aa836fc4e3f5.json";

	var uk = "/_Resources/Static/Packages/Yalento.Neos.League/dist/uk.4854089f0c12f77c.json";

	var vi = "/_Resources/Static/Packages/Yalento.Neos.League/dist/vi.e6ffbde0643d7d75.json";

	var zh_CN = "/_Resources/Static/Packages/Yalento.Neos.League/dist/zh_CN.6607a3e9e0901e53.json";

	var zh_HK = "/_Resources/Static/Packages/Yalento.Neos.League/dist/zh_HK.1c2563d3e4dad56e.json";

	var zh_SG = "/_Resources/Static/Packages/Yalento.Neos.League/dist/zh_SG.db7f1334eecf894d.json";

	var zh_TW = "/_Resources/Static/Packages/Yalento.Neos.League/dist/zh_TW.a1d00dd87c58d8f0.json";

	const cldrData$1 = {
		ar,ar_EG,ar_SA,bg,ca,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,kk,ko,lt,lv,ms,nb,nl,nl_BE,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW
	};

	const allEntriesInlined = Object.entries(cldrData$1).every(([_key, value]) => typeof (value) === "object");

	if (allEntriesInlined) {
		console.warn(`Inefficient bundling detected: consider bundling CLDR imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}


	Object.entries(cldrData$1).forEach(([key, value]) => {
		if (typeof (value) === "object") {
			setCldrData(key, value);
		} else {
			registerCldr(key, value);
		}
	});

	/**
	 * ""                        -> ""
	 * "noExtension"             -> ""
	 * "file.txt"                -> ".txt"
	 * "file.with.many.dots.doc" -> ".doc"
	 * ".gitignore"              -> ""
	 *
	 * @param fileName - the file name
	 * @returns {string}
	 */
	const getFileExtension = fileName => {
		const dotPos = fileName.lastIndexOf(".");

		if (dotPos < 1) {
			return "";
		}

		return fileName.slice(dotPos);
	};

	const themeURLs = new Map();
	const themeStyles = new Map();
	const registeredPackages = new Set();
	const registeredThemes = new Set();

	/**
	 * Used to provide CSS Vars for a specific theme for a specific package.
	 * The CSS Vars can be passed directly as a string (containing them), as an object with a "_" property(containing them in the "_" property), or as a URL.
	 * This URL must point to a JSON file, containing a "_" property.
	 *
	 * Example usage:
	 *  1) Pass the CSS Vars as a string directly.
	 *  registerThemeProperties("my-package", "my_theme", ":root{--var1: red;}");
	 *  2) Pass the CSS Vars as an object directly
	 *  registerThemeProperties("my-package", "my_theme", {"_": ":root{--var1: red;}"});
	 *  3) Pass a URL to a CSS file, containing the CSS Vars. Will be fetched on demand, not upon registration.
	 *  registerThemeProperties("my-package", "my_theme", "http://url/to/my/theme.css");
	 *  4) Pass a URL to a JSON file, containing the CSS Vars in its "_" property. Will be fetched on demand, not upon registration.
	 *  registerThemeProperties("my-package", "my_theme", "http://url/to/my/theme.json");
	 *
	 * @public
	 * @param packageName - the NPM package for which CSS Vars are registered
	 * @param themeName - the theme which the CSS Vars implement
	 * @param style - can be one of four options: a string, an object with a "_" property, URL to a CSS file, or URL to a JSON file with a "_" property
	 */
	const registerThemeProperties = (packageName, themeName, style) => {
		if (style._) {
			// JSON object like ({"_": ":root"})
			themeStyles.set(`${packageName}_${themeName}`, style._);
		} else if (style.includes(":root") || style === "") {
			// pure string, including empty string
			themeStyles.set(`${packageName}_${themeName}`, style);
		} else {
			// url for fetching
			themeURLs.set(`${packageName}_${themeName}`, style);
		}
		registeredPackages.add(packageName);
		registeredThemes.add(themeName);
	};

	const getThemeProperties = async (packageName, themeName) => {
		const style = themeStyles.get(`${packageName}_${themeName}`);
		if (style !== undefined) { // it's valid for style to be an empty string
			return style;
		}

		if (!registeredThemes.has(themeName)) {
			const regThemesStr = [...registeredThemes.values()].join(", ");
			console.warn(`You have requested a non-registered theme - falling back to ${DEFAULT_THEME}. Registered themes are: ${regThemesStr}`); /* eslint-disable-line */
			return themeStyles.get(`${packageName}_${DEFAULT_THEME}`);
		}

		const data = await fetchThemeProperties(packageName, themeName);
		const themeProps = data._ || data;

		themeStyles.set(`${packageName}_${themeName}`, themeProps);
		return themeProps;
	};

	const fetchThemeProperties = async (packageName, themeName) => {
		const url = themeURLs.get(`${packageName}_${themeName}`);

		if (!url) {
			throw new Error(`You have to import the ${packageName}/dist/Assets.js module to switch to additional themes`);
		}

		return getFileExtension(url) === ".css" ? fetchTextOnce(url) : fetchJsonOnce(getEffectiveAssetPath(url));
	};

	const getRegisteredPackages = () => {
		return registeredPackages;
	};

	const isThemeRegistered = theme => {
		return registeredThemes.has(theme);
	};

	var sap_belize = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.6c6e759e0d3534d0.json";

	var sap_belize_hcb = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.dfd19a1252497415.json";

	var sap_belize_hcw = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.e2ac94de83159e1e.json";

	var sap_fiori_3_dark = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.e19065174fdd4592.json";

	var sap_fiori_3_hcb = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.966b2e43c0966351.json";

	var sap_fiori_3_hcw = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.8cc66e917327b7a4.json";

	const isInlined = obj => typeof (obj) === "object";

	if (isInlined(sap_belize) || isInlined(sap_belize_hcb) || isInlined(sap_belize_hcw) || isInlined(sap_fiori_3_dark) || isInlined(sap_fiori_3_hcb) || isInlined(sap_fiori_3_hcw)) {
		console.warn(`Inefficient bundling detected: consider bundling theme properties imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_belize", sap_belize);
	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_belize_hcb", sap_belize_hcb);
	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_belize_hcw", sap_belize_hcw);
	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3_dark", sap_fiori_3_dark);
	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3_hcb", sap_fiori_3_hcb);
	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3_hcw", sap_fiori_3_hcw);

	var sap_belize$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.3b618322255e78f1.json";

	var sap_belize_hcb$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.e681152bb2cdd77d.json";

	var sap_belize_hcw$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.2529552fc139933d.json";

	var sap_fiori_3_dark$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.95a9ebaac43c00d8.json";

	var sap_fiori_3_hcb$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.1815c80259839682.json";

	var sap_fiori_3_hcw$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.a46404c5ed02e87c.json";

	const isInlined$1 = obj => typeof (obj) === "object";

	if (isInlined$1(sap_belize$1) || isInlined$1(sap_belize_hcb$1) || isInlined$1(sap_belize_hcw$1) || isInlined$1(sap_fiori_3_dark$1) || isInlined$1(sap_fiori_3_hcb$1) || isInlined$1(sap_fiori_3_hcw$1)) {
		console.warn(`Inefficient bundling detected: consider bundling theme properties imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}

	registerThemeProperties("@ui5/webcomponents", "sap_belize", sap_belize$1);
	registerThemeProperties("@ui5/webcomponents", "sap_belize_hcb", sap_belize_hcb$1);
	registerThemeProperties("@ui5/webcomponents", "sap_belize_hcw", sap_belize_hcw$1);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3_dark", sap_fiori_3_dark$1);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3_hcb", sap_fiori_3_hcb$1);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3_hcw", sap_fiori_3_hcw$1);

	const localeRegEX = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
	const SAPSupportabilityLocales = /(?:^|-)(saptrc|sappsd)(?:-|$)/i;

	/* Map for old language names for a few ISO639 codes. */
	const M_ISO639_NEW_TO_OLD = {
		"he": "iw",
		"yi": "ji",
		"id": "in",
		"sr": "sh",
	};

	/**
	 * Normalizes the given locale in BCP-47 syntax.
	 * @param {string} locale locale to normalize
	 * @returns {string} Normalized locale, "undefined" if the locale can't be normalized or the default locale, if no locale provided.
	 */
	const normalizeLocale = locale => {
		let m;

		if (!locale) {
			return DEFAULT_LOCALE;
		}

		if (typeof locale === "string" && (m = localeRegEX.exec(locale.replace(/_/g, "-")))) {/* eslint-disable-line */
			let language = m[1].toLowerCase();
			let region = m[3] ? m[3].toUpperCase() : undefined;
			const script = m[2] ? m[2].toLowerCase() : undefined;
			const variants = m[4] ? m[4].slice(1) : undefined;
			const isPrivate = m[6];

			language = M_ISO639_NEW_TO_OLD[language] || language;

			// recognize and convert special SAP supportability locales (overwrites m[]!)
			if ((isPrivate && (m = SAPSupportabilityLocales.exec(isPrivate))) /* eslint-disable-line */ ||
				(variants && (m = SAPSupportabilityLocales.exec(variants)))) {/* eslint-disable-line */
				return `en_US_${m[1].toLowerCase()}`; // for now enforce en_US (agreed with SAP SLS)
			}

			// Chinese: when no region but a script is specified, use default region for each script
			if (language === "zh" && !region) {
				if (script === "hans") {
					region = "CN";
				} else if (script === "hant") {
					region = "TW";
				}
			}

			return language + (region ? "_" + region + (variants ? "_" + variants.replace("-", "_") : "") : ""); /* eslint-disable-line */
		}
	};

	/**
	 * Calculates the next fallback locale for the given locale.
	 *
	 * @param {string} locale Locale string in Java format (underscores) or null
	 * @returns {string} Next fallback Locale or "en" if no fallbacks found.
	 */
	const nextFallbackLocale = locale => {
		if (!locale) {
			return DEFAULT_LOCALE;
		}

		if (locale === "zh_HK") {
			return "zh_TW";
		}

		// if there are multiple segments (separated by underscores), remove the last one
		const p = locale.lastIndexOf("_");
		if (p >= 0) {
			return locale.slice(0, p);
		}

		// for any language but the default, fallback to the default first before falling back to the 'raw' language (empty string)
		return locale !== DEFAULT_LOCALE ? DEFAULT_LOCALE : "";
	};

	const bundleData = new Map();
	const bundleURLs = new Map();

	/**
	 * Sets a map with texts and ID the are related to.
	 * @param {string} packageName package ID that the i18n bundle will be related to
	 * @param {Object} data an object with string locales as keys and text translataions as values
	 * @public
	 */
	const setI18nBundleData = (packageName, data) => {
		bundleData.set(packageName, data);
	};

	const getI18nBundleData = packageName => {
		return bundleData.get(packageName);
	};

	/**
	 * Registers a map of locale/url information, to be used by the <code>fetchI18nBundle</code> method.
	 * Note: In order to be able to register ".properties" files, you must import the following module:
	 * import "@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js";
	 *
	 * @param {string} packageName package ID that the i18n bundle will be related to
	 * @param {Object} bundle an object with string locales as keys and the URLs (in .json or .properties format - see the note above) where the corresponding locale can be fetched from, f.e {"en": "path/en.json", ...}
	 *
	 * @public
	 */
	const registerI18nBundle = (packageName, bundle) => {
		const oldBundle = bundleURLs.get(packageName) || {};
		bundleURLs.set(packageName, Object.assign({}, oldBundle, bundle));
	};

	/**
	 * This method preforms the asynchronous task of fetching the actual text resources. It will fetch
	 * each text resource over the network once (even for multiple calls to the same method).
	 * It should be fully finished before the i18nBundle class is created in the webcomponents.
	 * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.
	 * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>
	 * @param {packageName} packageName the NPM package name
	 * @public
	 */
	const fetchI18nBundle = async packageName => {
		const bundlesForPackage = bundleURLs.get(packageName);

		if (!bundlesForPackage) {
			console.warn(`Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */
			` You need to import ${packageName}/dist/Assets.js with a build tool that supports JSON imports.`); /* eslint-disable-line */
			return;
		}

		const language = getLocale().getLanguage();
		const region = getLocale().getRegion();
		const useDefaultLanguage = getUseDefaultLanguage$1();
		let localeId = normalizeLocale(language + (region ? `-${region}` : ``));

		while (localeId !== DEFAULT_LANGUAGE && !bundlesForPackage[localeId]) {
			localeId = nextFallbackLocale(localeId);
		}

		if (useDefaultLanguage && localeId === DEFAULT_LANGUAGE) {
			setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)
			return;
		}

		const bundleURL = bundlesForPackage[localeId];

		if (typeof bundleURL === "object") { // inlined from build
			setI18nBundleData(packageName, bundleURL);
			return;
		}

		const content = await fetchTextOnce(getEffectiveAssetPath(bundleURL));
		let parser;
		if (content.startsWith("{")) {
			parser = JSON.parse;
		} else {
			const PropertiesFormatSupport = getFeature("PropertiesFormatSupport");
			if (!PropertiesFormatSupport) {
				throw new Error(`In order to support .properties files, please: import "@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js";`);
			}
			parser = PropertiesFormatSupport.parser;
		}

		const data = parser(content);

		setI18nBundleData(packageName, data);
	};

	// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles
	attachLanguageChange(() => {
		const allPackages = [...bundleData.keys()];
		return Promise.all(allPackages.map(fetchI18nBundle));
	});

	var ar$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ar.8fb54b784badb070.json";

	var bg$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_bg.a07e833df956fc5b.json";

	var ca$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ca.5c6336220227db42.json";

	var cs$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_cs.871802e7a021a910.json";

	var da$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_da.c42294e3db11fc39.json";

	var de$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_de.8bdf28e60ed33bdc.json";

	var el$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_el.74e8cf887e8ed235.json";

	var en$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_en.e05176c9767132ef.json";

	var es$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_es.f3650bd0b0735114.json";

	var et$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_et.88d2be2b2cf68ee2.json";

	var fi$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fi.f4159ca7ec046ed3.json";

	var fr$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fr.fc41377ef516c488.json";

	var hi$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hi.4e5998e1e897a6d2.json";

	var hr$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hr.253a8470d9dae571.json";

	var hu$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hu.ed5a6f63d9be2c23.json";

	var it$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_it.452b66a5901209e8.json";

	var iw = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_iw.6f6f87f0a5b1700d.json";

	var ja$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ja.91f6eadac17b6cdf.json";

	var kk$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_kk.a91a9fd25b22ad05.json";

	var ko$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ko.a56b5376cc80e7c0.json";

	var lt$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lt.4c9077c8a195ef4b.json";

	var lv$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lv.ca34912bcf60af6f.json";

	var ms$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ms.921666029119cebd.json";

	var nl$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_nl.51a9fdafd4b20029.json";

	var no = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_no.c2fb4b255191c499.json";

	var pl$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pl.8175ad0660fd958e.json";

	var pt$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pt.a5b9e25cba9057a3.json";

	var ro$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ro.fad1cc17fc9d722f.json";

	var ru$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ru.6b7aba94fcf2f462.json";

	var sh = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sh.389d2068ab467169.json";

	var sk$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sk.3d9a62f9e421e411.json";

	var sl$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sl.a3e88676de44d1be.json";

	var sv$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sv.0d0ce5453226363c.json";

	var th$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_th.db00fe96df5657a1.json";

	var tr$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_tr.b448f742333275f9.json";

	var uk$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_uk.779f807b781a0736.json";

	var vi$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_vi.1e8e22cbb3906712.json";

	var zh_CN$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_CN.7a4cc30073337973.json";

	var zh_TW$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_TW.f040fbdce4189d19.json";

	const bundleMap = {
		ar: ar$1,
		bg: bg$1,
		ca: ca$1,
		cs: cs$1,
		da: da$1,
		de: de$1,
		el: el$1,
		en: en$1,
		es: es$1,
		et: et$1,
		fi: fi$1,
		fr: fr$1,
		hi: hi$1,
		hr: hr$1,
		hu: hu$1,
		it: it$1,
		iw,
		ja: ja$1,
		kk: kk$1,
		ko: ko$1,
		lt: lt$1,
		lv: lv$1,
		ms: ms$1,
		nl: nl$1,
		no,
		pl: pl$1,
		pt: pt$1,
		ro: ro$1,
		ru: ru$1,
		sh,
		sk: sk$1,
		sl: sl$1,
		sv: sv$1,
		th: th$1,
		tr: tr$1,
		uk: uk$1,
		vi: vi$1,
		zh_CN: zh_CN$1,
		zh_TW: zh_TW$1,
	};

	const allEntriesInlined$1 = Object.entries(bundleMap).every(([_key, value]) => typeof (value) === "object");

	if (allEntriesInlined$1) {
		console.warn(`Inefficient bundling detected: consider bundling i18n imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}

	registerI18nBundle("@ui5/webcomponents", bundleMap);

	const whenDOMReady = () => {
		return new Promise(resolve => {
			if (document.body) {
				resolve();
			} else {
				document.addEventListener("DOMContentLoaded", () => {
					resolve();
				});
			}
		});
	};

	/**
	 * Creates a <style> tag in the <head> tag
	 * @param cssText - the CSS
	 * @param attributes - optional attributes to add to the tag
	 * @returns {HTMLElement}
	 */
	const createStyleInHead = (cssText, attributes = {}) => {
		const style = document.createElement("style");
		style.type = "text/css";

		Object.entries(attributes).forEach(pair => style.setAttribute(...pair));

		style.textContent = cssText;
		document.head.appendChild(style);
		return style;
	};

	/**
	 * CSS font face used for the texts provided by SAP.
	 */

	/* CDN Locations */
	const font72RegularWoff = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular.woff?ui5-webcomponents`;
	const font72RegularWoff2 = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular.woff2?ui5-webcomponents`;

	const font72RegularFullWoff = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular-full.woff?ui5-webcomponents`;
	const font72RegularFullWoff2 = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular-full.woff2?ui5-webcomponents`;

	const font72BoldWoff = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold.woff?ui5-webcomponents`;
	const font72BoldWoff2 = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold.woff2?ui5-webcomponents`;

	const font72BoldFullWoff = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold-full.woff?ui5-webcomponents`;
	const font72BoldFullWoff2 = `https://ui5.sap.com/sdk/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold-full.woff2?ui5-webcomponents`;

	const fontFaceCSS = `
	@font-face {
		font-family: "72";
		font-style: normal;
		font-weight: 400;
		src: local("72"),
			url(${font72RegularWoff2}) format("woff2"),
			url(${font72RegularWoff}) format("woff");
	}
	
	@font-face {
		font-family: "72full";
		font-style: normal;
		font-weight: 400;
		src: local('72-full'),
			url(${font72RegularFullWoff2}) format("woff2"),
			url(${font72RegularFullWoff}) format("woff");
		
	}
	
	@font-face {
		font-family: "72";
		font-style: normal;
		font-weight: 700;
		src: local('72-Bold'),
			url(${font72BoldWoff2}) format("woff2"),
			url(${font72BoldWoff}) format("woff");
	}
	
	@font-face {
		font-family: "72full";
		font-style: normal;
		font-weight: 700;
		src: local('72-Bold-full'),
			url(${font72BoldFullWoff2}) format("woff2"),
			url(${font72BoldFullWoff}) format("woff");
	}
`;

	/**
	 * Some diacritics are supported by the 72 font:
	 *  * Grave
	 *  * Acute
	 *  * Circumflex
	 *  * Tilde
	 *
	 * However, the following diacritics and the combination of multiple diacritics (including the supported ones) are not supported:
	 *  * Breve
	 *  * Horn
	 *  * Dot below
	 *  * Hook above
	 *
	 *
	 * Override for the characters that aren't covered by the '72' font to other system fonts
	 *
	 * U+0102-0103: A and a with Breve
	 * U+01A0-01A1: O and o with Horn
	 * U+01AF-01B0: U and u with Horn
	 * U+1EA0-1EB7: A and a with diacritics that are not supported by the font and combination of multiple diacritics
	 * U+1EB8-1EC7: E and e with diacritics that are not supported by the font and combination of multiple diacritics
	 * U+1EC8-1ECB: I and i with diacritics that are not supported by the font and combination of multiple diacritics
	 * U+1ECC-1EE3: O and o with diacritics that are not supported by the font and combination of multiple diacritics
	 * U+1EE4-1EF1: U and u with diacritics that are not supported by the font and combination of multiple diacritics
	 * U+1EF4-1EF7: Y and y with diacritics that are not supported by the font and combination of multiple diacritics
	 *
	 */
	const overrideFontFaceCSS = `
	@font-face {
		font-family: '72override';
		unicode-range: U+0102-0103, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EB7, U+1EB8-1EC7, U+1EC8-1ECB, U+1ECC-1EE3, U+1EE4-1EF1, U+1EF4-1EF7;
		src: local('Arial'), local('Helvetica'), local('sans-serif');
	}
`;

	const insertFontFace = () => {
		const OpenUI5Support = getFeature("OpenUI5Support");

		// Only set the main font if there is no OpenUI5 support, or there is, but OpenUI5 is not loaded
		if (!OpenUI5Support || !OpenUI5Support.isLoaded()) {
			insertMainFontFace();
		}

		// Always set the override font - OpenUI5 in CSS Vars mode does not set it, unlike the main font
		insertOverrideFontFace();
	};

	const insertMainFontFace = () => {
		if (!document.querySelector(`head>style[data-ui5-font-face]`)) {
			createStyleInHead(fontFaceCSS, { "data-ui5-font-face": "" });
		}
	};

	const insertOverrideFontFace = () => {
		if (!document.querySelector(`head>style[data-ui5-font-face-override]`)) {
			createStyleInHead(overrideFontFaceCSS, { "data-ui5-font-face-override": "" });
		}
	};

	const systemCSSVars = `
	:root {
		--_ui5_content_density:cozy;
	}
	
	[data-ui5-compact-size],
	.ui5-content-density-compact,
	.sapUiSizeCompact {
		--_ui5_content_density:compact;
	}
	
	[dir="rtl"] {
		--_ui5_dir:rtl;
	}
	
	[dir="ltr"] {
		--_ui5_dir:ltr;
	}
`;

	const insertSystemCSSVars = () => {
		if (document.querySelector(`head>style[data-ui5-system-css-vars]`)) {
			return;
		}

		createStyleInHead(systemCSSVars, { "data-ui5-system-css-vars": "" });
	};

	/**
	 * Creates/updates a style element holding all CSS Custom Properties
	 * @param cssText
	 * @param packageName
	 */
	const createThemePropertiesStyleTag = (cssText, packageName) => {
		const styleElement = document.head.querySelector(`style[data-ui5-theme-properties="${packageName}"]`);
		if (styleElement) {
			styleElement.textContent = cssText || "";	// in case of undefined
		} else {
			const attributes = {
				"data-ui5-theme-properties": packageName,
			};
			createStyleInHead(cssText, attributes);
		}
	};

	const getThemeMetadata = () => {
		// Check if the class was already applied, most commonly to the link/style tag with the CSS Variables
		let el = document.querySelector(".sapThemeMetaData-Base-baseLib");
		if (el) {
			return getComputedStyle(el).backgroundImage;
		}

		el = document.createElement("span");
		el.style.display = "none";
		el.classList.add("sapThemeMetaData-Base-baseLib");
		document.body.appendChild(el);
		const metadata = getComputedStyle(el).backgroundImage;
		document.body.removeChild(el);

		return metadata;
	};

	const parseThemeMetadata = metadataString => {
		const params = /\(["']?data:text\/plain;utf-8,(.*?)['"]?\)$/i.exec(metadataString);
		if (params && params.length >= 2) {
			let paramsString = params[1];
			paramsString = paramsString.replace(/\\"/g, `"`);
			if (paramsString.charAt(0) !== "{" && paramsString.charAt(paramsString.length - 1) !== "}") {
				try {
					paramsString = decodeURIComponent(paramsString);
				} catch (ex) {
					console.warn("Malformed theme metadata string, unable to decodeURIComponent"); // eslint-disable-line
					return;
				}
			}
			try {
				return JSON.parse(paramsString);
			} catch (ex) {
				console.warn("Malformed theme metadata string, unable to parse JSON"); // eslint-disable-line
			}
		}
	};

	const processThemeMetadata = metadata => {
		let themeName;
		let baseThemeName;

		try {
			themeName = metadata.Path.match(/\.([^.]+)\.css_variables$/)[1];
			baseThemeName = metadata.Extends[0];
		} catch (ex) {
			console.warn("Malformed theme metadata Object", metadata); // eslint-disable-line
			return;
		}

		return {
			themeName,
			baseThemeName,
		};
	};

	const getThemeDesignerTheme = () => {
		const metadataString = getThemeMetadata();
		if (!metadataString || metadataString === "none") {
			return;
		}

		const metadata = parseThemeMetadata(metadataString);
		return processThemeMetadata(metadata);
	};

	let ponyfillTimer;

	const ponyfillNeeded = () => !!window.CSSVarsPonyfill;

	/**
	 * Removes the "data-cssvars-group" attribute for all element styles and their respective out nodes.
	 * CSSVarsPonyfill has internal counters for "group" and "job" and running several instances of the ponyfill may lead to issues, since these counters are not shared
	 * Therefore we remove them for our "data-ui5-element-styles"
	 *
	 * @param rootElement
	 */
	const cleanPonyfillMetadata = (rootElement = document.head) => {
		rootElement.querySelectorAll(`style[data-ui5-element-styles][data-cssvars="src"]`).forEach(tag => {
			const group = tag.getAttribute("data-cssvars-group");
			tag.removeAttribute("data-cssvars-group");
			tag.disabled = false;
			const outNode = rootElement.querySelector(`style[data-cssvars="out"][data-cssvars-group="${group}"]`);
			if (outNode) {
				outNode.removeAttribute("data-cssvars-group");
			}
		});
	};

	const runPonyfill = () => {
		ponyfillTimer = undefined;

		cleanPonyfillMetadata();
		window.CSSVarsPonyfill.cssVars({
			rootElement: document.head,
			variables: isCompact() ? getCompactModeVars() : {},
			silent: true,
		});
	};

	const schedulePonyfill = () => {
		if (!ponyfillTimer) {
			ponyfillTimer = window.setTimeout(runPonyfill, 0);
		}
	};

	const isCompact = () => {
		const b = document.body;
		return b.hasAttribute("data-ui5-compact-size") || b.classList.contains("ui5-content-density-compact") || b.classList.contains("sapUiSizeCompact");
	};

	const getCompactModeVars = () => {
		const compactVars = {};
		[...document.querySelectorAll(`[data-ui5-theme-properties]`)].forEach(el => {
			const cssContent = el.textContent.replace("\n", "");
			let match;
			const regExp = new RegExp("data-ui5-compact-size[^{]*{(.*?)}", "g");
			while ((match = regExp.exec(cssContent)) !== null) { // eslint-disable-line
				const compactCSS = match[1];
				compactCSS.split(";").forEach(declaration => {
					const pair = declaration.split(":");
					compactVars[pair[0].trim()] = pair[1].trim();
				});
			}
		});

		return compactVars;
	};

	const eventProvider$1 = new EventProvider();
	const THEME_LOADED = "themeLoaded";

	const fireThemeLoaded = theme => {
		return eventProvider$1.fireEvent(THEME_LOADED, theme);
	};

	const BASE_THEME_PACKAGE = "@ui5/webcomponents-theme-base";

	const isThemeBaseRegistered = () => {
		const registeredPackages = getRegisteredPackages();
		return registeredPackages.has(BASE_THEME_PACKAGE);
	};

	const loadThemeBase = async theme => {
		if (!isThemeBaseRegistered()) {
			return;
		}

		const cssText = await getThemeProperties(BASE_THEME_PACKAGE, theme);
		createThemePropertiesStyleTag(cssText, BASE_THEME_PACKAGE);
	};

	const deleteThemeBase = () => {
		const styleElement = document.head.querySelector(`style[data-ui5-theme-properties="${BASE_THEME_PACKAGE}"]`);
		if (styleElement) {
			styleElement.parentElement.removeChild(styleElement);
		}
	};

	const loadComponentPackages = async theme => {
		const registeredPackages = getRegisteredPackages();
		registeredPackages.forEach(async packageName => {
			if (packageName === BASE_THEME_PACKAGE) {
				return;
			}

			const cssText = await getThemeProperties(packageName, theme);
			createThemePropertiesStyleTag(cssText, packageName);
		});
	};

	const detectExternalTheme = () => {
		// If theme designer theme is detected, use this
		const extTheme = getThemeDesignerTheme();
		if (extTheme) {
			return extTheme;
		}

		// If OpenUI5Support is enabled, try to find out if it loaded variables
		const OpenUI5Support = getFeature("OpenUI5Support");
		if (OpenUI5Support) {
			const varsLoaded = OpenUI5Support.cssVariablesLoaded();
			if (varsLoaded) {
				return {
					themeName: OpenUI5Support.getConfigurationSettingsObject().theme, // just themeName, baseThemeName is only relevant for custom themes
				};
			}
		}
	};

	const applyTheme = async theme => {
		const extTheme = detectExternalTheme();

		// Only load theme_base properties if there is no externally loaded theme, or there is, but it is not being loaded
		if (!extTheme || theme !== extTheme.themeName) {
			await loadThemeBase(theme);
		} else {
			deleteThemeBase();
		}

		// Always load component packages properties. For non-registered themes, try with the base theme, if any
		const packagesTheme = isThemeRegistered(theme) ? theme : extTheme && extTheme.baseThemeName;
		await loadComponentPackages(packagesTheme);

		// When changing the theme, run the ponyfill immediately
		if (ponyfillNeeded()) {
			runPonyfill();
		}

		fireThemeLoaded(theme);
	};

	let theme;

	const getTheme$1 = () => {
		if (theme === undefined) {
			theme = getTheme();
		}

		return theme;
	};

	let polyfillLoadedPromise;

	const whenPolyfillLoaded = () => {
		if (polyfillLoadedPromise) {
			return polyfillLoadedPromise;
		}

		polyfillLoadedPromise = new Promise(resolve => {
			if (window.WebComponents
				&& !window.WebComponents.ready
				&& window.WebComponents.waitFor) {
				// the polyfill loader is present
				window.WebComponents.waitFor(() => {
					// the polyfills are loaded, safe to execute code depending on their APIs
					resolve();
				});
			} else {
				// polyfill loader missing, modern browsers only
				resolve();
			}
		});

		return polyfillLoadedPromise;
	};

	let bootPromise;

	const boot = () => {
		if (bootPromise) {
			return bootPromise;
		}

		bootPromise = new Promise(async resolve => {
			const OpenUI5Support = getFeature("OpenUI5Support");
			if (OpenUI5Support) {
				await OpenUI5Support.init();
			}

			await whenDOMReady();
			await applyTheme(getTheme$1());
			OpenUI5Support && OpenUI5Support.attachListeners();
			insertFontFace();
			insertSystemCSSVars();
			await whenPolyfillLoaded();
			resolve();
		});

		return bootPromise;
	};

	/**
	 * Base class for all data types.
	 *
	 * @class
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.base.types.DataType
	 * @public
	 */
	class DataType {
		static isValid(value) {
		}

		static generateTypeAccessors(types) {
			Object.keys(types).forEach(type => {
				Object.defineProperty(this, type, {
					get() {
						return types[type];
					},
				});
			});
		}
	}

	const isDescendantOf = (klass, baseKlass, inclusive = false) => {
		if (typeof klass !== "function" || typeof baseKlass !== "function") {
			return false;
		}
		if (inclusive && klass === baseKlass) {
			return true;
		}
		let parent = klass;
		do {
			parent = Object.getPrototypeOf(parent);
		} while (parent !== null && parent !== baseKlass);
		return parent === baseKlass;
	};

	const kebabToCamelMap = new Map();
	const camelToKebabMap = new Map();

	const kebabToCamelCase = string => {
		if (!kebabToCamelMap.has(string)) {
			const result = toCamelCase(string.split("-"));
			kebabToCamelMap.set(string, result);
		}
		return kebabToCamelMap.get(string);
	};

	const camelToKebabCase = string => {
		if (!camelToKebabMap.has(string)) {
			const result = string.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
			camelToKebabMap.set(string, result);
		}
		return camelToKebabMap.get(string);
	};

	const toCamelCase = parts => {
		return parts.map((string, index) => {
			return index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
		}).join("");
	};

	const isSlot = el => el && el instanceof HTMLElement && el.localName === "slot";

	let suf;
	let rulesObj = {
		include: [/^ui5-/],
		exclude: [],
	};
	const tagsCache = new Map(); // true/false means the tag should/should not be cached, undefined means not known yet.

	/**
	 * Returns the currently set scoping suffix, or undefined if not set.
	 *
	 * @public
	 * @returns {String|undefined}
	 */
	const getCustomElementsScopingSuffix = () => {
		return suf;
	};

	/**
	 * Determines whether custom elements with the given tag should be scoped or not.
	 * The tag is first matched against the "include" rules and then against the "exclude" rules and the
	 * result is cached until new rules are set.
	 *
	 * @public
	 * @param tag
	 */
	const shouldScopeCustomElement = tag => {
		if (!tagsCache.has(tag)) {
			const result = rulesObj.include.some(rule => tag.match(rule)) && !rulesObj.exclude.some(rule => tag.match(rule));
			tagsCache.set(tag, result);
		}

		return tagsCache.get(tag);
	};

	/**
	 * Returns the currently set scoping suffix, if any and if the tag should be scoped, or undefined otherwise.
	 *
	 * @public
	 * @param tag
	 * @returns {String}
	 */
	const getEffectiveScopingSuffixForTag = tag => {
		if (shouldScopeCustomElement(tag)) {
			return getCustomElementsScopingSuffix();
		}
	};

	/**
	 *
	 * @class
	 * @public
	 */
	class UI5ElementMetadata {
		constructor(metadata) {
			this.metadata = metadata;
		}

		/**
		 * Only intended for use by UI5Element.js
		 * @protected
		 */
		static validatePropertyValue(value, propData) {
			const isMultiple = propData.multiple;
			if (isMultiple) {
				return value.map(propValue => validateSingleProperty(propValue, propData));
			}
			return validateSingleProperty(value, propData);
		}

		/**
		 * Only intended for use by UI5Element.js
		 * @protected
		 */
		static validateSlotValue(value, slotData) {
			return validateSingleSlot(value, slotData);
		}

		/**
		 * Returns the tag of the UI5 Element without the scope
		 * @public
		 */
		getPureTag() {
			return this.metadata.tag;
		}

		/**
		 * Returns the tag of the UI5 Element
		 * @public
		 */
		getTag() {
			const pureTag = this.metadata.tag;
			const suffix = getEffectiveScopingSuffixForTag(pureTag);
			if (!suffix) {
				return pureTag;
			}

			return `${pureTag}-${suffix}`;
		}

		/**
		 * Used to get the tag we need to register for backwards compatibility
		 * @public
		 */
		getAltTag() {
			const pureAltTag = this.metadata.altTag;
			if (!pureAltTag) {
				return;
			}

			const suffix = getEffectiveScopingSuffixForTag(pureAltTag);
			if (!suffix) {
				return pureAltTag;
			}

			return `${pureAltTag}-${suffix}`;
		}

		/**
		 * Determines whether a property should have an attribute counterpart
		 * @public
		 * @param propName
		 * @returns {boolean}
		 */
		hasAttribute(propName) {
			const propData = this.getProperties()[propName];
			return propData.type !== Object && !propData.noAttribute;
		}

		/**
		 * Returns an array with the properties of the UI5 Element (in camelCase)
		 * @public
		 * @returns {string[]}
		 */
		getPropertiesList() {
			return Object.keys(this.getProperties());
		}

		/**
		 * Returns an array with the attributes of the UI5 Element (in kebab-case)
		 * @public
		 * @returns {string[]}
		 */
		getAttributesList() {
			return this.getPropertiesList().filter(this.hasAttribute, this).map(camelToKebabCase);
		}

		/**
		 * Returns an object with key-value pairs of slots and their metadata definitions
		 * @public
		 */
		getSlots() {
			return this.metadata.slots || {};
		}

		/**
		 * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text
		 * @returns {boolean}
		 */
		canSlotText() {
			const defaultSlot = this.getSlots().default;
			return defaultSlot && defaultSlot.type === Node;
		}

		/**
		 * Determines whether this UI5 Element supports any slots
		 * @public
		 */
		hasSlots() {
			return !!Object.entries(this.getSlots()).length;
		}

		/**
		 * Determines whether this UI5 Element supports any slots with "individualSlots: true"
		 * @public
		 */
		hasIndividualSlots() {
			return this.slotsAreManaged() && Object.entries(this.getSlots()).some(([_slotName, slotData]) => slotData.individualSlots);
		}

		/**
		 * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed
		 * @public
		 */
		slotsAreManaged() {
			return !!this.metadata.managedSlots;
		}

		/**
		 * Returns an object with key-value pairs of properties and their metadata definitions
		 * @public
		 */
		getProperties() {
			return this.metadata.properties || {};
		}

		/**
		 * Returns an object with key-value pairs of events and their metadata definitions
		 * @public
		 */
		getEvents() {
			return this.metadata.events || {};
		}

		/**
		 * Determines whether this UI5 Element has any translatable texts (needs to be invalidated upon language change)
		 * @returns {boolean}
		 */
		isLanguageAware() {
			return !!this.metadata.languageAware;
		}

		/**
		 * Matches a changed entity (property/slot) with the given name against the "invalidateOnChildChange" configuration
		 * and determines whether this should cause and invalidation
		 *
		 * @param slotName the name of the slot in which a child was changed
		 * @param type the type of change in the child: "property" or "slot"
		 * @param name the name of the property/slot that changed
		 * @returns {boolean}
		 */
		shouldInvalidateOnChildChange(slotName, type, name) {
			const config = this.getSlots()[slotName].invalidateOnChildChange;

			// invalidateOnChildChange was not set in the slot metadata - by default child changes do not affect the component
			if (config === undefined) {
				return false;
			}

			// The simple format was used: invalidateOnChildChange: true/false;
			if (typeof config === "boolean") {
				return config;
			}

			// The complex format was used: invalidateOnChildChange: { properties, slots }
			if (typeof config === "object") {
				// A property was changed
				if (type === "property") {
					// The config object does not have a properties field
					if (config.properties === undefined) {
						return false;
					}

					// The config object has the short format: properties: true/false
					if (typeof config.properties === "boolean") {
						return config.properties;
					}

					// The config object has the complex format: properties: [...]
					if (Array.isArray(config.properties)) {
						return config.properties.includes(name);
					}

					throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected");
				}

				// A slot was changed
				if (type === "slot") {
					// The config object does not have a slots field
					if (config.slots === undefined) {
						return false;
					}

					// The config object has the short format: slots: true/false
					if (typeof config.slots === "boolean") {
						return config.slots;
					}

					// The config object has the complex format: slots: [...]
					if (Array.isArray(config.slots)) {
						return config.slots.includes(name);
					}

					throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected");
				}
			}

			throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected");
		}
	}

	const validateSingleProperty = (value, propData) => {
		const propertyType = propData.type;

		if (propertyType === Boolean) {
			return typeof value === "boolean" ? value : false;
		}
		if (propertyType === String) {
			return (typeof value === "string" || typeof value === "undefined" || value === null) ? value : value.toString();
		}
		if (propertyType === Object) {
			return typeof value === "object" ? value : propData.defaultValue;
		}
		if (isDescendantOf(propertyType, DataType)) {
			return propertyType.isValid(value) ? value : propData.defaultValue;
		}
	};

	const validateSingleSlot = (value, slotData) => {
		if (value === null) {
			return value;
		}

		const getSlottedNodes = el => {
			if (isSlot(el)) {
				return el.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);
			}

			return [el];
		};

		const slottedNodes = getSlottedNodes(value);
		slottedNodes.forEach(el => {
			if (!(el instanceof slotData.type)) {
				throw new Error(`${el} is not of type ${slotData.type}`);
			}
		});

		return value;
	};

	/**
	 * Runs a component's template with the component's current state, while also scoping HTML
	 *
	 * @param template - the template to execute
	 * @param component - the component
	 * @public
	 * @returns {*}
	 */
	const executeTemplate = (template, component) => {
		const tagsToScope = component.constructor.getUniqueDependencies().map(dep => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);
		const scope = getCustomElementsScopingSuffix();
		return template(component, tagsToScope, scope);
	};

	const getSingletonElementInstance = (tag, parentElement = document.body) => {
		let el = document.querySelector(tag);

		if (el) {
			return el;
		}

		el = document.createElement(tag);

		return parentElement.insertBefore(el, parentElement.firstChild);
	};

	const getStaticAreaInstance = () => getSingletonElementInstance("ui5-static-area");

	const removeStaticArea = () => {
		getStaticAreaInstance().destroy();
	};

	class StaticAreaElement extends HTMLElement {
		constructor() {
			super();
		}

		get isUI5Element() {
			return true;
		}

		destroy() {
			const staticAreaDomRef = document.querySelector(this.tagName.toLowerCase());
			staticAreaDomRef.parentElement.removeChild(staticAreaDomRef);
		}
	}

	if (!customElements.get("ui5-static-area")) {
		customElements.define("ui5-static-area", StaticAreaElement);
	}

	const getStylesString = styles => {
		if (Array.isArray(styles)) {
			return flatten(styles).join(" ");
		}

		return styles;
	};

	const flatten = arr => {
		return arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatten(val) : val), []);
	};

	/**
	 * @class
	 * @author SAP SE
	 * @private
	 * Defines and takes care of ui5-static-are-item items
	 */
	class StaticAreaItem {
		constructor(_ui5ElementContext) {
			this.ui5ElementContext = _ui5ElementContext;
			this._rendered = false;
		}

		isRendered() {
			return this._rendered;
		}

		/**
		 * @protected
		 */
		_updateFragment() {
			const renderResult = executeTemplate(this.ui5ElementContext.constructor.staticAreaTemplate, this.ui5ElementContext),
				stylesToAdd = window.ShadyDOM ? false : getStylesString(this.ui5ElementContext.constructor.staticAreaStyles);

			if (!this.staticAreaItemDomRef) {
				// Initial rendering of fragment

				this.staticAreaItemDomRef = document.createElement("ui5-static-area-item");
				this.staticAreaItemDomRef.attachShadow({ mode: "open" });
				this.staticAreaItemDomRef.classList.add(this.ui5ElementContext._id); // used for getting the popover in the tests

				getStaticAreaInstance().appendChild(this.staticAreaItemDomRef);
				this._rendered = true;
			}

			this._updateContentDensity(this.ui5ElementContext.isCompact);
			this.ui5ElementContext.constructor.render(renderResult, this.staticAreaItemDomRef.shadowRoot, stylesToAdd, { eventContext: this.ui5ElementContext });
		}

		/**
		 * @protected
		 */
		_removeFragmentFromStaticArea() {
			if (!this.staticAreaItemDomRef) {
				return;
			}

			const staticArea = getStaticAreaInstance();

			staticArea.removeChild(this.staticAreaItemDomRef);

			this.staticAreaItemDomRef = null;

			// remove static area
			if (staticArea.childElementCount < 1) {
				removeStaticArea();
			}
		}

		/**
		 * @protected
		 */
		_updateContentDensity(isCompact) {
			if (!this.staticAreaItemDomRef) {
				return;
			}

			if (isCompact) {
				this.staticAreaItemDomRef.classList.add("sapUiSizeCompact");
				this.staticAreaItemDomRef.classList.add("ui5-content-density-compact");
			} else {
				this.staticAreaItemDomRef.classList.remove("sapUiSizeCompact");
				this.staticAreaItemDomRef.classList.remove("ui5-content-density-compact");
			}
		}

		/**
		 * @protected
		 * Returns reference to the DOM element where the current fragment is added.
		 */
		async getDomRef() {
			if (!this._rendered || !this.staticAreaItemDomRef) {
				this._updateFragment();
			}
			await RenderScheduler.whenDOMUpdated(); // Wait for the content of the ui5-static-area-item to be rendered
			return this.staticAreaItemDomRef && this.staticAreaItemDomRef.shadowRoot;
		}
	}

	class StaticAreaItemElement extends HTMLElement {
		constructor() {
			super();
		}

		get isUI5Element() {
			return true;
		}
	}

	if (!customElements.get("ui5-static-area-item")) {
		customElements.define("ui5-static-area-item", StaticAreaItemElement);
	}

	// Shorthands
	const w = window;

	// Map of observer objects per dom node
	const observers = new WeakMap();

	/**
	 * Implements universal DOM node observation methods.
	 */
	class DOMObserver {
		constructor() {
			throw new Error("Static class");
		}

		/**
		 * This function abstracts out mutation observer usage inside shadow DOM.
		 * For native shadow DOM the native mutation observer is used.
		 * When the polyfill is used, the observeChildren ShadyDOM method is used instead.
		 *
		 * @throws Exception
		 * Note: does not allow several mutation observers per node. If there is a valid use-case, this behavior can be changed.
		 *
		 * @param node
		 * @param callback
		 * @param options - Only used for the native mutation observer
		 */
		static observeDOMNode(node, callback, options) {
			let observerObject = observers.get(node);
			if (observerObject) {
				throw new Error("A mutation/ShadyDOM observer is already assigned to this node.");
			}

			if (w.ShadyDOM) {
				observerObject = w.ShadyDOM.observeChildren(node, callback);
			} else {
				observerObject = new MutationObserver(callback);
				observerObject.observe(node, options);
			}

			observers.set(node, observerObject);
		}

		/**
		 * De-registers the mutation observer, depending on its type
		 * @param node
		 */
		static unobserveDOMNode(node) {
			const observerObject = observers.get(node);
			if (!observerObject) {
				return;
			}

			if (observerObject instanceof MutationObserver) {
				observerObject.disconnect();
			} else {
				w.ShadyDOM.unobserveChildren(observerObject);
			}
			observers.delete(node);
		}
	}

	// Fire these events even with noConflict: true
	const excludeList = [
		"value-changed",
	];

	const shouldFireOriginalEvent = eventName => {
		return excludeList.includes(eventName);
	};

	let noConflict;

	const shouldNotFireOriginalEvent = eventName => {
		const nc = getNoConflict$1();
		return !(nc.events && nc.events.includes && nc.events.includes(eventName));
	};

	const getNoConflict$1 = () => {
		if (noConflict === undefined) {
			noConflict = getNoConflict();
		}

		return noConflict;
	};

	const skipOriginalEvent = eventName => {
		const nc = getNoConflict$1();

		// Always fire these events
		if (shouldFireOriginalEvent(eventName)) {
			return false;
		}

		// Read from the configuration
		if (nc === true) {
			return true;
		}

		return !shouldNotFireOriginalEvent(eventName);
	};

	var getDesigntimePropertyAsArray = value => {
		const m = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(value);
		return m && m[2] ? m[2].split(/,/) : null;
	};

	const M_ISO639_OLD_TO_NEW$1 = {
		"iw": "he",
		"ji": "yi",
		"in": "id",
		"sh": "sr",
	};

	const A_RTL_LOCALES = getDesigntimePropertyAsArray("$cldr-rtl-locales:ar,fa,he$") || [];

	const impliesRTL = language => {
		language = (language && M_ISO639_OLD_TO_NEW$1[language]) || language;

		return A_RTL_LOCALES.indexOf(language) >= 0;
	};

	const getRTL$1 = () => {
		const configurationRTL = getRTL();

		if (configurationRTL !== null) {
			return !!configurationRTL;
		}

		return impliesRTL(getLanguage$1() || detectNavigatorLanguage());
	};

	const eventProvider$2 = new EventProvider();
	const CUSTOM_CSS_CHANGE = "CustomCSSChange";

	const attachCustomCSSChange = listener => {
		eventProvider$2.attachEvent(CUSTOM_CSS_CHANGE, listener);
	};

	const customCSSFor = {};

	const getCustomCSS = tag => {
		return customCSSFor[tag] ? customCSSFor[tag].join("") : "";
	};

	const effectiveStyleMap = new Map();

	attachCustomCSSChange(tag => {
		effectiveStyleMap.delete(tag);
	});

	const getEffectiveStyle = ElementClass => {
		const tag = ElementClass.getMetadata().getTag();

		if (!effectiveStyleMap.has(tag)) {
			const customStyle = getCustomCSS(tag) || "";
			const builtInStyles = getStylesString(ElementClass.styles);
			const effectiveStyle = `${builtInStyles} ${customStyle}`;
			effectiveStyleMap.set(tag, effectiveStyle);
		}

		return effectiveStyleMap.get(tag);
	};

	const constructableStyleMap = new Map();

	attachCustomCSSChange(tag => {
		constructableStyleMap.delete(tag);
	});

	/**
	 * Returns (and caches) a constructable style sheet for a web component class
	 * Note: Chrome
	 * @param ElementClass
	 * @returns {*}
	 */
	const getConstructableStyle = ElementClass => {
		const tag = ElementClass.getMetadata().getTag();

		if (!constructableStyleMap.has(tag)) {
			const styleContent = getEffectiveStyle(ElementClass);
			const style = new CSSStyleSheet();
			style.replaceSync(styleContent);
			constructableStyleMap.set(tag, [style]);
		}

		return constructableStyleMap.get(tag);
	};

	const findClosingParenthesisPos = (str, openingParenthesisPos) => {
		let opened = 1;
		for (let pos = openingParenthesisPos + 1; pos < str.length; pos++) {
			const char = str.charAt(pos);
			if (char === "(") {
				opened++;
			} else if (char === ")") {
				opened--;
			}
			if (opened === 0) {
				return pos;
			}
		}
	};

	const replaceSelector = (str, selector, selectorStartPos, replacement) => {
		const charAfterSelectorPos = selectorStartPos + selector.length;
		const charAfterSelector = str.charAt(charAfterSelectorPos);

		const upToSelector = str.substring(0, selectorStartPos) + replacement;
		if (charAfterSelector === "(") {
			const closingParenthesisPos = findClosingParenthesisPos(str, charAfterSelectorPos);
			return upToSelector + str.substring(charAfterSelectorPos + 1, closingParenthesisPos) + str.substring(closingParenthesisPos + 1);
		}

		return upToSelector + str.substring(charAfterSelectorPos);
	};

	/**
	 * :host => ui5-button
	 * :host([expr]) => ui5-button[expr]
	 * ::slotted(expr) => expr
	 * @param str - source string
	 * @param selector - :host or ::slotted
	 * @param replacement - normally tag name
	 * @returns {*}
	 */
	const replaceSelectors = (str, selector, replacement) => {
		let selectorStartPos = str.indexOf(selector);
		while (selectorStartPos !== -1) {
			str = replaceSelector(str, selector, selectorStartPos, replacement);
			selectorStartPos = str.indexOf(selector);
		}
		return str;
	};

	const adaptLinePart = (line, tag, pureTag) => {
		line = line.trim();
		line = replaceSelectors(line, "::slotted", ``); // first remove all ::slotted() occurrences

		// Host selector - replace it
		if (line.startsWith(":host")) {
			return replaceSelector(line, ":host", 0, tag);
		}

		// Leave out @keyframes and keyframe values (0%, 100%, etc...)
		// csso shortens '100%' -> 'to', make sure to leave it untouched
		if (line.match(/^[@0-9]/) || line === "to" || line === "to{") {
			return line;
		}

		// IE specific selector (directly written with the tag, f.e. ui5-button {}) - keep it
		if (line.match(new RegExp(`^${tag}[^a-zA-Z0-9-]`))) {
			return line;
		}

		// IE specific selector (directly written with the tag attribute, f.e. [ui5-button] {}) - keep it
		if (pureTag && line.startsWith(`[${pureTag}]`)) {
			return line;
		}

		// No host and no tag in the beginning of the selector - prepend the tag
		return `${tag} ${line}`;
	};

	const adaptCSSForIE = (str, tag, pureTag) => {
		str = str.replace(/\n/g, ` `);
		str = str.replace(/([{}])/g, `$1\n`);
		let result = ``;
		const lines = str.split(`\n`);
		lines.forEach(line => {
			const mustProcess = line.match(/{$/); // Only work on lines that end on {, otherwise just append to result
			if (mustProcess) {
				const lineParts = line.split(",");
				const processedLineParts = lineParts.map(linePart => {
					return adaptLinePart(linePart, tag, pureTag);
				});
				line = processedLineParts.join(",");
			}
			result = `${result}${line}`;
		});
		return result;
	};

	const IEStyleSet = new Set();

	attachCustomCSSChange(tag => {
		IEStyleSet.delete(tag);
	});

	const getStaticStyle = ElementClass => {
		let componentStaticStyles = ElementClass.staticAreaStyles;
		if (Array.isArray(componentStaticStyles)) {
			componentStaticStyles = componentStaticStyles.join(" ");
		}

		return componentStaticStyles;
	};

	/**
	 * Creates the needed CSS for a web component class in the head tag
	 * Note: IE11, Edge
	 * @param ElementClass
	 */
	const createComponentStyleTag = ElementClass => {
		const tag = ElementClass.getMetadata().getTag();
		const pureTag = ElementClass.getMetadata().getPureTag();
		if (IEStyleSet.has(tag)) {
			return;
		}

		let cssContent = getEffectiveStyle(ElementClass);
		cssContent = adaptCSSForIE(cssContent, tag, pureTag);

		// Append static CSS, if any, for IE
		let staticCssContent = getStaticStyle(ElementClass);
		if (staticCssContent) {
			staticCssContent = adaptCSSForIE(staticCssContent, "ui5-static-area-item");
			cssContent = `${cssContent} ${staticCssContent}`;
		}

		createStyleInHead(cssContent, {
			"data-ui5-element-styles": tag,
		});
		if (ponyfillNeeded()) {
			schedulePonyfill();
		}

		IEStyleSet.add(tag);
	};

	class Integer extends DataType {
		static isValid(value) {
			return Number.isInteger(value);
		}
	}

	class Float extends DataType {
		static isValid(value) {
			// Assuming that integers are floats as well!
			return Number(value) === value;
		}
	}

	// Note: disabled is present in IE so we explicitly allow it here.
	// Others, such as title/hidden, we explicitly override, so valid too
	const allowList = [
		"disabled",
		"title",
		"hidden",
		"role",
		"draggable",
	];

	/**
	 * Checks whether a property name is valid (does not collide with existing DOM API properties)
	 *
	 * @param name
	 * @returns {boolean}
	 */
	const isValidPropertyName = name => {
		if (allowList.includes(name) || name.startsWith("aria")) {
			return true;
		}
		const classes = [
			HTMLElement,
			Element,
			Node,
		];
		return !classes.some(klass => klass.prototype.hasOwnProperty(name)); // eslint-disable-line
	};

	const arraysAreEqual = (arr1, arr2) => {
		if (arr1.length !== arr2.length) {
			return false;
		}

		for (let i = 0; i < arr1.length; i++) {
			if (arr1[i] !== arr2[i]) {
				return false;
			}
		}

		return true;
	};

	let autoId = 0;

	const elementTimeouts = new Map();
	const uniqueDependenciesCache = new Map();

	const GLOBAL_CONTENT_DENSITY_CSS_VAR = "--_ui5_content_density";
	const GLOBAL_DIR_CSS_VAR = "--_ui5_dir";

	/**
	 * Triggers re-rendering of a UI5Element instance due to state change.
	 *
	 * @param  changeInfo An object with information about the change that caused invalidation.
	 * @private
	 */
	function _invalidate(changeInfo) {
		// Invalidation should be suppressed: 1) before the component is rendered for the first time 2) and during the execution of onBeforeRendering
		// This is necessary not only as an optimization, but also to avoid infinite loops on invalidation between children and parents (when invalidateOnChildChange is used)
		if (this._suppressInvalidation) {
			return;
		}

		// Call the onInvalidation hook
		this.onInvalidation(changeInfo);

		this._changedState.push(changeInfo);
		RenderScheduler.renderDeferred(this);
		this._eventProvider.fireEvent("change", { ...changeInfo, target: this });
	}

	/**
	 * Base class for all UI5 Web Components
	 *
	 * @class
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.base.UI5Element
	 * @extends HTMLElement
	 * @public
	 */
	class UI5Element extends HTMLElement {
		constructor() {
			super();

			this._changedState = []; // Filled on each invalidation, cleared on re-render (used for debugging)
			this._suppressInvalidation = true; // A flag telling whether all invalidations should be ignored. Initialized with "true" because a UI5Element can not be invalidated until it is rendered for the first time
			this._inDOM = false; // A flag telling whether the UI5Element is currently in the DOM tree of the document or not
			this._fullyConnected = false; // A flag telling whether the UI5Element's onEnterDOM hook was called (since it's possible to have the element removed from DOM before that)
			this._childChangeListeners = new Map(); // used to store lazy listeners per slot for the child change event of every child inside that slot
			this._slotChangeListeners = new Map(); // used to store lazy listeners per slot for the slotchange event of all slot children inside that slot
			this._eventProvider = new EventProvider(); // used by parent components for listening to changes to child components
			let deferredResolve;
			this._domRefReadyPromise = new Promise(resolve => {
				deferredResolve = resolve;
			});
			this._domRefReadyPromise._deferredResolve = deferredResolve;

			this._initializeState();
			this._upgradeAllProperties();
			this._initializeContainers();
		}

		/**
		 * Returns a unique ID for this UI5 Element
		 *
		 * @deprecated - This property is not guaranteed in future releases
		 * @protected
		 */
		get _id() {
			if (!this.__id) {
				this.__id = `ui5wc_${++autoId}`;
			}

			return this.__id;
		}

		/**
		 * @private
		 */
		_initializeContainers() {
			const needsShadowDOM = this.constructor._needsShadowDOM();
			const needsStaticArea = this.constructor._needsStaticArea();

			// Init Shadow Root
			if (needsShadowDOM) {
				this.attachShadow({ mode: "open" });
			}

			// Init StaticAreaItem only if needed
			if (needsStaticArea) {
				this.staticAreaItem = new StaticAreaItem(this);
			}
		}

		/**
		 * Do not call this method from derivatives of UI5Element, use "onEnterDOM" only
		 * @private
		 */
		async connectedCallback() {
			this.setAttribute(this.constructor.getMetadata().getPureTag(), "");

			const needsShadowDOM = this.constructor._needsShadowDOM();
			const slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();

			this._inDOM = true;

			if (slotsAreManaged) {
				// always register the observer before yielding control to the main thread (await)
				this._startObservingDOMChildren();
				await this._processChildren();
			}

			if (needsShadowDOM && !this.shadowRoot) { // Workaround for Firefox74 bug
				await Promise.resolve();
			}

			if (!this._inDOM) { // Component removed from DOM while _processChildren was running
				return;
			}

			RenderScheduler.register(this);
			RenderScheduler.renderImmediately(this);
			this._domRefReadyPromise._deferredResolve();
			this._fullyConnected = true;
			if (typeof this.onEnterDOM === "function") {
				this.onEnterDOM();
			}
		}

		/**
		 * Do not call this method from derivatives of UI5Element, use "onExitDOM" only
		 * @private
		 */
		disconnectedCallback() {
			const needsShadowDOM = this.constructor._needsShadowDOM();
			const needsStaticArea = this.constructor._needsStaticArea();
			const slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();

			this._inDOM = false;

			if (slotsAreManaged) {
				this._stopObservingDOMChildren();
			}

			if (needsShadowDOM) {
				RenderScheduler.deregister(this);
				if (this._fullyConnected) {
					if (typeof this.onExitDOM === "function") {
						this.onExitDOM();
					}
					this._fullyConnected = false;
				}
			}

			if (needsStaticArea) {
				this.staticAreaItem._removeFragmentFromStaticArea();
			}

			RenderScheduler.cancelRender(this);
		}

		/**
		 * @private
		 */
		_startObservingDOMChildren() {
			const shouldObserveChildren = this.constructor.getMetadata().hasSlots();
			if (!shouldObserveChildren) {
				return;
			}

			const canSlotText = this.constructor.getMetadata().canSlotText();
			const mutationObserverOptions = {
				childList: true,
				subtree: canSlotText,
				characterData: canSlotText,
			};
			DOMObserver.observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);
		}

		/**
		 * @private
		 */
		_stopObservingDOMChildren() {
			DOMObserver.unobserveDOMNode(this);
		}

		/**
		 * Note: this method is also manually called by "compatibility/patchNodeValue.js"
		 * @private
		 */
		async _processChildren() {
			const hasSlots = this.constructor.getMetadata().hasSlots();
			if (hasSlots) {
				await this._updateSlots();
			}
		}

		/**
		 * @private
		 */
		async _updateSlots() {
			const slotsMap = this.constructor.getMetadata().getSlots();
			const canSlotText = this.constructor.getMetadata().canSlotText();
			const domChildren = Array.from(canSlotText ? this.childNodes : this.children);

			const slotsCachedContentMap = new Map(); // Store here the content of each slot before the mutation occurred
			const propertyNameToSlotMap = new Map(); // Used for reverse lookup to determine to which slot the property name corresponds

			// Init the _state object based on the supported slots and store the previous values
			for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line
				const propertyName = slotData.propertyName || slotName;
				propertyNameToSlotMap.set(propertyName, slotName);
				slotsCachedContentMap.set(propertyName, [...this._state[propertyName]]);
				this._clearSlot(slotName, slotData);
			}

			const autoIncrementMap = new Map();
			const slottedChildrenMap = new Map();

			const allChildrenUpgraded = domChildren.map(async (child, idx) => {
				// Determine the type of the child (mainly by the slot attribute)
				const slotName = this.constructor._getSlotName(child);
				const slotData = slotsMap[slotName];

				// Check if the slotName is supported
				if (slotData === undefined) {
					const validValues = Object.keys(slotsMap).join(", ");
					console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line
					return;
				}

				// For children that need individual slots, calculate them
				if (slotData.individualSlots) {
					const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;
					autoIncrementMap.set(slotName, nextIndex);
					child._individualSlot = `${slotName}-${nextIndex}`;
				}

				// Await for not-yet-defined custom elements
				if (child instanceof HTMLElement) {
					const localName = child.localName;
					const isCustomElement = localName.includes("-");
					if (isCustomElement) {
						const isDefined = window.customElements.get(localName);
						if (!isDefined) {
							const whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet
							let timeoutPromise = elementTimeouts.get(localName);
							if (!timeoutPromise) {
								timeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));
								elementTimeouts.set(localName, timeoutPromise);
							}
							await Promise.race([whenDefinedPromise, timeoutPromise]);
						}
						window.customElements.upgrade(child);
					}
				}

				child = this.constructor.getMetadata().constructor.validateSlotValue(child, slotData);

				// Listen for any invalidation on the child if invalidateOnChildChange is true or an object (ignore when false or not set)
				if (child.isUI5Element && slotData.invalidateOnChildChange) {
					child._attachChange(this._getChildChangeListener(slotName));
				}

				// Listen for the slotchange event if the child is a slot itself
				if (isSlot(child)) {
					this._attachSlotChange(child, slotName);
				}

				const propertyName = slotData.propertyName || slotName;

				if (slottedChildrenMap.has(propertyName)) {
					slottedChildrenMap.get(propertyName).push({ child, idx });
				} else {
					slottedChildrenMap.set(propertyName, [{ child, idx }]);
				}
			});

			await Promise.all(allChildrenUpgraded);

			// Distribute the child in the _state object, keeping the Light DOM order,
			// not the order elements are defined.
			slottedChildrenMap.forEach((children, propertyName) => {
				this._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);
			});

			// Compare the content of each slot with the cached values and invalidate for the ones that changed
			let invalidated = false;
			for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line
				const propertyName = slotData.propertyName || slotName;
				if (!arraysAreEqual(slotsCachedContentMap.get(propertyName), this._state[propertyName])) {
					_invalidate.call(this, {
						type: "slot",
						name: propertyNameToSlotMap.get(propertyName),
						reason: "children",
					});
					invalidated = true;
				}
			}

			// If none of the slots had an invalidation due to changes to immediate children,
			// the change is considered to be text content of the default slot
			if (!invalidated) {
				_invalidate.call(this, {
					type: "slot",
					name: "default",
					reason: "textcontent",
				});
			}
		}

		/**
		 * Removes all children from the slot and detaches listeners, if any
		 * @private
		 */
		_clearSlot(slotName, slotData) {
			const propertyName = slotData.propertyName || slotName;
			const children = this._state[propertyName];

			children.forEach(child => {
				if (child && child.isUI5Element) {
					child._detachChange(this._getChildChangeListener(slotName));
				}

				if (isSlot(child)) {
					this._detachSlotChange(child, slotName);
				}
			});

			this._state[propertyName] = [];
		}

		/**
		 * Attach a callback that will be executed whenever the component is invalidated
		 *
		 * @param callback
		 * @protected
		 */
		_attachChange(callback) {
			this._eventProvider.attachEvent("change", callback);
		}

		/**
		 * Detach the callback that is executed whenever the component is invalidated
		 *
		 * @param callback
		 * @protected
		 */
		_detachChange(callback) {
			this._eventProvider.detachEvent("change", callback);
		}

		/**
		 * Callback that is executed whenever a monitored child changes its state
		 *
		 * @param slotName the slot in which a child was invalidated
		 * @param childChangeInfo the changeInfo object for the child in the given slot
		 * @private
		 */
		_onChildChange(slotName, childChangeInfo) {
			if (!this.constructor.getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {
				return;
			}

			// The component should be invalidated as this type of change on the child is listened for
			// However, no matter what changed on the child (property/slot), the invalidation is registered as "type=slot" for the component itself
			_invalidate.call(this, {
				type: "slot",
				name: slotName,
				reason: "childchange",
				child: childChangeInfo.target,
			});
		}

		/**
		 * Do not override this method in derivatives of UI5Element
		 * @private
		 */
		attributeChangedCallback(name, oldValue, newValue) {
			const properties = this.constructor.getMetadata().getProperties();
			const realName = name.replace(/^ui5-/, "");
			const nameInCamelCase = kebabToCamelCase(realName);
			if (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line
				const propertyTypeClass = properties[nameInCamelCase].type;
				if (propertyTypeClass === Boolean) {
					newValue = newValue !== null;
				}
				if (propertyTypeClass === Integer) {
					newValue = parseInt(newValue);
				}
				if (propertyTypeClass === Float) {
					newValue = parseFloat(newValue);
				}
				this[nameInCamelCase] = newValue;
			}
		}

		/**
		 * @private
		 */
		_updateAttribute(name, newValue) {
			if (!this.constructor.getMetadata().hasAttribute(name)) {
				return;
			}

			if (typeof newValue === "object") {
				return;
			}

			const attrName = camelToKebabCase(name);
			const attrValue = this.getAttribute(attrName);
			if (typeof newValue === "boolean") {
				if (newValue === true && attrValue === null) {
					this.setAttribute(attrName, "");
				} else if (newValue === false && attrValue !== null) {
					this.removeAttribute(attrName);
				}
			} else if (attrValue !== newValue) {
				this.setAttribute(attrName, newValue);
			}
		}

		/**
		 * @private
		 */
		_upgradeProperty(prop) {
			if (this.hasOwnProperty(prop)) { // eslint-disable-line
				const value = this[prop];
				delete this[prop];
				this[prop] = value;
			}
		}

		/**
		 * @private
		 */
		_upgradeAllProperties() {
			const allProps = this.constructor.getMetadata().getPropertiesList();
			allProps.forEach(this._upgradeProperty, this);
		}

		/**
		 * @private
		 */
		_initializeState() {
			const defaultState = this.constructor._getDefaultState();
			this._state = Object.assign({}, defaultState);
		}

		/**
		 * Returns a singleton event listener for the "change" event of a child in a given slot
		 *
		 * @param slotName the name of the slot, where the child is
		 * @returns {any}
		 * @private
		 */
		_getChildChangeListener(slotName) {
			if (!this._childChangeListeners.has(slotName)) {
				this._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));
			}
			return this._childChangeListeners.get(slotName);
		}

		/**
		 * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot
		 *
		 * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
		 * @returns {any}
		 * @private
		 */
		_getSlotChangeListener(slotName) {
			if (!this._slotChangeListeners.has(slotName)) {
				this._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));
			}
			return this._slotChangeListeners.get(slotName);
		}

		/**
		 * @private
		 */
		_attachSlotChange(child, slotName) {
			child.addEventListener("slotchange", this._getSlotChangeListener(slotName));
		}

		/**
		 * @private
		 */
		_detachSlotChange(child, slotName) {
			child.removeEventListener("slotchange", this._getSlotChangeListener(slotName));
		}

		/**
		 * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component
		 *
		 * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
		 * @private
		 */
		_onSlotChange(slotName) {
			_invalidate.call(this, {
				type: "slot",
				name: slotName,
				reason: "slotchange",
			});
		}

		/**
		 * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)
		 *
		 * @param  changeInfo An object with information about the change that caused invalidation.
		 * The object can have the following properties:
		 *  - type: (property|slot) tells what caused the invalidation
		 *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute
		 *   2) slot: a slotted node(nodes) changed in one of several ways (see "reason")
		 *
		 *  - name: the name of the property or slot that caused the invalidation
		 *
		 *  - reason: (children|textcontent|childchange|slotchange) relevant only for type="slot" only and tells exactly what changed in the slot
		 *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot
		 *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of "type: Node"
		 *   3) slotchange: a slot element, slotted inside that slot had its "slotchange" event listener called. This practically means that transitively slotted children changed.
		 *      Can only trigger if the child of a slot is a slot element itself.
		 *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.
		 *      Can only trigger for slots with "invalidateOnChildChange" metadata descriptor
		 *
		 *  - newValue: the new value of the property (for type="property" only)
		 *
		 *  - oldValue: the old value of the property (for type="property" only)
		 *
		 *  - child the child that was changed (for type="slot" and reason="childchange" only)
		 *
		 * @public
		 */
		onInvalidation(changeInfo) {}

		/**
		 * Do not call this method directly, only intended to be called by RenderScheduler.js
		 * @protected
		 */
		_render() {
			const hasIndividualSlots = this.constructor.getMetadata().hasIndividualSlots();

			// suppress invalidation to prevent state changes scheduling another rendering
			this._suppressInvalidation = true;

			if (typeof this.onBeforeRendering === "function") {
				this.onBeforeRendering();
			}

			// Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered
			if (this._onComponentStateFinalized) {
				this._onComponentStateFinalized();
			}

			// resume normal invalidation handling
			this._suppressInvalidation = false;

			// Update the shadow root with the render result
			/*
			if (this._changedState.length) {
				let element = this.localName;
				if (this.id) {
					element = `${element}#${this.id}`;
				}
				console.log("Re-rendering:", element, this._changedState.map(x => { // eslint-disable-line
					let res = `${x.type}`;
					if (x.reason) {
						res = `${res}(${x.reason})`;
					}
					res = `${res}: ${x.name}`;
					if (x.type === "property") {
						res = `${res} ${x.oldValue} => ${x.newValue}`;
					}

					return res;
				}));
			}
			*/
			this._changedState = [];

			// Update shadow root and static area item
			this._updateShadowRoot();
			if (this._shouldUpdateFragment()) {
				this.staticAreaItem._updateFragment(this);
				this.staticAreaItemDomRef = this.staticAreaItem.staticAreaItemDomRef.shadowRoot;
			}

			// Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM
			if (hasIndividualSlots) {
				this._assignIndividualSlotsToChildren();
			}

			// Call the onAfterRendering hook
			if (typeof this.onAfterRendering === "function") {
				this.onAfterRendering();
			}
		}

		/**
		 * @private
		 */
		_updateShadowRoot() {
			if (!this.constructor._needsShadowDOM()) {
				return;
			}

			let styleToPrepend;
			const renderResult = executeTemplate(this.constructor.template, this);

			// IE11, Edge
			if (window.ShadyDOM) {
				createComponentStyleTag(this.constructor);
			}

			// Chrome
			if (document.adoptedStyleSheets) {
				this.shadowRoot.adoptedStyleSheets = getConstructableStyle(this.constructor);
			}

			// FF, Safari
			if (!document.adoptedStyleSheets && !window.ShadyDOM) {
				styleToPrepend = getEffectiveStyle(this.constructor);
			}

			this.constructor.render(renderResult, this.shadowRoot, styleToPrepend, { eventContext: this });
		}

		/**
		 * @private
		 */
		_assignIndividualSlotsToChildren() {
			const domChildren = Array.from(this.children);

			domChildren.forEach(child => {
				if (child._individualSlot) {
					child.setAttribute("slot", child._individualSlot);
				}
			});
		}

		/**
		 * @private
		 */
		_waitForDomRef() {
			return this._domRefReadyPromise;
		}

		/**
		 * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template
		 * Use this method instead of "this.shadowRoot" to read the Shadow DOM, if ever necessary
		 * @public
		 */
		getDomRef() {
			if (!this.shadowRoot || this.shadowRoot.children.length === 0) {
				return;
			}

			return this.shadowRoot.children.length === 1
				? this.shadowRoot.children[0] : this.shadowRoot.children[1];
		}

		/**
		 * Returns the DOM Element marked with "data-sap-focus-ref" inside the template.
		 * This is the element that will receive the focus by default.
		 * @public
		 */
		getFocusDomRef() {
			const domRef = this.getDomRef();
			if (domRef) {
				const focusRef = domRef.querySelector("[data-sap-focus-ref]");
				return focusRef || domRef;
			}
		}

		/**
		 * Waits for dom ref and then returns the DOM Element marked with "data-sap-focus-ref" inside the template.
		 * This is the element that will receive the focus by default.
		 * @public
		 */
		async getFocusDomRefAsync() {
			await this._waitForDomRef();
			return this.getFocusDomRef();
		}

		/**
		 * Use this method in order to get a reference to an element in the shadow root of the web component or the static area item of the component
		 * @public
		 * @method
		 * @param {String} refName Defines the name of the stable DOM ref
		 */
		getStableDomRef(refName) {
			const staticAreaResult = this.staticAreaItemDomRef && this.staticAreaItemDomRef.querySelector(`[data-ui5-stable=${refName}]`);

			return staticAreaResult
			|| this.getDomRef().querySelector(`[data-ui5-stable=${refName}]`);
		}

		/**
		 * Set the focus to the element, returned by "getFocusDomRef()" (marked by "data-sap-focus-ref")
		 * @public
		 */
		async focus() {
			await this._waitForDomRef();

			const focusDomRef = this.getFocusDomRef();

			if (focusDomRef && typeof focusDomRef.focus === "function") {
				focusDomRef.focus();
			}
		}

		/**
		 *
		 * @public
		 * @param name - name of the event
		 * @param data - additional data for the event
		 * @param cancelable - true, if the user can call preventDefault on the event object
		 * @param bubbles - true, if the event bubbles
		 * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise
		 */
		fireEvent(name, data, cancelable = false, bubbles = true) {
			const eventResult = this._fireEvent(name, data, cancelable, bubbles);
			const camelCaseEventName = kebabToCamelCase(name);

			if (camelCaseEventName !== name) {
				return eventResult && this._fireEvent(camelCaseEventName, data, cancelable);
			}

			return eventResult;
		}

		_fireEvent(name, data, cancelable = false, bubbles = true) {
			let compatEventResult = true; // Initialized to true, because if the event is not fired at all, it should be considered "not-prevented"

			const noConflictEvent = new CustomEvent(`ui5-${name}`, {
				detail: data,
				composed: false,
				bubbles,
				cancelable,
			});

			// This will be false if the compat event is prevented
			compatEventResult = this.dispatchEvent(noConflictEvent);

			if (skipOriginalEvent(name)) {
				return compatEventResult;
			}

			const customEvent = new CustomEvent(name, {
				detail: data,
				composed: false,
				bubbles,
				cancelable,
			});

			// This will be false if the normal event is prevented
			const normalEventResult = this.dispatchEvent(customEvent);

			// Return false if any of the two events was prevented (its result was false).
			return normalEventResult && compatEventResult;
		}

		/**
		 * Returns the actual children, associated with a slot.
		 * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.
		 * @public
		 */
		getSlottedNodes(slotName) {
			const reducer = (acc, curr) => {
				if (!isSlot(curr)) {
					return acc.concat([curr]);
				}
				return acc.concat(curr.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement));
			};

			return this[slotName].reduce(reducer, []);
		}

		get isCompact() {
			return getComputedStyle(this).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR) === "compact";
		}

		/**
		 * Determines whether the component should be rendered in RTL mode or not.
		 * Returns: "rtl", "ltr" or undefined
		 *
		 * @public
		 * @returns {String|undefined}
		 */
		get effectiveDir() {
			markAsRtlAware(this.constructor); // if a UI5 Element calls this method, it's considered to be rtl-aware

			const doc = window.document;
			const dirValues = ["ltr", "rtl"]; // exclude "auto" and "" from all calculations
			const locallyAppliedDir = getComputedStyle(this).getPropertyValue(GLOBAL_DIR_CSS_VAR);

			// In that order, inspect the CSS Var (for modern browsers), the element itself, html and body (for IE fallback)
			if (dirValues.includes(locallyAppliedDir)) {
				return locallyAppliedDir;
			}
			if (dirValues.includes(this.dir)) {
				return this.dir;
			}
			if (dirValues.includes(doc.documentElement.dir)) {
				return doc.documentElement.dir;
			}
			if (dirValues.includes(doc.body.dir)) {
				return doc.body.dir;
			}

			// Finally, check the configuration for explicitly set RTL or language-implied RTL
			return getRTL$1() ? "rtl" : undefined;
		}

		updateStaticAreaItemContentDensity() {
			if (this.staticAreaItem) {
				this.staticAreaItem._updateContentDensity(this.isCompact);
			}
		}

		/**
		 * Used to duck-type UI5 elements without using instanceof
		 * @returns {boolean}
		 * @public
		 */
		get isUI5Element() {
			return true;
		}

		/**
		 * Do not override this method in derivatives of UI5Element, use metadata properties instead
		 * @private
		 */
		static get observedAttributes() {
			return this.getMetadata().getAttributesList();
		}

		/**
		 * @private
		 */
		static _getSlotName(child) {
			// Text nodes can only go to the default slot
			if (!(child instanceof HTMLElement)) {
				return "default";
			}

			// Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)
			const slot = child.getAttribute("slot");
			if (slot) {
				const match = slot.match(/^(.+?)-\d+$/);
				return match ? match[1] : slot;
			}

			// Use default slot as a fallback
			return "default";
		}

		/**
		 * @private
		 */
		static _needsShadowDOM() {
			return !!this.template;
		}

		_shouldUpdateFragment() {
			return this.constructor._needsStaticArea() && this.staticAreaItem.isRendered();
		}

		/**
		 * @private
		 */
		static _needsStaticArea() {
			return typeof this.staticAreaTemplate === "function";
		}

		/**
		 * @public
		 */
		getStaticAreaItemDomRef() {
			return this.staticAreaItem.getDomRef();
		}

		/**
		 * @private
		 */
		static _getDefaultState() {
			if (Object.prototype.hasOwnProperty.call(this, "_defaultState")) {
				return this._defaultState;
			}

			const MetadataClass = this.getMetadata();
			const defaultState = {};
			const slotsAreManaged = MetadataClass.slotsAreManaged();

			// Initialize properties
			const props = MetadataClass.getProperties();
			for (const propName in props) { // eslint-disable-line
				const propType = props[propName].type;
				const propDefaultValue = props[propName].defaultValue;

				if (propType === Boolean) {
					defaultState[propName] = false;

					if (propDefaultValue !== undefined) {
						console.warn("The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default"); // eslint-disable-line
					}
				} else if (props[propName].multiple) {
					defaultState[propName] = [];
				} else if (propType === Object) {
					defaultState[propName] = "defaultValue" in props[propName] ? props[propName].defaultValue : {};
				} else if (propType === String) {
					defaultState[propName] = "defaultValue" in props[propName] ? props[propName].defaultValue : "";
				} else {
					defaultState[propName] = propDefaultValue;
				}
			}

			// Initialize slots
			if (slotsAreManaged) {
				const slots = MetadataClass.getSlots();
				for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line
					const propertyName = slotData.propertyName || slotName;
					defaultState[propertyName] = [];
				}
			}

			this._defaultState = defaultState;
			return defaultState;
		}

		/**
		 * @private
		 */
		static _generateAccessors() {
			const proto = this.prototype;
			const slotsAreManaged = this.getMetadata().slotsAreManaged();

			// Properties
			const properties = this.getMetadata().getProperties();
			for (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line
				if (!isValidPropertyName(prop)) {
					console.warn(`"${prop}" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */
				}

				if (propData.type === Boolean && propData.defaultValue) {
					throw new Error(`Cannot set a default value for property "${prop}". All booleans are false by default.`);
				}

				if (propData.type === Array) {
					throw new Error(`Wrong type for property "${prop}". Properties cannot be of type Array - use "multiple: true" and set "type" to the single value type, such as "String", "Object", etc...`);
				}

				if (propData.type === Object && propData.defaultValue) {
					throw new Error(`Cannot set a default value for property "${prop}". All properties of type "Object" are empty objects by default.`);
				}

				if (propData.multiple && propData.defaultValue) {
					throw new Error(`Cannot set a default value for property "${prop}". All multiple properties are empty arrays by default.`);
				}

				Object.defineProperty(proto, prop, {
					get() {
						if (this._state[prop] !== undefined) {
							return this._state[prop];
						}

						const propDefaultValue = propData.defaultValue;

						if (propData.type === Boolean) {
							return false;
						} else if (propData.type === String) {  // eslint-disable-line
							return propDefaultValue;
						} else if (propData.multiple) { // eslint-disable-line
							return [];
						} else {
							return propDefaultValue;
						}
					},
					set(value) {
						value = this.constructor.getMetadata().constructor.validatePropertyValue(value, propData);

						const oldState = this._state[prop];

						if (oldState !== value) {
							this._state[prop] = value;
							_invalidate.call(this, {
								type: "property",
								name: prop,
								newValue: value,
								oldValue: oldState,
							});
							this._updateAttribute(prop, value);
						}
					},
				});
			}

			// Slots
			if (slotsAreManaged) {
				const slots = this.getMetadata().getSlots();
				for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line
					if (!isValidPropertyName(slotName)) {
						console.warn(`"${slotName}" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */
					}

					const propertyName = slotData.propertyName || slotName;
					Object.defineProperty(proto, propertyName, {
						get() {
							if (this._state[propertyName] !== undefined) {
								return this._state[propertyName];
							}
							return [];
						},
						set() {
							throw new Error("Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)");
						},
					});
				}
			}
		}

		/**
		 * Returns the metadata object for this UI5 Web Component Class
		 * @protected
		 */
		static get metadata() {
			return {};
		}

		/**
		 * Returns the CSS for this UI5 Web Component Class
		 * @protected
		 */
		static get styles() {
			return "";
		}

		/**
		 * Returns the Static Area CSS for this UI5 Web Component Class
		 * @protected
		 */
		static get staticAreaStyles() {
			return "";
		}

		/**
		 * Returns an array with the dependencies for this UI5 Web Component, which could be:
		 *  - composed components (used in its shadow root or static area item)
		 *  - slotted components that the component may need to communicate with
		 *
		 * @protected
		 */
		static get dependencies() {
			return [];
		}

		/**
		 * Returns a list of the unique dependencies for this UI5 Web Component
		 *
		 * @public
		 */
		static getUniqueDependencies() {
			if (!uniqueDependenciesCache.has(this)) {
				const filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);
				uniqueDependenciesCache.set(this, filtered);
			}

			return uniqueDependenciesCache.get(this);
		}

		/**
		 * Returns a promise that resolves whenever all dependencies for this UI5 Web Component have resolved
		 *
		 * @returns {Promise<any[]>}
		 */
		static whenDependenciesDefined() {
			return Promise.all(this.getUniqueDependencies().map(dep => dep.define()));
		}

		/**
		 * Hook that will be called upon custom element definition
		 *
		 * @protected
		 * @returns {Promise<void>}
		 */
		static async onDefine() {
			return Promise.resolve();
		}

		/**
		 * Registers a UI5 Web Component in the browser window object
		 * @public
		 * @returns {Promise<UI5Element>}
		 */
		static async define() {
			await boot();

			await Promise.all([
				this.whenDependenciesDefined(),
				this.onDefine(),
			]);

			const tag = this.getMetadata().getTag();
			const altTag = this.getMetadata().getAltTag();

			const definedLocally = isTagRegistered(tag);
			const definedGlobally = customElements.get(tag);

			if (definedGlobally && !definedLocally) {
				recordTagRegistrationFailure(tag);
			} else if (!definedGlobally) {
				this._generateAccessors();
				registerTag(tag);
				window.customElements.define(tag, this);

				if (altTag && !customElements.get(altTag)) {
					class oldClassName extends this {}
					registerTag(altTag);
					window.customElements.define(altTag, oldClassName);
				}
			}
			return this;
		}

		/**
		 * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')
		 * Note: not to be confused with the "get metadata()" method, which returns an object for this class's metadata only
		 * @public
		 * @returns {UI5ElementMetadata}
		 */
		static getMetadata() {
			if (this.hasOwnProperty("_metadata")) { // eslint-disable-line
				return this._metadata;
			}

			const metadataObjects = [this.metadata];
			let klass = this; // eslint-disable-line
			while (klass !== UI5Element) {
				klass = Object.getPrototypeOf(klass);
				metadataObjects.unshift(klass.metadata);
			}
			const mergedMetadata = fnMerge$1({}, ...metadataObjects);

			this._metadata = new UI5ElementMetadata(mergedMetadata);
			return this._metadata;
		}
	}

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	const directives = new WeakMap();
	/**
	 * Brands a function as a directive factory function so that lit-html will call
	 * the function during template rendering, rather than passing as a value.
	 *
	 * A _directive_ is a function that takes a Part as an argument. It has the
	 * signature: `(part: Part) => void`.
	 *
	 * A directive _factory_ is a function that takes arguments for data and
	 * configuration and returns a directive. Users of directive usually refer to
	 * the directive factory as the directive. For example, "The repeat directive".
	 *
	 * Usually a template author will invoke a directive factory in their template
	 * with relevant arguments, which will then return a directive function.
	 *
	 * Here's an example of using the `repeat()` directive factory that takes an
	 * array and a function to render an item:
	 *
	 * ```js
	 * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`
	 * ```
	 *
	 * When `repeat` is invoked, it returns a directive function that closes over
	 * `items` and the template function. When the outer template is rendered, the
	 * return directive function is called with the Part for the expression.
	 * `repeat` then performs it's custom logic to render multiple items.
	 *
	 * @param f The directive factory function. Must be a function that returns a
	 * function of the signature `(part: Part) => void`. The returned function will
	 * be called with the part object.
	 *
	 * @example
	 *
	 * import {directive, html} from 'lit-html';
	 *
	 * const immutable = directive((v) => (part) => {
	 *   if (part.value !== v) {
	 *     part.setValue(v)
	 *   }
	 * });
	 */
	const directive = (f) => ((...args) => {
	    const d = f(...args);
	    directives.set(d, true);
	    return d;
	});
	const isDirective = (o) => {
	    return typeof o === 'function' && directives.has(o);
	};

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * True if the custom elements polyfill is in use.
	 */
	const isCEPolyfill = typeof window !== 'undefined' &&
	    window.customElements != null &&
	    window.customElements.polyfillWrapFlushCallback !==
	        undefined;
	/**
	 * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),
	 * into another container (could be the same container), before `before`. If
	 * `before` is null, it appends the nodes to the container.
	 */
	const reparentNodes = (container, start, end = null, before = null) => {
	    while (start !== end) {
	        const n = start.nextSibling;
	        container.insertBefore(start, before);
	        start = n;
	    }
	};
	/**
	 * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from
	 * `container`.
	 */
	const removeNodes = (container, start, end = null) => {
	    while (start !== end) {
	        const n = start.nextSibling;
	        container.removeChild(start);
	        start = n;
	    }
	};

	/**
	 * @license
	 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * A sentinel value that signals that a value was handled by a directive and
	 * should not be written to the DOM.
	 */
	const noChange = {};
	/**
	 * A sentinel value that signals a NodePart to fully clear its content.
	 */
	const nothing = {};

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * An expression marker with embedded unique key to avoid collision with
	 * possible text in templates.
	 */
	const marker = `{{lit-${String(Math.random()).slice(2)}}}`;
	/**
	 * An expression marker used text-positions, multi-binding attributes, and
	 * attributes with markup-like text values.
	 */
	const nodeMarker = `<!--${marker}-->`;
	const markerRegex = new RegExp(`${marker}|${nodeMarker}`);
	/**
	 * Suffix appended to all bound attribute names.
	 */
	const boundAttributeSuffix = '$lit$';
	/**
	 * An updatable Template that tracks the location of dynamic parts.
	 */
	class Template {
	    constructor(result, element) {
	        this.parts = [];
	        this.element = element;
	        const nodesToRemove = [];
	        const stack = [];
	        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
	        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);
	        // Keeps track of the last index associated with a part. We try to delete
	        // unnecessary nodes, but we never want to associate two different parts
	        // to the same index. They must have a constant node between.
	        let lastPartIndex = 0;
	        let index = -1;
	        let partIndex = 0;
	        const { strings, values: { length } } = result;
	        while (partIndex < length) {
	            const node = walker.nextNode();
	            if (node === null) {
	                // We've exhausted the content inside a nested template element.
	                // Because we still have parts (the outer for-loop), we know:
	                // - There is a template in the stack
	                // - The walker will find a nextNode outside the template
	                walker.currentNode = stack.pop();
	                continue;
	            }
	            index++;
	            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {
	                if (node.hasAttributes()) {
	                    const attributes = node.attributes;
	                    const { length } = attributes;
	                    // Per
	                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,
	                    // attributes are not guaranteed to be returned in document order.
	                    // In particular, Edge/IE can return them out of order, so we cannot
	                    // assume a correspondence between part index and attribute index.
	                    let count = 0;
	                    for (let i = 0; i < length; i++) {
	                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {
	                            count++;
	                        }
	                    }
	                    while (count-- > 0) {
	                        // Get the template literal section leading up to the first
	                        // expression in this attribute
	                        const stringForPart = strings[partIndex];
	                        // Find the attribute name
	                        const name = lastAttributeNameRegex.exec(stringForPart)[2];
	                        // Find the corresponding attribute
	                        // All bound attributes have had a suffix added in
	                        // TemplateResult#getHTML to opt out of special attribute
	                        // handling. To look up the attribute value we also need to add
	                        // the suffix.
	                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;
	                        const attributeValue = node.getAttribute(attributeLookupName);
	                        node.removeAttribute(attributeLookupName);
	                        const statics = attributeValue.split(markerRegex);
	                        this.parts.push({ type: 'attribute', index, name, strings: statics });
	                        partIndex += statics.length - 1;
	                    }
	                }
	                if (node.tagName === 'TEMPLATE') {
	                    stack.push(node);
	                    walker.currentNode = node.content;
	                }
	            }
	            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {
	                const data = node.data;
	                if (data.indexOf(marker) >= 0) {
	                    const parent = node.parentNode;
	                    const strings = data.split(markerRegex);
	                    const lastIndex = strings.length - 1;
	                    // Generate a new text node for each literal section
	                    // These nodes are also used as the markers for node parts
	                    for (let i = 0; i < lastIndex; i++) {
	                        let insert;
	                        let s = strings[i];
	                        if (s === '') {
	                            insert = createMarker();
	                        }
	                        else {
	                            const match = lastAttributeNameRegex.exec(s);
	                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {
	                                s = s.slice(0, match.index) + match[1] +
	                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];
	                            }
	                            insert = document.createTextNode(s);
	                        }
	                        parent.insertBefore(insert, node);
	                        this.parts.push({ type: 'node', index: ++index });
	                    }
	                    // If there's no text, we must insert a comment to mark our place.
	                    // Else, we can trust it will stick around after cloning.
	                    if (strings[lastIndex] === '') {
	                        parent.insertBefore(createMarker(), node);
	                        nodesToRemove.push(node);
	                    }
	                    else {
	                        node.data = strings[lastIndex];
	                    }
	                    // We have a part for each match found
	                    partIndex += lastIndex;
	                }
	            }
	            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {
	                if (node.data === marker) {
	                    const parent = node.parentNode;
	                    // Add a new marker node to be the startNode of the Part if any of
	                    // the following are true:
	                    //  * We don't have a previousSibling
	                    //  * The previousSibling is already the start of a previous part
	                    if (node.previousSibling === null || index === lastPartIndex) {
	                        index++;
	                        parent.insertBefore(createMarker(), node);
	                    }
	                    lastPartIndex = index;
	                    this.parts.push({ type: 'node', index });
	                    // If we don't have a nextSibling, keep this node so we have an end.
	                    // Else, we can remove it to save future costs.
	                    if (node.nextSibling === null) {
	                        node.data = '';
	                    }
	                    else {
	                        nodesToRemove.push(node);
	                        index--;
	                    }
	                    partIndex++;
	                }
	                else {
	                    let i = -1;
	                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {
	                        // Comment node has a binding marker inside, make an inactive part
	                        // The binding won't work, but subsequent bindings will
	                        // TODO (justinfagnani): consider whether it's even worth it to
	                        // make bindings in comments work
	                        this.parts.push({ type: 'node', index: -1 });
	                        partIndex++;
	                    }
	                }
	            }
	        }
	        // Remove text binding nodes after the walk to not disturb the TreeWalker
	        for (const n of nodesToRemove) {
	            n.parentNode.removeChild(n);
	        }
	    }
	}
	const endsWith = (str, suffix) => {
	    const index = str.length - suffix.length;
	    return index >= 0 && str.slice(index) === suffix;
	};
	const isTemplatePartActive = (part) => part.index !== -1;
	// Allows `document.createComment('')` to be renamed for a
	// small manual size-savings.
	const createMarker = () => document.createComment('');
	/**
	 * This regex extracts the attribute name preceding an attribute-position
	 * expression. It does this by matching the syntax allowed for attributes
	 * against the string literal directly preceding the expression, assuming that
	 * the expression is in an attribute-value position.
	 *
	 * See attributes in the HTML spec:
	 * https://www.w3.org/TR/html5/syntax.html#elements-attributes
	 *
	 * " \x09\x0a\x0c\x0d" are HTML space characters:
	 * https://www.w3.org/TR/html5/infrastructure.html#space-characters
	 *
	 * "\0-\x1F\x7F-\x9F" are Unicode control characters, which includes every
	 * space character except " ".
	 *
	 * So an attribute is:
	 *  * The name: any character except a control character, space character, ('),
	 *    ("), ">", "=", or "/"
	 *  * Followed by zero or more space characters
	 *  * Followed by "="
	 *  * Followed by zero or more space characters
	 *  * Followed by:
	 *    * Any character except space, ('), ("), "<", ">", "=", (`), or
	 *    * (") then any non-("), or
	 *    * (') then any non-(')
	 */
	const lastAttributeNameRegex = 
	// eslint-disable-next-line no-control-regex
	/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * An instance of a `Template` that can be attached to the DOM and updated
	 * with new values.
	 */
	class TemplateInstance {
	    constructor(template, processor, options) {
	        this.__parts = [];
	        this.template = template;
	        this.processor = processor;
	        this.options = options;
	    }
	    update(values) {
	        let i = 0;
	        for (const part of this.__parts) {
	            if (part !== undefined) {
	                part.setValue(values[i]);
	            }
	            i++;
	        }
	        for (const part of this.__parts) {
	            if (part !== undefined) {
	                part.commit();
	            }
	        }
	    }
	    _clone() {
	        // There are a number of steps in the lifecycle of a template instance's
	        // DOM fragment:
	        //  1. Clone - create the instance fragment
	        //  2. Adopt - adopt into the main document
	        //  3. Process - find part markers and create parts
	        //  4. Upgrade - upgrade custom elements
	        //  5. Update - set node, attribute, property, etc., values
	        //  6. Connect - connect to the document. Optional and outside of this
	        //     method.
	        //
	        // We have a few constraints on the ordering of these steps:
	        //  * We need to upgrade before updating, so that property values will pass
	        //    through any property setters.
	        //  * We would like to process before upgrading so that we're sure that the
	        //    cloned fragment is inert and not disturbed by self-modifying DOM.
	        //  * We want custom elements to upgrade even in disconnected fragments.
	        //
	        // Given these constraints, with full custom elements support we would
	        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect
	        //
	        // But Safari does not implement CustomElementRegistry#upgrade, so we
	        // can not implement that order and still have upgrade-before-update and
	        // upgrade disconnected fragments. So we instead sacrifice the
	        // process-before-upgrade constraint, since in Custom Elements v1 elements
	        // must not modify their light DOM in the constructor. We still have issues
	        // when co-existing with CEv0 elements like Polymer 1, and with polyfills
	        // that don't strictly adhere to the no-modification rule because shadow
	        // DOM, which may be created in the constructor, is emulated by being placed
	        // in the light DOM.
	        //
	        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,
	        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade
	        // in one step.
	        //
	        // The Custom Elements v1 polyfill supports upgrade(), so the order when
	        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,
	        // Connect.
	        const fragment = isCEPolyfill ?
	            this.template.element.content.cloneNode(true) :
	            document.importNode(this.template.element.content, true);
	        const stack = [];
	        const parts = this.template.parts;
	        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
	        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);
	        let partIndex = 0;
	        let nodeIndex = 0;
	        let part;
	        let node = walker.nextNode();
	        // Loop through all the nodes and parts of a template
	        while (partIndex < parts.length) {
	            part = parts[partIndex];
	            if (!isTemplatePartActive(part)) {
	                this.__parts.push(undefined);
	                partIndex++;
	                continue;
	            }
	            // Progress the tree walker until we find our next part's node.
	            // Note that multiple parts may share the same node (attribute parts
	            // on a single element), so this loop may not run at all.
	            while (nodeIndex < part.index) {
	                nodeIndex++;
	                if (node.nodeName === 'TEMPLATE') {
	                    stack.push(node);
	                    walker.currentNode = node.content;
	                }
	                if ((node = walker.nextNode()) === null) {
	                    // We've exhausted the content inside a nested template element.
	                    // Because we still have parts (the outer for-loop), we know:
	                    // - There is a template in the stack
	                    // - The walker will find a nextNode outside the template
	                    walker.currentNode = stack.pop();
	                    node = walker.nextNode();
	                }
	            }
	            // We've arrived at our part's node.
	            if (part.type === 'node') {
	                const part = this.processor.handleTextExpression(this.options);
	                part.insertAfterNode(node.previousSibling);
	                this.__parts.push(part);
	            }
	            else {
	                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));
	            }
	            partIndex++;
	        }
	        if (isCEPolyfill) {
	            document.adoptNode(fragment);
	            customElements.upgrade(fragment);
	        }
	        return fragment;
	    }
	}

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * Our TrustedTypePolicy for HTML which is declared using the html template
	 * tag function.
	 *
	 * That HTML is a developer-authored constant, and is parsed with innerHTML
	 * before any untrusted expressions have been mixed in. Therefor it is
	 * considered safe by construction.
	 */
	const policy = window.trustedTypes &&
	    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });
	const commentMarker = ` ${marker} `;
	/**
	 * The return type of `html`, which holds a Template and the values from
	 * interpolated expressions.
	 */
	class TemplateResult {
	    constructor(strings, values, type, processor) {
	        this.strings = strings;
	        this.values = values;
	        this.type = type;
	        this.processor = processor;
	    }
	    /**
	     * Returns a string of HTML used to create a `<template>` element.
	     */
	    getHTML() {
	        const l = this.strings.length - 1;
	        let html = '';
	        let isCommentBinding = false;
	        for (let i = 0; i < l; i++) {
	            const s = this.strings[i];
	            // For each binding we want to determine the kind of marker to insert
	            // into the template source before it's parsed by the browser's HTML
	            // parser. The marker type is based on whether the expression is in an
	            // attribute, text, or comment position.
	            //   * For node-position bindings we insert a comment with the marker
	            //     sentinel as its text content, like <!--{{lit-guid}}-->.
	            //   * For attribute bindings we insert just the marker sentinel for the
	            //     first binding, so that we support unquoted attribute bindings.
	            //     Subsequent bindings can use a comment marker because multi-binding
	            //     attributes must be quoted.
	            //   * For comment bindings we insert just the marker sentinel so we don't
	            //     close the comment.
	            //
	            // The following code scans the template source, but is *not* an HTML
	            // parser. We don't need to track the tree structure of the HTML, only
	            // whether a binding is inside a comment, and if not, if it appears to be
	            // the first binding in an attribute.
	            const commentOpen = s.lastIndexOf('<!--');
	            // We're in comment position if we have a comment open with no following
	            // comment close. Because <-- can appear in an attribute value there can
	            // be false positives.
	            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&
	                s.indexOf('-->', commentOpen + 1) === -1;
	            // Check to see if we have an attribute-like sequence preceding the
	            // expression. This can match "name=value" like structures in text,
	            // comments, and attribute values, so there can be false-positives.
	            const attributeMatch = lastAttributeNameRegex.exec(s);
	            if (attributeMatch === null) {
	                // We're only in this branch if we don't have a attribute-like
	                // preceding sequence. For comments, this guards against unusual
	                // attribute values like <div foo="<!--${'bar'}">. Cases like
	                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch
	                // below.
	                html += s + (isCommentBinding ? commentMarker : nodeMarker);
	            }
	            else {
	                // For attributes we use just a marker sentinel, and also append a
	                // $lit$ suffix to the name to opt-out of attribute-specific parsing
	                // that IE and Edge do for style and certain SVG attributes.
	                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +
	                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +
	                    marker;
	            }
	        }
	        html += this.strings[l];
	        return html;
	    }
	    getTemplateElement() {
	        const template = document.createElement('template');
	        let value = this.getHTML();
	        if (policy !== undefined) {
	            // this is secure because `this.strings` is a TemplateStringsArray.
	            // TODO: validate this when
	            // https://github.com/tc39/proposal-array-is-template-object is
	            // implemented.
	            value = policy.createHTML(value);
	        }
	        template.innerHTML = value;
	        return template;
	    }
	}
	/**
	 * A TemplateResult for SVG fragments.
	 *
	 * This class wraps HTML in an `<svg>` tag in order to parse its contents in the
	 * SVG namespace, then modifies the template to remove the `<svg>` tag so that
	 * clones only container the original fragment.
	 */
	class SVGTemplateResult extends TemplateResult {
	    getHTML() {
	        return `<svg>${super.getHTML()}</svg>`;
	    }
	    getTemplateElement() {
	        const template = super.getTemplateElement();
	        const content = template.content;
	        const svgElement = content.firstChild;
	        content.removeChild(svgElement);
	        reparentNodes(content, svgElement.firstChild);
	        return template;
	    }
	}

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	const isPrimitive = (value) => {
	    return (value === null ||
	        !(typeof value === 'object' || typeof value === 'function'));
	};
	const isIterable = (value) => {
	    return Array.isArray(value) ||
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        !!(value && value[Symbol.iterator]);
	};
	/**
	 * Writes attribute values to the DOM for a group of AttributeParts bound to a
	 * single attribute. The value is only set once even if there are multiple parts
	 * for an attribute.
	 */
	class AttributeCommitter {
	    constructor(element, name, strings) {
	        this.dirty = true;
	        this.element = element;
	        this.name = name;
	        this.strings = strings;
	        this.parts = [];
	        for (let i = 0; i < strings.length - 1; i++) {
	            this.parts[i] = this._createPart();
	        }
	    }
	    /**
	     * Creates a single part. Override this to create a differnt type of part.
	     */
	    _createPart() {
	        return new AttributePart(this);
	    }
	    _getValue() {
	        const strings = this.strings;
	        const l = strings.length - 1;
	        const parts = this.parts;
	        // If we're assigning an attribute via syntax like:
	        //    attr="${foo}"  or  attr=${foo}
	        // but not
	        //    attr="${foo} ${bar}" or attr="${foo} baz"
	        // then we don't want to coerce the attribute value into one long
	        // string. Instead we want to just return the value itself directly,
	        // so that sanitizeDOMValue can get the actual value rather than
	        // String(value)
	        // The exception is if v is an array, in which case we do want to smash
	        // it together into a string without calling String() on the array.
	        //
	        // This also allows trusted values (when using TrustedTypes) being
	        // assigned to DOM sinks without being stringified in the process.
	        if (l === 1 && strings[0] === '' && strings[1] === '') {
	            const v = parts[0].value;
	            if (typeof v === 'symbol') {
	                return String(v);
	            }
	            if (typeof v === 'string' || !isIterable(v)) {
	                return v;
	            }
	        }
	        let text = '';
	        for (let i = 0; i < l; i++) {
	            text += strings[i];
	            const part = parts[i];
	            if (part !== undefined) {
	                const v = part.value;
	                if (isPrimitive(v) || !isIterable(v)) {
	                    text += typeof v === 'string' ? v : String(v);
	                }
	                else {
	                    for (const t of v) {
	                        text += typeof t === 'string' ? t : String(t);
	                    }
	                }
	            }
	        }
	        text += strings[l];
	        return text;
	    }
	    commit() {
	        if (this.dirty) {
	            this.dirty = false;
	            this.element.setAttribute(this.name, this._getValue());
	        }
	    }
	}
	/**
	 * A Part that controls all or part of an attribute value.
	 */
	class AttributePart {
	    constructor(committer) {
	        this.value = undefined;
	        this.committer = committer;
	    }
	    setValue(value) {
	        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {
	            this.value = value;
	            // If the value is a not a directive, dirty the committer so that it'll
	            // call setAttribute. If the value is a directive, it'll dirty the
	            // committer if it calls setValue().
	            if (!isDirective(value)) {
	                this.committer.dirty = true;
	            }
	        }
	    }
	    commit() {
	        while (isDirective(this.value)) {
	            const directive = this.value;
	            this.value = noChange;
	            directive(this);
	        }
	        if (this.value === noChange) {
	            return;
	        }
	        this.committer.commit();
	    }
	}
	/**
	 * A Part that controls a location within a Node tree. Like a Range, NodePart
	 * has start and end locations and can set and update the Nodes between those
	 * locations.
	 *
	 * NodeParts support several value types: primitives, Nodes, TemplateResults,
	 * as well as arrays and iterables of those types.
	 */
	class NodePart {
	    constructor(options) {
	        this.value = undefined;
	        this.__pendingValue = undefined;
	        this.options = options;
	    }
	    /**
	     * Appends this part into a container.
	     *
	     * This part must be empty, as its contents are not automatically moved.
	     */
	    appendInto(container) {
	        this.startNode = container.appendChild(createMarker());
	        this.endNode = container.appendChild(createMarker());
	    }
	    /**
	     * Inserts this part after the `ref` node (between `ref` and `ref`'s next
	     * sibling). Both `ref` and its next sibling must be static, unchanging nodes
	     * such as those that appear in a literal section of a template.
	     *
	     * This part must be empty, as its contents are not automatically moved.
	     */
	    insertAfterNode(ref) {
	        this.startNode = ref;
	        this.endNode = ref.nextSibling;
	    }
	    /**
	     * Appends this part into a parent part.
	     *
	     * This part must be empty, as its contents are not automatically moved.
	     */
	    appendIntoPart(part) {
	        part.__insert(this.startNode = createMarker());
	        part.__insert(this.endNode = createMarker());
	    }
	    /**
	     * Inserts this part after the `ref` part.
	     *
	     * This part must be empty, as its contents are not automatically moved.
	     */
	    insertAfterPart(ref) {
	        ref.__insert(this.startNode = createMarker());
	        this.endNode = ref.endNode;
	        ref.endNode = this.startNode;
	    }
	    setValue(value) {
	        this.__pendingValue = value;
	    }
	    commit() {
	        if (this.startNode.parentNode === null) {
	            return;
	        }
	        while (isDirective(this.__pendingValue)) {
	            const directive = this.__pendingValue;
	            this.__pendingValue = noChange;
	            directive(this);
	        }
	        const value = this.__pendingValue;
	        if (value === noChange) {
	            return;
	        }
	        if (isPrimitive(value)) {
	            if (value !== this.value) {
	                this.__commitText(value);
	            }
	        }
	        else if (value instanceof TemplateResult) {
	            this.__commitTemplateResult(value);
	        }
	        else if (value instanceof Node) {
	            this.__commitNode(value);
	        }
	        else if (isIterable(value)) {
	            this.__commitIterable(value);
	        }
	        else if (value === nothing) {
	            this.value = nothing;
	            this.clear();
	        }
	        else {
	            // Fallback, will render the string representation
	            this.__commitText(value);
	        }
	    }
	    __insert(node) {
	        this.endNode.parentNode.insertBefore(node, this.endNode);
	    }
	    __commitNode(value) {
	        if (this.value === value) {
	            return;
	        }
	        this.clear();
	        this.__insert(value);
	        this.value = value;
	    }
	    __commitText(value) {
	        const node = this.startNode.nextSibling;
	        value = value == null ? '' : value;
	        // If `value` isn't already a string, we explicitly convert it here in case
	        // it can't be implicitly converted - i.e. it's a symbol.
	        const valueAsString = typeof value === 'string' ? value : String(value);
	        if (node === this.endNode.previousSibling &&
	            node.nodeType === 3 /* Node.TEXT_NODE */) {
	            // If we only have a single text node between the markers, we can just
	            // set its value, rather than replacing it.
	            // TODO(justinfagnani): Can we just check if this.value is primitive?
	            node.data = valueAsString;
	        }
	        else {
	            this.__commitNode(document.createTextNode(valueAsString));
	        }
	        this.value = value;
	    }
	    __commitTemplateResult(value) {
	        const template = this.options.templateFactory(value);
	        if (this.value instanceof TemplateInstance &&
	            this.value.template === template) {
	            this.value.update(value.values);
	        }
	        else {
	            // Make sure we propagate the template processor from the TemplateResult
	            // so that we use its syntax extension, etc. The template factory comes
	            // from the render function options so that it can control template
	            // caching and preprocessing.
	            const instance = new TemplateInstance(template, value.processor, this.options);
	            const fragment = instance._clone();
	            instance.update(value.values);
	            this.__commitNode(fragment);
	            this.value = instance;
	        }
	    }
	    __commitIterable(value) {
	        // For an Iterable, we create a new InstancePart per item, then set its
	        // value to the item. This is a little bit of overhead for every item in
	        // an Iterable, but it lets us recurse easily and efficiently update Arrays
	        // of TemplateResults that will be commonly returned from expressions like:
	        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.
	        // If _value is an array, then the previous render was of an
	        // iterable and _value will contain the NodeParts from the previous
	        // render. If _value is not an array, clear this part and make a new
	        // array for NodeParts.
	        if (!Array.isArray(this.value)) {
	            this.value = [];
	            this.clear();
	        }
	        // Lets us keep track of how many items we stamped so we can clear leftover
	        // items from a previous render
	        const itemParts = this.value;
	        let partIndex = 0;
	        let itemPart;
	        for (const item of value) {
	            // Try to reuse an existing part
	            itemPart = itemParts[partIndex];
	            // If no existing part, create a new one
	            if (itemPart === undefined) {
	                itemPart = new NodePart(this.options);
	                itemParts.push(itemPart);
	                if (partIndex === 0) {
	                    itemPart.appendIntoPart(this);
	                }
	                else {
	                    itemPart.insertAfterPart(itemParts[partIndex - 1]);
	                }
	            }
	            itemPart.setValue(item);
	            itemPart.commit();
	            partIndex++;
	        }
	        if (partIndex < itemParts.length) {
	            // Truncate the parts array so _value reflects the current state
	            itemParts.length = partIndex;
	            this.clear(itemPart && itemPart.endNode);
	        }
	    }
	    clear(startNode = this.startNode) {
	        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);
	    }
	}
	/**
	 * Implements a boolean attribute, roughly as defined in the HTML
	 * specification.
	 *
	 * If the value is truthy, then the attribute is present with a value of
	 * ''. If the value is falsey, the attribute is removed.
	 */
	class BooleanAttributePart {
	    constructor(element, name, strings) {
	        this.value = undefined;
	        this.__pendingValue = undefined;
	        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {
	            throw new Error('Boolean attributes can only contain a single expression');
	        }
	        this.element = element;
	        this.name = name;
	        this.strings = strings;
	    }
	    setValue(value) {
	        this.__pendingValue = value;
	    }
	    commit() {
	        while (isDirective(this.__pendingValue)) {
	            const directive = this.__pendingValue;
	            this.__pendingValue = noChange;
	            directive(this);
	        }
	        if (this.__pendingValue === noChange) {
	            return;
	        }
	        const value = !!this.__pendingValue;
	        if (this.value !== value) {
	            if (value) {
	                this.element.setAttribute(this.name, '');
	            }
	            else {
	                this.element.removeAttribute(this.name);
	            }
	            this.value = value;
	        }
	        this.__pendingValue = noChange;
	    }
	}
	/**
	 * Sets attribute values for PropertyParts, so that the value is only set once
	 * even if there are multiple parts for a property.
	 *
	 * If an expression controls the whole property value, then the value is simply
	 * assigned to the property under control. If there are string literals or
	 * multiple expressions, then the strings are expressions are interpolated into
	 * a string first.
	 */
	class PropertyCommitter extends AttributeCommitter {
	    constructor(element, name, strings) {
	        super(element, name, strings);
	        this.single =
	            (strings.length === 2 && strings[0] === '' && strings[1] === '');
	    }
	    _createPart() {
	        return new PropertyPart(this);
	    }
	    _getValue() {
	        if (this.single) {
	            return this.parts[0].value;
	        }
	        return super._getValue();
	    }
	    commit() {
	        if (this.dirty) {
	            this.dirty = false;
	            // eslint-disable-next-line @typescript-eslint/no-explicit-any
	            this.element[this.name] = this._getValue();
	        }
	    }
	}
	class PropertyPart extends AttributePart {
	}
	// Detect event listener options support. If the `capture` property is read
	// from the options object, then options are supported. If not, then the third
	// argument to add/removeEventListener is interpreted as the boolean capture
	// value so we should only pass the `capture` property.
	let eventOptionsSupported = false;
	// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch
	// blocks right into the body of a module
	(() => {
	    try {
	        const options = {
	            get capture() {
	                eventOptionsSupported = true;
	                return false;
	            }
	        };
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        window.addEventListener('test', options, options);
	        // eslint-disable-next-line @typescript-eslint/no-explicit-any
	        window.removeEventListener('test', options, options);
	    }
	    catch (_e) {
	        // event options not supported
	    }
	})();
	class EventPart {
	    constructor(element, eventName, eventContext) {
	        this.value = undefined;
	        this.__pendingValue = undefined;
	        this.element = element;
	        this.eventName = eventName;
	        this.eventContext = eventContext;
	        this.__boundHandleEvent = (e) => this.handleEvent(e);
	    }
	    setValue(value) {
	        this.__pendingValue = value;
	    }
	    commit() {
	        while (isDirective(this.__pendingValue)) {
	            const directive = this.__pendingValue;
	            this.__pendingValue = noChange;
	            directive(this);
	        }
	        if (this.__pendingValue === noChange) {
	            return;
	        }
	        const newListener = this.__pendingValue;
	        const oldListener = this.value;
	        const shouldRemoveListener = newListener == null ||
	            oldListener != null &&
	                (newListener.capture !== oldListener.capture ||
	                    newListener.once !== oldListener.once ||
	                    newListener.passive !== oldListener.passive);
	        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);
	        if (shouldRemoveListener) {
	            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);
	        }
	        if (shouldAddListener) {
	            this.__options = getOptions(newListener);
	            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);
	        }
	        this.value = newListener;
	        this.__pendingValue = noChange;
	    }
	    handleEvent(event) {
	        if (typeof this.value === 'function') {
	            this.value.call(this.eventContext || this.element, event);
	        }
	        else {
	            this.value.handleEvent(event);
	        }
	    }
	}
	// We copy options because of the inconsistent behavior of browsers when reading
	// the third argument of add/removeEventListener. IE11 doesn't support options
	// at all. Chrome 41 only reads `capture` if the argument is an object.
	const getOptions = (o) => o &&
	    (eventOptionsSupported ?
	        { capture: o.capture, passive: o.passive, once: o.once } :
	        o.capture);

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * Creates Parts when a template is instantiated.
	 */
	class DefaultTemplateProcessor {
	    /**
	     * Create parts for an attribute-position binding, given the event, attribute
	     * name, and string literals.
	     *
	     * @param element The element containing the binding
	     * @param name  The attribute name
	     * @param strings The string literals. There are always at least two strings,
	     *   event for fully-controlled bindings with a single expression.
	     */
	    handleAttributeExpressions(element, name, strings, options) {
	        const prefix = name[0];
	        if (prefix === '.') {
	            const committer = new PropertyCommitter(element, name.slice(1), strings);
	            return committer.parts;
	        }
	        if (prefix === '@') {
	            return [new EventPart(element, name.slice(1), options.eventContext)];
	        }
	        if (prefix === '?') {
	            return [new BooleanAttributePart(element, name.slice(1), strings)];
	        }
	        const committer = new AttributeCommitter(element, name, strings);
	        return committer.parts;
	    }
	    /**
	     * Create parts for a text-position binding.
	     * @param templateFactory
	     */
	    handleTextExpression(options) {
	        return new NodePart(options);
	    }
	}
	const defaultTemplateProcessor = new DefaultTemplateProcessor();

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * The default TemplateFactory which caches Templates keyed on
	 * result.type and result.strings.
	 */
	function templateFactory(result) {
	    let templateCache = templateCaches.get(result.type);
	    if (templateCache === undefined) {
	        templateCache = {
	            stringsArray: new WeakMap(),
	            keyString: new Map()
	        };
	        templateCaches.set(result.type, templateCache);
	    }
	    let template = templateCache.stringsArray.get(result.strings);
	    if (template !== undefined) {
	        return template;
	    }
	    // If the TemplateStringsArray is new, generate a key from the strings
	    // This key is shared between all templates with identical content
	    const key = result.strings.join(marker);
	    // Check if we already have a Template for this key
	    template = templateCache.keyString.get(key);
	    if (template === undefined) {
	        // If we have not seen this key before, create a new Template
	        template = new Template(result, result.getTemplateElement());
	        // Cache the Template for this key
	        templateCache.keyString.set(key, template);
	    }
	    // Cache all future queries for this TemplateStringsArray
	    templateCache.stringsArray.set(result.strings, template);
	    return template;
	}
	const templateCaches = new Map();

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	const parts = new WeakMap();
	/**
	 * Renders a template result or other value to a container.
	 *
	 * To update a container with new values, reevaluate the template literal and
	 * call `render` with the new result.
	 *
	 * @param result Any value renderable by NodePart - typically a TemplateResult
	 *     created by evaluating a template tag like `html` or `svg`.
	 * @param container A DOM parent to render to. The entire contents are either
	 *     replaced, or efficiently updated if the same result type was previous
	 *     rendered there.
	 * @param options RenderOptions for the entire render tree rendered to this
	 *     container. Render options must *not* change between renders to the same
	 *     container, as those changes will not effect previously rendered DOM.
	 */
	const render = (result, container, options) => {
	    let part = parts.get(container);
	    if (part === undefined) {
	        removeNodes(container, container.firstChild);
	        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));
	        part.appendInto(container);
	    }
	    part.setValue(result);
	    part.commit();
	};

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	// IMPORTANT: do not change the property name or the assignment expression.
	// This line will be used in regexes to search for lit-html usage.
	// TODO(justinfagnani): inject version number at build time
	if (typeof window !== 'undefined') {
	    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');
	}
	/**
	 * Interprets a template literal as an HTML template that can efficiently
	 * render to and update a container.
	 */
	const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);
	/**
	 * Interprets a template literal as an SVG template that can efficiently
	 * render to and update a container.
	 */
	const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);

	const cache$1 = new Map();

	const scopeHTML = (strings, tags, suffix) => {
		if (suffix && tags && tags.length) {
			strings = strings.map(string => {
				if (cache$1.has(string)) {
					return cache$1.get(string);
				}

				/*
				const allTags = [...string.matchAll(/<(ui5-.*?)[> ]/g)].map(x => x[1]);
				allTags.forEach(t => {
					if (!tags.includes(t)) {
						throw new Error(`${t} not found in ${string}`);
						// console.log(t, " in ", string);
					}
				});
				*/

				let result = string;
				tags.forEach(tag => {
					result = result.replace(new RegExp(`(</?)(${tag})(/?[> \t\n])`, "g"), `$1$2-${suffix}$3`);
				});
				cache$1.set(string, result);
				return result;
			});
		}

		return strings;
	};

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	// Helper functions for manipulating parts
	// TODO(kschaaf): Refactor into Part API?
	const createAndInsertPart = (containerPart, beforePart) => {
	    const container = containerPart.startNode.parentNode;
	    const beforeNode = beforePart === undefined ? containerPart.endNode :
	        beforePart.startNode;
	    const startNode = container.insertBefore(createMarker(), beforeNode);
	    container.insertBefore(createMarker(), beforeNode);
	    const newPart = new NodePart(containerPart.options);
	    newPart.insertAfterNode(startNode);
	    return newPart;
	};
	const updatePart = (part, value) => {
	    part.setValue(value);
	    part.commit();
	    return part;
	};
	const insertPartBefore = (containerPart, part, ref) => {
	    const container = containerPart.startNode.parentNode;
	    const beforeNode = ref ? ref.startNode : containerPart.endNode;
	    const endNode = part.endNode.nextSibling;
	    if (endNode !== beforeNode) {
	        reparentNodes(container, part.startNode, endNode, beforeNode);
	    }
	};
	const removePart = (part) => {
	    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);
	};
	// Helper for generating a map of array item to its index over a subset
	// of an array (used to lazily generate `newKeyToIndexMap` and
	// `oldKeyToIndexMap`)
	const generateMap = (list, start, end) => {
	    const map = new Map();
	    for (let i = start; i <= end; i++) {
	        map.set(list[i], i);
	    }
	    return map;
	};
	// Stores previous ordered list of parts and map of key to index
	const partListCache = new WeakMap();
	const keyListCache = new WeakMap();
	/**
	 * A directive that repeats a series of values (usually `TemplateResults`)
	 * generated from an iterable, and updates those items efficiently when the
	 * iterable changes based on user-provided `keys` associated with each item.
	 *
	 * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,
	 * meaning previous DOM for a given key is moved into the new position if
	 * needed, and DOM will never be reused with values for different keys (new DOM
	 * will always be created for new keys). This is generally the most efficient
	 * way to use `repeat` since it performs minimum unnecessary work for insertions
	 * and removals.
	 *
	 * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a
	 * given call to `repeat`. The behavior when two or more items have the same key
	 * is undefined.
	 *
	 * If no `keyFn` is provided, this directive will perform similar to mapping
	 * items to values, and DOM will be reused against potentially different items.
	 */
	const repeat = directive((items, keyFnOrTemplate, template) => {
	    let keyFn;
	    if (template === undefined) {
	        template = keyFnOrTemplate;
	    }
	    else if (keyFnOrTemplate !== undefined) {
	        keyFn = keyFnOrTemplate;
	    }
	    return (containerPart) => {
	        if (!(containerPart instanceof NodePart)) {
	            throw new Error('repeat can only be used in text bindings');
	        }
	        // Old part & key lists are retrieved from the last update
	        // (associated with the part for this instance of the directive)
	        const oldParts = partListCache.get(containerPart) || [];
	        const oldKeys = keyListCache.get(containerPart) || [];
	        // New part list will be built up as we go (either reused from
	        // old parts or created for new keys in this update). This is
	        // saved in the above cache at the end of the update.
	        const newParts = [];
	        // New value list is eagerly generated from items along with a
	        // parallel array indicating its key.
	        const newValues = [];
	        const newKeys = [];
	        let index = 0;
	        for (const item of items) {
	            newKeys[index] = keyFn ? keyFn(item, index) : index;
	            newValues[index] = template(item, index);
	            index++;
	        }
	        // Maps from key to index for current and previous update; these
	        // are generated lazily only when needed as a performance
	        // optimization, since they are only required for multiple
	        // non-contiguous changes in the list, which are less common.
	        let newKeyToIndexMap;
	        let oldKeyToIndexMap;
	        // Head and tail pointers to old parts and new values
	        let oldHead = 0;
	        let oldTail = oldParts.length - 1;
	        let newHead = 0;
	        let newTail = newValues.length - 1;
	        // Overview of O(n) reconciliation algorithm (general approach
	        // based on ideas found in ivi, vue, snabbdom, etc.):
	        //
	        // * We start with the list of old parts and new values (and
	        //   arrays of their respective keys), head/tail pointers into
	        //   each, and we build up the new list of parts by updating
	        //   (and when needed, moving) old parts or creating new ones.
	        //   The initial scenario might look like this (for brevity of
	        //   the diagrams, the numbers in the array reflect keys
	        //   associated with the old parts or new values, although keys
	        //   and parts/values are actually stored in parallel arrays
	        //   indexed using the same head/tail pointers):
	        //
	        //      oldHead v                 v oldTail
	        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
	        //   newParts: [ ,  ,  ,  ,  ,  ,  ]
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new
	        //                                      item order
	        //      newHead ^                 ^ newTail
	        //
	        // * Iterate old & new lists from both sides, updating,
	        //   swapping, or removing parts at the head/tail locations
	        //   until neither head nor tail can move.
	        //
	        // * Example below: keys at head pointers match, so update old
	        //   part 0 in-place (no need to move it) and record part 0 in
	        //   the `newParts` list. The last thing we do is advance the
	        //   `oldHead` and `newHead` pointers (will be reflected in the
	        //   next diagram).
	        //
	        //      oldHead v                 v oldTail
	        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
	        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead
	        //                                      & newHead
	        //      newHead ^                 ^ newTail
	        //
	        // * Example below: head pointers don't match, but tail
	        //   pointers do, so update part 6 in place (no need to move
	        //   it), and record part 6 in the `newParts` list. Last,
	        //   advance the `oldTail` and `oldHead` pointers.
	        //
	        //         oldHead v              v oldTail
	        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
	        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail
	        //                                      & newTail
	        //         newHead ^              ^ newTail
	        //
	        // * If neither head nor tail match; next check if one of the
	        //   old head/tail items was removed. We first need to generate
	        //   the reverse map of new keys to index (`newKeyToIndexMap`),
	        //   which is done once lazily as a performance optimization,
	        //   since we only hit this case if multiple non-contiguous
	        //   changes were made. Note that for contiguous removal
	        //   anywhere in the list, the head and tails would advance
	        //   from either end and pass each other before we get to this
	        //   case and removals would be handled in the final while loop
	        //   without needing to generate the map.
	        //
	        // * Example below: The key at `oldTail` was removed (no longer
	        //   in the `newKeyToIndexMap`), so remove that part from the
	        //   DOM and advance just the `oldTail` pointer.
	        //
	        //         oldHead v           v oldTail
	        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]
	        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail
	        //         newHead ^           ^ newTail
	        //
	        // * Once head and tail cannot move, any mismatches are due to
	        //   either new or moved items; if a new key is in the previous
	        //   "old key to old index" map, move the old part to the new
	        //   location, otherwise create and insert a new part. Note
	        //   that when moving an old part we null its position in the
	        //   oldParts array if it lies between the head and tail so we
	        //   know to skip it when the pointers get there.
	        //
	        // * Example below: neither head nor tail match, and neither
	        //   were removed; so find the `newHead` key in the
	        //   `oldKeyToIndexMap`, and move that old part's DOM into the
	        //   next head position (before `oldParts[oldHead]`). Last,
	        //   null the part in the `oldPart` array since it was
	        //   somewhere in the remaining oldParts still to be scanned
	        //   (between the head and tail pointers) so that we know to
	        //   skip that old part on future iterations.
	        //
	        //         oldHead v        v oldTail
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
	        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance
	        //                                      newHead
	        //         newHead ^           ^ newTail
	        //
	        // * Note that for moves/insertions like the one above, a part
	        //   inserted at the head pointer is inserted before the
	        //   current `oldParts[oldHead]`, and a part inserted at the
	        //   tail pointer is inserted before `newParts[newTail+1]`. The
	        //   seeming asymmetry lies in the fact that new parts are
	        //   moved into place outside in, so to the right of the head
	        //   pointer are old parts, and to the right of the tail
	        //   pointer are new parts.
	        //
	        // * We always restart back from the top of the algorithm,
	        //   allowing matching and simple updates in place to
	        //   continue...
	        //
	        // * Example below: the head pointers once again match, so
	        //   simply update part 1 and record it in the `newParts`
	        //   array.  Last, advance both head pointers.
	        //
	        //         oldHead v        v oldTail
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
	        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead
	        //                                      & newHead
	        //            newHead ^        ^ newTail
	        //
	        // * As mentioned above, items that were moved as a result of
	        //   being stuck (the final else clause in the code below) are
	        //   marked with null, so we always advance old pointers over
	        //   these so we're comparing the next actual old value on
	        //   either end.
	        //
	        // * Example below: `oldHead` is null (already placed in
	        //   newParts), so advance `oldHead`.
	        //
	        //            oldHead v     v oldTail
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:
	        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]
	        //               newHead ^     ^ newTail
	        //
	        // * Note it's not critical to mark old parts as null when they
	        //   are moved from head to tail or tail to head, since they
	        //   will be outside the pointer range and never visited again.
	        //
	        // * Example below: Here the old tail key matches the new head
	        //   key, so the part at the `oldTail` position and move its
	        //   DOM to the new head position (before `oldParts[oldHead]`).
	        //   Last, advance `oldTail` and `newHead` pointers.
	        //
	        //               oldHead v  v oldTail
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
	        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,
	        //                                     advance oldTail & newHead
	        //               newHead ^     ^ newTail
	        //
	        // * Example below: Old and new head keys match, so update the
	        //   old head part in place, and advance the `oldHead` and
	        //   `newHead` pointers.
	        //
	        //               oldHead v oldTail
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
	        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &
	        //                                      newHead
	        //                  newHead ^  ^ newTail
	        //
	        // * Once the new or old pointers move past each other then all
	        //   we have left is additions (if old list exhausted) or
	        //   removals (if new list exhausted). Those are handled in the
	        //   final while loops at the end.
	        //
	        // * Example below: `oldHead` exceeded `oldTail`, so we're done
	        //   with the main loop.  Create the remaining part and insert
	        //   it at the new head position, and the update is complete.
	        //
	        //                   (oldHead > oldTail)
	        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]
	        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7
	        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]
	        //                     newHead ^ newTail
	        //
	        // * Note that the order of the if/else clauses is not
	        //   important to the algorithm, as long as the null checks
	        //   come first (to ensure we're always working on valid old
	        //   parts) and that the final else clause comes last (since
	        //   that's where the expensive moves occur). The order of
	        //   remaining clauses is is just a simple guess at which cases
	        //   will be most common.
	        //
	        // * TODO(kschaaf) Note, we could calculate the longest
	        //   increasing subsequence (LIS) of old items in new position,
	        //   and only move those not in the LIS set. However that costs
	        //   O(nlogn) time and adds a bit more code, and only helps
	        //   make rare types of mutations require fewer moves. The
	        //   above handles removes, adds, reversal, swaps, and single
	        //   moves of contiguous items in linear time, in the minimum
	        //   number of moves. As the number of multiple moves where LIS
	        //   might help approaches a random shuffle, the LIS
	        //   optimization becomes less helpful, so it seems not worth
	        //   the code at this point. Could reconsider if a compelling
	        //   case arises.
	        while (oldHead <= oldTail && newHead <= newTail) {
	            if (oldParts[oldHead] === null) {
	                // `null` means old part at head has already been used
	                // below; skip
	                oldHead++;
	            }
	            else if (oldParts[oldTail] === null) {
	                // `null` means old part at tail has already been used
	                // below; skip
	                oldTail--;
	            }
	            else if (oldKeys[oldHead] === newKeys[newHead]) {
	                // Old head matches new head; update in place
	                newParts[newHead] =
	                    updatePart(oldParts[oldHead], newValues[newHead]);
	                oldHead++;
	                newHead++;
	            }
	            else if (oldKeys[oldTail] === newKeys[newTail]) {
	                // Old tail matches new tail; update in place
	                newParts[newTail] =
	                    updatePart(oldParts[oldTail], newValues[newTail]);
	                oldTail--;
	                newTail--;
	            }
	            else if (oldKeys[oldHead] === newKeys[newTail]) {
	                // Old head matches new tail; update and move to new tail
	                newParts[newTail] =
	                    updatePart(oldParts[oldHead], newValues[newTail]);
	                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);
	                oldHead++;
	                newTail--;
	            }
	            else if (oldKeys[oldTail] === newKeys[newHead]) {
	                // Old tail matches new head; update and move to new head
	                newParts[newHead] =
	                    updatePart(oldParts[oldTail], newValues[newHead]);
	                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);
	                oldTail--;
	                newHead++;
	            }
	            else {
	                if (newKeyToIndexMap === undefined) {
	                    // Lazily generate key-to-index maps, used for removals &
	                    // moves below
	                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);
	                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);
	                }
	                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {
	                    // Old head is no longer in new list; remove
	                    removePart(oldParts[oldHead]);
	                    oldHead++;
	                }
	                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {
	                    // Old tail is no longer in new list; remove
	                    removePart(oldParts[oldTail]);
	                    oldTail--;
	                }
	                else {
	                    // Any mismatches at this point are due to additions or
	                    // moves; see if we have an old part we can reuse and move
	                    // into place
	                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);
	                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;
	                    if (oldPart === null) {
	                        // No old part for this value; create a new one and
	                        // insert it
	                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);
	                        updatePart(newPart, newValues[newHead]);
	                        newParts[newHead] = newPart;
	                    }
	                    else {
	                        // Reuse old part
	                        newParts[newHead] =
	                            updatePart(oldPart, newValues[newHead]);
	                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);
	                        // This marks the old part as having been used, so that
	                        // it will be skipped in the first two checks above
	                        oldParts[oldIndex] = null;
	                    }
	                    newHead++;
	                }
	            }
	        }
	        // Add parts for any remaining new values
	        while (newHead <= newTail) {
	            // For all remaining additions, we insert before last new
	            // tail, since old pointers are no longer valid
	            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);
	            updatePart(newPart, newValues[newHead]);
	            newParts[newHead++] = newPart;
	        }
	        // Remove any remaining unused old parts
	        while (oldHead <= oldTail) {
	            const oldPart = oldParts[oldHead++];
	            if (oldPart !== null) {
	                removePart(oldPart);
	            }
	        }
	        // Save order of new parts for next round
	        partListCache.set(containerPart, newParts);
	        keyListCache.set(containerPart, newKeys);
	    };
	});

	/**
	 * @license
	 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	// IE11 doesn't support classList on SVG elements, so we emulate it with a Set
	class ClassList {
	    constructor(element) {
	        this.classes = new Set();
	        this.changed = false;
	        this.element = element;
	        const classList = (element.getAttribute('class') || '').split(/\s+/);
	        for (const cls of classList) {
	            this.classes.add(cls);
	        }
	    }
	    add(cls) {
	        this.classes.add(cls);
	        this.changed = true;
	    }
	    remove(cls) {
	        this.classes.delete(cls);
	        this.changed = true;
	    }
	    commit() {
	        if (this.changed) {
	            let classString = '';
	            this.classes.forEach((cls) => classString += cls + ' ');
	            this.element.setAttribute('class', classString);
	        }
	    }
	}
	/**
	 * Stores the ClassInfo object applied to a given AttributePart.
	 * Used to unset existing values when a new ClassInfo object is applied.
	 */
	const previousClassesCache = new WeakMap();
	/**
	 * A directive that applies CSS classes. This must be used in the `class`
	 * attribute and must be the only part used in the attribute. It takes each
	 * property in the `classInfo` argument and adds the property name to the
	 * element's `class` if the property value is truthy; if the property value is
	 * falsey, the property name is removed from the element's `class`. For example
	 * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.
	 * @param classInfo {ClassInfo}
	 */
	const classMap = directive((classInfo) => (part) => {
	    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||
	        part.committer.name !== 'class' || part.committer.parts.length > 1) {
	        throw new Error('The `classMap` directive must be used in the `class` attribute ' +
	            'and must be the only part in the attribute.');
	    }
	    const { committer } = part;
	    const { element } = committer;
	    let previousClasses = previousClassesCache.get(part);
	    if (previousClasses === undefined) {
	        // Write static classes once
	        // Use setAttribute() because className isn't a string on SVG elements
	        element.setAttribute('class', committer.strings.join(' '));
	        previousClassesCache.set(part, previousClasses = new Set());
	    }
	    const classList = (element.classList || new ClassList(element));
	    // Remove old classes that no longer apply
	    // We use forEach() instead of for-of so that re don't require down-level
	    // iteration.
	    previousClasses.forEach((name) => {
	        if (!(name in classInfo)) {
	            classList.remove(name);
	            previousClasses.delete(name);
	        }
	    });
	    // Add or remove classes based on their classMap value
	    for (const name in classInfo) {
	        const value = classInfo[name];
	        if (value != previousClasses.has(name)) {
	            // We explicitly want a loose truthy check of `value` because it seems
	            // more convenient that '' and 0 are skipped.
	            if (value) {
	                classList.add(name);
	                previousClasses.add(name);
	            }
	            else {
	                classList.remove(name);
	                previousClasses.delete(name);
	            }
	        }
	    }
	    if (typeof classList.commit === 'function') {
	        classList.commit();
	    }
	});

	/**
	 * @license
	 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	/**
	 * Stores the StyleInfo object applied to a given AttributePart.
	 * Used to unset existing values when a new StyleInfo object is applied.
	 */
	const previousStylePropertyCache = new WeakMap();
	/**
	 * A directive that applies CSS properties to an element.
	 *
	 * `styleMap` can only be used in the `style` attribute and must be the only
	 * expression in the attribute. It takes the property names in the `styleInfo`
	 * object and adds the property values as CSS properties. Property names with
	 * dashes (`-`) are assumed to be valid CSS property names and set on the
	 * element's style object using `setProperty()`. Names without dashes are
	 * assumed to be camelCased JavaScript property names and set on the element's
	 * style object using property assignment, allowing the style object to
	 * translate JavaScript-style names to CSS property names.
	 *
	 * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':
	 * '0'})` sets the `background-color`, `border-top` and `--size` properties.
	 *
	 * @param styleInfo {StyleInfo}
	 */
	const styleMap = directive((styleInfo) => (part) => {
	    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||
	        part.committer.name !== 'style' || part.committer.parts.length > 1) {
	        throw new Error('The `styleMap` directive must be used in the style attribute ' +
	            'and must be the only part in the attribute.');
	    }
	    const { committer } = part;
	    const { style } = committer.element;
	    let previousStyleProperties = previousStylePropertyCache.get(part);
	    if (previousStyleProperties === undefined) {
	        // Write static styles once
	        style.cssText = committer.strings.join(' ');
	        previousStylePropertyCache.set(part, previousStyleProperties = new Set());
	    }
	    // Remove old properties that no longer exist in styleInfo
	    // We use forEach() instead of for-of so that re don't require down-level
	    // iteration.
	    previousStyleProperties.forEach((name) => {
	        if (!(name in styleInfo)) {
	            previousStyleProperties.delete(name);
	            if (name.indexOf('-') === -1) {
	                // eslint-disable-next-line @typescript-eslint/no-explicit-any
	                style[name] = null;
	            }
	            else {
	                style.removeProperty(name);
	            }
	        }
	    });
	    // Add or update properties
	    for (const name in styleInfo) {
	        previousStyleProperties.add(name);
	        if (name.indexOf('-') === -1) {
	            // eslint-disable-next-line @typescript-eslint/no-explicit-any
	            style[name] = styleInfo[name];
	        }
	        else {
	            style.setProperty(name, styleInfo[name]);
	        }
	    }
	});

	/**
	 * @license
	 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at
	 * http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at
	 * http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at
	 * http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at
	 * http://polymer.github.io/PATENTS.txt
	 */
	// For each part, remember the value that was last rendered to the part by the
	// unsafeHTML directive, and the DocumentFragment that was last set as a value.
	// The DocumentFragment is used as a unique key to check if the last value
	// rendered to the part was with unsafeHTML. If not, we'll always re-render the
	// value passed to unsafeHTML.
	const previousValues = new WeakMap();
	/**
	 * Renders the result as HTML, rather than text.
	 *
	 * Note, this is unsafe to use with any user-provided input that hasn't been
	 * sanitized or escaped, as it may lead to cross-site-scripting
	 * vulnerabilities.
	 */
	const unsafeHTML = directive((value) => (part) => {
	    if (!(part instanceof NodePart)) {
	        throw new Error('unsafeHTML can only be used in text bindings');
	    }
	    const previousValue = previousValues.get(part);
	    if (previousValue !== undefined && isPrimitive(value) &&
	        value === previousValue.value && part.value === previousValue.fragment) {
	        return;
	    }
	    const template = document.createElement('template');
	    template.innerHTML = value; // innerHTML casts to string internally
	    const fragment = document.importNode(template.content, true);
	    part.setValue(fragment);
	    previousValues.set(part, { value, fragment });
	});

	let tags;
	let	suffix;

	const setTags = t => {
		tags = t;
	};
	const setSuffix = s => {
		suffix = s;
	};

	const litRender = (templateResult, domNode, styles, { eventContext } = {}) => {
		if (styles) {
			templateResult = html`<style>${styles}</style>${templateResult}`;
		}
		render(templateResult, domNode, { eventContext });
	};

	const scopedHtml = (strings, ...values) => html(scopeHTML(strings, tags, suffix), ...values);
	const scopedSvg = (strings, ...values) => svg(scopeHTML(strings, tags, suffix), ...values);

	const KeyCodes = {
		BACKSPACE: 8,
		TAB: 9,
		ENTER: 13,
		SHIFT: 16,
		CONTROL: 17,
		ALT: 18,
		BREAK: 19,
		CAPS_LOCK: 20,
		ESCAPE: 27,
		SPACE: 32,
		PAGE_UP: 33,
		PAGE_DOWN: 34,
		END: 35,
		HOME: 36,
		ARROW_LEFT: 37,
		ARROW_UP: 38,
		ARROW_RIGHT: 39,
		ARROW_DOWN: 40,
		PRINT: 44,
		INSERT: 45,
		DELETE: 46,
		DIGIT_0: 48,
		DIGIT_1: 49,
		DIGIT_2: 50,
		DIGIT_3: 51,
		DIGIT_4: 52,
		DIGIT_5: 53,
		DIGIT_6: 54,
		DIGIT_7: 55,
		DIGIT_8: 56,
		DIGIT_9: 57,
		A: 65,
		B: 66,
		C: 67,
		D: 68,
		E: 69,
		F: 70,
		G: 71,
		H: 72,
		I: 73,
		J: 74,
		K: 75,
		L: 76,
		M: 77,
		N: 78,
		O: 79,
		P: 80,
		Q: 81,
		R: 82,
		S: 83,
		T: 84,
		U: 85,
		V: 86,
		W: 87,
		X: 88,
		Y: 89,
		Z: 90,
		WINDOWS: 91,
		CONTEXT_MENU: 93,
		TURN_OFF: 94,
		SLEEP: 95,
		NUMPAD_0: 96,
		NUMPAD_1: 97,
		NUMPAD_2: 98,
		NUMPAD_3: 99,
		NUMPAD_4: 100,
		NUMPAD_5: 101,
		NUMPAD_6: 102,
		NUMPAD_7: 103,
		NUMPAD_8: 104,
		NUMPAD_9: 105,
		NUMPAD_ASTERISK: 106,
		NUMPAD_PLUS: 107,
		NUMPAD_MINUS: 109,
		NUMPAD_COMMA: 110,
		NUMPAD_SLASH: 111,
		F1: 112,
		F2: 113,
		F3: 114,
		F4: 115,
		F5: 116,
		F6: 117,
		F7: 118,
		F8: 119,
		F9: 120,
		F10: 121,
		F11: 122,
		F12: 123,
		NUM_LOCK: 144,
		SCROLL_LOCK: 145,
		OPEN_BRACKET: 186,
		PLUS: 187,
		COMMA: 188,
		SLASH: 189,
		DOT: 190,
		PIPE: 191,
		SEMICOLON: 192,
		MINUS: 219,
		GREAT_ACCENT: 220,
		EQUALS: 221,
		SINGLE_QUOTE: 222,
		BACKSLASH: 226,
	};

	const isEnter = event => (event.key ? event.key === "Enter" : event.keyCode === KeyCodes.ENTER) && !hasModifierKeys(event);

	const isSpace = event => (event.key ? (event.key === "Spacebar" || event.key === " ") : event.keyCode === KeyCodes.SPACE) && !hasModifierKeys(event);

	const isLeft = event => (event.key ? (event.key === "ArrowLeft" || event.key === "Left") : event.keyCode === KeyCodes.ARROW_LEFT) && !hasModifierKeys(event);

	const isRight = event => (event.key ? (event.key === "ArrowRight" || event.key === "Right") : event.keyCode === KeyCodes.ARROW_RIGHT) && !hasModifierKeys(event);

	const isUp = event => (event.key ? (event.key === "ArrowUp" || event.key === "Up") : event.keyCode === KeyCodes.ARROW_UP) && !hasModifierKeys(event);

	const isDown = event => (event.key ? (event.key === "ArrowDown" || event.key === "Down") : event.keyCode === KeyCodes.ARROW_DOWN) && !hasModifierKeys(event);

	const isHome = event => (event.key ? event.key === "Home" : event.keyCode === KeyCodes.HOME) && !hasModifierKeys(event);

	const isEnd = event => (event.key ? event.key === "End" : event.keyCode === KeyCodes.END) && !hasModifierKeys(event);

	const isHomeCtrl = event => (event.key ? event.key === "Home" : event.keyCode === KeyCodes.HOME) && checkModifierKeys(event, true, false, false);

	const isEndCtrl = event => (event.key ? event.key === "End" : event.keyCode === KeyCodes.END) && checkModifierKeys(event, true, false, false);

	const isEscape = event => (event.key ? event.key === "Escape" || event.key === "Esc" : event.keyCode === KeyCodes.ESCAPE) && !hasModifierKeys(event);

	const isTabNext = event => (event.key ? event.key === "Tab" : event.keyCode === KeyCodes.TAB) && !hasModifierKeys(event);

	const isTabPrevious = event => (event.key ? event.key === "Tab" : event.keyCode === KeyCodes.TAB) && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ false, /* Shift */ true);

	const isBackSpace = event => (event.key ? event.key === "Backspace" : event.keyCode === KeyCodes.BACKSPACE) && !hasModifierKeys(event);

	const isPageUp = event => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && !hasModifierKeys(event);

	const isPageDown = event => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && !hasModifierKeys(event);

	const isPageUpShift = event => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event, false, false, true);

	const isPageDownShift = event => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event, false, false, true);

	const isPageUpShiftCtrl = event => (event.key ? event.key === "PageUp" : event.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event, true, false, true);

	const isPageDownShiftCtrl = event => (event.key ? event.key === "PageDown" : event.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event, true, false, true);

	const isShow = event => {
		if (event.key) {
			return isF4(event) || isShowByArrows(event);
		}

		return (event.keyCode === KeyCodes.F4 && !hasModifierKeys(event)) || (event.keyCode === KeyCodes.ARROW_DOWN && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ true, /* Shift */ false));
	};

	const isF4 = event => {
		return event.key === "F4" && !hasModifierKeys(event);
	};

	const isF4Shift = event => (event.key ? event.key === "F4" : event.keyCode === KeyCodes.F4) && checkModifierKeys(event, false, false, true);

	const isShowByArrows = event => {
		return ((event.key === "ArrowDown" || event.key === "Down") || (event.key === "ArrowUp" || event.key === "Up")) && checkModifierKeys(event, /* Ctrl */ false, /* Alt */ true, /* Shift */ false);
	};

	const hasModifierKeys = event => event.shiftKey || event.altKey || getCtrlKey(event);

	const getCtrlKey = event => !!(event.metaKey || event.ctrlKey); // double negation doesn't have effect on boolean but ensures null and undefined are equivalent to false.

	const checkModifierKeys = (event, bCtrlKey, bAltKey, bShiftKey) => event.shiftKey === bShiftKey && event.altKey === bAltKey && getCtrlKey(event) === bCtrlKey;

	const messageFormatRegEX = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;

	const formatMessage = (text, values) => {
		values = values || [];

		return text.replace(messageFormatRegEX, ($0, $1, $2, $3, offset) => {
			if ($1) {
				return '\''; /* eslint-disable-line */
			}

			if ($2) {
				return $2.replace(/''/g, '\''); /* eslint-disable-line */
			}

			if ($3) {
				return String(values[parseInt($3)]);
			}

			throw new Error(`[i18n]: pattern syntax error at pos ${offset}`);
		});
	};

	const I18nBundleInstances = new Map();

	/**
	 * @class
	 * @public
	 */
	class I18nBundle {
		constructor(packageName) {
			this.packageName = packageName;
		}

		/**
		 * Returns a text in the currently loaded language
		 *
		 * @param {Object|String} textObj key/defaultText pair or just the key
		 * @param params Values for the placeholders
		 * @returns {*}
		 */
		getText(textObj, ...params) {
			if (typeof textObj === "string") {
				textObj = { key: textObj, defaultText: textObj };
			}

			if (!textObj || !textObj.key) {
				return "";
			}

			const bundle = getI18nBundleData(this.packageName);
			const messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : (textObj.defaultText || textObj.key);

			return formatMessage(messageText, params);
		}
	}

	const getI18nBundle = packageName => {
		if (I18nBundleInstances.has(packageName)) {
			return I18nBundleInstances.get(packageName);
		}

		const i18nBundle = new I18nBundle(packageName);
		I18nBundleInstances.set(packageName, i18nBundle);
		return i18nBundle;
	};

	const findNodeOwner = node => {
		if (!(node instanceof HTMLElement)) {
			throw new Error("Argument node should be of type HTMLElement");
		}

		const ownerTypes = [HTMLHtmlElement, HTMLIFrameElement];
		let currentShadowRootFlag = true;
		let currentCustomElementFlag = true;

		while (node) {
			if (node.toString() === "[object ShadowRoot]") {
				// Web Component
				// or the shadow root of web component with attached shadow root
				if (currentShadowRootFlag) {
					currentShadowRootFlag = false;
				}
				if (!currentCustomElementFlag && !currentShadowRootFlag) {
					return node;
				}
			} else if (node.tagName && node.tagName.indexOf("-") > -1) {
				if (currentCustomElementFlag) {
					currentCustomElementFlag = false;
				} else {
					return node;
				}
			} else if (ownerTypes.indexOf(node.constructor) > -1) {
				// Document or Iframe reached
				return node;
			}

			node = node.parentNode || node.host;
		}
	};

	const getEffectiveAriaLabelText = el => {
		if (!el.ariaLabelledby) {
			if (el.ariaLabel) {
				return el.ariaLabel;
			}

			return undefined;
		}

		return getAriaLabelledByTexts(el);
	};

	/**
	 *
	 * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related texts
	 * @param {HTMLElement} ownerDocument (Optional) Defines the HTMLElement(might document or custom element) where the you want to search for the texts.
	 * @param {String} readyIds (Optional) Defines a string of elements ids. The text of these elements will be returned. If used you should provide either el or ownerDocument
	 */
	const getAriaLabelledByTexts = (el, ownerDocument, readyIds = "") => {
		const ids = (readyIds && readyIds.split(" ")) || el.ariaLabelledby.split(" ");
		const owner = ownerDocument || findNodeOwner(el);
		let result = "";

		ids.forEach((elementId, index) => {
			const element = owner.querySelector(`[id='${elementId}']`);
			result += `${element ? element.textContent : ""}`;

			if (index < ids.length - 1) {
				result += " ";
			}
		});

		return result;
	};

	/**
	 * @lends sap.ui.webcomponents.main.types.ButtonDesign.prototype
	 * @public
	 */
	const ButtonTypes = {
		/**
		 * default type (no special styling)
		 * @public
		 * @type {Default}
		 */
		Default: "Default",

		/**
		 * accept type (green button)
		 * @public
		 * @type {Positive}
		 */
		Positive: "Positive",

		/**
		 * reject style (red button)
		 * @public
		 * @type {Negative}
		 */
		Negative: "Negative",

		/**
		 * transparent type
		 * @public
		 * @type {Transparent}
		 */
		Transparent: "Transparent",

		/**
		 * emphasized type
		 * @public
		 * @type {Emphasized}
		 */
		Emphasized: "Emphasized",
	};

	/**
	 * @class
	 * Different types of Button.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.ButtonDesign
	 * @public
	 * @enum {string}
	 */
	class ButtonDesign extends DataType {
		static isValid(value) {
			return !!ButtonTypes[value];
		}
	}

	ButtonDesign.generateTypeAccessors(ButtonTypes);

	/*
		lit-html directive that removes and attribute if it is undefined
	*/
	var ifDefined = directive(value => part => {
		if ((value === undefined) && part instanceof AttributePart) {
			if (value !== part.value) {
				const name = part.committer.name;
				part.committer.element.removeAttribute(name);
			}
		} else if (part.committer && part.committer.element && part.committer.element.getAttribute(part.committer.name) === value) {
			part.setValue(noChange);
		} else {
			part.setValue(value);
		}
	});

	const block0 = (context) => { return scopedHtml`<button type="button" class="ui5-button-root" ?disabled="${context.disabled}" data-sap-focus-ref  dir="${ifDefined(context.effectiveDir)}" @focusout=${context._onfocusout} @focusin=${context._onfocusin} @click=${context._onclick} @mousedown=${context._onmousedown} @mouseup=${context._onmouseup} @keydown=${context._onkeydown} @keyup=${context._onkeyup} tabindex=${ifDefined(context.tabIndexValue)} aria-expanded="${ifDefined(context.accInfo.ariaExpanded)}" aria-controls="${ifDefined(context.accInfo.ariaControls)}" aria-haspopup="${ifDefined(context.accInfo.ariaHaspopup)}" aria-label="${ifDefined(context.ariaLabelText)}" title="${ifDefined(context.accInfo.title)}" part="button">${ context.icon ? block1(context) : undefined }<span id="${ifDefined(context._id)}-content" class="ui5-button-text"><bdi><slot></slot></bdi></span>${ context.hasButtonType ? block2(context) : undefined }</button> `; };
	const block1 = (context) => { return scopedHtml`<ui5-icon style="${styleMap(context.styles.icon)}" class="ui5-button-icon" name="${ifDefined(context.icon)}" ?show-tooltip=${context.showIconTooltip}></ui5-icon>`; };
	const block2 = (context) => { return scopedHtml`<span class="ui5-hidden-text">${ifDefined(context.buttonTypeText)}</span>`; };


	const main = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0(context);
	};

	const getSharedResourcesInstance = () => getSingletonElementInstance("ui5-shared-resources", document.head);

	/**
	 * Use this method to initialize/get resources that you would like to be shared among UI5 Web Components runtime instances.
	 * The data will be accessed via a singleton "ui5-shared-resources" HTML element in the "head" element of the page.
	 *
	 * @public
	 * @param namespace Unique ID of the resource, may contain "." to denote hierarchy
	 * @param initialValue Object or primitive that will be used as an initial value if the resource does not exist
	 * @returns {*}
	 */
	const getSharedResource = (namespace, initialValue) => {
		const parts = namespace.split(".");
		let current = getSharedResourcesInstance();

		for (let i = 0; i < parts.length; i++) {
			const part = parts[i];
			const lastPart = i === parts.length - 1;
			if (!Object.prototype.hasOwnProperty.call(current, part)) {
				current[part] = lastPart ? initialValue : {};
			}
			current = current[part];
		}

		return current;
	};

	const registry = getSharedResource("SVGIcons.registry", new Map());
	const iconCollectionPromises = getSharedResource("SVGIcons.promises", new Map());

	const ICON_NOT_FOUND = "ICON_NOT_FOUND";
	const DEFAULT_COLLECTION = "SAP-icons";

	const parseName = name => {
		// silently support ui5-compatible URIs
		if (name.startsWith("sap-icon://")) {
			name = name.replace("sap-icon://", "");
		}

		let collection;
		[name, collection] = name.split("/").reverse();
		collection = collection || DEFAULT_COLLECTION;
		// hardcoded alias in case icon explorer is used, resolve `SAP-icons-TNT` to `tnt`
		// aliases can be made a feature in the future if more collections need it or more aliases are needed.
		if (collection === "SAP-icons-TNT") {
			collection = "tnt";
		}
		const registryKey = `${collection}/${name}`;
		return { name, collection, registryKey };
	};


	const registerIcon = (name, { pathData, ltr, accData, collection } = {}) => { // eslint-disable-line
		if (!collection) {
			collection = DEFAULT_COLLECTION;
		}

		const key = `${collection}/${name}`;
		registry.set(key, { pathData, ltr, accData });
	};

	const getIconDataSync = nameProp => {
		const { registryKey } = parseName(nameProp);
		return registry.get(registryKey);
	};

	const getIconData = async nameProp => {
		const { collection, registryKey } = parseName(nameProp);

		if (!iconCollectionPromises.has(collection)) {
			iconCollectionPromises.set(collection, Promise.resolve(ICON_NOT_FOUND));
		}

		const iconData = await iconCollectionPromises.get(collection);

		if (iconData === ICON_NOT_FOUND) {
			return iconData;
		}

		return registry.get(registryKey);
	};

	const registerCollectionPromise = (collection, promise) => {
		iconCollectionPromises.set(collection, promise);
	};

	const block0$1 = (context) => { return scopedHtml`<svg class="ui5-icon-root" tabindex="${ifDefined(context.tabIndex)}" dir="${ifDefined(context._dir)}" viewBox="0 0 512 512" role="${ifDefined(context.role)}" focusable="false" preserveAspectRatio="xMidYMid meet" aria-label="${ifDefined(context.accessibleNameText)}" xmlns="http://www.w3.org/2000/svg" @focusin=${context._onfocusin} @focusout=${context._onfocusout} @keydown=${context._onkeydown} @keyup=${context._onkeyup} @click=${context._onclick}>${blockSVG1(context)}</svg>`; };
	const block1$1 = (context) => { return scopedSvg`<title id="${ifDefined(context._id)}-tooltip">${ifDefined(context.accessibleNameText)}</title>`; };

	const blockSVG1 = (context) => {return scopedSvg`${ context.hasIconTooltip ? block1$1(context) : undefined }<g role="presentation"><path d="${ifDefined(context.pathData)}"/></g>`};

	const main$1 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$1(context);
	};

	var defaultThemeBase = ":root{--sapBrandColor:#0a6ed1;--sapHighlightColor:#0854a0;--sapBaseColor:#fff;--sapShellColor:#354a5f;--sapBackgroundColor:#f7f7f7;--sapFontFamily:\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontLightFamily:\"72-Light\",\"72-Lightfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontBoldFamily:\"72-Bold\",\"72-Boldfull\",\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontHeaderFamily:\"72\",\"72full\",Arial,Helvetica,sans-serif;--sapFontSize:.875rem;--sapFontSmallSize:.75rem;--sapFontLargeSize:1rem;--sapFontHeader1Size:2.25rem;--sapFontHeader2Size:1.5rem;--sapFontHeader3Size:1.25rem;--sapFontHeader4Size:1.125rem;--sapFontHeader5Size:1rem;--sapFontHeader6Size:.875rem;--sapTextColor:#32363a;--sapLinkColor:#0a6ed1;--sapLink_Hover_Color:#0854a0;--sapLink_Active_Color:#0a6ed1;--sapLink_Visited_Color:#0a6ed1;--sapLink_InvertedColor:#d3e8fd;--sapLink_SubtleColor:#074888;--sapCompanyLogo:none;--sapBackgroundImage:none;--sapBackgroundImageOpacity:1.0;--sapBackgroundImageRepeat:false;--sapSelectedColor:#0854a0;--sapActiveColor:#0854a0;--sapHighlightTextColor:#fff;--sapTitleColor:#32363a;--sapNegativeColor:#b00;--sapCriticalColor:#e9730c;--sapPositiveColor:#107e3e;--sapInformativeColor:#0a6ed1;--sapNeutralColor:#6a6d70;--sapNegativeElementColor:#b00;--sapCriticalElementColor:#e9730c;--sapPositiveElementColor:#107e3e;--sapInformativeElementColor:#0a6ed1;--sapNeutralElementColor:#6a6d70;--sapNegativeTextColor:#b00;--sapPositiveTextColor:#107e3e;--sapCriticalTextColor:#e9730c;--sapInformativeTextColor:#053b70;--sapNeutralTextColor:#6a6d70;--sapNeutralBorderColor:#6a6d70;--sapErrorColor:#b00;--sapErrorBorderColor:#b00;--sapWarningColor:#e9730c;--sapWarningBorderColor:#e9730c;--sapSuccessColor:#107e3e;--sapSuccessBorderColor:#107e3e;--sapInformationColor:#0a6ed1;--sapInformationBorderColor:#0a6ed1;--sapErrorBackground:#ffebeb;--sapWarningBackground:#fef7f1;--sapSuccessBackground:#f1fdf6;--sapInformationBackground:#f5faff;--sapNeutralBackground:#f4f4f4;--sapIndicationColor_1:#800;--sapIndicationColor_1_Hover_Background:#6f0000;--sapIndicationColor_1_Active_Background:#500;--sapIndicationColor_1_TextColor:#fff;--sapIndicationColor_2:#b00;--sapIndicationColor_2_Hover_Background:#a20000;--sapIndicationColor_2_Active_Background:#800;--sapIndicationColor_2_TextColor:#fff;--sapIndicationColor_3:#e9730c;--sapIndicationColor_3_Hover_Background:#da6c0b;--sapIndicationColor_3_Active_Background:#cc650b;--sapIndicationColor_3_TextColor:#fff;--sapIndicationColor_4:#107e3e;--sapIndicationColor_4_Hover_Background:#0d6733;--sapIndicationColor_4_Active_Background:#0a5128;--sapIndicationColor_4_TextColor:#fff;--sapIndicationColor_5:#0a6ed1;--sapIndicationColor_5_Hover_Background:#0961b9;--sapIndicationColor_5_Active_Background:#0854a0;--sapIndicationColor_5_TextColor:#fff;--sapIndicationColor_6:#0f828f;--sapIndicationColor_6_Hover_Background:#0d6d78;--sapIndicationColor_6_Active_Background:#0a5861;--sapIndicationColor_6_TextColor:#fff;--sapIndicationColor_7:#925ace;--sapIndicationColor_7_Hover_Background:#8546c8;--sapIndicationColor_7_Active_Background:#7838bd;--sapIndicationColor_7_TextColor:#fff;--sapIndicationColor_8:#c0399f;--sapIndicationColor_8_Hover_Background:#ac338f;--sapIndicationColor_8_Active_Background:#992d7e;--sapIndicationColor_8_TextColor:#fff;--sapElement_LineHeight:2.75rem;--sapElement_Height:2.25rem;--sapElement_BorderWidth:.0625rem;--sapElement_BorderCornerRadius:.25rem;--sapElement_Compact_LineHeight:2rem;--sapElement_Compact_Height:1.625rem;--sapElement_Condensed_LineHeight:1.5rem;--sapElement_Condensed_Height:1.375rem;--sapContent_LineHeight:1.4;--sapContent_IconHeight:1rem;--sapContent_IconColor:#0854a0;--sapContent_ContrastIconColor:#fff;--sapContent_NonInteractiveIconColor:#6a6d70;--sapContent_MarkerIconColor:#286eb4;--sapContent_MarkerTextColor:#0e7581;--sapContent_ImagePlaceholderBackground:#ccc;--sapContent_ImagePlaceholderForegroundColor:#fff;--sapContent_RatedColor:#d08014;--sapContent_UnratedColor:#89919a;--sapContent_FocusColor:#000;--sapContent_FocusStyle:dotted;--sapContent_FocusWidth:.0625rem;--sapContent_ContrastFocusColor:#fff;--sapContent_ShadowColor:#000;--sapContent_ContrastShadowColor:#fff;--sapContent_Shadow0:0 0 0 0.0625rem rgba(0,0,0,0.1),0 0.125rem 0.5rem 0 rgba(0,0,0,0.1);--sapContent_Shadow1:0 0 0 0.0625rem rgba(0,0,0,0.42),0 0.125rem 0.5rem 0 rgba(0,0,0,0.3);--sapContent_Shadow2:0 0 0 0.0625rem rgba(0,0,0,0.42),0 0.625rem 1.875rem 0 rgba(0,0,0,0.3);--sapContent_Shadow3:0 0 0 0.0625rem rgba(0,0,0,0.42),0 1.25rem 5rem 0 rgba(0,0,0,0.3);--sapContent_TextShadow:0 0 0.125rem #fff;--sapContent_HeaderShadow:0 0 0.25rem 0 rgba(0,0,0,0.15),inset 0 -0.0625rem 0 0 #d9d9d9;--sapContent_SearchHighlightColor:#d4f7db;--sapContent_HelpColor:#3f8600;--sapContent_LabelColor:#6a6d70;--sapContent_MonospaceFontFamily:lucida console,monospace;--sapContent_DisabledTextColor:rgba(50,54,58,0.6);--sapContent_DisabledOpacity:0.4;--sapContent_ContrastTextThreshold:0.65;--sapContent_ContrastTextColor:#fff;--sapContent_ForegroundColor:#efefef;--sapContent_ForegroundBorderColor:#89919a;--sapContent_ForegroundTextColor:#32363a;--sapContent_BadgeBackground:#d04343;--sapContent_BadgeTextColor:#fff;--sapContent_Placeholderloading_Background:#e0e0e0;--sapContent_Placeholderloading_Gradient:linear-gradient(90deg,#e0e0e0 0%,#e0e0e0 35%,#d3d3d3 50%,#e0e0e0 65%,#e0e0e0);--sapContent_DragAndDropActiveColor:#0854a0;--sapContent_Selected_Background:#0854a0;--sapContent_Selected_TextColor:#fff;--sapContent_Selected_Hover_Background:#095caf;--sapContent_Illustrative_Color1:#0a6ed1;--sapContent_Illustrative_Color2:#72b5f8;--sapContent_Illustrative_Color3:#ffba10;--sapContent_Illustrative_Color4:#4a5055;--sapContent_Illustrative_Color5:#9da4aa;--sapContent_Illustrative_Color6:#c6cace;--sapContent_Illustrative_Color7:#e7e9ea;--sapContent_Illustrative_Color8:#fff;--sapShell_Background:#edeff0;--sapShell_BackgroundImage:linear-gradient(180deg,#dfe3e4,#f3f4f5);--sapShell_BackgroundGradient:linear-gradient(180deg,#dfe3e4,#f3f4f5);--sapShell_BackgroundImageOpacity:1.0;--sapShell_BackgroundImageRepeat:false;--sapShell_BorderColor:#354a5f;--sapShell_TextColor:#fff;--sapShell_InteractiveTextColor:#d1e8ff;--sapShell_InteractiveBorderColor:#7996b4;--sapShell_GroupTitleTextColor:#32363a;--sapShell_Hover_Background:#283848;--sapShell_Active_Background:#23303e;--sapShell_Active_TextColor:#fff;--sapShell_Selected_Background:#23303e;--sapShell_Selected_TextColor:#fff;--sapShell_Selected_Hover_Background:#23303e;--sapShell_Favicon:none;--sapShell_Navigation_Background:#fff;--sapShell_Navigation_SelectedColor:#0854a0;--sapShell_Navigation_Selected_TextColor:#0854a0;--sapShell_Navigation_TextColor:#32363a;--sapShell_Shadow:0 0 0.25rem 0 rgba(0,0,0,0.15),inset 0 -0.0625rem 0 0 rgba(0,0,0,0.2);--sapButton_BorderWidth:.0625rem;--sapButton_BorderCornerRadius:.25rem;--sapButton_Background:#fff;--sapButton_BorderColor:#0854a0;--sapButton_TextColor:#0854a0;--sapButton_Hover_Background:#ebf5fe;--sapButton_Hover_BorderColor:#0854a0;--sapButton_Hover_TextColor:#0854a0;--sapButton_IconColor:#0854a0;--sapButton_Active_Background:#0854a0;--sapButton_Active_BorderColor:#0854a0;--sapButton_Active_TextColor:#fff;--sapButton_Emphasized_Background:#0a6ed1;--sapButton_Emphasized_BorderColor:#0a6ed1;--sapButton_Emphasized_TextColor:#fff;--sapButton_Emphasized_Hover_Background:#085caf;--sapButton_Emphasized_Hover_BorderColor:#085caf;--sapButton_Emphasized_Hover_TextColor:#fff;--sapButton_Emphasized_Active_Background:#0854a0;--sapButton_Emphasized_Active_BorderColor:#0854a0;--sapButton_Emphasized_TextShadow:transparent;--sapButton_Accept_Background:#fff;--sapButton_Accept_BorderColor:#107e3e;--sapButton_Accept_Hover_Background:#f1fdf6;--sapButton_Accept_Hover_BorderColor:#107e3e;--sapButton_Accept_Hover_TextColor:#107e3e;--sapButton_Accept_Active_Background:#0d6733;--sapButton_Accept_Active_BorderColor:#0d6733;--sapButton_Accept_TextColor:#107e3e;--sapButton_Accept_Selected_Background:#0d6733;--sapButton_Accept_Selected_BorderColor:#0d6733;--sapButton_Accept_Selected_TextColor:#fff;--sapButton_Accept_Selected_Hover_Background:#107e3e;--sapButton_Accept_Selected_Hover_BorderColor:#107e3e;--sapButton_Reject_Background:#fff;--sapButton_Reject_BorderColor:#b00;--sapButton_Reject_Hover_Background:#ffebeb;--sapButton_Reject_Hover_BorderColor:#b00;--sapButton_Reject_Hover_TextColor:#b00;--sapButton_Reject_Active_Background:#a20000;--sapButton_Reject_Active_BorderColor:#a20000;--sapButton_Reject_TextColor:#b00;--sapButton_Reject_Selected_Background:#a20000;--sapButton_Reject_Selected_BorderColor:#a20000;--sapButton_Reject_Selected_TextColor:#fff;--sapButton_Reject_Selected_Hover_Background:#b00;--sapButton_Reject_Selected_Hover_BorderColor:#b00;--sapButton_Lite_Background:transparent;--sapButton_Lite_BorderColor:transparent;--sapButton_Lite_TextColor:#0854a0;--sapButton_Lite_Hover_Background:#ebf5fe;--sapButton_Lite_Hover_BorderColor:#0854a0;--sapButton_Lite_Hover_TextColor:#0854a0;--sapButton_Lite_Active_Background:#0854a0;--sapButton_Lite_Active_BorderColor:#0854a0;--sapButton_Selected_Background:#0854a0;--sapButton_Selected_BorderColor:#0854a0;--sapButton_Selected_TextColor:#fff;--sapButton_Selected_Hover_Background:#095caf;--sapButton_Selected_Hover_BorderColor:#095caf;--sapButton_Attention_Background:#fff;--sapButton_Attention_BorderColor:#e9730c;--sapButton_Attention_TextColor:#e9730c;--sapButton_Attention_Hover_Background:#fef7f1;--sapButton_Attention_Hover_BorderColor:#e9730c;--sapButton_Attention_Hover_TextColor:#e9730c;--sapButton_Attention_Active_Background:#d1670b;--sapButton_Attention_Active_BorderColor:#d1670b;--sapButton_Attention_Selected_Background:#d1670b;--sapButton_Attention_Selected_BorderColor:#d1670b;--sapButton_Attention_Selected_TextColor:#fff;--sapButton_Attention_Selected_Hover_Background:#e9730c;--sapButton_Attention_Selected_Hover_BorderColor:#e9730c;--sapButton_Negative_Background:#b00;--sapButton_Negative_BorderColor:#b00;--sapButton_Negative_TextColor:#fff;--sapButton_Negative_Hover_Background:#970000;--sapButton_Negative_Hover_BorderColor:#970000;--sapButton_Negative_Hover_TextColor:#fff;--sapButton_Negative_Active_Background:#800;--sapButton_Negative_Active_BorderColor:#800;--sapButton_Critical_Background:#e9730c;--sapButton_Critical_BorderColor:#e9730c;--sapButton_Critical_TextColor:#fff;--sapButton_Critical_Hover_Background:#c7620a;--sapButton_Critical_Hover_BorderColor:#c7620a;--sapButton_Critical_Hover_TextColor:#fff;--sapButton_Critical_Active_Background:#b85b0a;--sapButton_Critical_Active_BorderColor:#b85b0a;--sapButton_Success_Background:#107e3e;--sapButton_Success_BorderColor:#107e3e;--sapButton_Success_TextColor:#fff;--sapButton_Success_Hover_Background:#0c5e2e;--sapButton_Success_Hover_BorderColor:#0c5e2e;--sapButton_Success_Hover_TextColor:#fff;--sapButton_Success_Active_Background:#0a5128;--sapButton_Success_Active_BorderColor:#0a5128;--sapButton_Information_Background:#0a6ed1;--sapButton_Information_BorderColor:#0a6ed1;--sapButton_Information_TextColor:#fff;--sapButton_Information_Hover_Background:#0961b9;--sapButton_Information_Hover_BorderColor:#0961b9;--sapButton_Information_Hover_TextColor:#fff;--sapButton_Information_Active_Background:#0854a0;--sapButton_Information_Active_BorderColor:#0854a0;--sapButton_Neutral_Background:#6a6d70;--sapButton_Neutral_BorderColor:#6a6d70;--sapButton_Neutral_TextColor:#fff;--sapButton_Neutral_Hover_Background:#595b5e;--sapButton_Neutral_Hover_BorderColor:#595b5e;--sapButton_Neutral_Hover_TextColor:#fff;--sapButton_Neutral_Active_Background:#515456;--sapButton_Neutral_Active_BorderColor:#515456;--sapButton_Track_Selected_Background:#ebf5fe;--sapButton_Track_Selected_TextColor:#32363a;--sapButton_Track_Background:#ededed;--sapButton_Track_TextColor:#32363a;--sapButton_TokenBackground:#fafafa;--sapButton_TokenBorderColor:#c2c2c2;--sapField_Background:#fff;--sapField_TextColor:#32363a;--sapField_PlaceholderTextColor:#74777a;--sapField_BorderColor:#89919a;--sapField_HelpBackground:#fff;--sapField_BorderWidth:.0625rem;--sapField_BorderCornerRadius:.125rem;--sapField_Hover_Background:#fff;--sapField_Hover_BorderColor:#0854a0;--sapField_Hover_HelpBackground:#ebf5fe;--sapField_Active_BorderColor:#0854a0;--sapField_Focus_Background:#fff;--sapField_Focus_BorderColor:#89919a;--sapField_Focus_HelpBackground:#fff;--sapField_ReadOnly_Background:hsla(0,0%,94.9%,0.5);--sapField_ReadOnly_BorderColor:#89919a;--sapField_ReadOnly_HelpBackground:hsla(0,0%,94.9%,0.5);--sapField_RequiredColor:#ce3b3b;--sapField_InvalidColor:#b00;--sapField_InvalidBackground:#fff;--sapField_WarningColor:#e9730c;--sapField_WarningBackground:#fff;--sapField_SuccessColor:#107e3e;--sapField_SuccessBackground:#fff;--sapField_InformationColor:#0a6ed1;--sapField_InformationBackground:#fff;--sapGroup_TitleBackground:transparent;--sapGroup_TitleBorderColor:#d9d9d9;--sapGroup_TitleTextColor:#32363a;--sapGroup_ContentBackground:#fff;--sapGroup_ContentBorderColor:#d9d9d9;--sapGroup_BorderWidth:.0625rem;--sapGroup_BorderCornerRadius:0;--sapGroup_FooterBackground:transparent;--sapToolbar_Background:transparent;--sapToolbar_SeparatorColor:#d9d9d9;--sapList_HeaderBackground:#f2f2f2;--sapList_HeaderBorderColor:#e4e4e4;--sapList_HeaderTextColor:#32363a;--sapList_BorderColor:#e4e4e4;--sapList_TextColor:#32363a;--sapList_Active_TextColor:#fff;--sapList_BorderWidth:.0625rem;--sapList_SelectionBackgroundColor:#e5f0fa;--sapList_SelectionBorderColor:#0854a0;--sapList_Hover_SelectionBackground:#d8e9f8;--sapList_Background:#fff;--sapList_Hover_Background:#f5f5f5;--sapList_AlternatingBackground:#fafafa;--sapList_GroupHeaderBackground:#fff;--sapList_GroupHeaderBorderColor:#d8d8d8;--sapList_GroupHeaderTextColor:#32363a;--sapList_FooterBackground:#fafafa;--sapList_FooterTextColor:#32363a;--sapList_TableGroupHeaderBackground:#efefef;--sapList_TableGroupHeaderBorderColor:#d8d8d8;--sapList_TableGroupHeaderTextColor:#32363a;--sapList_TableFooterBorder:#d8d8d8;--sapList_TableFixedBorderColor:#d8d8d8;--sapList_Active_Background:#0854a0;--sapScrollBar_FaceColor:#949494;--sapScrollBar_TrackColor:#fff;--sapScrollBar_BorderColor:#949494;--sapScrollBar_SymbolColor:#0854a0;--sapScrollBar_Dimension:.75rem;--sapScrollBar_Hover_FaceColor:#8c8c8c;--sapPageHeader_Background:#fff;--sapPageHeader_BorderColor:#d9d9d9;--sapPageHeader_TextColor:#32363a;--sapPageFooter_Background:#fff;--sapPageFooter_BorderColor:#d9d9d9;--sapPageFooter_TextColor:#32363a;--sapInfobar_Background:#0f828f;--sapInfobar_Hover_Background:#0e7581;--sapInfobar_Active_Background:#0a545c;--sapObjectHeader_Background:#fff;--sapObjectHeader_BorderColor:#d9d9d9;--sapBlockLayer_Background:#000;--sapTile_Background:#fff;--sapTile_Hover_Background:#f5f5f5;--sapTile_Active_Background:#f5f5f5;--sapTile_BorderColor:transparent;--sapTile_TitleTextColor:#32363a;--sapTile_TextColor:#6a6d70;--sapTile_IconColor:#5a7da0;--sapTile_SeparatorColor:#ccc;--sapAccentColor1:#d08014;--sapAccentColor2:#d04343;--sapAccentColor3:#db1f77;--sapAccentColor4:#c0399f;--sapAccentColor5:#6367de;--sapAccentColor6:#286eb4;--sapAccentColor7:#0f828f;--sapAccentColor8:#7ca10c;--sapAccentColor9:#925ace;--sapAccentColor10:#647987;--sapLegend_WorkingBackground:#fafafa;--sapLegend_NonWorkingBackground:#dedede;--sapLegend_CurrentDateTime:#c0399f;--sapLegendColor1:#d58215;--sapLegendColor2:#dc5b5b;--sapLegendColor3:#db1f77;--sapLegendColor4:#9b3b3b;--sapLegendColor5:#cf5db3;--sapLegendColor6:#286eb4;--sapLegendColor7:#1193a2;--sapLegendColor8:#8b9668;--sapLegendColor9:#647987;--sapLegendColor10:#892971;--sapLegendColor11:#725a3a;--sapLegendColor12:#bb2f2f;--sapLegendColor13:#bc1b66;--sapLegendColor14:#8b714f;--sapLegendColor15:#606190;--sapLegendColor16:#597da1;--sapLegendColor17:#49797e;--sapLegendColor18:#687a33;--sapLegendColor19:#295989;--sapLegendColor20:#5154bd;--sapLegendBackgroundColor1:#fdf3e7;--sapLegendBackgroundColor2:#faeaea;--sapLegendBackgroundColor3:#fce9f2;--sapLegendBackgroundColor4:#f8ecec;--sapLegendBackgroundColor5:#f9ebf5;--sapLegendBackgroundColor6:#ebf3fa;--sapLegendBackgroundColor7:#e8fbfd;--sapLegendBackgroundColor8:#f3f4ef;--sapLegendBackgroundColor9:#f1f3f4;--sapLegendBackgroundColor10:#f9ebf6;--sapLegendBackgroundColor11:#f6f2ed;--sapLegendBackgroundColor12:#faeaea;--sapLegendBackgroundColor13:#fce9f2;--sapLegendBackgroundColor14:#f5f2ee;--sapLegendBackgroundColor15:#f0f0f5;--sapLegendBackgroundColor16:#eff2f6;--sapLegendBackgroundColor17:#eff5f6;--sapLegendBackgroundColor18:#f5f7ed;--sapLegendBackgroundColor19:#ebf2f9;--sapLegendBackgroundColor20:#ecedf8;--sapChart_OrderedColor_1:#5899da;--sapChart_OrderedColor_2:#e8743b;--sapChart_OrderedColor_3:#19a979;--sapChart_OrderedColor_4:#ed4a7b;--sapChart_OrderedColor_5:#945ecf;--sapChart_OrderedColor_6:#13a4b4;--sapChart_OrderedColor_7:#525df4;--sapChart_OrderedColor_8:#bf399e;--sapChart_OrderedColor_9:#6c8893;--sapChart_OrderedColor_10:#ee6868;--sapChart_OrderedColor_11:#2f6497;--sapChart_Bad:#dc0d0e;--sapChart_Critical:#de890d;--sapChart_Good:#3fa45b;--sapChart_Neutral:#848f94;--sapChart_Sequence_1:#5899da;--sapChart_Sequence_2:#e8743b;--sapChart_Sequence_3:#19a979;--sapChart_Sequence_4:#ed4a7b;--sapChart_Sequence_5:#945ecf;--sapChart_Sequence_6:#13a4b4;--sapChart_Sequence_7:#525df4;--sapChart_Sequence_8:#bf399e;--sapChart_Sequence_9:#6c8893;--sapChart_Sequence_10:#ee6868;--sapChart_Sequence_11:#2f6497;--sapChart_Sequence_Neutral:#848f94;}";

	var defaultTheme = ":root{--_ui5_calendar_header_height:3rem;--_ui5_calendar_header_arrow_button_width:2.5rem;--_ui5_calendar_header_padding:0.25rem 0;--_ui5_checkbox_root_side_padding:.6875rem;--_ui5_checkbox_icon_size:1rem;--_ui5_custom_list_item_height:3rem;--_ui5_custom_list_item_rb_min_width:2.75rem;--_ui5_day_picker_item_width:2.25rem;--_ui5_day_picker_item_height:2.875rem;--_ui5_day_picker_empty_height:3rem;--_ui5_datetime_picker_width:40.0625rem;--_ui5_datetime_picker_height:25rem;--_ui5_datetime_timeview_phonemode_width:19.5rem;--_ui5_datetime_timeview_padding:1rem;--_ui5_dialog_content_min_height:2.75rem;--_ui5_input_inner_padding:0 0.625rem;--_ui5_input_inner_padding_with_icon:0 0.25rem 0 0.625rem;--_ui5_input_value_state_icon_padding:var(--_ui5-input-icon-padding);--_ui5_list_no_data_height:3rem;--_ui5_list_item_cb_margin_right:0;--_ui5_list_item_title_size:var(--sapFontLargeSize);--_ui5_list_item_img_size:3rem;--_ui5_list_item_img_margin:0.5rem 0.75rem 0.5rem 0rem;--_ui5_list_item_base_height:2.75rem;--_ui5_list_item_icon_size:1.125rem;--_ui5_list_busy_row_height:3rem;--_ui5_month_picker_item_height:3rem;--_ui5_year_picker_item_height:3rem;--_ui5_tokenizer_root_padding:0.1875rem;--_ui5_token_height:1.625rem;--_ui5_token_icon_size:1rem;--_ui5_token_icon_padding:0.25rem 0.5rem;--_ui5_token_wrapper_right_padding:0.3125rem;--_ui5_tl_bubble_padding:1rem;--_ui5_tl_indicator_before_bottom:-1.625rem;--_ui5_tl_padding:1rem 1rem 1rem .5rem;--_ui5_tl_li_margin_bottom:1.625rem;--_ui5_rb_height:2.75rem;--_ui5_rb_label_side_padding:.875rem;--_ui5_rb_focus_dist:.5rem;--_ui5_rb_inner_size:2.75rem;--_ui5_rb_svg_size:1.375rem;--_ui5_rb_label_width:calc(100% - 2.75rem);--_ui5_rb_rtl_focus_right:0.5rem;--_ui5_switch_text_on_left:calc(-100% + 1.9125rem);--_ui5_switch_slide_transform:translateX(100%) translateX(-1.875rem);--_ui5_switch_rtl_transform:translateX(1.875rem) translateX(-100%);--_ui5_switch_text_right:calc(-100% + 1.9125rem);--_ui5_tc_item_text:3rem;--_ui5_tc_item_text_text_only:3rem;--_ui5_tc_item_text_line_height:normal;--_ui5_tc_item_icon_size:1.5rem;--_ui5_tc_item_add_text_margin_top:0.625rem;--_ui5_textarea_padding:0.5625rem 0.6875rem;--_ui5-responnsive_popover_header_height:2.75rem;--ui5_side_navigation_item_height:2.75rem;--ui5_table_load_more_text_height:2.75rem;--_ui5_table_load_more_text_font_size:var(--sapFontMediumSize);--_ui5_table_load_more_desc_padding:0.375rem 2rem 0.875rem 2rem;--_ui5-tree-indent-step:1.5rem;--_ui5-tree-toggle-box-width:2.75rem;--_ui5-tree-toggle-box-height:2.25rem;--_ui5-tree-toggle-icon-size:1.0625rem;--_ui5_segmented_btn_border_radius:0.375rem;--ui5-avatar-initials-color:var(--sapContent_ImagePlaceholderForegroundColor);--ui5-avatar-initials-border:none;--ui5-avatar-accent1:var(--sapAccentColor1);--ui5-avatar-accent2:var(--sapAccentColor2);--ui5-avatar-accent3:var(--sapAccentColor3);--ui5-avatar-accent4:var(--sapAccentColor4);--ui5-avatar-accent5:var(--sapAccentColor5);--ui5-avatar-accent6:var(--sapAccentColor6);--ui5-avatar-accent7:var(--sapAccentColor7);--ui5-avatar-accent8:var(--sapAccentColor8);--ui5-avatar-accent9:var(--sapAccentColor9);--ui5-avatar-accent10:var(--sapAccentColor10);--ui5-avatar-placeholder:var(--sapContent_ImagePlaceholderBackground);--_ui5_avatar_outline:1px dotted var(--sapContent_FocusColor);--_ui5_avatar_focus_offset:1px;--_ui5_avatar_focus_width:1px;--_ui5_avatar_focus_color:var(--sapContent_FocusColor);--ui5-badge-font-size:0.75em;--ui5-badge-color-scheme-1-background:var(--sapLegendBackgroundColor1);--ui5-badge-color-scheme-1-border:var(--sapLegendColor1);--ui5-badge-color-scheme-2-background:var(--sapLegendBackgroundColor2);--ui5-badge-color-scheme-2-border:var(--sapLegendColor2);--ui5-badge-color-scheme-3-background:var(--sapLegendBackgroundColor3);--ui5-badge-color-scheme-3-border:var(--sapLegendColor3);--ui5-badge-color-scheme-4-background:var(--sapLegendBackgroundColor5);--ui5-badge-color-scheme-4-border:var(--sapLegendColor5);--ui5-badge-color-scheme-5-background:var(--sapLegendBackgroundColor20);--ui5-badge-color-scheme-5-border:var(--sapLegendColor20);--ui5-badge-color-scheme-6-background:var(--sapLegendBackgroundColor6);--ui5-badge-color-scheme-6-border:var(--sapLegendColor6);--ui5-badge-color-scheme-7-background:var(--sapLegendBackgroundColor7);--ui5-badge-color-scheme-7-border:var(--sapLegendColor7);--ui5-badge-color-scheme-8-background:var(--sapLegendBackgroundColor8);--ui5-badge-color-scheme-8-border:var(--sapLegendColor8);--ui5-badge-color-scheme-9-background:var(--sapLegendBackgroundColor10);--ui5-badge-color-scheme-9-border:var(--sapLegendColor10);--ui5-badge-color-scheme-10-background:var(--sapLegendBackgroundColor9);--ui5-badge-color-scheme-10-border:var(--sapAccentColor9);--_ui5_button_base_min_compact_width:2rem;--_ui5_button_compact_height:1.625rem;--_ui5_button_compact_padding:0.4375rem;--_ui5_button_outline:1px dotted var(--sapContent_FocusColor);--_ui5_button_outline_offset:-0.1875rem;--_ui5_button_focus_offset:1px;--_ui5_button_focus_width:1px;--_ui5_button_focus_color:var(--sapContent_FocusColor);--_ui5_button_transparent_border_color:transparent;--_ui5_button_transparent_hover_border_color:var(--sapButton_BorderColor);--_ui5_button_active_border_color:var(--sapButton_Active_BorderColor);--_ui5_button_positive_border_color:var(--sapButton_Accept_BorderColor);--_ui5_button_positive_border_hover_color:var(--sapButton_Accept_Hover_BorderColor);--_ui5_button_positive_border_active_color:var(--sapButton_Accept_Active_BorderColor);--_ui5_button_positive_border_focus_hover_color:var(--sapContent_FocusColor);--_ui5_button_positive_focus_border_color:var(--sapButton_Accept_BorderColor);--_ui5_button_negative_focus_border_color:var(--sapButton_Reject_BorderColor);--_ui5_button_negative_active_border_color:var(--sapButton_Reject_Active_BorderColor);--_ui5_button_emphasized_focused_border_color:var(--sapButton_Emphasized_BorderColor);--_ui5_button_base_min_width:2.25rem;--_ui5_button_base_height:2.25rem;--_ui5_button_border_radius:0.25rem;--_ui5_button_base_padding:0.5625rem;--_ui5_button_base_icon_only_padding:0.5625rem;--_ui5_button_base_icon_margin:0.375rem;--_ui5_button_emphasized_font_weight:bold;--_ui5_button_text_shadow:none;--_ui5_card_border_color:var(--sapTile_SeparatorColor);--_ui5_card_content_padding:1rem;--_ui5_card_header_hover_bg:var(--sapList_Hover_Background);--_ui5_card_header_active_bg:var(--_ui5_card_header_hover_bg);--_ui5_card_header_border_color:var(--_ui5_card_border_color);--_ui5_card_header_focus_border:1px dotted var(--sapContent_FocusColor);--ui5_carousel_button_size:2.5rem;--ui5_carousel_height:0.25rem;--ui5_carousel_width:0.25rem;--ui5_carousel_margin:0 0.375rem;--ui5_carousel_border:1px solid var(--sapContent_ForegroundBorderColor);--ui5_carousel_dot_border:none;--ui5_carousel_dot_background:var(--sapContent_NonInteractiveIconColor);--_ui5_checkbox_hover_background:var(--sapField_Hover_Background);--_ui5_checkbox_inner_width_height:1.375rem;--_ui5_checkbox_inner_error_border:0.125rem solid var(--sapField_InvalidColor);--_ui5_checkbox_inner_warning_border:0.125rem solid var(--sapField_WarningColor);--_ui5_checkbox_inner_information_border:0.125rem solid var(--sapField_InformationColor);--_ui5_checkbox_checkmark_warning_color:var(--sapField_TextColor);--_ui5_checkbox_checkmark_color:var(--sapSelectedColor);--_ui5_checkbox_wrapped_focus_left_top_bottom_position:.5625rem;--_ui5_checkbox_focus_outline:1px dotted var(--sapContent_FocusColor);--_ui5_checkbox_compact_wrapper_padding:.5rem;--_ui5_checkbox_compact_width_height:2rem;--_ui5_checkbox_compact_inner_size:1rem;--_ui5_checkbox_compact_focus_position:.375rem;--_ui5_checkbox_wrapper_padding:.6875rem;--_ui5_checkbox_width_height:2.75rem;--_ui5_checkbox_inner_border:.0625rem solid var(--sapField_BorderColor);--_ui5_checkbox_focus_position:0.5625rem;--_ui5_checkbox_inner_border_radius:.125rem;--_ui5_checkbox_wrapped_content_margin_top:0;--_ui5_checkbox_wrapped_focus_padding:.5rem;--_ui5_checkbox_inner_readonly_border:1px solid var(--sapField_ReadOnly_BorderColor);--_ui5_checkbox_compact_wrapped_label_margin_top:-0.125rem;--_ui5_datepicker_icon_border:none;--_ui5_daypicker_item_margin:2px;--_ui5_daypicker_item_border:none;--_ui5_daypicker_item_selected_border_color:var(--sapList_Background);--_ui5_daypicker_item_outline_width:1px;--_ui5_daypicker_item_outline_offset:1px;--_ui5_daypicker_daynames_container_height:2rem;--_ui5_daypicker_item_othermonth_background_color:var(--sapList_Background);--_ui5_daypicker_item_othermonth_color:var(--sapContent_LabelColor);--_ui5_daypicker_item_othermonth_hover_color:var(--sapContent_LabelColor);--_ui5_daypicker_dayname_color:var(--sapContent_LabelColor);--_ui5_daypicker_weekname_color:var(--sapContent_LabelColor);--_ui5_daypicker_item_now_selected_focus_after_width:calc(100% - 0.125rem);--_ui5_daypicker_item_now_selected_focus_after_height:calc(100% - 0.125rem);--_ui5_daypicker_item_selected_hover_background_color:var(--sapActiveColor_Lighten3);--_ui5_daypicker_item_border_radius:0.25rem;--_ui5_daypicker_item_now_inner_border_radius:0.125rem;--_ui5_dialog_resize_handle_color:var(--sapButton_Lite_TextColor);--ui5-group-header-listitem-background-color:var(--sapList_GroupHeaderBackground);--_ui5_input_width:13.125rem;--_ui5_input_compact_height:1.625rem;--_ui5_input_state_border_width:0.125rem;--_ui5-input-information_border_width:0.125rem;--_ui5_input_error_font_weight:normal;--_ui5_input_focus_border_width:1px;--_ui5_input_error_warning_border_style:solid;--_ui5_input_error_warning_font_style:inherit;--_ui5_input_disabled_color:var(--sapContent_DisabledTextColor);--_ui5_input_disabled_font_weight:normal;--_ui5_input_disabled_border_color:var(--sapField_BorderColor);--_ui5_input_disabled_background:var(--sapField_Background);--_ui5_input_icon_min_width:2.375rem;--_ui5_input_compact_min_width:2rem;--_ui5_input_height:2.25rem;--_ui5_input_disabled_opacity:0.4;--_ui5_input_wrapper_border_radius:0.125rem;--_ui5_input_icon_padding:.5625rem .6875rem;--_ui5_link_opacity:0.4;--_ui5_link_text_decoration:none;--_ui5_link_hover_text_decoration:underline;--ui5_list_footer_text_color:var(--sapTextColor);--ui5-listitem-background-color:var(--sapList_Background);--ui5-listitem-border-bottom:1px solid var(--sapList_BorderColor);--ui5-listitem-selected-border-bottom:1px solid var(--sapList_SelectionBorderColor);--_ui5_listitembase_focus_width:1px;--_ui5_product_switch_item_border:none;--_ui5_monthpicker_item_border:none;--_ui5_monthpicker_item_margin:1px;--_ui5_monthpicker_item_focus_after_width:calc(100% - 0.375rem);--_ui5_monthpicker_item_focus_after_height:calc(100% - 0.375rem);--_ui5_monthpicker_item_focus_after_border:1px dotted var(--sapContent_FocusColor);--_ui5_monthpicker_item_focus_after_offset:2px;--_ui5_monthpicker_item_border_radius:0.25rem;--_ui5_messagestrip_icon_width:2.5rem;--_ui5_messagestrip_border_radius:0.1875rem;--_ui5_messagestrip_button_border_width:0;--_ui5_messagestrip_button_border_style:none;--_ui5_messagestrip_button_border_color:transparent;--_ui5_messagestrip_button_border_radius:0;--_ui5_messagestrip_padding:0.4375rem 2.5rem 0.4375rem 2.5rem;--_ui5_messagestrip_padding_no_icon:0.4375rem 2.5rem 0.4375rem 1rem;--_ui5_messagestrip_button_height:1.625rem;--_ui5_messagestrip_border_width:1px;--_ui5_messagestrip_close_button_border:none;--_ui5_messagestrip_close_button_size:1.625rem;--_ui5_messagestrip_icon_top:0.4375rem;--_ui5_messagestrip_focus_width:1px;--_ui5_messagestrip_focus_offset:-2px;--_ui5_panel_focus_border:1px dotted var(--sapContent_FocusColor);--_ui5_panel_header_height:2.75rem;--_ui5_panel_button_root_width:2.75rem;--_ui5_popup_content_padding:.4375em;--_ui5_progress_indicator_value_state_none:var(--sapNeutralElementColor);--_ui5_progress_indicator_value_state_error:var(--sapNegativeElementColor);--_ui5_progress_indicator_value_state_warning:var(--sapCriticalElementColor);--_ui5_progress_indicator_value_state_success:var(--sapPositiveElementColor);--_ui5_progress_indicator_value_state_information:var(--sapInformativeElementColor);--_ui5_progress_indicator_color:var(--sapTextColor);--_ui5_progress_indicator_bar_color:var(--sapContent_ContrastTextColor);--_ui5_progress_indicator_border:0.0625rem solid var(--sapField_BorderColor);--_ui5_progress_indicator_bar_border_max:none;--_ui5_progress_indicator_icon_visibility:none;--_ui5_radiobutton_min_width:2.75rem;--_ui5_radiobutton_min_width_compact:2rem;--_ui5_radiobutton_hover_fill:var(--sapField_Hover_Background);--_ui5_radiobutton_border_width:1px;--_ui5_radiobutton_selected_fill:var(--sapSelectedColor);--_ui5_radiobutton_selected_error_fill:var(--sapField_InvalidColor);--_ui5_radiobutton_selected_warning_fill:var(--sapField_TextColor);--_ui5_radiobutton_warning_error_border_dash:0;--_ui5_select_disabled_background:var(--sapField_Background);--_ui5_select_disabled_border_color:var(--sapField_BorderColor);--_ui5_select_state_error_warning_border_style:solid;--_ui5_select_state_error_warning_border_width:0.125rem;--_ui5_select_hover_icon_left_border:1px solid transparent;--_ui5_select_rtl_hover_icon_left_border:none;--_ui5_select_rtl_hover_icon_right_border:none;--_ui5_select_focus_width:1px;--_ui5_switch_height:2.75rem;--_ui5_switch_width:3.875rem;--_ui5_switch_no_label_width:3.25rem;--_ui5_switch_outline:1px;--_ui5_switch_compact_height:2rem;--_ui5_switch_compact_width:3.5rem;--_ui5_switch_compact_no_label_width:2.5rem;--_ui5_switch_track_height:1.375rem;--_ui5_switch_track_no_label_height:1.25rem;--_ui5_switch_track_compact_no_label_height:1rem;--_ui5_switch_track_hover_border_color:var(--_ui5_switch_track_checked_border_color);--_ui5_switch_track_hover_background_color:var(--sapButton_Track_Background);--_ui5_switch_track_hover_checked_background_color:var(--sapButton_Track_Selected_Background);--_ui5_switch_track_border_radius:0.75rem;--_ui5_switch_track_disabled_checked_bg:var(--_ui5_switch_track_checked_bg);--_ui5_switch_track_disabled_border_color:var(--sapContent_ForegroundBorderColor);--_ui5_switch_track_disabled_semantic_checked_bg:var(--sapSuccessBackground);--_ui5_switch_track_disabled_semantic_checked_border_color:var(--sapSuccessBorderColor);--_ui5_switch_track_disabled_semantic_bg:var(--sapErrorBackground);--_ui5_switch_track_disabled_semantic_border_color:var(--sapErrorBorderColor);--_ui5_switch_handle_width:2rem;--_ui5_switch_handle_height:2rem;--_ui5_switch_handle_border_width:1px;--_ui5_switch_handle_border_radius:1rem;--_ui5_switch_handle_bg:var(--sapButton_TokenBackground);--_ui5_switch_handle_checked_bg:var(--sapButton_Selected_Background);--_ui5_switch_handle_checked_border_color:var(--sapButton_Selected_BorderColor);--_ui5_switch_handle_semantic_hover_bg:var(--sapErrorBackground);--_ui5_switch_handle_semantic_checked_hover_bg:var(--sapSuccessBackground);--_ui5_switch_handle_semantic_hover_border_color:var(--sapErrorBorderColor);--_ui5_switch_handle_semantic_checked_hover_border_color:var(--sapSuccessBorderColor);--_ui5_switch_handle_compact_width:1.625rem;--_ui5_switch_handle_compact_height:1.625rem;--_ui5_switch_handle_disabled_bg:var(--_ui5_switch_handle_bg);--_ui5_switch_handle_disabled_checked_bg:var(--_ui5_switch_handle_checked_bg);--_ui5_switch_handle_disabled_border_color:var(--sapContent_ForegroundBorderColor);--_ui5_switch_handle_disabled_semantic_checked_bg:var(--sapButton_Background);--_ui5_switch_handle_disabled_semantic_checked_border_color:var(--sapSuccessBorderColor);--_ui5_switch_handle_disabled_semantic_border_color:var(--sapErrorBorderColor);--_ui5_switch_text_on_semantic_color:var(--sapPositiveElementColor);--_ui5_switch_text_off_semantic_color:var(--sapNegativeElementColor);--_ui5_switch_text_disabled_color:var(--sapTextColor);--_ui5_tc_header_height:4.6875rem;--_ui5_tc_header_height_compact:3.6875rem;--_ui5_tc_header_height_text_only:3rem;--_ui5_tc_header_height_text_only_compact:2rem;--_ui5_tc_headeritem_text_selected_color:var(--sapSelectedColor);--_ui5_tc_headerItem_neutral_color:var(--sapNeutralColor);--_ui5_tc_headerItem_positive_color:var(--sapPositiveColor);--_ui5_tc_headerItem_negative_color:var(--sapNegativeColor);--_ui5_tc_headerItem_critical_color:var(--sapCriticalColor);--_ui5_tc_headerItem_neutral_border_color:var(--_ui5_tc_headerItem_neutral_color);--_ui5_tc_headerItem_positive_border_color:var(--_ui5_tc_headerItem_positive_color);--_ui5_tc_headerItem_negative_border_color:var(--_ui5_tc_headerItem_negative_color);--_ui5_tc_headerItem_critical_border_color:var(--_ui5_tc_headerItem_critical_color);--_ui5_tc_headerItem_neutral_selected_border_color:var(--_ui5_tc_headerItem_neutral_color);--_ui5_tc_headerItem_positive_selected_border_color:var(--_ui5_tc_headerItem_positive_color);--_ui5_tc_headerItem_negative_selected_border_color:var(--_ui5_tc_headerItem_negative_color);--_ui5_tc_headerItem_critical_selected_border_color:var(--_ui5_tc_headerItem_critical_color);--_ui5_tc_headerItem_focus_border:1px dotted var(--sapContent_FocusColor);--_ui5_tc_headerItemSemanticIcon_display:none;--_ui5_tc_overflowItem_neutral_color:var(--sapNeutralColor);--_ui5_tc_overflowItem_positive_color:var(--sapPositiveColor);--_ui5_tc_overflowItem_negative_color:var(--sapNegativeColor);--_ui5_tc_overflowItem_critical_color:var(--sapCriticalColor);--_ui5_tc_headerItemIcon_border:1px solid var(--sapHighlightColor);--_ui5_tc_headerItemIcon_color:var(--sapHighlightColor);--_ui5_tc_headerItemIcon_selected_background:var(--sapHighlightColor);--_ui5_tc_headerItemIcon_selected_color:var(--sapGroup_ContentBackground);--_ui5_tc_headerItemIcon_positive_selected_background:var(--sapPositiveColor);--_ui5_tc_headerItemIcon_negative_selected_background:var(--sapNegativeColor);--_ui5_tc_headerItemIcon_critical_selected_background:var(--sapCriticalColor);--_ui5_tc_headerItemIcon_neutral_selected_background:var(--sapNeutralColor);--_ui5_tc_headerItemIcon_semantic_selected_color:var(--sapGroup_ContentBackground);--_ui5_tc_header_box_shadow:var(--sapContent_HeaderShadow);--_ui5_tc_header_border_bottom:0.0625rem solid var(--sapObjectHeader_Background);--_ui5_tc_headerItem_color:var(--sapContent_LabelColor);--_ui5_tc_headerItemContent_border_bottom:0.188rem solid var(--sapSelectedColor);--_ui5_tc_overflowItem_default_color:var(--sapHighlightColor);--_ui5_tc_overflowItem_current_color:CurrentColor;--_ui5_tc_content_border_bottom:0.0625rem solid var(--sapObjectHeader_BorderColor);--_ui5_textarea_focus_after_width:1px;--_ui5_textarea_warning_border_style:solid;--_ui5_textarea_state_border_width:0.125rem;--_ui5_time_picker_border:0.0625rem solid transparent;--_ui5_toast_vertical_offset:3rem;--_ui5_toast_horizontal_offset:2rem;--_ui5_toast_background:var(--sapList_Background);--_ui5_toast_shadow:var(--sapContent_Shadow2);--_ui5_wheelslider_item_text_size:var(--sapFontSize);--_ui5_wheelslider_label_text_size:var(--sapFontSmallSize);--_ui5_wheelslider_mobile_selection_frame_margin_top:calc(var(--_ui5_wheelslider_item_height)*4);--_ui5_wheelslider_label_text_color:var(--sapContent_LabelColor);--_ui5_wheelslider_height:15rem;--_ui5_wheelslider_mobile_height:27rem;--_ui5_wheelslider_arrows_visibility:hidden;--_ui5_wheelslider_item_background_color:var(--sapLegend_WorkingBackground);--_ui5_wheelslider_item_text_color:var(--sapTextColor);--_ui_wheelslider_item_hover_color:var(--sapButton_Emphasized_Hover_BorderColor);--_ui5_wheelslider_item_border_color:var(--sapList_Background);--_ui5_wheelslider_item_hovered_border_color:var(--sapList_Background);--_ui5_wheelslider_collapsed_item_text_color:var(--_ui5_wheelslider_item_border_color);--_ui5_wheelslider_selected_item_background_color:var(--sapContent_Selected_Background);--_ui5_wheelslider_selected_item_hover_background_color:var(--sapButton_Emphasized_Hover_BorderColor);--_ui5_wheelslider_active_item_background_color:var(--sapContent_Selected_Background);--_ui5_wheelslider_active_item_text_color:var(--sapContent_Selected_TextColor);--_ui5_wheelslider_item_width:3rem;--_ui5_wheelslider_item_height:2.875rem;--_ui5_wheelslider_selection_frame_color:var(--sapList_SelectionBorderColor);--_ui_wheelslider_item_border_radius:var(--_ui5_button_border_radius);--_ui5_toggle_button_pressed_focussed:var(--sapButton_Selected_BorderColor);--_ui5_toggle_button_pressed_focussed_hovered:var(--sapButton_Selected_BorderColor);--_ui5_yearpicker_item_selected_focus:var(--sapContent_Selected_Background);--_ui5_yearpicker_item_border:none;--_ui5_yearpicker_item_margin:1px;--_ui5_yearpicker_item_focus_after_width:calc(100% - 0.375rem);--_ui5_yearpicker_item_focus_after_height:calc(100% - 0.375rem);--_ui5_yearpicker_item_focus_after_border:1px dotted var(--sapContent_FocusColor);--_ui5_yearpicker_item_focus_after_offset:2px;--_ui5_yearpicker_item_border_radius:0.25rem;--_ui5_calendar_header_arrow_button_border:none;--_ui5_calendar_header_arrow_button_border_radius:0.25rem;--_ui5_calendar_header_middle_button_width:6.25rem;--_ui5_calendar_header_middle_button_flex:1 1 auto;--_ui5_calendar_header_middle_button_focus_border_radius:0.25rem;--_ui5_calendar_header_middle_button_focus_border:none;--_ui5_calendar_header_middle_button_focus_after_display:block;--_ui5_calendar_header_middle_button_focus_after_width:calc(100% - 0.375rem);--_ui5_calendar_header_middle_button_focus_after_height:calc(100% - 0.375rem);--_ui5_calendar_header_middle_button_focus_after_top_offset:0.125rem;--_ui5_calendar_header_middle_button_focus_after_left_offset:0.125rem;--ui5_table_header_row_outline_width:1px;--ui5_table_row_outline_width:1px;--ui5_table_load_more_padding:0;--ui5_table_load_more_border:1px top solid transparent;--ui5_table_load_more_border_radius:none;--ui5_title_level_1Size:1.625rem;--ui5_title_level_2Size:1.375rem;--ui5_title_level_3Size:1.250rem;--ui5_title_level_4Size:1.125rem;--ui5_title_level_5Size:1rem;--ui5_title_level_6Size:0.875rem;--_ui5_token_background:var(--sapButton_TokenBackground);--_ui5_token_border_radius:0.25rem;--_ui5_token_focus_outline_width:0.0625rem;--_ui5_token_text_color:var(--sapTextColor);--_ui5_token_icon_color:var(--sapContent_IconColor);--_ui5_value_state_message_border:none;--_ui5-multi_combobox_token_margin_top:1px;--_ui5_slider_progress_container_background:var(--sapField_BorderColor);--_ui5_slider_progress_border:none;--_ui5_slider_inner_height:0.25rem;--_ui5_slider_progress_border_radius:0.25rem;--_ui5_slider_progress_background:var(--sapActiveColor);--_ui5_slider_handle_height:1.625rem;--_ui5_slider_handle_width:1.625rem;--_ui5_slider_handle_border:solid 0.125rem var(--sapField_BorderColor);--_ui5_slider_handle_background:var(--sapButton_Background);--_ui5_range_slider_handle_background:rgba(var(--sapButton_Background),0.25);--_ui5_slider_handle_top:-0.825rem;--_ui5_slider_handle_margin_left:-0.9725rem;--_ui5_slider_handle_hover_background:var(--sapButton_Hover_Background);--_ui5_slider_handle_hover_border:var(--sapButton_Hover_BorderColor);--_ui5_range_slider_handle_hover_background:rgba(var(--sapButton_Background),0.25);--_ui5_slider_tickmark_color:#89919a;--_ui5_slider_tickmark_top:-0.375rem;--_ui5_slider_disabled_opacity:0.4;--_ui5_slider_tooltip_fontsize:var(--sapFontSmallSize);--_ui5_slider_tooltip_color:var(--sapContent_LabelColor);--_ui5_slider_tooltip_background:var(--sapField_Background);--_ui5_slider_tooltip_border_radius:var(--sapElement_BorderCornerRadius);--_ui5_slider_tooltip_border_color:var(--sapField_BorderColor);--_ui5_slider_tooltip_padding:0.4125rem;--_ui5_slider_tooltip_box_shadow:none;--_ui5_slider_tooltip_min_width:2rem;--_ui5_slider_tooltip_bottom:2rem;--_ui5_slider_label_fontsize:var(--sapFontSmallSize);--_ui5_slider_label_color:var(--sapContent_LabelColor);--_ui5_slider_inner_min_width:4rem}.sapUiSizeCompact,.ui5-content-density-compact,:root,[data-ui5-compact-size]{--_ui5_datetime_timeview_width:17rem;--_ui5_list_item_selection_btn_margin_top:calc(-1*var(--_ui5_checkbox_wrapper_padding));--_ui5_token_wrapper_left_padding:0;--_ui5_button_icon_font_size:1rem;--_ui5_daypicker_weeknumbers_container_padding_top:2rem;--_ui5_wheelslider_selection_frame_margin_top:calc(var(--_ui5_wheelslider_item_height)*2);--_ui5_slider_tooltip_height:1rem}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_button_base_height:1.625rem;--_ui5_button_base_padding:0.4375rem;--_ui5_button_base_min_width:2rem;--_ui5_calendar_header_height:2rem;--_ui5_calendar_header_padding:0;--_ui5_calendar_header_arrow_button_width:2rem;--_ui5_checkbox_root_side_padding:var(--_ui5_checkbox_wrapped_focus_padding);--_ui5_checkbox_wrapped_content_margin_top:var(--_ui5_checkbox_compact_wrapped_label_margin_top);--_ui5_checkbox_wrapped_focus_left_top_bottom_position:var(--_ui5_checkbox_compact_focus_position);--_ui5_checkbox_width_height:var(--_ui5_checkbox_compact_width_height);--_ui5_checkbox_wrapper_padding:var(--_ui5_checkbox_compact_wrapper_padding);--_ui5_checkbox_focus_position:var(--_ui5_checkbox_compact_focus_position);--_ui5_checkbox_inner_width_height:var(--_ui5_checkbox_compact_inner_size);--_ui5_checkbox_icon_size:.75rem;--_ui5_custom_list_item_height:2rem;--_ui5_custom_list_item_rb_min_width:2rem;--_ui5_day_picker_item_width:2rem;--_ui5_day_picker_item_height:2rem;--_ui5_day_picker_empty_height:2.125rem;--_ui5_datetime_picker_height:17rem;--_ui5_datetime_picker_width:34.0625rem;--_ui5_datetime_timeview_phonemode_width:18.5rem;--_ui5_datetime_timeview_padding:0.5rem;--_ui5_dialog_content_min_height:2.5rem;--_ui5_input_height:var(--_ui5_input_compact_height);--_ui5_input_inner_padding:0 0.5rem;--_ui5_input_icon_min_width:var(--_ui5_input_compact_min_width);--_ui5_input_icon_padding:.25rem .5rem;--_ui5_input_value_state_icon_padding:.1875rem .5rem;--_ui5_textarea_padding:.1875rem .5rem;--_ui5_list_no_data_height:2rem;--_ui5_list_item_cb_margin_right:.5rem;--_ui5_list_item_title_size:var(--sapFontSize);--_ui5_list_item_img_margin:0.55rem 0.75rem 0.5rem 0rem;--_ui5_list_item_base_height:2rem;--_ui5_list_item_icon_size:1rem;--_ui5_list_busy_row_height:2rem;--_ui5_month_picker_item_height:2rem;--_ui5_panel_header_height:2rem;--_ui5_year_picker_item_height:2rem;--_ui5_tokenizer_root_padding:0.125rem;--_ui5_token_height:1.125rem;--_ui5_token_icon_size:.75rem;--_ui5_token_icon_padding:0.1rem 0.25rem;--_ui5_token_wrapper_right_padding:0.25rem;--_ui5_tl_bubble_padding:.5rem;--_ui5_tl_indicator_before_bottom:-.5rem;--_ui5_tl_padding:.5rem;--_ui5_tl_li_margin_bottom:.5rem;--_ui5_rb_height:2rem;--_ui5_rb_label_side_padding:.5rem;--_ui5_rb_focus_dist:.375rem;--_ui5_rb_inner_size:2rem;--_ui5_rb_svg_size:1rem;--_ui5_rb_label_width:calc(100% - 2rem + 1px);--_ui5_rb_rtl_focus_right:0.375rem;--_ui5_wheelslider_item_width:4rem;--_ui5_wheelslider_item_height:2rem;--_ui5_wheelslider_height:14rem;--_ui5_wheelslider_arrows_visibility:visible;--_ui5_switch_height:var(--_ui5_switch_compact_height);--_ui5_switch_width:var(--_ui5_switch_compact_width);--_ui5_switch_handle_height:var(--_ui5_switch_handle_compact_height);--_ui5_switch_handle_width:var(--_ui5_switch_handle_compact_width);--_ui5_switch_text_on_left:calc(-100% + 1.5625rem);--_ui5_switch_slide_transform:translateX(100%) translateX(-1.5rem);--_ui5_switch_no_label_width:var(--_ui5_switch_compact_no_label_width);--_ui5_switch_track_no_label_height:var(--_ui5_switch_track_compact_no_label_height);--_ui5_switch_rtl_transform:translateX(-100%) translateX(1.5rem);--_ui5_switch_text_right:calc(-100% + 1.5625rem);--_ui5_tc_item_text:2rem;--_ui5_tc_item_text_line_height:1.325rem;--_ui5_tc_item_icon_size:1rem;--_ui5_tc_item_add_text_margin_top:0.3125rem;--_ui5_tc_header_height:var(--_ui5_tc_header_height_compact);--_ui5_radiobutton_min_width:var(--_ui5_radiobutton_min_width_compact);--_ui5-responnsive_popover_header_height:2.5rem;--ui5_side_navigation_item_height:2rem;--_ui5_slider_handle_height:1.25rem;--_ui5_slider_handle_width:1.25rem;--_ui5_slider_handle_top:-0.6425rem;--_ui5_slider_handle_margin_left:-0.7825rem;--_ui5_slider_tooltip_padding:0.25rem;--_ui5_slider_tooltip_bottom:1.825rem;--ui5_table_load_more_text_height:2.625rem;--_ui5_table_load_more_text_font_size:var(--sapFontSize);--_ui5_table_load_more_desc_padding:0 2rem 0.875rem 2rem;--_ui5-tree-indent-step:0.5rem;--_ui5-tree-toggle-box-width:2rem;--_ui5-tree-toggle-box-height:1.5rem;--_ui5-tree-toggle-icon-size:0.8125rem}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var iconCss = ":host(:not([hidden])){display:inline-block}:host([invalid]){display:none}:host(:not([hidden]).ui5_hovered){opacity:.7}:host{width:1rem;height:1rem;color:var(--sapContent_NonInteractiveIconColor);fill:currentColor;outline:none}:host([interactive][focused]) .ui5-icon-root{outline:1px dotted var(--sapContent_FocusColor)}:host(:not([dir=ltr])) .ui5-icon-root[dir=rtl]{transform:scale(-1);transform-origin:center}.ui5-icon-root{display:flex;outline:none}";

	const ICON_NOT_FOUND$1 = "ICON_NOT_FOUND";

	/**
	 * @public
	 */
	const metadata = {
		tag: "ui5-icon",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.main.Icon.prototype */ {
			/**
			 * Defines if the icon is interactive (focusable and pressable)
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			 */
			interactive: {
				type: Boolean,
			},

			/**
			 * Defines the unique identifier (icon name) of each <code>ui5-icon</code>.
			 * <br>
			 *
			 * To browse all available icons, see the
			 * <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 * <br>
			 *
			 * Example:
			 * <br>
			 * <code>name='add'</code>, <code>name='delete'</code>, <code>name='employee'</code>.
			 * <br><br>
			 *
			 * <b>Note:</b> To use the SAP Fiori Tools icons,
			 * you need to set the <code>tnt</code> prefix in front of the icon's name.
			 * <br>
			 *
			 * Example:
			 * <br>
			 * <code>name='tnt/antenna'</code>, <code>name='tnt/actor'</code>, <code>name='tnt/api'</code>.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			*/
			name: {
				type: String,
			},

			/**
			 * Defines the text alternative of the <code>ui5-icon</code>.
			 * If not provided a default text alternative will be set, if present.
			 * <br><br>
			 * <b>Note:</b> Every icon should have a text alternative in order to
			 * calculate its accessible name.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			accessibleName: {
				type: String,
			},

			/**
			 * Defines whether the <code>ui5-icon</code> should have a tooltip.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showTooltip: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			pathData: {
				type: String,
				noAttribute: true,
			},

			/**
			 * @private
			 */
			accData: {
				type: Object,
				noAttribute: true,
			},

			/**
			 * @private
			 */
			focused: {
				type: Boolean,
			},

			/**
			* @private
			*/
			invalid: {
				type: Boolean,
			},
		},
		events: {
			/**
			 * Fired on mouseup, space and enter if icon is interactive
			 * @private
			 * @since 1.0.0-rc.8
			 */
			click: {},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-icon</code> component represents an SVG icon.
	 * There are two main scenarios how the <code>ui5-icon</code> component is used:
	 * as a purely decorative element; or as a visually appealing clickable area in the form of an icon button.
	 * <br><br>
	 * A large set of built-in icons is available
	 * and they can be used by setting the <code>name</code> property on the <code>ui5-icon</code>.
	 * But before using an icon, you need to import the desired icon.
	 * <br>
	 *
	 * For the standard icon collection, you have to import an icon from the <code>@ui5/webcomponents-icons</code> package:
	 * <br>
	 * <code>import "@ui5/webcomponents-icons/dist/employee.js";</code>
	 * <br>
	 *
	 * For the SAP Fiori Tools icon collection (supported since 1.0.0-rc.10), you have to import an icon from the <code>@ui5/webcomponents-icons-tnt</code> package:
	 * <br>
	 * <code>import "@ui5/webcomponents-icons-tnt/dist/antenna.js";</code>
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Icon.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Icon
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-icon
	 * @public
	 */
	class Icon extends UI5Element {
		constructor() {
			super();
			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		static get metadata() {
			return metadata;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$1;
		}

		static get styles() {
			return iconCss;
		}

		static async onDefine() {
			this.createGlobalStyle(); // hide all icons until the first icon has rendered (and added the Icon.css)
			await fetchI18nBundle("@ui5/webcomponents");
		}

		_onfocusin(event) {
			if (this.interactive) {
				this.focused = true;
			}
		}

		_onfocusout(event) {
			this.focused = false;
		}

		_onkeydown(event) {
			if (this.interactive && isEnter(event)) {
				this.fireEvent("click");
			}
		}

		_onkeyup(event) {
			if (this.interactive && isSpace(event)) {
				this.fireEvent("click");
			}
		}

		_onclick(event) {
			if (this.interactive) {
				event.preventDefault();
				// Prevent the native event and fire custom event because otherwise the noConfict event won't be thrown
				this.fireEvent("click");
			}
		}

		get _dir() {
			if (!this.effectiveDir) {
				return;
			}

			if (this.ltr) {
				return "ltr";
			}

			return this.effectiveDir;
		}

		get tabIndex() {
			return this.interactive ? "0" : "-1";
		}

		get role() {
			if (this.interactive) {
				return "button";
			}

			return this.accessibleNameText ? "img" : "presentation";
		}

		static createGlobalStyle() {
			if (!window.ShadyDOM) {
				return;
			}
			const styleElement = document.head.querySelector(`style[data-ui5-icon-global]`);
			if (!styleElement) {
				createStyleInHead(`ui5-icon { display: none !important; }`, { "data-ui5-icon-global": "" });
			}
		}

		static removeGlobalStyle() {
			if (!window.ShadyDOM) {
				return;
			}
			const styleElement = document.head.querySelector(`style[data-ui5-icon-global]`);
			if (styleElement) {
				document.head.removeChild(styleElement);
			}
		}

		async onBeforeRendering() {
			const name = this.name;
			if (!name) {
				/* eslint-disable-next-line */
				return console.warn("Icon name property is required", this);
			}
			let iconData = getIconDataSync(name);
			if (!iconData) {
				iconData = await getIconData(name);
			}

			if (iconData === ICON_NOT_FOUND$1) {
				this.invalid = true;
				/* eslint-disable-next-line */
				return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${name.replace("sap-icon://", "")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/Assets.js".`);
			}

			if (!iconData) {
				this.invalid = true;
				/* eslint-disable-next-line */
				return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`);
			}

			// in case a new valid name is set, show the icon
			this.invalid = false;
			this.pathData = iconData.pathData;
			this.accData = iconData.accData;
			this.ltr = iconData.ltr;
		}

		get hasIconTooltip() {
			return this.showTooltip && this.accessibleNameText;
		}

		get accessibleNameText() {
			if (this.accessibleName) {
				return this.accessibleName;
			}

			return this.i18nBundle.getText(this.accData) || undefined;
		}

		async onEnterDOM() {
			setTimeout(() => {
				this.constructor.removeGlobalStyle(); // remove the global style as Icon.css is already in place
			}, 0);
		}
	}

	Icon.define();

	const AVATAR_TOOLTIP = {key: "AVATAR_TOOLTIP", defaultText: "Avatar"};const BUSY_INDICATOR_TITLE = {key: "BUSY_INDICATOR_TITLE", defaultText: "Please wait"};const BUTTON_ARIA_TYPE_ACCEPT = {key: "BUTTON_ARIA_TYPE_ACCEPT", defaultText: "Positive Action"};const BUTTON_ARIA_TYPE_REJECT = {key: "BUTTON_ARIA_TYPE_REJECT", defaultText: "Negative Action"};const BUTTON_ARIA_TYPE_EMPHASIZED = {key: "BUTTON_ARIA_TYPE_EMPHASIZED", defaultText: "Emphasized"};const DATEPICKER_DATE_ACC_TEXT = {key: "DATEPICKER_DATE_ACC_TEXT", defaultText: "Date"};const DATEPICKER_OPEN_ICON_TITLE = {key: "DATEPICKER_OPEN_ICON_TITLE", defaultText: "Open Picker"};const DELETE = {key: "DELETE", defaultText: "Delete"};const INPUT_SUGGESTIONS = {key: "INPUT_SUGGESTIONS", defaultText: "Suggestions Available"};const INPUT_SUGGESTIONS_TITLE = {key: "INPUT_SUGGESTIONS_TITLE", defaultText: "Select"};const INPUT_SUGGESTIONS_ONE_HIT = {key: "INPUT_SUGGESTIONS_ONE_HIT", defaultText: "1 result available"};const INPUT_SUGGESTIONS_MORE_HITS = {key: "INPUT_SUGGESTIONS_MORE_HITS", defaultText: "{0} results are available"};const INPUT_SUGGESTIONS_NO_HIT = {key: "INPUT_SUGGESTIONS_NO_HIT", defaultText: "No results"};const ARIA_LABEL_LIST_ITEM_CHECKBOX = {key: "ARIA_LABEL_LIST_ITEM_CHECKBOX", defaultText: "Multiple Selection Mode"};const PANEL_ICON = {key: "PANEL_ICON", defaultText: "Expand/Collapse"};const TABCONTAINER_NEXT_ICON_ACC_NAME = {key: "TABCONTAINER_NEXT_ICON_ACC_NAME", defaultText: "Next"};const TABCONTAINER_PREVIOUS_ICON_ACC_NAME = {key: "TABCONTAINER_PREVIOUS_ICON_ACC_NAME", defaultText: "Previous"};const TABCONTAINER_OVERFLOW_MENU_TITLE = {key: "TABCONTAINER_OVERFLOW_MENU_TITLE", defaultText: "Overflow Menu"};const TIMEPICKER_HOURS_LABEL = {key: "TIMEPICKER_HOURS_LABEL", defaultText: "Hours"};const TIMEPICKER_MINUTES_LABEL = {key: "TIMEPICKER_MINUTES_LABEL", defaultText: "Minutes"};const TIMEPICKER_SECONDS_LABEL = {key: "TIMEPICKER_SECONDS_LABEL", defaultText: "Seconds"};const TIMEPICKER_SUBMIT_BUTTON = {key: "TIMEPICKER_SUBMIT_BUTTON", defaultText: "OK"};const TIMEPICKER_CANCEL_BUTTON = {key: "TIMEPICKER_CANCEL_BUTTON", defaultText: "Cancel"};const VALUE_STATE_ERROR = {key: "VALUE_STATE_ERROR", defaultText: "Invalid entry"};const VALUE_STATE_WARNING = {key: "VALUE_STATE_WARNING", defaultText: "Warning issued"};const VALUE_STATE_INFORMATION = {key: "VALUE_STATE_INFORMATION", defaultText: "Informative entry"};const VALUE_STATE_SUCCESS = {key: "VALUE_STATE_SUCCESS", defaultText: "Entry successfully validated"};const CALENDAR_HEADER_NEXT_BUTTON = {key: "CALENDAR_HEADER_NEXT_BUTTON", defaultText: "Next"};const CALENDAR_HEADER_PREVIOUS_BUTTON = {key: "CALENDAR_HEADER_PREVIOUS_BUTTON", defaultText: "Previous"};const DAY_PICKER_WEEK_NUMBER_TEXT = {key: "DAY_PICKER_WEEK_NUMBER_TEXT", defaultText: "Week Number"};const DAY_PICKER_NON_WORKING_DAY = {key: "DAY_PICKER_NON_WORKING_DAY", defaultText: "Non-Working Day"};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var buttonCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5_button_base_min_width);height:var(--_ui5_button_base_height);font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);text-shadow:var(--_ui5_button_text_shadow);border-radius:var(--_ui5_button_border_radius);border-width:.0625rem;cursor:pointer;background-color:var(--sapButton_Background);border:1px solid var(--sapButton_BorderColor);color:var(--sapButton_TextColor);box-sizing:border-box;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host([has-icon]) button[dir=rtl].ui5-button-root .ui5-button-text{margin-right:var(--_ui5_button_base_icon_margin);margin-left:0}:host([has-icon][icon-end]) button[dir=rtl].ui5-button-root .ui5-button-icon{margin-right:var(--_ui5_button_base_icon_margin);margin-left:0}.ui5-button-root{min-width:inherit;cursor:inherit;height:100%;width:100%;box-sizing:border-box;display:flex;justify-content:center;align-items:center;outline:none;padding:0 var(--_ui5_button_base_padding);position:relative;background:transparent;border:none;color:inherit;text-shadow:inherit;font:inherit;white-space:inherit;overflow:inherit;text-overflow:inherit;letter-spacing:inherit;word-spacing:inherit;line-height:inherit}:host(:not([active]):hover),:host(:not([hidden]).ui5_hovered){background:var(--sapButton_Hover_Background)}.ui5-button-icon{color:inherit;flex-shrink:0}:host([icon-end]) .ui5-button-root{flex-direction:row-reverse}:host([icon-end]) .ui5-button-icon{margin-left:var(--_ui5_button_base_icon_margin)}:host([icon-only]) .ui5-button-root{min-width:auto;padding:0}:host([icon-only]) .ui5-button-text{display:none}.ui5-button-text{outline:none;position:relative;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([has-icon]:not([icon-end])) .ui5-button-text{margin-left:var(--_ui5_button_base_icon_margin)}:host([has-icon][icon-end]) .ui5-button-text{margin-left:0}:host([disabled]){opacity:.5;pointer-events:none}:host([focused]){outline:var(--_ui5_button_outline);outline-offset:var(--_ui5_button_outline_offset)}.ui5-button-root::-moz-focus-inner{border:0}bdi{display:block;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([active]:not([disabled])){background-image:none;background-color:var(--sapButton_Active_Background);border-color:var(--_ui5_button_active_border_color);color:var(--sapButton_Active_TextColor);text-shadow:none}:host([active]){outline-color:var(--sapContent_ContrastFocusColor)}:host([design=Positive]){background-color:var(--sapButton_Accept_Background);border-color:var(--_ui5_button_positive_border_color);color:var(--sapButton_Accept_TextColor);text-shadow:var(--_ui5_button_text_shadow)}:host([design=Positive]:hover){background-color:var(--sapButton_Accept_Hover_Background);border-color:var(--_ui5_button_positive_border_hover_color)}:host([design=Positive][active]){background-color:var(--sapButton_Accept_Active_Background);border-color:var(--_ui5_button_positive_border_active_color);color:var(--sapButton_Active_TextColor);text-shadow:none}:host([design=Positive][focused]){outline-color:var(--_ui5_button_positive_border_focus_hover_color);border-color:var(--_ui5_button_positive_focus_border_color)}:host([design=Positive][active][focused]){outline-color:var(--sapContent_ContrastFocusColor)}:host([design=Negative]){background-color:var(--sapButton_Reject_Background);border-color:var(--sapButton_Reject_BorderColor);color:var(--sapButton_Reject_TextColor);text-shadow:var(--_ui5_button_text_shadow)}:host([design=Negative]:hover){background-color:var(--sapButton_Reject_Hover_Background);border-color:var(--sapButton_Reject_Hover_BorderColor)}:host([design=Negative][focused]){border-color:var(--_ui5_button_negative_focus_border_color);outline-color:var(--_ui5_button_positive_border_focus_hover_color)}:host([design=Negative][active]){background-color:var(--sapButton_Reject_Active_Background);border-color:var(--_ui5_button_negative_active_border_color);color:var(--sapButton_Active_TextColor);text-shadow:none}:host([design=Negative][active][focused]){outline-color:var(--sapContent_ContrastFocusColor)}:host([design=Emphasized]){background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor);color:var(--sapButton_Emphasized_TextColor);text-shadow:0 0 .125rem var(--sapButton_Emphasized_TextShadow);font-weight:var(--_ui5_button_emphasized_font_weight)}:host([design=Emphasized]:not([active]):hover){background-color:var(--sapButton_Emphasized_Hover_Background);border-color:var(--sapButton_Emphasized_Hover_BorderColor)}:host([design=Empasized][active]){background-color:var(--sapButton_Emphasized_Active_Background);border-color:var(--sapButton_Emphasized_Active_BorderColor);color:var(--sapButton_Active_TextColor);text-shadow:none}:host([design=Emphasized][focused]){outline-color:var(--sapContent_ContrastFocusColor);border-color:var(--_ui5_button_emphasized_focused_border_color)}:host([design=Transparent]){background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);text-shadow:var(--_ui5_button_text_shadow);border-color:var(--_ui5_button_transparent_border_color)}:host([design=Transparent]):hover{background-color:var(--sapButton_Lite_Hover_Background)}:host([design=Transparent][active]){background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor);text-shadow:none}:host([design=Transparent]:not([active]):hover){border-color:var(--_ui5_button_transparent_hover_border_color)}[ui5-button][focused]{outline:none}[ui5-button][focused] .ui5-button-root{position:relative}[ui5-button][focused] .ui5-button-root:after{content:\"\";position:absolute;border-width:1px;border-style:dotted;border-color:var(--_ui5_button_focus_color);top:var(--_ui5_button_focus_offset);bottom:var(--_ui5_button_focus_offset);left:var(--_ui5_button_focus_offset);right:var(--_ui5_button_focus_offset)}[ui5-button][active] .ui5-button-root:after{border-color:var(--sapContent_ContrastFocusColor)}[ui5-button][design=Positive][focused] .ui5-button-root:after{border-color:var(--_ui5_button_positive_border_focus_hover_color)}[ui5-button][design=Positive][active][focused] .ui5-button-root:after{border-color:var(--sapContent_ContrastFocusColor)}[ui5-button][design=Negative][focused] .ui5-button-root:after{border-color:var(--_ui5_button_positive_border_focus_hover_color)}[ui5-button][design=Negative][active][focused] .ui5-button-root:after{border-color:var(--sapContent_ContrastFocusColor)}[ui5-button][design=Emphasized][focused] .ui5-button-root:after{border-color:var(--sapContent_ContrastFocusColor)}[ui5-button] [ui5-icon].ui5-button-icon{height:var(--_ui5_button_icon_font_size);top:0}";

	let isGlobalHandlerAttached = false;
	let activeButton = null;

	/**
	 * @public
	 */
	const metadata$1 = {
		tag: "ui5-button",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.main.Button.prototype */ {

			/**
			 * Defines the <code>ui5-button</code> design.
			 * <br><br>
			 * <b>Note:</b> Available options are "Default", "Emphasized", "Positive",
			 * "Negative", and "Transparent".
			 *
			 * @type {ButtonDesign}
			 * @defaultvalue "Default"
			 * @public
			 */
			design: {
				type: ButtonDesign,
				defaultValue: ButtonDesign.Default,
			},

			/**
			 * Defines whether the <code>ui5-button</code> is disabled
			 * (default is set to <code>false</code>).
			 * A disabled <code>ui5-button</code> can't be pressed or
			 * focused, and it is not in the tab chain.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Defines the icon to be displayed as graphical element within the <code>ui5-button</code>.
			 * The SAP-icons font provides numerous options.
			 * <br><br>
			 * Example:
			 * <br>
			 * <pre>ui5-button icon="palette"</pre>
			 *
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines whether the icon should be displayed after the <code>ui5-button</code> text.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			iconEnd: {
				type: Boolean,
			},

			/**
			 * Defines the size of the icon inside the <code>ui5-button</code>.
			 *
			 * @type {string}
			 * @defaultvalue undefined
			 * @public
			 * @since 1.0.0-rc.8
			 */
			iconSize: {
				type: String,
				defaultValue: undefined,
			},

			/**
			 * When set to <code>true</code>, the <code>ui5-button</code> will
			 * automatically submit the nearest form element upon <code>press</code>.
			 * <br><br>
			 * <b>Important:</b> For the <code>submits</code> property to have effect, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			submits: {
				type: Boolean,
			},

			/**
			 * Defines the tooltip of the button.
			 * <br>
			 * <b>Important:</b> Tooltips should only be set to icon only buttons.
			 * @type {string}
			 * @defaultvalue: ""
			 * @private
			 * @since 1.0.0-rc.11
			 */
			title: {
				type: String,
			},

			/**
			 * Used to switch the active state (pressed or not) of the <code>ui5-button</code>.
			 * @private
			 */
			active: {
				type: Boolean,
			},

			/**
			 * Defines if a content has been added to the default slot
			 * @private
			 */
			iconOnly: {
				type: Boolean,
			},

			/**
			 * Indicates if the elements is on focus
			 * @private
			 */
			focused: {
				type: Boolean,
			},

			/**
			 * Indicates if the elements has a slotted icon
			 * @private
			 */
			hasIcon: {
				type: Boolean,
			},

			/**
			 * Defines the aria-label attribute for the button
			 * @type {String}
			 * @defaultvalue: ""
			 * @private
			 * @since 1.0.0-rc.7
			 */
			ariaLabel: {
				type: String,
				defaultValue: undefined,
			},

			/**
			 * Receives id(or many ids) of the elements that label the button
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.7
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			/**
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaExpanded: {
				type: String,
			},

			/**
			 * Indicates if the element if focusable
			 * @private
			 */
			nonFocusable: {
				type: Boolean,
			},

			_iconSettings: {
				type: Object,
			},

			_buttonAccInfo: {
				type: Object,
			},

			/**
			 * Defines the tabIndex of the component.
			 * @private
			 */
			_tabIndex: {
				type: String,
				defaultValue: "0",
				noAttribute: true,
			},
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.Button.prototype */ {
			/**
			 * Defines the text of the <code>ui5-button</code>.
			 * <br><br>
			 * <b>Note:</b> Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.Button.prototype */ {

			/**
			 * Fired when the <code>ui5-button</code> is activated either with a
			 * mouse/tap or by using the Enter or Space key.
			 * <br><br>
			 * <b>Note:</b> The event will not be fired if the <code>disabled</code>
			 * property is set to <code>true</code>.
			 *
			 * @event
			 * @public
			 */
			click: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-button</code> component represents a simple push button.
	 * It enables users to trigger actions by clicking or tapping the <code>ui5-button</code>, or by pressing
	 * certain keyboard keys, such as Enter.
	 *
	 *
	 * <h3>Usage</h3>
	 *
	 * For the <code>ui5-button</code> UI, you can define text, icon, or both. You can also specify
	 * whether the text or the icon is displayed first.
	 * <br><br>
	 * You can choose from a set of predefined types that offer different
	 * styling to correspond to the triggered action.
	 * <br><br>
	 * You can set the <code>ui5-button</code> as enabled or disabled. An enabled
	 * <code>ui5-button</code> can be pressed by clicking or tapping it. The button changes
	 * its style to provide visual feedback to the user that it is pressed or hovered over with
	 * the mouse cursor. A disabled <code>ui5-button</code> appears inactive and cannot be pressed.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Button";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Button
	 * @extends UI5Element
	 * @tagname ui5-button
	 * @public
	 */
	class Button extends UI5Element {
		static get metadata() {
			return metadata$1;
		}

		static get styles() {
			return buttonCss;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main;
		}

		static get dependencies() {
			return [Icon];
		}

		constructor() {
			super();

			this._deactivate = () => {
				if (activeButton) {
					activeButton.active = false;
				}
			};

			if (!isGlobalHandlerAttached) {
				document.addEventListener("mouseup", this._deactivate);

				isGlobalHandlerAttached = true;
			}

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			const FormSupport = getFeature("FormSupport");
			if (this.submits && !FormSupport) {
				console.warn(`In order for the "submits" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
			}

			this.iconOnly = this.isIconOnly;
			this.hasIcon = !!this.icon;
		}

		_onclick(event) {
			event.isMarked = "button";
			const FormSupport = getFeature("FormSupport");
			if (FormSupport) {
				FormSupport.triggerFormSubmit(this);
			}
		}

		_onmousedown(event) {
			event.isMarked = "button";
			this.active = true;
			activeButton = this; // eslint-disable-line
		}

		_onmouseup(event) {
			event.isMarked = "button";
		}

		_onkeydown(event) {
			event.isMarked = "button";

			if (isSpace(event) || isEnter(event)) {
				this.active = true;
			}
		}

		_onkeyup(event) {
			if (isSpace(event) || isEnter(event)) {
				this.active = false;
			}
		}

		_onfocusout(_event) {
			this.active = false;
			this.focused = false;
		}

		_onfocusin(event) {
			event.isMarked = "button";
			this.focused = true;
		}

		get hasButtonType() {
			return this.design !== ButtonDesign.Default && this.design !== ButtonDesign.Transparent;
		}

		get isIconOnly() {
			return !Array.from(this.childNodes).filter(node => node.nodeType !== Node.COMMENT_NODE).length;
		}

		get accInfo() {
			return {
				"ariaExpanded": this.ariaExpanded || (this._buttonAccInfo && this._buttonAccInfo.ariaExpanded),
				"ariaControls": this._buttonAccInfo && this._buttonAccInfo.ariaControls,
				"ariaHaspopup": this._buttonAccInfo && this._buttonAccInfo.ariaHaspopup,
				"title": this.title || (this._buttonAccInfo && this._buttonAccInfo.title),
			};
		}

		get ariaLabelText() {
			return getEffectiveAriaLabelText(this);
		}

		static typeTextMappings() {
			return {
				"Positive": BUTTON_ARIA_TYPE_ACCEPT,
				"Negative": BUTTON_ARIA_TYPE_REJECT,
				"Emphasized": BUTTON_ARIA_TYPE_EMPHASIZED,
			};
		}

		get buttonTypeText() {
			return this.i18nBundle.getText(Button.typeTextMappings()[this.design]);
		}

		get tabIndexValue() {
			const tabindex = this.getAttribute("tabindex");

			if (tabindex) {
				return tabindex;
			}

			return this.nonFocusable ? "-1" : this._tabIndex;
		}

		get showIconTooltip() {
			return this.iconOnly && !this.title;
		}

		get styles() {
			return {
				icon: {
					width: this.iconSize,
					height: this.iconSize,
				},
			};
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	Button.define();

	/**
	 * @lends sap.ui.webcomponents.main.types.SemanticColor.prototype
	 * @public
	 */
	const SemanticColors = {
		/**
		 * Default color (brand color)
		 * @public
		 * @type {Default}
		 */
		Default: "Default",

		/**
		 * Positive color
		 * @public
		 * @type {Positive}
		 */
		Positive: "Positive",

		/**
		 * Negative color
		 * @public
		 * @type {Negative}
		 */
		Negative: "Negative",

		/**
		 * Critical color
		 * @public
		 * @type {Critical}
		 */
		Critical: "Critical",

		/**
		 * Neutral color.
		 * @public
		 * @type {Neutral}
		 */
		Neutral: "Neutral",
	};

	/**
	 * @class
	 * Defines the semantic color
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.SemanticColor
	 * @public
	 * @enum {string}
	 */
	class SemanticColor extends DataType {
		static isValid(value) {
			return !!SemanticColors[value];
		}
	}

	SemanticColor.generateTypeAccessors(SemanticColors);

	/**
	 * @lends sap.ui.webcomponents.main.types.TabLayout.prototype
	 * @public
	 */
	const TabLayouts = {
		/**
		 * Inline type, the tab <code>main text</code> and <code>additionalText</code> are displayed horizotally.
		 * @public
		 * @type {Inline}
		 */
		Inline: "Inline",

		/**
		 * Standard type, the tab <code>main text</code> and <code>additionalText</code> are displayed vertically.
		 * @public
		 * @type {Standard}
		 */
		Standard: "Standard",
	};

	/**
	 * @class
	 * Different types of Tab layouts.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.TabLayout
	 * @public
	 * @enum {string}
	 */
	class TabLayout extends DataType {
		static isValid(value) {
			return !!TabLayouts[value];
		}
	}

	TabLayout.generateTypeAccessors(TabLayouts);

	class NativeResize {
		static initialize() {
			NativeResize.resizeObserver = new window.ResizeObserver(entries => {
				// call attached callbacks
				entries.forEach(entry => {
					const callbacks = NativeResize.observedObjects.get(entry.target);

					callbacks.forEach(el => el());
				});
			});

			NativeResize.observedObjects = new Map();
		}

		static attachListener(ref, callback) {
			const observedDOMs = NativeResize.observedObjects;
			const callbacks = observedDOMs.get(ref) || [];

			// if no callbacks has been added for this ref - start observing it
			if (!callbacks.length) {
				NativeResize.resizeObserver.observe(ref);
			}

			// save the callbacks in an array
			observedDOMs.set(ref, [...callbacks, callback]);
		}

		static detachListener(ref, callback) {
			const callbacks = NativeResize.observedObjects.get(ref) || [];
			const filteredCallbacks = callbacks.filter(fn => fn !== callback);

			if (!callbacks.length || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {
				return;
			}

			NativeResize.observedObjects.set(ref, filteredCallbacks);

			if (!filteredCallbacks.length) {
				NativeResize.resizeObserver.unobserve(ref);
				NativeResize.observedObjects.delete(ref);
			}
		}
	}

	const INTERVAL = 300;

	class CustomResize {
		static initialize() {
			CustomResize.initialized = false;
			CustomResize.resizeInterval = undefined;
			CustomResize.resizeListeners = new Map();
		}

		static attachListener(ref, callback) {
			const observedObject = CustomResize.resizeListeners.get(ref);
			const existingCallbacks = observedObject ? observedObject.callbacks : [];

			CustomResize.resizeListeners.set(ref, {
				width: ref ? ref.offsetWidth : 0,
				height: ref ? ref.offsetHeight : 0,
				callbacks: existingCallbacks.concat(callback),
			});

			CustomResize.initListener();
		}

		static initListener() {
			if (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {
				CustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);
			}
		}

		static checkListeners() {
			CustomResize.resizeListeners.forEach((entry, ref) => {
				const changed = CustomResize.checkSizes(entry, ref);

				if (changed || (entry && !entry._hasBeenRendered)) {
					CustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);
					entry.callbacks.forEach(el => el());
					entry._hasBeenRendered = true;
				}
			});
		}

		static updateSizes(sizes, newWidth, newHeight) {
			sizes.width = newWidth;
			sizes.height = newHeight;
		}

		static checkSizes(entry, ref) {
			const oldHeight = entry.height;
			const oldWidth = entry.width;
			const newHeight = ref.offsetHeight;
			const newWidth = ref.offsetWidth;

			return ((oldHeight !== newHeight) || oldWidth !== newWidth);
		}

		static detachListener(ref, callback) {
			const listenerObject = CustomResize.resizeListeners.get(ref);
			const callbacks = listenerObject ? listenerObject.callbacks : [];
			const filteredCallbacks = callbacks.filter(fn => fn !== callback);

			if (!listenerObject || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {
				return;
			}

			CustomResize.resizeListeners.set(ref, Object.assign(listenerObject, { callbacks: filteredCallbacks }));

			if (!filteredCallbacks.length) {
				listenerObject.callbacks = null;
				CustomResize.resizeListeners.delete(ref);
			}

			if (CustomResize.resizeListeners.size === 0) {
				CustomResize.initialized = false;
				clearInterval(CustomResize.resizeInterval);
			}
		}
	}

	class ResizeHandler {
		static initialize() {
			ResizeHandler.Implementation = window.ResizeObserver ? NativeResize : CustomResize;
			ResizeHandler.Implementation.initialize();
		}

		/**
		 * @static
		 * @private
		 * @param {*} ref Reference to be observed
		 * @param {*} callback Callback to be executed
		 * @memberof ResizeHandler
		 */
		static attachListener(ref, callback) {
			ResizeHandler.Implementation.attachListener.call(ResizeHandler.Implementation, ref, callback);
		}

		/**
		 * @static
		 * @private
		 * @param {*} ref Reference to be unobserved
		 * @memberof ResizeHandler
		 */
		static detachListener(ref, callback) {
			ResizeHandler.Implementation.detachListener.call(ResizeHandler.Implementation, ref, callback);
		}


		/**
		 * @static
		 * @public
		 * @param {*} ref Reference to a UI5 Web Component or DOM Element to be observed
		 * @param {*} callback Callback to be executed
		 * @memberof ResizeHandler
		 */
		static register(ref, callback) {
			if (ref.isUI5Element) {
				ref = ref.getDomRef();
			}

			ResizeHandler.attachListener(ref, callback);
		}


		/**
		 * @static
		 * @public
		 * @param {*} ref Reference to UI5 Web Component or DOM Element to be unobserved
		 * @memberof ResizeHandler
		 */
		static deregister(ref, callback) {
			if (ref.isUI5Element) {
				ref = ref.getDomRef();
			}

			ResizeHandler.detachListener(ref, callback);
		}
	}

	ResizeHandler.initialize();

	/**
	 * Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events
	 * like media queries, orientation change or resizing.
	 *
	 * This API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap
	 * dynamically depending on the capabilities of the browser or device.
	 *
	 * @namespace
	 * @name Device
	 */

	const Device = {};

	//* ******* OS Detection ********

	/**
	 * Contains information about the operating system of the Device.
	 * @name Device.os
	 */

	/**
	 * Enumeration containing the names of known operating systems.
	 * @name Device.os.OS
	 */

	/**
	 * The name of the operating system.
	 * @name Device.os.name
	 * @type String
	 */

	/**
	 * The version of the operating system as <code>string</code>. Might be empty if no version can be determined.
	 * @name Device.os.versionStr
	 * @type String
	 */

	/**
	 * The version of the operating system as <code>float</code>. Might be <code>-1</code> if no version can be determined.
	 * @name Device.os.version
	 * @type float
	 */

	/**
	 * If this flag is set to <code>true</code>, a Windows operating system is used.
	 * @name Device.os.windows
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, a Mac operating system is used.
	 * @name Device.os.macintosh
	 * @type boolean
	 */

	/*
	 * If this flag is set to <code>true</code>, an iOS operating system is used.
	 * @name Device.os.ios
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, an Android operating system is used.
	 * @name Device.os.android
	 * @type boolean
	 */

	/*
	 * Windows operating system name.
	 * @see Device.os.name
	 * @name Device.os.OS.WINDOWS
	 */

	/**
	 * MAC operating system name.
	 * @see Device.os.name
	 * @name Device.os.OS.MACINTOSH
	 */

	/**
	 * iOS operating system name.
	 * @see Device.os.name
	 * @name Device.os.OS.IOS
	 */

	/**
	 * Android operating system name.
	 * @see Device.os.name
	 * @name Device.os.OS.ANDROID
	 */

	const OS = {
		"WINDOWS": "win",
		"MACINTOSH": "mac",
		"IOS": "iOS",
		"ANDROID": "Android",
	};

	const _getMobileOS = () => {
		const userAgent = navigator.userAgent;

		let rPlatform, // regular expression for platform
			aMatches;

		// iOS, Android
		rPlatform = /\(([a-zA-Z ]+);\s(?:[U]?[;]?)([\D]+)((?:[\d._]*))(?:.*[)][^\d]*)([\d.]*)\s/;
		aMatches = userAgent.match(rPlatform);

		if (aMatches) {
			const rAppleDevices = /iPhone|iPad|iPod/;

			if (aMatches[0].match(rAppleDevices)) {
				aMatches[3] = aMatches[3].replace(/_/g, ".");

				return ({
					"name": OS.IOS,
					"versionStr": aMatches[3],
				});
			}

			if (aMatches[2].match(/Android/)) {
				aMatches[2] = aMatches[2].replace(/\s/g, "");
				return ({
					"name": OS.ANDROID,
					"versionStr": aMatches[3],
				});
			}
		}

		// Firefox on Android
		rPlatform = /\((Android)[\s]?([\d][.\d]*)?;.*Firefox\/[\d][.\d]*/;
		aMatches = userAgent.match(rPlatform);
		if (aMatches) {
			return ({
				"name": OS.ANDROID,
				"versionStr": aMatches.length === 3 ? aMatches[2] : "",
			});
		}
	};

	const _getDesktopOS = () => {
		const sPlatform = navigator.platform;
		if (sPlatform.indexOf("Win") !== -1) {
			const rVersion = /Windows NT (\d+).(\d)/i; // userAgent since windows 10: Windows NT 10[...]
			const uaResult = navigator.userAgent.match(rVersion);

			return {
				"name": OS.WINDOWS,
				"versionStr": (uaResult && uaResult[1]) || "",
			};
		}

		if (sPlatform.indexOf("Mac") !== -1) {
			return {
				"name": OS.MACINTOSH,
				"versionStr": "",
			};
		}

		return null;
	};

	const _getOS = () => {
		return _getMobileOS() || _getDesktopOS();
	};

	const _setOS = () => {
		if (Device.os) {
			return;
		}

		Device.os = _getOS() || {};
		Device.os.OS = OS;
		Device.os.version = Device.os.versionStr ? parseFloat(Device.os.versionStr) : -1;

		if (Device.os.name) {
			Object.keys(OS).forEach(name => {
				if (OS[name] === Device.os.name) {
					Device.os[name.toLowerCase()] = true;
				}
			});
		}
	};

	//* ******* Browser Detection ********

	/**
	 * Contains information about the used browser.
	 * @name Device.browser
	 */

	/**
	 * Enumeration containing the names of known browsers.
	 * @name Device.browser.BROWSER
	 *
	 * The name of the browser.
	 * @name Device.browser.name
	 * @type String
	 */

	/**
	 * The version of the browser as <code>string</code>. Might be empty if no version can be determined.
	 * @name Device.browser.versionStr
	 * @type String
	 */

	/**
	 * The version of the browser as <code>float</code>. Might be <code>-1</code> if no version can be determined.
	 * @name Device.browser.version
	 * @type float
	 */

	/**
	 * If this flag is set to <code>true</code>, the mobile variant of the browser is used or
	 * a tablet or phone device is detected. This information might not be available for all browsers.
	 * @name Device.browser.mobile
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used.
	 * @name Device.browser.internet_explorer
	 * @type boolean
	 * @deprecated since 1.20, use {@link Device.browser.msie} instead.
	 */

	/**
	 * If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used.
	 * @name Device.browser.msie
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Microsoft Edge browser is used.
	 * @name Device.browser.edge
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Mozilla Firefox browser is used.
	 * @name Device.browser.firefox
	 */

	/**
	 * If this flag is set to <code>true</code>, the Google Chrome browser is used.
	 * @name Device.browser.chrome
	 * @type boolean
	 *
	 * If this flag is set to <code>true</code>, the Apple Safari browser is used.
	 *
	 * <b>Note:</b>
	 * This flag is also <code>true</code> when the standalone (fullscreen) mode or webview is used on iOS devices.
	 * Please also note the flags {@link Device.browser.fullscreen} and {@link Device.browser.webview}.
	 *
	 * @name Device.browser.safari
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, a browser featuring a Webkit engine is used.
	 *
	 * <b>Note:</b>
	 * This flag is also <code>true</code> when the used browser was based on the Webkit engine, but
	 * uses another rendering engine in the meantime. For example the Chrome browser started from version 28 and above
	 * uses the Blink rendering engine.
	 *
	 * @name Device.browser.webkit
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Safari browser runs in standalone fullscreen mode on iOS.
	 *
	 * <b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,
	 * technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.
	 * the availability of {@link Device.browser.version}.
	 *
	 * @name Device.browser.fullscreen
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Safari browser runs in webview mode on iOS.
	 *
	 * <b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,
	 * technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.
	 * the availability of {@link Device.browser.version}.
	 *
	 * @name Device.browser.webview
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the Phantom JS browser is used.
	 * @name Device.browser.phantomJS
	 * @type boolean
	 */

	/**
	 * The version of the used Webkit engine, if available.
	 * @name Device.browser.webkitVersion
	 * @type String
	 */

	/**
	 * If this flag is set to <code>true</code>, a browser featuring a Mozilla engine is used.
	 * @name Device.browser.mozilla
	 * @type boolean
	 */

	/**
	 * Internet Explorer browser name.
	 * @name Device.browser.BROWSER.INTERNET_EXPLORER
	 */

	/**
	 * Edge browser name.
	 * @name Device.browser.BROWSER.EDGE
	 */

	/**
	 * Firefox browser name.
	 * @name Device.browser.BROWSER.FIREFOX
	 */

	/**
	 * Chrome browser name.
	 * @name Device.browser.BROWSER.CHROME
	 */

	/**
	 * Safari browser name.
	 * @name Device.browser.BROWSER.SAFARI
	 */

	/**
	 * Android stock browser name.
	 * @name Device.browser.BROWSER.ANDROID
	 */

	const BROWSER = {
		"INTERNET_EXPLORER": "ie",
		"EDGE": "ed",
		"FIREFOX": "ff",
		"CHROME": "cr",
		"SAFARI": "sf",
		"ANDROID": "an",
	};

	/*!
	* Taken from jQuery JavaScript Library v1.7.1
	* http://jquery.com/
	*
	* Copyright 2011, John Resig
	* Dual licensed under the MIT or GPL Version 2 licenses.
	* http://jquery.org/license
	*
	* Includes Sizzle.js
	* http://sizzlejs.com/
	* Copyright 2011, The Dojo Foundation
	* Released under the MIT, BSD, and GPL Licenses.
	*
	* Date: Mon Nov 21 21:11:03 2011 -0500
	*/
	const _calcBrowser = () => {
		const sUserAgent = navigator.userAgent.toLowerCase();

		const rwebkit = /(webkit)[ /]([\w.]+)/;
		const rmsie = /(msie) ([\w.]+)/;
		const rmsie11 = /(trident)\/[\w.]+;.*rv:([\w.]+)/;
		const redge = /(edge)[ /]([\w.]+)/;
		const rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/;

		// WinPhone IE11 and MS Edge userAgents contain "WebKit" and "Mozilla" and therefore must be checked first
		const browserMatch = redge.exec(sUserAgent)
			|| rmsie11.exec(sUserAgent)
			|| rwebkit.exec(sUserAgent)
			|| rmsie.exec(sUserAgent)
			|| (sUserAgent.indexOf("compatible") < 0 && rmozilla.exec(sUserAgent)) || [];

		const oRes = {
			browser: browserMatch[1] || "",
			version: browserMatch[2] || "0",
		};
		oRes[oRes.browser] = true;
		return oRes;
	};

	const _getBrowser = () => {
		const oBrowser = _calcBrowser();
		const sUserAgent = navigator.userAgent;
		const oNavigator = window.navigator;

		// jQuery checks for user agent strings. We differentiate between browsers
		let oExpMobile;
		let oResult;
		let fVersion;

		// Mozilla
		if (oBrowser.mozilla) {
			oExpMobile = /Mobile/;
			if (sUserAgent.match(/Firefox\/(\d+\.\d+)/)) {
				fVersion = parseFloat(RegExp.$1);
				oResult = {
					name: BROWSER.FIREFOX,
					versionStr: `${fVersion}`,
					version: fVersion,
					mozilla: true,
					mobile: oExpMobile.test(sUserAgent),
				};
			} else {
				// unknown mozilla browser
				oResult = {
					mobile: oExpMobile.test(sUserAgent),
					mozilla: true,
					version: -1,
				};
			}
		} else if (oBrowser.webkit) {
			// webkit version is needed for calculation if the mobile android device is a tablet (calculation of other mobile devices work without)
			const regExpWebkitVersion = sUserAgent.toLowerCase().match(/webkit[/]([\d.]+)/);
			let webkitVersion;
			if (regExpWebkitVersion) {
				webkitVersion = regExpWebkitVersion[1];
			}
			oExpMobile = /Mobile/;
			const aChromeMatch = sUserAgent.match(/(Chrome|CriOS)\/(\d+\.\d+).\d+/);
			const aFirefoxMatch = sUserAgent.match(/FxiOS\/(\d+\.\d+)/);
			const aAndroidMatch = sUserAgent.match(/Android .+ Version\/(\d+\.\d+)/);

			if (aChromeMatch || aFirefoxMatch || aAndroidMatch) {
				let sName,
					sVersion,
					bMobile;

				if (aChromeMatch) {
					sName = BROWSER.CHROME;
					bMobile = oExpMobile.test(sUserAgent);
					sVersion = parseFloat(aChromeMatch[2]);
				} else if (aFirefoxMatch) {
					sName = BROWSER.FIREFOX;
					bMobile = true;
					sVersion = parseFloat(aFirefoxMatch[1]);
				} else if (aAndroidMatch) {
					sName = BROWSER.ANDROID;
					bMobile = oExpMobile.test(sUserAgent);
					sVersion = parseFloat(aAndroidMatch[1]);
				}

				oResult = {
					name: sName,
					mobile: bMobile,
					versionStr: `${sVersion}`,
					version: sVersion,
					webkit: true,
					webkitVersion,
				};
			} else { // Safari might have an issue with sUserAgent.match(...); thus changing
				const oExp = /(Version|PhantomJS)\/(\d+\.\d+).*Safari/;
				const bStandalone = oNavigator.standalone;
				if (oExp.test(sUserAgent)) {
					const aParts = oExp.exec(sUserAgent);
					fVersion = parseFloat(aParts[2]);
					oResult = {
						name: BROWSER.SAFARI,
						versionStr: `${fVersion}`,
						fullscreen: false,
						webview: false,
						version: fVersion,
						mobile: oExpMobile.test(sUserAgent),
						webkit: true,
						webkitVersion,
						phantomJS: aParts[1] === "PhantomJS",
					};
				} else if (/iPhone|iPad|iPod/.test(sUserAgent) && !(/CriOS/.test(sUserAgent)) && !(/FxiOS/.test(sUserAgent)) && (bStandalone === true || bStandalone === false)) {
					// WebView or Standalone mode on iOS
					oResult = {
						name: BROWSER.SAFARI,
						version: -1,
						fullscreen: bStandalone,
						webview: !bStandalone,
						mobile: oExpMobile.test(sUserAgent),
						webkit: true,
						webkitVersion,
					};
				} else { // other webkit based browser
					oResult = {
						mobile: oExpMobile.test(sUserAgent),
						webkit: true,
						webkitVersion,
						version: -1,
					};
				}
			}
		} else if (oBrowser.msie || oBrowser.trident) {
			fVersion = parseFloat(oBrowser.version);

			oResult = {
				name: BROWSER.INTERNET_EXPLORER,
				versionStr: `${fVersion}`,
				version: fVersion,
				msie: true,
				mobile: false,
			};
		} else if (oBrowser.edge) {
			fVersion = parseFloat(oBrowser.version);
			oResult = {
				name: BROWSER.EDGE,
				versionStr: `${fVersion}`,
				version: fVersion,
				edge: true,
			};
		} else {
			oResult = {
				name: "",
				versionStr: "",
				version: -1,
				mobile: false,
			};
		}

		return oResult;
	};

	const _setBrowser = () => {
		Device.browser = _getBrowser();
		Device.browser.BROWSER = BROWSER;

		if (Device.browser.name) {
			Object.keys(BROWSER).forEach(b => {
				if (BROWSER[b] === Device.browser.name) {
					Device.browser[b.toLowerCase()] = true;
				}
			});
		}
	};

	const isIE = () => {
		if (!Device.browser) {
			_setBrowser();
		}
		return !!Device.browser.msie;
	};

	const isSafari = () => {
		if (!Device.browser) {
			_setBrowser();
		}
		return !!Device.browser.safari;
	};

	//* ******* Support Detection ********

	const _setSupport = () => {
		if (Device.support) {
			return;
		}

		if (!Device.browser) {
			_setBrowser();
		}

		Device.support = {};
		Device.support.touch = !!(("ontouchstart" in window) || (navigator.maxTouchPoints > 0) || (window.DocumentTouch && document instanceof window.DocumentTouch));
	};

	const supportTouch = () => {
		if (!Device.support) {
			_setSupport();
		}

		return !!Device.support.touch;
	};

	//* ******* System Detection ********

	/**
	 * Provides a basic categorization of the used device based on various indicators.
	 *
	 * <b>Note:</b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true</code>.
	 *
	 * @namespace
	 * @name Device.system
	 */

	/**
	 * If this flag is set to <code>true</code>, the device is recognized as a tablet.
	 *
	 * <b>Note:</b> This flag is also true for some browsers on desktop devices running on Windows 8 or higher.
	 * Also see the documentation for {@link Device.system.combi} devices.
	 * You can use the following logic to ensure that the current device is a tablet device:
	 *
	 * <pre>
	 * if(Device.system.tablet && !Device.system.desktop){
	 *	...tablet related commands...
	 * }
	 * </pre>
	 *
	 * @name Device.system.tablet
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the device is recognized as a phone.
	 *
	 * @name Device.system.phone
	 * @type boolean
	 */

	/**
	 * If this flag is set to <code>true</code>, the device is recognized as a desktop system.
	 *
	 * @name Device.system.desktop
	 * @type boolean
	 */

	/**
	 * Indicates if the device is recognized as a combination of a desktop system and tablet.
	 *
	 * <b>Note:</b> This property is mainly for Microsoft Windows 8 (and following) devices where the mouse and touch event may be supported
	 * natively by the browser being used. This property is set to <code>true</code> only when both mouse and touch event are natively supported.
	 *
	 * @name Device.system.combi
	 * @type boolean
	 */

	/**
	 * @name Device.system.SYSTEMTYPE
	 * Enumeration containing the names of known types of the devices.
	 */

	const SYSTEMTYPE = {
		"TABLET": "tablet",
		"PHONE": "phone",
		"DESKTOP": "desktop",
		"COMBI": "combi",
	};

	const _isTablet = () => {
		const sUserAgent = navigator.userAgent;
		if (Device.os.name === Device.os.OS.IOS) {
			return /ipad/i.test(sUserAgent);
		}
		// in real mobile device
		if (supportTouch()) {
			if (Device.os.windows && Device.os.version >= 8) {
				return true;
			}

			if (Device.browser.chrome && Device.os.android && Device.os.version >= 4.4) {
				// From Android version 4.4, WebView also uses Chrome as Kernel.
				// We can use the user agent pattern defined in Chrome to do phone/tablet detection
				// According to the information here: https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent,
				//  the existence of "Mobile" indicates it's a phone. But because the crosswalk framework which is used in Fiori Client
				//  inserts another "Mobile" to the user agent for both tablet and phone, we need to check whether "Mobile Safari/<Webkit Rev>" exists.
				return !/Mobile Safari\/[.0-9]+/.test(sUserAgent);
			}
			let densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices
			// On Android sometimes window.screen.width returns the logical CSS pixels, sometimes the physical device pixels;
			// Tests on multiple devices suggest this depends on the Webkit version.
			// The Webkit patch which changed the behavior was done here: https://bugs.webkit.org/show_bug.cgi?id=106460
			// Chrome 27 with Webkit 537.36 returns the logical pixels,
			// Chrome 18 with Webkit 535.19 returns the physical pixels.
			// The BlackBerry 10 browser with Webkit 537.10+ returns the physical pixels.
			// So it appears like somewhere above Webkit 537.10 we do not hve to divide by the devicePixelRatio anymore.
			if (Device.os.android && Device.browser.webkit && (parseFloat(Device.browser.webkitVersion) > 537.10)) {
				densityFactor = 1;
			}

			// this is how android distinguishes between tablet and phone
			// http://android-developers.blogspot.de/2011/07/new-tools-for-managing-screen-sizes.html
			const bTablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);

			// special workaround for Nexus 7 where the window.screen.width is 600px or 601px in portrait mode (=> tablet)
			// but window.screen.height 552px in landscape mode (=> phone), because the browser UI takes some space on top.
			// So the detected device type depends on the orientation :-(
			// actually this is a Chrome bug, as "width"/"height" should return the entire screen's dimensions and
			// "availWidth"/"availHeight" should return the size available after subtracting the browser UI

			/*
					if (isLandscape() &&
						(window.screen.height === 552 || window.screen.height === 553) // old/new Nexus 7
						&&
						(/Nexus 7/i.test(sUserAgent))) {
						bTablet = true;
					}
					*/

			return bTablet;
		}
		// This simple android phone detection can be used here because this is the mobile emulation mode in desktop browser
		const bAndroidPhone = (/(?=android)(?=.*mobile)/i.test(sUserAgent));
		// in desktop browser, it's detected as tablet when
		// 1. Windows 8 device with a touch screen where "Touch" is contained in the userAgent
		// 2. Android emulation and it's not an Android phone
		return (Device.browser.msie && sUserAgent.indexOf("Touch") !== -1) || (Device.os.android && !bAndroidPhone);
	};

	const _getSystem = () => {
		const bTabletDetected = _isTablet();
		const isWin8Upwards = Device.os.windows && Device.os.version >= 8;

		const oSystem = {};
		oSystem.tablet = !!((Device.support.touch || isWin8Upwards) && bTabletDetected);
		oSystem.phone = !!((Device.os.windows_phone || (Device.support.touch)) && !bTabletDetected);
		oSystem.desktop = !!((!oSystem.tablet && !oSystem.phone) || isWin8Upwards);
		oSystem.combi = oSystem.desktop && oSystem.tablet;
		oSystem.SYSTEMTYPE = SYSTEMTYPE;

		return oSystem;
	};

	const _setSystem = () => {
		_setSupport();
		_setOS();

		Device.system = {};
		Device.system = _getSystem();
		if (Device.system.tablet || Device.system.phone) {
			Device.browser.mobile = true;
		}
	};

	const isDesktop = () => {
		if (!Device.system) {
			_setSystem();
		}

		return Device.system.desktop;
	};

	const isPhone = () => {
		if (!Device.system) {
			_setSystem();
		}

		return Device.system.phone;
	};

	const tasks = new WeakMap();

	class AnimationQueue {
		static get tasks() {
			return tasks;
		}

		static enqueue(element, task) {
			if (!tasks.has(element)) {
				tasks.set(element, []);
			}

			tasks.get(element).push(task);
		}

		static run(element, task) {
			if (!tasks.has(element)) {
				tasks.set(element, []);
			}

			return task().then(() => {
				const elementTasks = tasks.get(element);

				if (elementTasks.length > 0) {
					return AnimationQueue.run(element, elementTasks.shift());
				}
				tasks.delete(element);
			});
		}

		static push(element, task) {
			const elementTasks = tasks.get(element);

			if (elementTasks) {
				AnimationQueue.enqueue(element, task);
			} else {
				AnimationQueue.run(element, task);
			}
		}
	}

	var animationConfig = {
		defaultDuration: 400,
		element: document.createElement("DIV"),
		identity: () => {},
	};

	var animate = ({
		beforeStart = animationConfig.identity,
		duration = animationConfig.defaultDuration,
		element = animationConfig.element,
		progress: progressCallback = animationConfig.identity,
	}) => {
		let start = null;
		let stopped = false;
		let animationFrame;
		let stop;
		let animate;

		const promise = new Promise((resolve, reject) => {
			animate = timestamp => {
				start = start || timestamp;

				const timeElapsed = timestamp - start;
				const remaining = duration - timeElapsed;

				if (timeElapsed <= duration) {
					const progress = 1 - remaining / duration; // easing formula (currently linear)
					progressCallback(progress);
					animationFrame = !stopped && requestAnimationFrame(animate);
				} else {
					progressCallback(1);
					resolve();
				}
			};

			stop = () => {
				stopped = true;
				cancelAnimationFrame(animationFrame);
				reject(new Error("animation stopped"));
			};
		}).catch(oReason => oReason);

		AnimationQueue.push(element, () => {
			beforeStart();
			requestAnimationFrame(animate);

			return new Promise(resolve => {
				promise.then(() => resolve());
			});
		});

		return {
			promise: () => promise,
			stop: () => stop,
		};
	};

	var scroll = ({
		element = animationConfig.element,
		duration = animationConfig.duration,
		progress: progressCallback = animationConfig.identity,
		dx = 0,
		dy = 0,
	}) => {
		let scrollLeft;
		let scrollTop;

		return animate({
			beforeStart: () => {
				scrollLeft = element.scrollLeft;
				scrollTop = element.scrollTop;
			},
			duration,
			element,
			progress: progress => {
				progressCallback(progress);

				element.scrollLeft = scrollLeft + (progress * dx); // easing - linear
				element.scrollTop = scrollTop + (progress * dy); // easing - linear
			},
		});
	};

	const scrollEventName = "scroll";
	const touchEndEventName = isPhone() ? "touchend" : "mouseup";

	class ScrollEnablement extends EventProvider {
		constructor(containerComponent) {
			super();
			this.containerComponent = containerComponent;
			this.mouseMove = this.ontouchmove.bind(this);
			this.mouseUp = this.ontouchend.bind(this);
			this.touchStart = this.ontouchstart.bind(this);

			this.isPhone = isPhone();

			// On Android devices touchmove is thrown one more time than neccessary (together with touchend)
			// so we have to cache the previus coordinates in order to provide correct parameters in the
			// event for Android
			this.cachedValue = {};

			// In components like Carousel you need to know if the user has clicked on something or swiped
			// in order to throw the needed event or not
			this.startX = 0;
			this.startY = 0;

			if (this.isPhone) {
				containerComponent.addEventListener("touchstart", this.touchStart, { passive: true });
				containerComponent.addEventListener("touchmove", this.mouseMove, { passive: true });
				containerComponent.addEventListener("touchend", this.mouseUp, { passive: true });
			} else {
				containerComponent.addEventListener("mousedown", this.touchStart, { passive: true });
			}
		}

		set scrollContainer(container) {
			this._container = container;
		}

		get scrollContainer() {
			return this._container;
		}

		scrollTo(left, top) {
			this._container.scrollLeft = left;
			this._container.scrollTop = top;
		}

		move(dx, dy) {
			return scroll({
				element: this._container,
				dx,
				dy,
			});
		}

		getScrollLeft() {
			return this._container.scrollLeft;
		}

		getScrollTop() {
			return this._container.scrollTop;
		}

		_isTouchInside(touch) {
			const rect = this._container.getBoundingClientRect();
			const x = this.isPhone ? touch.clientX : touch.x;
			const y = this.isPhone ? touch.clientY : touch.y;

			return x >= rect.left && x <= rect.right
				&& y >= rect.top && y <= rect.bottom;
		}

		ontouchstart(event) {
			const touch = this.isPhone ? event.touches[0] : null;

			if (!this.isPhone) {
				document.addEventListener("mouseup", this.mouseUp, { passive: true });
				document.addEventListener("mousemove", this.mouseMove, { passive: true });
			} else {
				// Needed only on mobile
				this.startX = touch.pageX;
				this.startY = touch.pageY;
			}

			this._prevDragX = this.isPhone ? touch.pageX : event.x;
			this._prevDragY = this.isPhone ? touch.pageY : event.y;

			this._canScroll = this._isTouchInside(this.isPhone ? touch : event);
		}

		ontouchmove(event) {
			if (!this._canScroll) {
				return;
			}

			const container = this._container;
			const touch = this.isPhone ? event.touches[0] : null;

			const dragX = this.isPhone ? touch.pageX : event.x;
			const dragY = this.isPhone ? touch.pageY : event.y;

			container.scrollLeft += this._prevDragX - dragX;
			container.scrollTop += this._prevDragY - dragY;

			this.fireEvent(scrollEventName, {
				isLeft: dragX > this._prevDragX,
				isRight: dragX < this._prevDragX,
			});

			this.cachedValue.dragX = this._prevDragX;
			this.cachedValue.dragY = this._prevDragY;

			this._prevDragX = dragX;
			this._prevDragY = dragY;
		}

		ontouchend(event) {
			if (this.isPhone) {
				const deltaX = Math.abs(event.changedTouches[0].pageX - this.startX);
				const deltaY = Math.abs(event.changedTouches[0].pageY - this.startY);

				if (deltaX < 10 && deltaY < 10) {
					return;
				}
			}

			if (!this._canScroll) {
				return;
			}

			const container = this._container;
			const dragX = this.isPhone ? event.changedTouches[0].pageX : event.x;
			const dragY = this.isPhone ? event.changedTouches[0].pageY : event.y;

			container.scrollLeft += this._prevDragX - dragX;
			container.scrollTop += this._prevDragY - dragY;

			const useCachedValues = dragX === this._prevDragX;
			const _dragX = useCachedValues ? this.cachedValue.dragX : dragX;
			// const _dragY = useCachedValues ? this.cachedValue.dragY : dragY; add if needed

			this.fireEvent(touchEndEventName, {
				isLeft: _dragX < this._prevDragX,
				isRight: _dragX > this._prevDragX,
			});

			this._prevDragX = dragX;
			this._prevDragY = dragY;

			if (!this.isPhone) {
				document.removeEventListener("mousemove", this.mouseMove, { passive: true });
				document.removeEventListener("mouseup", this.mouseUp);
			}
		}
	}

	var slideDown = ({
		element = animationConfig.element,
		duration = animationConfig.defaultDuration,
		progress: progressCallback = animationConfig.identity,
	}) => {
		let computedStyles,
			paddingTop,
			paddingBottom,
			marginTop,
			marginBottom,
			height;
		let storedOverflow,
			storedPaddingTop,
			storedPaddingBottom,
			storedMarginTop,
			storedMarginBottom,
			storedHeight;

		const animation = animate({
			beforeStart: () => {
				// Show the element to measure its properties
				element.style.display = "block";

				// Get Computed styles
				computedStyles = getComputedStyle(element);
				paddingTop = parseFloat(computedStyles.paddingTop);
				paddingBottom = parseFloat(computedStyles.paddingBottom);
				marginTop = parseFloat(computedStyles.marginTop);
				marginBottom = parseFloat(computedStyles.marginBottom);
				height = parseFloat(computedStyles.height);

				// Store inline styles
				storedOverflow = element.style.overflow;
				storedPaddingTop = element.style.paddingTop;
				storedPaddingBottom = element.style.paddingBottom;
				storedMarginTop = element.style.marginTop;
				storedMarginBottom = element.style.marginBottom;
				storedHeight = element.style.height;

				element.style.overflow = "hidden";
				element.style.paddingTop = 0;
				element.style.paddingBottom = 0;
				element.style.marginTop = 0;
				element.style.marginBottom = 0;
				element.style.height = 0;
			},
			duration,
			element,
			progress(progress) {
				progressCallback(progress);

				// WORKAROUND
				element.style.display = "block";
				// END OF WORKAROUND

				/* eslint-disable */
				element.style.paddingTop = 0 + (paddingTop * progress) + "px";
				element.style.paddingBottom = 0 + (paddingBottom * progress) + "px";
				element.style.marginTop = 0 + (marginTop * progress) + "px";
				element.style.marginBottom = 0 + (marginBottom * progress) + "px";
				element.style.height = 0 + (height * progress) + "px";
				/* eslint-enable */
			},
		});

		animation.promise().then(() => {
			element.style.overflow = storedOverflow;
			element.style.paddingTop = storedPaddingTop;
			element.style.paddingBottom = storedPaddingBottom;
			element.style.marginTop = storedMarginTop;
			element.style.marginBottom = storedMarginBottom;
			element.style.height = storedHeight;
		});

		return animation;
	};

	var slideUp = ({
		element = animationConfig.element,
		duration = animationConfig.defaultDuration,
		progress: progressCallback = animationConfig.identity,
	}) => {
		// Get Computed styles
		let computedStyles,
			paddingTop,
			paddingBottom,
			marginTop,
			marginBottom,
			height;

		// Store inline styles
		let storedOverflow,
			storedPaddingTop,
			storedPaddingBottom,
			storedMarginTop,
			storedMarginBottom,
			storedHeight;

		const animation = animate({
			beforeStart: () => {
				// Get Computed styles
				computedStyles = getComputedStyle(element);
				paddingTop = parseFloat(computedStyles.paddingTop);
				paddingBottom = parseFloat(computedStyles.paddingBottom);
				marginTop = parseFloat(computedStyles.marginTop);
				marginBottom = parseFloat(computedStyles.marginBottom);
				height = parseFloat(computedStyles.height);

				// Store inline styles
				storedOverflow = element.style.overflow;
				storedPaddingTop = element.style.paddingTop;
				storedPaddingBottom = element.style.paddingBottom;
				storedMarginTop = element.style.marginTop;
				storedMarginBottom = element.style.marginBottom;
				storedHeight = element.style.height;

				element.style.overflow = "hidden";
			},
			duration,
			element,
			progress(progress) {
				progressCallback(progress);

				element.style.paddingTop = `${paddingTop - (paddingTop * progress)}px`;
				element.style.paddingBottom = `${paddingBottom - (paddingBottom * progress)}px`;
				element.style.marginTop = `${marginTop - (marginTop * progress)}px`;
				element.style.marginBottom = `${marginBottom - (marginBottom * progress)}px`;
				element.style.height = `${height - (height * progress)}px`;
			},
		});

		animation.promise().then(oReason => {
			if (!(oReason instanceof Error)) {
				element.style.overflow = storedOverflow;
				element.style.paddingTop = storedPaddingTop;
				element.style.paddingBottom = storedPaddingBottom;
				element.style.marginTop = storedMarginTop;
				element.style.marginBottom = storedMarginBottom;
				element.style.height = storedHeight;
				element.style.display = "none";
			}
		});

		return animation;
	};

	const AnimationMode = {
		Full: "full",
		Basic: "basic",
		Minimal: "minimal",
		None: "none",
	};

	let animationMode;

	const getAnimationMode$1 = () => {
		if (animationMode === undefined) {
			animationMode = getAnimationMode();
		}

		return animationMode;
	};

	const getActiveElement = () => {
		let element = document.activeElement;

		while (element && element.shadowRoot && element.shadowRoot.activeElement) {
			element = element.shadowRoot.activeElement;
		}

		return element;
	};

	const NavigationMode = {
		Auto: "Auto",
		Vertical: "Vertical",
		Horizontal: "Horizontal",
		Paging: "Paging",
	};

	/**
	 * @private
	 * Different behavior for ItemNavigation.
	 */
	const ItemNavigationBehavior = {
		/**
		* Static behavior: when border of the items is reached, you can't go out of the cage.
	 	*/
		Static: "Static",

		/**
		* Cycling behavior: when border of the items is reached, you can cycle through the items.
	 	*/
		Cyclic: "Cyclic",

		/**
		* Paging behavior: when border of the items is reached, tou can go up/down based on the rowsize(e.g. DayPicker)
	 	*/
		Paging: "Paging",
	};

	/**
	 * The ItemNavigation class manages the calculations to determine the correct "tabindex" for a group of related items inside a root component.
	 * Important: ItemNavigation only does the calculations and does not change "tabindex" directly, this is a responsibility of the developer.
	 *
	 * The keys that trigger ItemNavigation are:
	 *  - Up/down
	 *  - Left/right
	 *  - Home/End
	 *  - PageUp/PageDown
	 *
	 * Usage:
	 * 1) Use the "getItemsCallback" constructor property to pass a callback to ItemNavigation, which, whenever called, will return the list of items to navigate among.
	 *
	 * Each item passed to ItemNavigation via "getItemsCallback" must be:
	 *  - A) either a UI5Element with a "_tabIndex" property
	 *  - B) or an Object with "id" and "_tabIndex" properties which represents a part of the root component's shadow DOM.
	 *    The "id" must be a valid ID within the shadow root of the component ItemNavigation operates on.
	 *    This object must not be a DOM object because, as said, ItemNavigation will not set "tabindex" on it. It must be a representation of a DOM object only
	 *    and the developer has the responsibility to update the "tabindex" in the component's DOM.
	 *  - C) a combination of the above
	 *
	 * Whenever the user navigates with the keyboard, ItemNavigation will modify the "_tabIndex" properties of the items.
	 * It is the items' responsibilities to re-render themselves and apply the correct value of "tabindex" (i.e. to map the "_tabIndex" ItemNavigation set to them to the "tabindex" property).
	 * If the items of the ItemNavigation are UI5Elements themselves, this can happen naturally since they will be invalidated by their "_tabIndex" property.
	 * If the items are Objects with "id" and "_tabIndex" however, it is the developer's responsibility to apply these and the easiest way is to have the root component invalidated by ItemNavigation.
	 * To do so, set the "affectedPropertiesNames" constructor property to point to one or more of the root component's properties that need refreshing when "_tabIndex" is changed deeply.
	 *
	 * 2) Call the "update" method of ItemNavigation whenever you want to change the current item.
	 * This is most commonly required if the user for example clicks on an item and thus selects it directly.
	 * Pass as the only argument to "update" the item that becomes current (must be one of the items, returned by "getItemsCallback").
	 *
	 * @class
	 * @public
	 */
	class ItemNavigation extends EventProvider {
		/**
		 *
		 * @param rootWebComponent the component to operate on (component that slots or contains within its shadow root the items the user navigates among)
		 * @param options Object with configuration options:
		 *  - currentIndex: the index of the item that will be initially selected (from which navigation will begin)
		 *  - navigationMode (Auto|Horizontal|Vertical): whether the items are displayed horizontally (Horizontal), vertically (Vertical) or as a matrix (Auto) meaning the user can navigate in both directions (up/down and left/right)
		 *  - rowSize: tells how many items per row there are when the items are not rendered as a flat list but rather as a matrix. Relevant for navigationMode=Auto
		 *  - behavior (Static|Cycling|Paging): tells what to do when trying to navigate beyond the first and last items
		 *    Static means that nothing happens if the user tries to navigate beyond the first/last item.
		 *    Cycling means that when the user navigates beyond the last item they go to the first and vice versa.
		 *    Paging means that when the urse navigates beyond the first/last item, a new "page" of items appears (as commonly observed with calendars for example)
		 *  - pageSize: tells how many items the user skips by using the PageUp/PageDown keys
		 *  - getItemsCallback: function that, when called, returns an array with all items the user can navigate among
		 *  - affectedPropertiesNames: a list of metadata properties on the root component which, upon user navigation, will be reassigned by address thus causing the root component to invalidate
		 */
		constructor(rootWebComponent, options = {}) {
			super();

			this.currentIndex = options.currentIndex || 0;
			this.rowSize = options.rowSize || 1;
			this.behavior = options.behavior || ItemNavigationBehavior.Static;
			const navigationMode = options.navigationMode;
			const autoNavigation = !navigationMode || navigationMode === NavigationMode.Auto;
			this.horizontalNavigationOn = autoNavigation || navigationMode === NavigationMode.Horizontal;
			this.verticalNavigationOn = autoNavigation || navigationMode === NavigationMode.Vertical;

			this.pageSize = options.pageSize;

			if (options.affectedPropertiesNames) {
				this.affectedPropertiesNames = options.affectedPropertiesNames;
			}

			if (options.getItemsCallback) {
				this._getItems = options.getItemsCallback;
			}

			const trueFunction = () => true;
			this._hasNextPage = typeof options.hasNextPageCallback === "function" ? options.hasNextPageCallback : trueFunction;
			this._hasPreviousPage = typeof options.hasPreviousPageCallback === "function" ? options.hasPreviousPageCallback : trueFunction;

			this.rootWebComponent = rootWebComponent;
			this.rootWebComponent.addEventListener("keydown", this.onkeydown.bind(this));
			this.rootWebComponent._onComponentStateFinalized = () => {
				this._init();
			};
		}

		_init() {
			this._getItems().forEach((item, idx) => {
				item._tabIndex = (idx === this.currentIndex) ? "0" : "-1";
			});
		}

		_horizontalNavigationOn() {
			return this.horizontalNavigationOn;
		}

		_verticalNavigationOn() {
			return this.verticalNavigationOn;
		}

		async _onKeyPress(event) {
			if (this.currentIndex >= this._getItems().length) {
				this.onOverflowBottomEdge(event);
			} else if (this.currentIndex < 0) {
				this.onOverflowTopEdge(event);
			}

			event.preventDefault();

			await RenderScheduler.whenFinished();

			this.update();
			this.focusCurrent();
			this.fireEvent(ItemNavigation.AFTER_FOCUS);
		}

		onkeydown(event) {
			if (isUp(event) && this._verticalNavigationOn()) {
				return this._handleUp(event);
			}

			if (isDown(event) && this._verticalNavigationOn()) {
				return this._handleDown(event);
			}

			if (isLeft(event) && this._horizontalNavigationOn()) {
				return this._handleLeft(event);
			}

			if (isRight(event) && this._horizontalNavigationOn()) {
				return this._handleRight(event);
			}

			if (isHome(event)) {
				return this._handleHome(event);
			}

			if (isEnd(event)) {
				return this._handleEnd(event);
			}

			if (isPageUp(event)) {
				return this._handlePageUp(event);
			}

			if (isPageDown(event)) {
				return this._handlePageDown(event);
			}
		}

		_handleUp(event) {
			if (this._canNavigate()) {
				this.currentIndex -= this.rowSize;
				this._onKeyPress(event);
			}
		}

		_handleDown(event) {
			if (this._canNavigate()) {
				this.currentIndex += this.rowSize;
				this._onKeyPress(event);
			}
		}

		_handleLeft(event) {
			if (this._canNavigate()) {
				this.currentIndex -= 1;
				this._onKeyPress(event);
			}
		}

		_handleRight(event) {
			if (this._canNavigate()) {
				this.currentIndex += 1;
				this._onKeyPress(event);
			}
		}

		_handleHome(event) {
			if (this._canNavigate()) {
				const homeEndRange = this.rowSize > 1 ? this.rowSize : this._getItems().length;
				this.currentIndex -= this.currentIndex % homeEndRange;
				this._onKeyPress(event);
			}
		}

		_handleEnd(event) {
			if (this._canNavigate()) {
				const homeEndRange = this.rowSize > 1 ? this.rowSize : this._getItems().length;
				this.currentIndex += (homeEndRange - 1 - this.currentIndex % homeEndRange); // eslint-disable-line
				this._onKeyPress(event);
			}
		}

		_handlePageUp(event) {
			if (this._canNavigate()) {
				this.currentIndex -= this.pageSize;
				this._onKeyPress(event);
			}
		}

		_handlePageDown(event) {
			if (this._canNavigate()) {
				this.currentIndex += this.pageSize;
				this._onKeyPress(event);
			}
		}

		/**
		 * Call this method to set a new "current" (selected) item in the item navigation
		 * Note: the item passed to this function must be one of the items, returned by the getItemsCallback function
		 *
		 * @public
		 * @param current the new selected item
		 */
		update(current) {
			const origItems = this._getItems();

			if (current) {
				this.currentIndex = this._getItems().indexOf(current);
			}

			if (!origItems[this.currentIndex]
				|| (origItems[this.currentIndex]._tabIndex && origItems[this.currentIndex]._tabIndex === "0")) {
				return;
			}

			const items = origItems.slice(0);

			for (let i = 0; i < items.length; i++) {
				items[i]._tabIndex = (i === this.currentIndex ? "0" : "-1");
			}

			if (Array.isArray(this.affectedPropertiesNames)) {
				this.affectedPropertiesNames.forEach(propName => {
					const prop = this.rootWebComponent[propName];
					this.rootWebComponent[propName] = Array.isArray(prop) ? [...prop] : { ...prop };
				});
			}
		}

		/**
		 * @public
		 * @deprecated
		 */
		focusCurrent() {
			const currentItem = this._getCurrentItem();
			if (currentItem) {
				currentItem.focus();
			}
		}

		_canNavigate() {
			const currentItem = this._getCurrentItem();
			const activeElement = getActiveElement();

			return currentItem && currentItem === activeElement;
		}

		_getCurrentItem() {
			const items = this._getItems();

			if (!items.length) {
				return null;
			}

			// normalize the index
			while (this.currentIndex >= items.length) {
				this.currentIndex -= this.rowSize;
			}

			if (this.currentIndex < 0) {
				this.currentIndex = 0;
			}

			const currentItem = items[this.currentIndex];

			if (!currentItem) {
				return;
			}

			if (currentItem.isUI5Element) {
				return currentItem.getFocusDomRef();
			}

			if (!this.rootWebComponent.getDomRef()) {
				return;
			}

			return this.rootWebComponent.getDomRef().querySelector(`#${currentItem.id}`);
		}

		/**
		 * Set to callback that returns the list of items to navigate among
		 * @public
		 * @param callback a function that returns an array of items to navigate among
		 */
		set getItemsCallback(callback) {
			this._getItems = callback;
		}

		/**
		 * @public
		 * @deprecated
		 * @param val
		 */
		set current(val) {
			this.currentIndex = val;
		}

		onOverflowBottomEdge(event) {
			const items = this._getItems();
			const offset = (this.currentIndex - items.length) % this.rowSize;

			if (this.behavior === ItemNavigationBehavior.Cyclic) {
				this.currentIndex = 0;
				return;
			}

			if (this.behavior === ItemNavigationBehavior.Paging) {
				this._handleNextPage();
			} else {
				this.currentIndex = items.length - 1;
			}

			this.fireEvent(ItemNavigation.BORDER_REACH, {
				start: false,
				end: true,
				originalEvent: event,
				offset,
			});
		}

		onOverflowTopEdge(event) {
			const items = this._getItems();
			const offsetRight = (this.currentIndex + this.rowSize) % this.rowSize;
			const offset = offsetRight < 0 ? (this.rowSize + offsetRight) : offsetRight;

			if (this.behavior === ItemNavigationBehavior.Cyclic) {
				this.currentIndex = items.length - 1;
				return;
			}

			if (this.behavior === ItemNavigationBehavior.Paging) {
				this._handlePrevPage();
			} else {
				this.currentIndex = 0;
			}

			this.fireEvent(ItemNavigation.BORDER_REACH, {
				start: true,
				end: false,
				originalEvent: event,
				offset,
			});
		}

		_handleNextPage() {
			const items = this._getItems();

			if (!this._hasNextPage()) {
				this.currentIndex = items.length - 1;
			} else {
				this.currentIndex -= this.pageSize;
			}
		}

		_handlePrevPage() {
			if (!this._hasPreviousPage()) {
				this.currentIndex = 0;
			} else {
				this.currentIndex = this.pageSize + this.currentIndex;
			}
		}
	}

	ItemNavigation.BORDER_REACH = "_borderReach";
	ItemNavigation.AFTER_FOCUS = "_afterFocus";

	const name = "slim-arrow-up";
	const pathData = "M261.5 197q-6-6-11 0l-160 160q-5 5-11.5 5t-11.5-5-5-11.5 5-11.5l166-165q9-9 22-9t23 9l165 165q5 5 5 11t-5 11q-12 12-23 0z";
	const ltr = false;
	const collection = "SAP-icons";

	registerIcon(name, { pathData, ltr, collection});

	const name$1 = "slim-arrow-down";
	const pathData$1 = "M420.5 187q11-12 23 0 5 5 5 11t-5 11l-165 165q-10 9-23 9t-22-9l-166-165q-5-5-5-11.5t5-11.5 11.5-5 11.5 5l160 160q5 6 11 0z";
	const ltr$1 = false;
	const collection$1 = "SAP-icons";

	registerIcon(name$1, { pathData: pathData$1, ltr: ltr$1, collection: collection$1});

	const name$2 = "slim-arrow-left";
	const pathData$2 = "M351.5 421q12 12 0 23-5 5-11 5t-11-5l-166-165q-9-10-9-23t9-23l165-164q5-5 11.5-5t11.5 5 5 11-5 11l-159 159q-6 6 0 12z";
	const ltr$2 = false;
	const collection$2 = "SAP-icons";

	registerIcon(name$2, { pathData: pathData$2, ltr: ltr$2, collection: collection$2});

	const name$3 = "slim-arrow-right";
	const pathData$3 = "M357.5 233q10 10 10 23t-10 23l-165 165q-12 11-23 0t0-23l160-159q6-6 0-12l-159-159q-5-5-5-11t5-11 11-5 11 5z";
	const ltr$3 = false;
	const collection$3 = "SAP-icons";

	registerIcon(name$3, { pathData: pathData$3, ltr: ltr$3, collection: collection$3});

	const isNodeHidden = node => {
		if (node.nodeName === "SLOT") {
			return false;
		}

		return (node.offsetWidth <= 0 && node.offsetHeight <= 0) || node.style.visibility === "hidden";
	};

	const isNodeTabbable = node => {
		if (!node) {
			return false;
		}

		const nodeName = node.nodeName.toLowerCase();

		if (node.hasAttribute("data-sap-no-tab-ref")) {
			return false;
		}

		if (isNodeHidden(node)) {
			return false;
		}

		if (nodeName === "a" || /input|select|textarea|button|object/.test(nodeName)) {
			return !node.disabled;
		}

		const tabIndex = node.getAttribute("tabindex");
		if (tabIndex !== null && tabIndex !== undefined) {
			return parseInt(tabIndex) >= 0;
		}
	};

	const getTabbableElements = node => {
		return getTabbables(node.children);
	};

	const getLastTabbableElement = node => {
		const tabbables = getTabbables(node.children);
		return tabbables.length ? tabbables[tabbables.length - 1] : null;
	};

	const getTabbables = (nodes, tabbables) => {
		const tabbablesNodes = tabbables || [];

		if (!nodes) {
			return tabbablesNodes;
		}

		Array.from(nodes).forEach(currentNode => {
			if (currentNode.nodeType === Node.TEXT_NODE || currentNode.nodeType === Node.COMMENT_NODE) {
				return;
			}

			if (currentNode.shadowRoot) {
				// get the root node of the ShadowDom (1st none style tag)
				const children = currentNode.shadowRoot.children;
				currentNode = Array.from(children).find(node => node.tagName !== "STYLE");
			}

			if (isNodeTabbable(currentNode)) {
				tabbablesNodes.push(currentNode);
			}

			if (currentNode.tagName === "SLOT") {
				getTabbables(currentNode.assignedNodes(), tabbablesNodes);
			} else {
				getTabbables(currentNode.children, tabbablesNodes);
			}
		});

		return tabbablesNodes;
	};

	/**
	 * @lends sap.ui.webcomponents.main.types.ListMode.prototype
	 * @public
	 */
	const ListModes = {
		/**
		 * Default mode (no selection).
		 * @public
		 * @type {None}
		 */
		None: "None",

		/**
		 * Right-positioned single selection mode (only one list item can be selected).
		 * @public
		 * @type {SingleSelect}
		 */
		SingleSelect: "SingleSelect",

		/**
		 * Left-positioned single selection mode (only one list item can be selected).
		 * @public
		 * @type {SingleSelectBegin}
		 */
		SingleSelectBegin: "SingleSelectBegin",

		/**
		 * Selected item is highlighted but no selection element is visible
		 * (only one list item can be selected).
		 * @public
		 * @type {SingleSelectEnd}
		 */
		SingleSelectEnd: "SingleSelectEnd",

		/**
		 * Selected item is highlighted and selection is changed upon arrow navigation
		 * (only one list item can be selected - this is always the focused item).
		 * @public
		 * @type {SingleSelectAuto}
		 */
		SingleSelectAuto: "SingleSelectAuto",

		/**
		 * Multi selection mode (more than one list item can be selected).
		 * @public
		 * @type {MultiSelect}
		 */
		MultiSelect: "MultiSelect",

		/**
		 * Delete mode (only one list item can be deleted via provided delete button)
		 * @public
		 * @type {Delete}
		 */
		Delete: "Delete",
	};

	/**
	 * @class
	 * Defines the type of <code>ui5-list</code>.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.ListMode
	 * @public
	 * @enum {string}
	 */
	class ListMode extends DataType {
		static isValid(value) {
			return !!ListModes[value];
		}
	}

	ListMode.generateTypeAccessors(ListModes);

	/**
	 * @lends sap.ui.webcomponents.main.types.ListSeparators.prototype
	 * @public
	 */
	const ListSeparatorsTypes = {
		/**
		 * Separators between the items including the last and the first one.
		 * @public
		 * @type {All}
		 */
		All: "All",
		/**
		 * Separators between the items.
		 * <b>Note:</b> This enumeration depends on the theme.
		 * @public
		 * @type {Inner}
		 */
		Inner: "Inner",
		/**
		 * No item separators.
		 * @public
		 * @type {None}
		 */
		None: "None",
	};

	/**
	 * @class
	 * Defines which separator style will be applied for the list items.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.ListSeparators
	 * @public
	 * @enum {string}
	 */
	class ListSeparators extends DataType {
		static isValid(value) {
			return !!ListSeparatorsTypes[value];
		}
	}

	ListSeparators.generateTypeAccessors(ListSeparatorsTypes);

	/**
	 * @lends sap.ui.webcomponents.main.types.BusyIndicatorSize.prototype
	 * @public
	 */
	const BusyIndicatorSizes = {
		/**
		 * small size
		 * @public
		 * @type {Small}
		 */
		Small: "Small",

		/**
		 * medium size
		 * @public
		 * @type {Medium}
		 */
		Medium: "Medium",

		/**
		 * large size
		 * @public
		 * @type {Large}
		 */
		Large: "Large",
	};

	/**
	 * @class
	 * Different types of BusyIndicator.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.BusyIndicatorSize
	 * @public
	 * @enum {string}
	 */
	class BusyIndicatorSize extends DataType {
		static isValid(value) {
			return !!BusyIndicatorSizes[value];
		}
	}

	BusyIndicatorSize.generateTypeAccessors(BusyIndicatorSizes);

	const block0$2 = (context) => { return scopedHtml`<label class="ui5-label-root" dir="${ifDefined(context.effectiveDir)}" @click=${context._onclick} for="${ifDefined(context.for)}"><span class="ui5-label-text-wrapper"><bdi id="${ifDefined(context._id)}-bdi"><slot></slot></bdi></span><span class="ui5-label-required-colon"></span></label>`; };


	const main$2 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$2(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var labelCss = ":host(:not([hidden])){display:inline-flex}:host{max-width:100%;color:var(--sapContent_LabelColor);font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;cursor:text}:host(:not([wrap])) .ui5-label-root{width:100%;font-weight:inherit;display:inline-block;white-space:nowrap;cursor:inherit;overflow:hidden}bdi{content:\"\";padding-right:.15625rem}:host(:not([wrap])) .ui5-label-text-wrapper{text-overflow:ellipsis;overflow:hidden;display:inline-block;vertical-align:top;max-width:100%}:host(:not([wrap])[required][show-colon]) .ui5-label-text-wrapper{max-width:calc(100% - .85rem)}:host(:not([wrap])[required]) .ui5-label-text-wrapper{max-width:calc(100% - .475rem)}:host(:not([wrap])[show-colon]) .ui5-label-text-wrapper{max-width:calc(100% - .2rem)}:host([show-colon]) .ui5-label-required-colon:before{content:\":\"}:host([required]) .ui5-label-required-colon:after{content:\"*\";color:var(--sapField_RequiredColor);font-size:1.25rem;font-weight:700;position:relative;font-style:normal;vertical-align:middle;line-height:0}:host([required][show-colon]) .ui5-label-required-colon:after{margin-right:0;margin-left:.125rem}:host([required][show-colon]) [dir=rtl] .ui5-label-required-colon:after{margin-right:.125rem;margin-left:0}";

	/**
	 * @public
	 */
	const metadata$2 = {
		tag: "ui5-label",
		properties: /** @lends sap.ui.webcomponents.main.Label.prototype */  {

			/**
			 * Defines whether an asterisk character is added to the <code>ui5-label</code> text.
			 * <br><br>
			 * <b>Note:</b> Usually indicates that user input is required.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			required: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-label</code> should wrap, when there is not enough space.
			 * <br><br>
			 * <b>Note:</b> By default the text would truncate.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			wrap: {
				type: Boolean,
			},

			/**
			 * Defines whether semi-colon is added to the <code>ui5-label</code> text.
			 * <br><br>
			 * <b>Note:</b> Usually used in forms.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */

			showColon: {
				type: Boolean,
			},

			/**
			 * Defines the labeled input by providing its ID.
			 * <br><br>
			 * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			"for": {
				type: String,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.Label.prototype */ {
			/**
			 * Defines the text of the <code>ui5-label</code>.
			 * <br><b>Note:</b> Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-label</code> is a component used to represent a label,
	 * providing valuable information to the user.
	 * Usually it is placed next to a value holder, such as a text field.
	 * It informs the user about what data is displayed or expected in the value holder.
	 * <br><br>
	 * The <code>ui5-label</code> appearance can be influenced by properties,
	 * such as <code>required</code> and <code>wrap</code>.
	 * The appearance of the Label can be configured in a limited way by using the design property.
	 * For a broader choice of designs, you can use custom styles.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Label";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Label
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-label
	 * @public
	 */
	class Label extends UI5Element {
		static get metadata() {
			return metadata$2;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$2;
		}

		static get styles() {
			return labelCss;
		}

		_onclick() {
			const elementToFocus = document.getElementById(this.for);
			if (elementToFocus) {
				elementToFocus.focus();
			}
		}
	}

	Label.define();

	const block0$3 = (context) => { return scopedHtml`<div class="${classMap(context.classes.root)}"><div class="ui5-busyindicator-wrapper">${ context.active ? block1$2(context) : undefined }${ context.text ? block2$1(context) : undefined }</div><slot></slot></div>`; };
	const block1$2 = (context) => { return scopedHtml`<div class="ui5-busyindicator-dynamic-content" role="progressbar" aria-valuemin="0" aria-valuemax="100" title="${ifDefined(context.ariaTitle)}"><div class="ui5-busyindicator-circle circle-animation-0"></div><div class="ui5-busyindicator-circle circle-animation-1"></div><div class="ui5-busyindicator-circle circle-animation-2"></div></div>`; };
	const block2$1 = (context) => { return scopedHtml`<ui5-label class="ui5-busyindicator-text">${ifDefined(context.text)}</ui5-label>`; };


	const main$3 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$3(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var busyIndicatorCss = ":host(:not([hidden])){display:inline-block}:host(:not([active])) .ui5-busyindicator-wrapper{display:none}:host([active]){color:var(--sapContent_IconColor);pointer-events:none}:host([active]) :not(.ui5-busyindicator-root--ie) ::slotted(:not([class^=ui5-busyindicator-])){opacity:.6}:host([active]) .ui5-busyindicator-root--ie ::slotted(:not([class^=ui5-busyindicator-])){opacity:.95}:host([size=Small]) .ui5-busyindicator-root{min-width:1.5em;min-height:.5rem}:host([size=Small][text]:not([text=\"\"])) .ui5-busyindicator-root{min-height:1.75rem}:host([size=Small]) .ui5-busyindicator-circle{width:.5rem;height:.5rem}:host(:not([size])) .ui5-busyindicator-root,:host([size=Medium]) .ui5-busyindicator-root{min-width:3rem;min-height:1rem}:host(:not([size])[text]:not([text=\"\"])) .ui5-busyindicator-root,:host([size=Medium][text]:not([text=\"\"])) .ui5-busyindicator-root{min-height:2.25rem}:host(:not([size])) .ui5-busyindicator-circle,:host([size=Medium]) .ui5-busyindicator-circle{width:1rem;height:1rem}:host([size=Large]) .ui5-busyindicator-root{min-width:6rem;min-height:2rem}:host([size=Large][text]:not([text=\"\"])) .ui5-busyindicator-root{min-height:3.25rem}:host([size=Large]) .ui5-busyindicator-circle{width:2rem;height:2rem}.ui5-busyindicator-root{display:flex;justify-content:center;align-items:center;position:relative;background-color:inherit}.ui5-busyindicator-wrapper{position:absolute;z-index:99;width:100%;left:0;right:0;top:50%;transform:translateY(-50%)}.ui5-busyindicator-circle{display:inline-block;background-color:currentColor;border-radius:50%}.ui5-busyindicator-circle:before{content:\"\";width:100%;height:100%;border-radius:100%}.ui5-busyindicator-dynamic-content{height:100%;display:flex;justify-content:center;align-items:center;background-color:inherit}.circle-animation-0{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite}.circle-animation-1{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite;animation-delay:.2s}.circle-animation-2{animation:grow 1.6s cubic-bezier(.32,.06,.85,1.11) infinite;animation-delay:.4s}.ui5-busyindicator-text{width:100%;margin-top:.25rem;text-align:center}@keyframes grow{0%,50%,to{-webkit-transform:scale(.5);-moz-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}25%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}";

	/**
	 * @public
	 */
	const metadata$3 = {
		tag: "ui5-busyindicator",
		languageAware: true,
		slots: /** @lends sap.ui.webcomponents.main.BusyIndicator.prototype */ {

			/**
			 * Determines the content over which the <code>ui5-busyindicator</code> will appear.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
		properties: /** @lends sap.ui.webcomponents.main.BusyIndicator.prototype */ {

			/**
			 * Defines text to be displayed below the busy indicator. It can be used to inform the user of the current operation.
			 * @type {String}
			 * @public
			 * @defaultvalue ""
			 * @since 1.0.0-rc.7
			 */
			text: {
				type: String,
			},

			/**
			 * Defines the size of the <code>ui5-busyindicator</code>.
			 * <br><br>
			 * <b>Note:</b> Available options are "Small", "Medium", and "Large".
			 *
			 * @type {BusyIndicatorSize}
			 * @defaultvalue "Medium"
			 * @public
			 */
			size: {
				type: BusyIndicatorSize,
				defaultValue: BusyIndicatorSize.Medium,
			},

			/**
			 * Defines if the busy indicator is visible on the screen. By default it is not.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			active: {
				type: Boolean,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-busyindicator</code> signals that some operation is going on and that the
	 *  user must wait. It does not block the current UI screen so other operations could be
	 *  triggered in parallel.
	 *
	 * <h3>Usage</h3>
	 * For the <code>ui5-busyindicator</code> you can define the size of the indicator, as well
	 * as whether it is shown or hidden. In order to hide it, use the html attribute <code>hidden</code> or <code>display: none;</code>
	 * <br><br>
	 * In order to show busy state for an HTML element, simply nest the HTML element in a <code>ui5-busyindicator</code> instance.
	 * <br>
	 * <b>Note:</b> Since <code>ui5-busyindicator</code> has <code>display: inline-block;</code> by default and no width of its own,
	 * whenever you need to wrap a block-level element, you should set <code>display: block</code> to the busy indicator as well.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/BusyIndicator";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.BusyIndicator
	 * @extends UI5Element
	 * @tagname ui5-busyindicator
	 * @public
	 * @since 0.12.0
	 */
	class BusyIndicator extends UI5Element {
		constructor() {
			super();

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
			this._preventHandler = this._preventEvent.bind(this);
		}

		onBeforeRendering() {
			if (this.active) {
				this.tabIndex = -1;
			} else {
				this.removeAttribute("tabindex");
			}
		}

		onEnterDOM() {
			this.addEventListener("keyup", this._preventHandler, {
				capture: true,
			});

			this.addEventListener("keydown", this._preventHandler, {
				capture: true,
			});
		}

		onExitDOM() {
			this.removeEventListener("keyup", this._preventHandler, true);
			this.removeEventListener("keydown", this._preventHandler, true);
		}

		static get metadata() {
			return metadata$3;
		}

		static get styles() {
			return busyIndicatorCss;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$3;
		}

		static get dependencies() {
			return [Label];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}

		get ariaTitle() {
			return this.i18nBundle.getText(BUSY_INDICATOR_TITLE);
		}

		get classes() {
			return {
				root: {
					"ui5-busyindicator-root": true,
					"ui5-busyindicator-root--ie": isIE(),
				},
			};
		}

		_preventEvent(event) {
			if (this.active) {
				event.stopImmediatePropagation();
			}
		}
	}

	BusyIndicator.define();

	const block0$4 = (context) => { return scopedHtml`<div class="ui5-list-root" @focusin="${context._onfocusin}" @keydown="${context._onkeydown}" @scroll="${context._onScroll}"><!-- header -->${ context.header.length ? block1$3() : undefined }${ context.shouldRenderH1 ? block2$2(context) : undefined }${ context.hasData ? block3(context) : undefined }<ul id="${ifDefined(context._id)}-listUl" class="ui5-list-ul" role="${ifDefined(context.role)}" aria-label="${ifDefined(context.ariaLabelТxt)}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" aria-multiselectable="${ifDefined(context.isMultiSelect)}"><slot></slot>${ context.showNoDataText ? block4(context) : undefined }</ul>${ context.footerText ? block5(context) : undefined }${ context.showBusy ? block6(context) : undefined }${ context.hasData ? block7(context) : undefined }</div>`; };
	const block1$3 = (context) => { return scopedHtml`<slot name="header" />`; };
	const block2$2 = (context) => { return scopedHtml`<header id="${ifDefined(context.headerID)}" class="ui5-list-header">${ifDefined(context.headerText)}</header>`; };
	const block3 = (context) => { return scopedHtml`<div id="${ifDefined(context._id)}-before" tabindex="0" class="ui5-list-focusarea"></div>`; };
	const block4 = (context) => { return scopedHtml`<li id="${ifDefined(context._id)}-nodata" class="ui5-list-nodata" tabindex="${ifDefined(context.noDataTabIndex)}" style="list-style-type: none;"><div id="${ifDefined(context._id)}-nodata-text" class="ui5-list-nodata-text">${ifDefined(context.noDataText)}</div></li>`; };
	const block5 = (context) => { return scopedHtml`<footer id="${ifDefined(context._id)}-footer" class="ui5-list-footer">${ifDefined(context.footerText)}</footer>`; };
	const block6 = (context) => { return scopedHtml`<div class="ui5-list-busy-row"><ui5-busyindicator ?active="${context.busy}" size="Medium" class="ui5-list-busy-ind"></ui5-busyindicator></div>`; };
	const block7 = (context) => { return scopedHtml`<div id="${ifDefined(context._id)}-after" tabindex="0" class="ui5-list-focusarea"></div>`; };


	const main$4 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$4(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var listCss = ":host(:not([hidden])){display:block;max-width:100%;width:100%}:host([inset]) .ui5-list-root{padding:2rem}:host([separators=None]) .ui5-list-nodata{border-bottom:0}.ui5-list-root{width:100%;height:100%;position:relative;box-sizing:border-box;overflow:auto}.ui5-list-ul{list-style-type:none;padding:0;margin:0}.ui5-list-ul:focus{outline:none}.ui5-list-focusarea{position:fixed}.ui5-list-header{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;font-size:var(--sapFontHeader4Size);font-family:\"72override\",var(--sapFontFamily);color:var(--sapGroup_TitleTextColor);height:3rem;line-height:3rem;padding:0 1rem;background-color:var(--sapGroup_TitleBackground);border-bottom:1px solid var(--sapGroup_TitleBorderColor)}.ui5-list-footer{height:2rem;box-sizing:border-box;-webkit-text-size-adjust:none;font-size:var(--sapFontSize);font-family:\"72override\",var(--sapFontFamily);line-height:2rem;background-color:var(--sapList_FooterBackground);color:var(--ui5_list_footer_text_color);padding:0 1rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-list-nodata{list-style-type:none;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;color:var(--sapTextColor);background-color:var(--sapList_Background);border-bottom:1px solid var(--sapList_BorderColor);padding:0 1rem!important;height:var(--_ui5_list_no_data_height);font-size:var(--sapFontSize)}.ui5-list-nodata-text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-list-busy-row{display:flex;align-items:center;height:var(--_ui5_list_busy_row_height);justify-content:center}";

	const BUSYINDICATOR_HEIGHT = 48; // px
	const INFINITE_SCROLL_DEBOUNCE_RATE = 250; // ms

	/**
	 * @public
	 */
	const metadata$4 = {
		tag: "ui5-list",
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.List.prototype */ {

			/**
			 * Defines the <code>ui5-list</code> header.
			 * <br><br>
			 * <b>Note:</b> When <code>header</code> is set, the
			 * <code>headerText</code> property is ignored.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			header: {
				type: HTMLElement,
			},

			/**
			 * Defines the items of the <code>ui5-list</code>.
			 * <br><br>
			 * <b>Note:</b> Use <code>ui5-li</code>, <code>ui5-li-custom</code>, and <code>ui5-li-groupheader</code> for the intended design.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				propertyName: "items",
				type: HTMLElement,
			},
		},
		properties: /** @lends  sap.ui.webcomponents.main.List.prototype */ {

			/**
			 * Defines the <code>ui5-list</code> header text.
			 * <br><br>
			 * <b>Note:</b> If <code>header</code> is set this property is ignored.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			headerText: {
				type: String,
			},

			/**
			 * Defines the footer text.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			footerText: {
				type: String,
			},

			/**
			 * Determines whether the list items are indented.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			inset: {
				type: Boolean,
			},

			/**
			 * Defines the mode of the <code>ui5-list</code>.
			 * <br><br>
			 * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,
			 * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.
			 *
			 * @type {ListMode}
			 * @defaultvalue "None"
			 * @public
			 */
			mode: {
				type: ListMode,
				defaultValue: ListMode.None,
			},

			/**
			 * Defines the text that is displayed when the <code>ui5-list</code> contains no items.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			noDataText: {
				type: String,
			},

			/**
			 * Defines the item separator style that is used.
			 * <br><br>
			 * <b>Notes:</b>
			 * <ul>
			 * <li>Avalaible options are <code>All</code>, <code>Inner</code>, and <code>None</code>.</li>
			 * <li>When set to <code>None</code>, none of the items are separated by horizontal lines.</li>
			 * <li>When set to <code>Inner</code>, the first item doesn't have a top separator and the last
			 * item doesn't have a bottom separator.</li>
			 * </ul>
			 *
			 * @type {ListSeparators}
			 * @defaultvalue "All"
			 * @public
			 */
			separators: {
				type: ListSeparators,
				defaultValue: ListSeparators.All,
			},

			/**
			 * Defines if the component would fire the <code>load-more</code> event
			 * when the user scrolls to the bottom of the list, and helps achieving an "infinite scroll" effect
			 * by adding new items each time.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.6
			 */
			infiniteScroll: {
				type: Boolean,
			},

			/**
			 * Defines if the component would display a loading indicator at the bottom of the list.
			 * It's especially useful, when combined with <code>infiniteScroll</code>.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.6
			 */
			busy: {
				type: Boolean,
			},

			/**
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabel: {
				type: String,
			},

			/**
			 * Receives id(or many ids) of the elements that label the input
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			/**
			 * Used to externally manipulate the role of the list
			 *
			 * @private
			 * @type {String}
			 * @defaultvalue "listbox"
			 * @since 1.0.0-rc.9
			 */
			role: {
				type: String,
				defaultValue: "listbox",
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.List.prototype */ {

			/**
			 * Fired when an item is activated, unless the item's <code>type</code> property
			 * is set to <code>Inactive</code>.
			 *
			 * @event sap.ui.webcomponents.main.List#item-click
			 * @param {HTMLElement} item the clicked item.
			 * @public
			 */
			"item-click": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the <code>Close</code> button of any item is clicked
			 * <br><br>
			 * <b>Note:</b> This event is applicable to <code>ui5-li-notification</code> items only,
			 * not to be confused with <code>item-delete</code>.
			 *
			 * @event sap.ui.webcomponents.main.List#item-close
			 * @param {HTMLElement} item the item about to be closed.
			 * @public
			 * @since 1.0.0-rc.8
			 */
			"item-close": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the <code>Toggle</code> button of any item is clicked.
			 * <br><br>
			 * <b>Note:</b> This event is applicable to <code>ui5-li-notification-group</code> items only.
			 *
			 * @event sap.ui.webcomponents.main.List#item-toggle
			 * @param {HTMLElement} item the toggled item.
			 * @public
			 * @since 1.0.0-rc.8
			 */
			"item-toggle": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the Delete button of any item is pressed.
			 * <br><br>
			 * <b>Note:</b> A Delete button is displayed on each item,
			 * when the <code>ui5-list</code> <code>mode</code> property is set to <code>Delete</code>.
			 *
			 * @event sap.ui.webcomponents.main.List#item-delete
			 * @param {HTMLElement} item the deleted item.
			 * @public
			 */
			"item-delete": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when selection is changed by user interaction
			 * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.
			 *
			 * @event sap.ui.webcomponents.main.List#selection-change
			 * @param {Array} selectedItems An array of the selected items.
			 * @param {Array} previouslySelectedItems An array of the previously selected items.
			 * @public
			 */
			"selection-change": {
				detail: {
					selectedItems: { type: Array },
					previouslySelectedItems: { type: Array },
					selectionComponentPressed: { type: Boolean }, // protected, indicates if the user used the selection components to change the selection
				},
			},

			/**
			 * Fired when the user scrolls to the bottom of the list.
			 * <br><br>
			 * <b>Note:</b> The event is fired when the <code>infiniteScroll</code> property is enabled.
			 *
			 * @event sap.ui.webcomponents.main.List#load-more
			 * @public
			 * @since 1.0.0-rc.6
			 */
			"load-more": {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-list</code> component allows displaying a list of items, advanced keyboard
	 * handling support for navigating between items, and predefined modes to improve the development efficiency.
	 * <br><br>
	 * The <code>ui5-list</code> is а container for the available list items:
	 * <ul>
	 * <li><code>ui5-li</code></li>
	 * <li><code>ui5-li-custom</code></li>
	 * <li><code>ui5-li-groupheader</code></li>
	 * </ul>
	 * <br><br>
	 * To benefit from the built-in selection mechanism, you can use the available
	 * selection modes, such as
	 * <code>SingleSelect</code>, <code>MultiSelect</code> and <code>Delete</code>.
	 * <br><br>
	 * Additionally, the <code>ui5-list</code> provides header, footer, and customization for the list item separators.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/List.js";</code>
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/StandardListItem.js";</code> (for <code>ui5-li</code>)
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/CustomListItem.js";</code> (for <code>ui5-li-custom</code>)
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/GroupHeaderListItem.js";</code> (for <code>ui5-li-groupheader</code>)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.List
	 * @extends UI5Element
	 * @tagname ui5-list
	 * @appenddocs StandardListItem CustomListItem GroupHeaderListItem
	 * @public
	 */
	class List extends UI5Element {
		static get metadata() {
			return metadata$4;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$4;
		}

		static get styles() {
			return listCss;
		}

		constructor() {
			super();
			this.initItemNavigation();

			// Stores the last focused item within the internal ul element.
			this._previouslyFocusedItem = null;

			// Indicates that the List is forwarding the focus before or after the internal ul.
			this._forwardingFocus = false;

			this._previouslySelectedItem = null;

			this.addEventListener("ui5-_press", this.onItemPress.bind(this));
			this.addEventListener("ui5-close", this.onItemClose.bind(this));
			this.addEventListener("ui5-toggle", this.onItemToggle.bind(this));
			this.addEventListener("ui5-_focused", this.onItemFocused.bind(this));
			this.addEventListener("ui5-_forward-after", this.onForwardAfter.bind(this));
			this.addEventListener("ui5-_forward-before", this.onForwardBefore.bind(this));
			this.addEventListener("ui5-_selection-requested", this.onSelectionRequested.bind(this));
			this.addEventListener("ui5-_focus-requested", this.focusUploadCollectionItem.bind(this));
		}

		get shouldRenderH1() {
			return !this.header.length && this.headerText;
		}

		get headerID() {
			return `${this._id}-header`;
		}

		get hasData() {
			return this.getSlottedNodes("items").length !== 0;
		}

		get showNoDataText() {
			return !this.hasData && this.noDataText;
		}

		get showBusy() {
			return this.busy || this.infiniteScroll;
		}

		get isMultiSelect() {
			return this.mode === ListMode.MultiSelect;
		}

		get ariaLabelledBy() {
			if (this.ariaLabelledby || this.ariaLabel) {
				return undefined;
			}

			return this.shouldRenderH1 ? this.headerID : undefined;
		}

		get ariaLabelТxt() {
			return getEffectiveAriaLabelText(this);
		}

		onBeforeRendering() {
			this.prepareListItems();
		}

		initItemNavigation() {
			this._itemNavigation = new ItemNavigation(this, {
				navigationMode: NavigationMode.Vertical,
				getItemsCallback: () => this.getSlottedNodes("items"),
			});
		}

		prepareListItems() {
			const slottedItems = this.getSlottedNodes("items");

			slottedItems.forEach((item, key) => {
				const isLastChild = key === slottedItems.length - 1;
				const showBottomBorder = this.separators === ListSeparators.All
					|| (this.separators === ListSeparators.Inner && !isLastChild);

				item._mode = this.mode;
				item.hasBorder = showBottomBorder;
			});

			this._previouslySelectedItem = null;
		}

		/*
		* ITEM SELECTION BASED ON THE CURRENT MODE
		*/
		onSelectionRequested(event) {
			const previouslySelectedItems = this.getSelectedItems();
			let selectionChange = false;
			this._selectionRequested = true;

			if (this[`handle${this.mode}`]) {
				selectionChange = this[`handle${this.mode}`](event.detail.item, event.detail.selected);
			}

			if (selectionChange) {
				this.fireEvent("selection-change", {
					selectedItems: this.getSelectedItems(),
					previouslySelectedItems,
					selectionComponentPressed: event.detail.selectionComponentPressed,
					key: event.detail.key,
				});
			}
		}

		handleSingleSelect(item) {
			if (item.selected) {
				return false;
			}

			this.deselectSelectedItems();
			item.selected = true;

			return true;
		}

		handleSingleSelectBegin(item) {
			return this.handleSingleSelect(item);
		}

		handleSingleSelectEnd(item) {
			return this.handleSingleSelect(item);
		}

		handleSingleSelectAuto(item) {
			return this.handleSingleSelect(item);
		}

		handleMultiSelect(item, selected) {
			item.selected = selected;
			return true;
		}

		handleDelete(item) {
			this.fireEvent("item-delete", { item });
		}

		deselectSelectedItems() {
			this.getSelectedItems().forEach(item => { item.selected = false; });
		}

		getSelectedItems() {
			return this.getSlottedNodes("items").filter(item => item.selected);
		}

		getFirstSelectedItem() {
			const slottedItems = this.getSlottedNodes("items");
			let firstSelectedItem = null;

			for (let i = 0; i < slottedItems.length; i++) {
				if (slottedItems[i].selected) {
					firstSelectedItem = slottedItems[i];
					break;
				}
			}

			return firstSelectedItem;
		}

		_onkeydown(event) {
			if (isTabNext(event)) {
				this._handleTabNext(event);
			}
		}

		/*
		* KEYBOARD SUPPORT
		*/
		_handleTabNext(event) {
			// If forward navigation is performed, we check if the List has headerToolbar.
			// If yes - we check if the target is at the last tabbable element of the headerToolbar
			// to forward correctly the focus to the selected, previously focused or to the first list item.
			let lastTabbableEl;
			const target = this.getNormalizedTarget(event.target);

			if (this.headerToolbar) {
				lastTabbableEl = this.getHeaderToolbarLastTabbableElement();
			}

			if (!lastTabbableEl) {
				return;
			}

			if (lastTabbableEl === target) {
				if (this.getFirstSelectedItem()) {
					this.focusFirstSelectedItem();
				} else if (this.getPreviouslyFocusedItem()) {
					this.focusPreviouslyFocusedItem();
				} else {
					this.focusFirstItem();
				}

				event.stopImmediatePropagation();
				event.preventDefault();
			}
		}

		_onScroll(event) {
			if (!this.infiniteScroll) {
				return;
			}
			this.debounce(this.loadMore.bind(this, event.target), INFINITE_SCROLL_DEBOUNCE_RATE);
		}

		_onfocusin(event) {
			// If the focusin event does not origin from one of the 'triggers' - ignore it.
			if (!this.isForwardElement(this.getNormalizedTarget(event.target))) {
				event.stopImmediatePropagation();
				return;
			}

			// The focus arrives in the List for the first time.
			// If there is selected item - focus it or focus the first item.
			if (!this.getPreviouslyFocusedItem()) {
				if (this.getFirstSelectedItem()) {
					this.focusFirstSelectedItem();
				} else {
					this.focusFirstItem();
				}

				event.stopImmediatePropagation();
				return;
			}

			// The focus returns to the List,
			// focus the first selected item or the previously focused element.
			if (!this.getForwardingFocus()) {
				if (this.getFirstSelectedItem()) {
					this.focusFirstSelectedItem();
				} else {
					this.focusPreviouslyFocusedItem();
				}
			}

			this.setForwardingFocus(false);
		}

		isForwardElement(node) {
			const nodeId = node.id;

			if (this._id === nodeId || this.getBeforeElement().id === nodeId) {
				return true;
			}

			return this.getAfterElement().id === nodeId;
		}

		onItemFocused(event) {
			const target = event.target;

			this._itemNavigation.update(target);
			this.fireEvent("item-focused", { item: target });

			if (this.mode === ListMode.SingleSelectAuto) {
				this.onSelectionRequested({
					detail: {
						item: target,
						selectionComponentPressed: false,
						selected: true,
						key: event.detail.key,
					},
				});
			}
		}

		onItemPress(event) {
			const pressedItem = event.detail.item;

			if (!this._selectionRequested && this.mode !== ListMode.Delete) {
				this._selectionRequested = true;
				this.onSelectionRequested({
					detail: {
						item: pressedItem,
						selectionComponentPressed: false,
						selected: !pressedItem.selected,
						key: event.detail.key,
					},
				});
			}

			this.fireEvent("item-press", { item: pressedItem });
			this.fireEvent("item-click", { item: pressedItem });

			this._selectionRequested = false;
		}

		// This is applicable to NoficationListItem
		onItemClose(event) {
			this.fireEvent("item-close", { item: event.detail.item });
		}

		onItemToggle(event) {
			this.fireEvent("item-toggle", { item: event.detail.item });
		}

		onForwardBefore(event) {
			this.setPreviouslyFocusedItem(event.target);
			this.focusBeforeElement();
		}

		onForwardAfter(event) {
			this.setPreviouslyFocusedItem(event.target);
			this.focusAfterElement();
		}

		focusBeforeElement() {
			this.setForwardingFocus(true);
			this.getBeforeElement().focus();
		}

		focusAfterElement() {
			this.setForwardingFocus(true);
			this.getAfterElement().focus();
		}

		focusFirstItem() {
			const firstItem = this.getFirstItem();

			if (firstItem) {
				firstItem.focus();
			}
		}

		focusPreviouslyFocusedItem() {
			const previouslyFocusedItem = this.getPreviouslyFocusedItem();

			if (previouslyFocusedItem) {
				previouslyFocusedItem.focus();
			}
		}

		focusFirstSelectedItem() {
			const firstSelectedItem = this.getFirstSelectedItem();

			if (firstSelectedItem) {
				firstSelectedItem.focus();
			}
		}

		focusItem(item) {
			item.focus();
		}


		focusUploadCollectionItem(event) {
			setTimeout(() => {
				this.setPreviouslyFocusedItem(event.target);
				this.focusPreviouslyFocusedItem();
			}, 0);
		}

		setForwardingFocus(forwardingFocus) {
			this._forwardingFocus = forwardingFocus;
		}

		getForwardingFocus() {
			return this._forwardingFocus;
		}

		setPreviouslyFocusedItem(item) {
			this._previouslyFocusedItem = item;
		}

		getPreviouslyFocusedItem() {
			return this._previouslyFocusedItem;
		}

		getFirstItem() {
			const slottedItems = this.getSlottedNodes("items");
			return !!slottedItems.length && slottedItems[0];
		}

		getAfterElement() {
			if (!this._afterElement) {
				this._afterElement = this.shadowRoot.querySelector(`#${this._id}-after`);
			}
			return this._afterElement;
		}

		getBeforeElement() {
			if (!this._beforeElement) {
				this._beforeElement = this.shadowRoot.querySelector(`#${this._id}-before`);
			}
			return this._beforeElement;
		}

		getHeaderToolbarLastTabbableElement() {
			return getLastTabbableElement(this.headerToolbar.getDomRef()) || this.headerToolbar.getDomRef();
		}

		getNormalizedTarget(target) {
			let focused = target;

			if (target.shadowRoot && target.shadowRoot.activeElement) {
				focused = target.shadowRoot.activeElement;
			}

			return focused;
		}

		loadMore(el) {
			const scrollTop = el.scrollTop;
			const height = el.offsetHeight;
			const scrollHeight = el.scrollHeight;

			if (this.previousScrollPosition > scrollTop) { // skip scrolling upwards
				this.previousScrollPosition = scrollTop;
				return;
			}
			this.previousScrollPosition = scrollTop;

			if (scrollHeight - BUSYINDICATOR_HEIGHT <= height + scrollTop) {
				this.fireEvent("load-more");
			}
		}

		debounce(fn, delay) {
			clearTimeout(this.debounceInterval);
			this.debounceInterval = setTimeout(() => {
				this.debounceInterval = null;
				fn();
			}, delay);
		}

		static get dependencies() {
			return [BusyIndicator];
		}
	}

	List.define();

	let currentZIndex = 100;

	const getFocusedElement = () => {
		const element = getActiveElement();
		return (element && typeof element.focus === "function") ? element : null;
	};

	const isFocusedElementWithinNode = node => {
		const fe = getFocusedElement();

		if (fe) {
			return isNodeContainedWithin(node, fe);
		}

		return false;
	};

	const isNodeContainedWithin = (parent, child) => {
		let currentNode = parent;

		if (currentNode.shadowRoot) {
			currentNode = Array.from(currentNode.shadowRoot.children).find(n => n.localName !== "style");
		}

		if (currentNode === child) {
			return true;
		}

		const childNodes = currentNode.localName === "slot" ? currentNode.assignedNodes() : currentNode.children;

		if (childNodes) {
			return Array.from(childNodes).some(n => isNodeContainedWithin(n, child));
		}
	};

	const isPointInRect = (x, y, rect) => {
		return x >= rect.left && x <= rect.right
			&& y >= rect.top && y <= rect.bottom;
	};

	const isClickInRect = (event, rect) => {
		let x;
		let y;

		if (event.touches) {
			const touch = event.touches[0];
			x = touch.clientX;
			y = touch.clientY;
		} else {
			x = event.clientX;
			y = event.clientY;
		}

		return isPointInRect(x, y, rect);
	};

	const getClosedPopupParent = el => {
		const parent = el.parentElement || (el.getRootNode && el.getRootNode().host);

		if (parent && ((parent.openBy && parent.isUI5Element) || (parent.open && parent.isUI5Element) || parent === document.documentElement)) {
			return parent;
		}

		return getClosedPopupParent(parent);
	};


	const getNextZIndex = () => {
		currentZIndex += 2;
		return currentZIndex;
	};

	const block0$5 = (context) => { return scopedHtml`${ context._isPhone ? block1$4(context) : block5$1(context) }`; };
	const block1$4 = (context) => { return scopedHtml`<ui5-dialog ?with-padding=${context.withPadding} stretch _disable-initial-focus @ui5-before-open="${ifDefined(context._propagateDialogEvent)}" @ui5-after-open="${ifDefined(context._afterDialogOpen)}" @ui5-before-close="${ifDefined(context._propagateDialogEvent)}" @ui5-after-close="${ifDefined(context._afterDialogClose)}">${ !context._hideHeader ? block2$3(context) : undefined }<slot></slot><slot slot="footer" name="footer"></slot></ui5-dialog>`; };
	const block2$3 = (context) => { return scopedHtml`${ context.header.length ? block3$1() : block4$1(context) }`; };
	const block3$1 = (context) => { return scopedHtml`<slot slot="header" name="header"></slot>`; };
	const block4$1 = (context) => { return scopedHtml`<header class="ui5-responsive-popover-header"><ui5-title level="H5" class="ui5-responsive-popover-header-text">${ifDefined(context.headerText)}</ui5-title><ui5-button icon="decline" design="Transparent" @click="${context.close}"></ui5-button></header>`; };
	const block5$1 = (context) => { return scopedHtml`<section style="${styleMap(context.styles.root)}" class="${classMap(context.classes.root)}" role="dialog" aria-modal="${ifDefined(context._ariaModal)}" aria-label="${ifDefined(context._ariaLabel)}" aria-labelledby="${ifDefined(context._ariaLabelledBy)}" dir="${ifDefined(context.dir)}"><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToLast}></span><span class="ui5-popover-arrow" style="${styleMap(context.styles.arrow)}"></span>${ context._displayHeader ? block6$1(context) : undefined }<div style="${styleMap(context.styles.content)}" class="${classMap(context.classes.content)}"  @scroll="${context._scroll}"><slot></slot></div>${ context._displayFooter ? block9(context) : undefined }<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToFirst}></span></section>`; };
	const block6$1 = (context) => { return scopedHtml`<header class="ui5-popup-header-root" id="ui5-popup-header">${ context.header.length ? block7$1() : block8(context) }</header>`; };
	const block7$1 = (context) => { return scopedHtml`<slot name="header"></slot>`; };
	const block8 = (context) => { return scopedHtml`<h2 class="ui5-popup-header-text">${ifDefined(context.headerText)}</h2>`; };
	const block9 = (context) => { return scopedHtml`${ context.footer.length ? block10() : undefined }`; };
	const block10 = (context) => { return scopedHtml`<footer class="ui5-popup-footer-root"><slot name="footer"></slot></footer>`; };


	const main$5 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$5(context);
	};

	const rClickable = /^(?:a|area)$/i;
	const rFocusable = /^(?:input|select|textarea|button)$/i;

	const isNodeClickable = node => {
		if (node.disabled) {
			return false;
		}

		const tabIndex = node.getAttribute("tabindex");
		if (tabIndex !== null && tabIndex !== undefined) {
			return parseInt(tabIndex) >= 0;
		}

		return rFocusable.test(node.nodeName)
			|| (rClickable.test(node.nodeName)
			&& node.href);
	};

	const isFocusTrap = el => {
		return el.hasAttribute("data-ui5-focus-trap");
	};

	const getFirstFocusableElement = async container => {
		if (!container || isNodeHidden(container)) {
			return null;
		}

		return findFocusableElement(container, true);
	};

	const getLastFocusableElement = async container => {
		if (!container || isNodeHidden(container)) {
			return null;
		}

		return findFocusableElement(container, false);
	};

	const findFocusableElement = async (container, forward) => {
		let child;

		if (container.shadowRoot) {
			child = forward ? container.shadowRoot.firstChild : container.shadowRoot.lastChild;
		} else if (container.assignedNodes && container.assignedNodes()) {
			const assignedElements = container.assignedNodes();
			child = forward ? assignedElements[0] : assignedElements[assignedElements.length - 1];
		} else {
			child = forward ? container.firstChild : container.lastChild;
		}

		let focusableDescendant;

		/* eslint-disable no-await-in-loop */

		while (child) {
			const originalChild = child;

			if (child.isUI5Element) {
				child = await child.getFocusDomRefAsync();
			}

			if (!child) {
				return null;
			}

			if (child.nodeType === 1 && !isNodeHidden(child) && !isFocusTrap(child)) {
				if (isNodeClickable(child)) {
					return (child && typeof child.focus === "function") ? child : null;
				}

				focusableDescendant = await findFocusableElement(child, forward);
				if (focusableDescendant) {
					return (focusableDescendant && typeof focusableDescendant.focus === "function") ? focusableDescendant : null;
				}
			}

			child = forward ? originalChild.nextSibling : originalChild.previousSibling;
		}

		/* eslint-enable no-await-in-loop */

		return null;
	};

	const block0$6 = (context) => { return scopedHtml`<section style="${styleMap(context.styles.root)}" class="${classMap(context.classes.root)}" role="dialog" aria-modal="${ifDefined(context._ariaModal)}" aria-label="${ifDefined(context._ariaLabel)}" aria-labelledby="${ifDefined(context._ariaLabelledBy)}" dir="${ifDefined(context.dir)}"><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToLast}></span><div style="${styleMap(context.styles.content)}" class="${classMap(context.classes.content)}"  @scroll="${context._scroll}"><slot></slot></div><span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToFirst}></span></section> `; };


	const main$6 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$6(context);
	};

	const block0$7 = (context) => { return scopedHtml`<div class="ui5-block-layer" ?hidden=${context._blockLayerHidden} tabindex="1" style="${styleMap(context.styles.blockLayer)}" @keydown="${context._preventBlockLayerFocus}" @mousedown="${context._preventBlockLayerFocus}"></div>`; };


	const main$7 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$7(context);
	};

	let openedRegistry = [];

	const addOpenedPopup = (instance, parentPopovers = []) => {
		if (!openedRegistry.includes(instance)) {
			openedRegistry.push({
				instance,
				parentPopovers,
			});
		}

		if (openedRegistry.length === 1) {
			attachGlobalListener();
		}
	};

	const removeOpenedPopup = instance => {
		openedRegistry = openedRegistry.filter(el => {
			return el.instance !== instance;
		});

		if (!openedRegistry.length) {
			detachGlobalListener();
		}
	};

	const getOpenedPopups = () => {
		return [...openedRegistry];
	};

	const _keydownListener = event => {
		if (!openedRegistry.length) {
			return;
		}

		if (isEscape(event)) {
			openedRegistry.pop().instance.close(true);
		}
	};

	const attachGlobalListener = () => {
		document.addEventListener("keydown", _keydownListener);
	};

	const detachGlobalListener = () => {
		document.removeEventListener("keydown", _keydownListener);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles = ":host{min-width:1px;display:none;position:fixed}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var staticAreaStyles = ".ui5-block-layer{display:none;position:fixed;background-color:var(--sapBlockLayer_Background);opacity:.6;top:-500px;left:-500px;right:-500px;bottom:-500px;outline:none;pointer-events:all;z-index:-1}.ui5-block-layer:not([hidden]){display:inline-block}";

	/**
	 * @public
	 */
	const metadata$5 = {
		managedSlots: true,
		slots: /** @lends  sap.ui.webcomponents.main.Popup.prototype */ {

			/**
			 * Defines the content of the Popup.
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: HTMLElement,
			},
		},
		properties: /** @lends  sap.ui.webcomponents.main.Popup.prototype */ {
			/**
			 * Defines the ID of the HTML Element, which will get the initial focus.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			initialFocus: {
				type: String,
			},

			/**
			 * Defines if the focus should be returned to the previously focused element,
			 * when the popup closes.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			*/
			preventFocusRestore: {
				type: Boolean,
			},

			/**
			 * Indicates if the elements is open
			 * @private
			 * @type {boolean}
			 * @defaultvalue false
			 */
			opened: {
				type: Boolean,
			},

			/**
			 * Defines the aria-label attribute for the popup
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabel: {
				type: String,
				defaultValue: undefined,
			},

			/**
			 * @private
			 */
			_disableInitialFocus: {
				type: Boolean,
			},

			_blockLayerHidden: {
				type: Boolean,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.Popup.prototype */ {

			/**
			 * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. This event does not bubble.
			 *
			 * @public
			 * @event sap.ui.webcomponents.main.Popup#before-open
			 */
			"before-open": {},

			/**
			 * Fired after the component is opened. This event does not bubble.
			 *
			 * @public
			 * @event sap.ui.webcomponents.main.Popup#after-open
			 */
			"after-open": {},

			/**
			 * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. This event does not bubble.
			 *
			 * @public
			 * @event sap.ui.webcomponents.main.Popup#before-close
			 * @param {Boolean} escPressed Indicates that <code>ESC</code> key has triggered the event.
			 */
			"before-close": {
				escPressed: { type: Boolean },
			},

			/**
			 * Fired after the component is closed. This event does not bubble.
			 *
			 * @public
			 * @event sap.ui.webcomponents.main.Popup#after-close
			 */
			"after-close": {},
		},
	};

	let customBlockingStyleInserted = false;

	const createBlockingStyle = () => {
		if (customBlockingStyleInserted) {
			return;
		}

		createStyleInHead(`
		.ui5-popup-scroll-blocker {
			width: 100%;
			height: 100%;
			position: fixed;
			overflow: hidden;
		}
	`, { "data-ui5-popup-scroll-blocker": "" });

		customBlockingStyleInserted = true;
	};

	createBlockingStyle();

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 * Base class for all popup Web Components.
	 *
	 * If you need to create your own popup-like custom UI5 Web Components, it is highly recommended that you extend
	 * at least Popup in order to have consistency with other popups in terms of modal behavior and z-index management.
	 *
	 * 1. The Popup class handles modality:
	 *  - The "isModal" getter can be overridden by derivatives to provide their own conditions when they are modal or not
	 *  - Derivatives may call the "blockBodyScrolling" and "unblockBodyScrolling" static methods to temporarily remove scrollbars on the body
	 *  - Derivatives may call the "open" and "close" methods which handle focus, manage the popup registry and for modal popups, manage the blocking layer
	 *
	 *  2. Provides blocking layer (relevant for modal popups only):
	 *   - It is in the static area
	 *   - Controlled by the "open" and "close" methods
	 *
	 * 3. The Popup class "traps" focus:
	 *  - Derivatives may call the "applyInitialFocus" method (usually when opening, to transfer focus inside the popup)
	 *
	 * 4. The Popup class automatically assigns "z-index"
	 *  - Each time a popup is opened, it gets a higher than the previously opened popup z-index
	 *
	 * 5. The template of this component exposes two inline partials you can override in derivatives:
	 *  - beforeContent (upper part of the box, useful for header/title/close button)
	 *  - afterContent (lower part, useful for footer/action buttons)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Popup
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @public
	 */
	class Popup extends UI5Element {
		static get metadata() {
			return metadata$5;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return styles;
		}

		static get template() {
			return main$6;
		}

		static get staticAreaTemplate() {
			return main$7;
		}

		static get staticAreaStyles() {
			return staticAreaStyles;
		}

		get _displayProp() {
			return "block";
		}

		/**
		 * Prevents the user from interacting with the content under the block layer
		 */
		_preventBlockLayerFocus(event) {
			event.preventDefault();
		}

		/**
		 * Temporarily removes scrollbars from the body
		 * @protected
		 */
		static blockBodyScrolling() {
			document.body.style.top = `-${window.pageYOffset}px`;
			document.body.classList.add("ui5-popup-scroll-blocker");
		}

		/**
		 * Restores scrollbars on the body, if needed
		 * @protected
		 */
		static unblockBodyScrolling() {
			document.body.classList.remove("ui5-popup-scroll-blocker");
			window.scrollTo(0, -parseFloat(document.body.style.top));
			document.body.style.top = "";
		}

		_scroll(e) {
			this.fireEvent("scroll", {
				scrollTop: e.target.scrollTop,
				targetRef: e.target,
			});
		}

		/**
		 * Focus trapping
		 * @private
		 */
		async forwardToFirst() {
			const firstFocusable = await getFirstFocusableElement(this);

			if (firstFocusable) {
				firstFocusable.focus();
			}
		}

		/**
		 * Focus trapping
		 * @private
		 */
		async forwardToLast() {
			const lastFocusable = await getLastFocusableElement(this);

			if (lastFocusable) {
				lastFocusable.focus();
			}
		}

		/**
		 * Use this method to focus the element denoted by "initialFocus", if provided, or the first focusable element otherwise.
		 * @protected
		 */
		async applyInitialFocus() {
			await this.applyFocus();
		}

		/**
		 * Focuses the element denoted by <code>initialFocus</code>, if provided,
		 * or the first focusable element otherwise.
		 * @public
		 */
		async applyFocus() {
			await this._waitForDomRef();

			const element = this.getRootNode().getElementById(this.initialFocus)
				|| document.getElementById(this.initialFocus)
				|| await getFirstFocusableElement(this);

			if (element) {
				element.focus();
			}
		}

		/**
		 * Override this method to provide custom logic for the popup's open/closed state. Maps to the "opened" property by default.
		 * @public
		 * @returns {boolean}
		 */
		isOpen() {
			return this.opened;
		}

		isFocusWithin() {
			return isFocusedElementWithinNode(this.shadowRoot.querySelector(".ui5-popup-root"));
		}

		/**
		 * Shows the block layer (for modal popups only) and sets the correct z-index for the purpose of popup stacking
		 * @param {boolean} preventInitialFocus prevents applying the focus inside the popup
		 * @public
		 */
		open(preventInitialFocus) {
			const prevented = !this.fireEvent("before-open", {}, true, false);
			if (prevented) {
				return;
			}

			if (this.isModal && !this.shouldHideBackdrop) {
				// create static area item ref for block layer
				this.getStaticAreaItemDomRef();
				this._blockLayerHidden = false;
				Popup.blockBodyScrolling();
			}

			this._zIndex = getNextZIndex();
			this.style.zIndex = this._zIndex;
			this._focusedElementBeforeOpen = getFocusedElement();
			this.show();

			if (!this._disableInitialFocus && !preventInitialFocus) {
				this.applyInitialFocus();
			}

			this._addOpenedPopup();

			this.opened = true;
			this.fireEvent("after-open", {}, false, false);
		}

		/**
		 * Adds the popup to the "opened popups registry"
		 * @protected
		 */
		_addOpenedPopup() {
			addOpenedPopup(this);
		}

		/**
		 * Hides the block layer (for modal popups only)
		 * @public
		 */
		close(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
			if (!this.opened) {
				return;
			}

			const prevented = !this.fireEvent("before-close", { escPressed }, true, false);
			if (prevented) {
				return;
			}

			if (this.isModal) {
				this._blockLayerHidden = true;
				Popup.unblockBodyScrolling();
			}

			this.hide();
			this.opened = false;

			if (!preventRegistryUpdate) {
				this._removeOpenedPopup();
			}

			if (!this.preventFocusRestore && !preventFocusRestore) {
				this.resetFocus();
			}

			this.fireEvent("after-close", {}, false, false);
		}

		/**
		 * Removes the popup from the "opened popups registry"
		 * @protected
		 */
		_removeOpenedPopup() {
			removeOpenedPopup(this);
		}

		/**
		 * Returns the focus to the previously focused element
		 * @protected
		 */
		resetFocus() {
			if (!this._focusedElementBeforeOpen) {
				return;
			}

			this._focusedElementBeforeOpen.focus();
			this._focusedElementBeforeOpen = null;
		}

		/**
		 * Sets "block" display to the popup. The property can be overriden by derivatives of Popup.
		 * @protected
		 */
		show() {
			this.style.display = this._displayProp;
		}


		/**
		 * Sets "none" display to the popup
		 * @protected
		 */
		hide() {
			this.style.display = "none";
		}

		onExitDOM() {
			if (this.isOpen()) {
				Popup.unblockBodyScrolling();
				this._removeOpenedPopup();
			}
		}

		/**
		 * Implement this getter with relevant logic regarding the modality of the popup (e.g. based on a public property)
		 *
		 * @protected
		 * @abstract
		 * @returns {boolean}
		 */
		get isModal() {} // eslint-disable-line

		/**
		 * Implement this getter with relevant logic in order to hide the block layer (f.e. based on a public property)
		 *
		 * @protected
		 * @abstract
		 * @returns {boolean}
		 */
		get shouldHideBackdrop() {} // eslint-disable-line

		/**
		 * Return the ID of an element in the shadow DOM that is going to label this popup
		 *
		 * @protected
		 * @abstract
		 * @returns {String}
		 */
		get _ariaLabelledBy() {} // eslint-disable-line

		/**
		 * Return the value for aria-modal for this popup
		 *
		 * @protected
		 * @abstract
		 * @returns {String}
		 */
		get _ariaModal() {} // eslint-disable-line

		/**
		 * Ensures ariaLabel is never null or empty string
		 * @returns {String|undefined}
		 * @protected
		 */
		get _ariaLabel() {
			return this.ariaLabel || undefined;
		}

		get dir() {
			return getRTL$1() ? "rtl" : "ltr";
		}

		get styles() {
			return {
				root: {},
				content: {},
				blockLayer: {
					"zIndex": (this._zIndex - 1),
				},
			};
		}

		get classes() {
			return {
				root: {},
				content: {},
			};
		}
	}

	/**
	 * @lends sap.ui.webcomponents.main.types.PopoverPlacementType.prototype
	 * @public
	 */
	const PopoverPlacementTypes = {
		/**
		 * Popover will be placed at the left side of the reference element.
		 * @public
		 * @type {Left}
		 */
		Left: "Left",

		/**
		 * Popover will be placed at the right side of the reference element.
		 * @public
		 * @type {Right}
		 */
		Right: "Right",

		/**
		 * Popover will be placed at the top of the reference element.
		 * @public
		 * @type {Bottom}
		 */
		Top: "Top",

		/**
		 * Popover will be placed at the bottom of the reference element.
		 * @public
		 * @type {Bottom}
		 */
		Bottom: "Bottom",
	};

	/**
	 * @class
	 * Types for the placement of Popover control.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.PopoverPlacementType
	 * @public
	 * @enum {string}
	 */
	class PopoverPlacementType extends DataType {
		static isValid(value) {
			return !!PopoverPlacementTypes[value];
		}
	}

	PopoverPlacementType.generateTypeAccessors(PopoverPlacementTypes);

	/**
	 * @lends sap.ui.webcomponents.main.types.PopoverVerticalAlign.prototype
	 * @public
	 */
	const PopoverVerticalAligns = {
		/**
		 *
		 * @public
		 * @type {Center}
		 */
		Center: "Center",

		/**
		 * Popover will be placed at the top of the reference control.
		 * @public
		 * @type {Top}
		 */
		Top: "Top",

		/**
		 * Popover will be placed at the bottom of the reference control.
		 * @public
		 * @type {Bottom}
		 */
		Bottom: "Bottom",

		/**
		 * Popover will be streched
		 * @public
		 * @type {Stretch}
		 */
		Stretch: "Stretch",
	};

	/**
	 * @class
	 * Types for the placement of message Popover control.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.PopoverVerticalAlign
	 * @public
	 * @enum {string}
	 */
	class PopoverVerticalAlign extends DataType {
		static isValid(value) {
			return !!PopoverVerticalAligns[value];
		}
	}

	PopoverVerticalAlign.generateTypeAccessors(PopoverVerticalAligns);

	/**
	 * @lends sap.ui.webcomponents.main.types.PopoverHorizontalAlign.prototype
	 * @public
	 */
	const PopoverHorizontalAligns = {
		/**
		 * Popover is centered
		 * @public
		 * @type {Center}
		 */
		Center: "Center",

		/**
		 * Popover opens on the left side of the target
		 * @public
		 * @type {Left}
		 */
		Left: "Left",

		/**
		 * Popover opens on the right side of the target
		 * @public
		 * @type {Right}
		 */
		Right: "Right",

		/**
		 * Popover is stretched
		 * @public
		 * @type {Stretch}
		 */
		Stretch: "Stretch",
	};

	/**
	 * @class
	 * Defines the horizontal alignment of <code>ui5-popover</code>
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.PopoverHorizontalAlign
	 * @public
	 * @enum {string}
	 */
	class PopoverHorizontalAlign extends DataType {
		static isValid(value) {
			return !!PopoverHorizontalAligns[value];
		}
	}

	PopoverHorizontalAlign.generateTypeAccessors(PopoverHorizontalAligns);

	let updateInterval = null;
	const intervalTimeout = 300;
	const openedRegistry$1 = [];

	const repositionPopovers = event => {
		openedRegistry$1.forEach(popover => {
			popover.instance.reposition();
		});
	};

	const attachGlobalScrollHandler = () => {
		document.body.addEventListener("scroll", repositionPopovers, true);
	};

	const detachGlobalScrollHandler = () => {
		document.body.removeEventListener("scroll", repositionPopovers, true);
	};

	const runUpdateInterval = () => {
		updateInterval = setInterval(() => {
			repositionPopovers();
		}, intervalTimeout);
	};

	const stopUpdateInterval = () => {
		clearInterval(updateInterval);
	};

	const attachGlobalClickHandler = () => {
		document.addEventListener("mousedown", clickHandler);
	};

	const detachGlobalClickHandler = () => {
		document.removeEventListener("mousedown", clickHandler);
	};

	const clickHandler = event => {
		const openedPopups = getOpenedPopups();
		const isTopPopupPopover = openedPopups[openedPopups.length - 1].instance.openBy;

		if (openedPopups.length === 0 || !isTopPopupPopover) {
			return;
		}

		// loop all open popovers
		for (let i = (openedPopups.length - 1); i !== -1; i--) {
			const popup = openedPopups[i].instance;

			// if popup is modal, opener is clicked, popup is dialog skip closing
			if (popup.isModal || popup.isOpenerClicked(event)) {
				return;
			}

			if (isClickInRect(event, popup.getBoundingClientRect())) {
				break;
			}

			popup.close();
		}
	};

	const attachScrollHandler = popover => {
		popover && popover.shadowRoot.addEventListener("scroll", repositionPopovers, true);
	};

	const detachScrollHandler = popover => {
		popover && popover.shadowRoot.removeEventListener("scroll", repositionPopovers);
	};

	const addOpenedPopover = instance => {
		const parentPopovers = getParentPopoversIfNested(instance);

		addOpenedPopup(instance, parentPopovers);
		openedRegistry$1.push({
			instance,
			parentPopovers,
		});

		attachScrollHandler(instance);

		if (openedRegistry$1.length === 1) {
			attachGlobalScrollHandler();
			attachGlobalClickHandler();
			runUpdateInterval();
		}
	};

	const removeOpenedPopover = instance => {
		const popoversToClose = [instance];

		for (let i = 0; i < openedRegistry$1.length; i++) {
			const indexOfCurrentInstance = openedRegistry$1[i].parentPopovers.indexOf(instance);
			if (openedRegistry$1[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {
				popoversToClose.push(openedRegistry$1[i].instance);
			}
		}

		for (let i = popoversToClose.length - 1; i >= 0; i--) {
			for (let j = 0; j < openedRegistry$1.length; j++) {
				let indexOfItemToRemove;
				if (popoversToClose[i] === openedRegistry$1[j].instance) {
					indexOfItemToRemove = j;
				}


				if (indexOfItemToRemove >= 0) {
					removeOpenedPopup(openedRegistry$1[indexOfItemToRemove].instance);
					detachScrollHandler(openedRegistry$1[indexOfItemToRemove].instance);
					const itemToClose = openedRegistry$1.splice(indexOfItemToRemove, 1);
					itemToClose[0].instance.close(false, true);
				}
			}
		}

		if (!openedRegistry$1.length) {
			detachGlobalScrollHandler();
			detachGlobalClickHandler();
			stopUpdateInterval();
		}
	};

	const getParentPopoversIfNested = instance => {
		let currentElement = instance.parentNode;
		const parentPopovers = [];

		while (currentElement.parentNode) {
			for (let i = 0; i < openedRegistry$1.length; i++) {
				if (currentElement && currentElement === openedRegistry$1[i].instance) {
					parentPopovers.push(currentElement);
				}
			}

			currentElement = currentElement.parentNode;
		}

		return parentPopovers;
	};

	const block0$8 = (context) => { return scopedHtml`<section style="${styleMap(context.styles.root)}" class="${classMap(context.classes.root)}" role="dialog" aria-modal="${ifDefined(context._ariaModal)}" aria-label="${ifDefined(context._ariaLabel)}" aria-labelledby="${ifDefined(context._ariaLabelledBy)}" dir="${ifDefined(context.dir)}"><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToLast}></span><span class="ui5-popover-arrow" style="${styleMap(context.styles.arrow)}"></span>${ context._displayHeader ? block1$5(context) : undefined }<div style="${styleMap(context.styles.content)}" class="${classMap(context.classes.content)}"  @scroll="${context._scroll}"><slot></slot></div>${ context._displayFooter ? block4$2(context) : undefined }<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToFirst}></span></section> `; };
	const block1$5 = (context) => { return scopedHtml`<header class="ui5-popup-header-root" id="ui5-popup-header">${ context.header.length ? block2$4() : block3$2(context) }</header>`; };
	const block2$4 = (context) => { return scopedHtml`<slot name="header"></slot>`; };
	const block3$2 = (context) => { return scopedHtml`<h2 class="ui5-popup-header-text">${ifDefined(context.headerText)}</h2>`; };
	const block4$2 = (context) => { return scopedHtml`${ context.footer.length ? block5$2() : undefined }`; };
	const block5$2 = (context) => { return scopedHtml`<footer class="ui5-popup-footer-root"><slot name="footer"></slot></footer>`; };


	const main$8 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$8(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var PopupsCommonCss = ":host{display:none;position:fixed;min-width:6.25rem;background:var(--sapGroup_ContentBackground);box-shadow:var(--sapContent_Shadow2);border-radius:.25rem;min-height:2rem;box-sizing:border-box}.ui5-popup-root{background:inherit;border-radius:inherit;width:100%;height:100%;box-sizing:border-box;display:flex;flex-direction:column;overflow:hidden;max-height:94vh;max-width:90vw}@media screen and (-ms-high-contrast:active){.ui5-popup-root{border:1px solid var(--sapPageFooter_BorderColor)}}.ui5-popup-root .ui5-popup-header-root{box-shadow:var(--sapContent_Shadow0);margin-bottom:.125rem}.ui5-popup-footer-root{background:var(--sapPageFooter_Background);border-top:1px solid var(--sapPageFooter_BorderColor);color:var(--sapPageFooter_TextColor)}.ui5-popup-footer-root,.ui5-popup-header-root,:host([header-text]) .ui5-popup-header-text{margin:0;color:var(--sapPageHeader_TextColor);font-size:1rem;font-weight:400;font-family:\"72override\",var(--sapFontFamily);display:flex;justify-content:center;align-items:center}.ui5-popup-content{overflow:auto;padding:var(--_ui5_popup_content_padding);box-sizing:border-box}:host([no-padding]) .ui5-popup-content{padding:0}:host([header-text]) .ui5-popup-header-text{padding:0 .25rem;text-align:center;min-height:3rem;max-height:3rem;line-height:3rem;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:100%;display:inline-block}:host(:not([header-text])) .ui5-popup-header-text{display:none}:host([disable-scrolling]) .ui5-popup-content{overflow:hidden}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var PopoverCss = ".ui5-popover-arrow{pointer-events:none;display:block;width:1rem;height:1rem;position:absolute;overflow:hidden}.ui5-popover-arrow:after{content:\"\";display:block;width:.7rem;height:.7rem;background-color:var(--sapGroup_ContentBackground);box-shadow:var(--sapContent_Shadow3);transform:rotate(-45deg)}:host([actual-placement-type=Bottom]) .ui5-popover-arrow{left:calc(50% - .5625rem);top:-.5rem;height:.5625rem}:host([actual-placement-type=Bottom]) .ui5-popover-arrow:after{margin:.1875rem 0 0 .1875rem}:host([actual-placement-type=Left]) .ui5-popover-arrow{top:calc(50% - .5625rem);right:-.5625rem;width:.5625rem}:host([actual-placement-type=Left]) .ui5-popover-arrow:after{margin:.1875rem 0 0 -.375rem}:host([actual-placement-type=Left]) [dir=rtl] .ui5-popover-arrow:after{margin:.1875rem .25rem 0 0}:host([actual-placement-type=Bottom]) [dir=rtl] .ui5-popover-arrow:after{margin:.1875rem .125rem 0 0}:host([actual-placement-type=Top]) [dir=rtl] .ui5-popover-arrow:after{margin:-.4375rem .125rem 0 0}:host([actual-placement-type=Top]) .ui5-popover-arrow{left:calc(50% - .5625rem);height:.5625rem;bottom:calc(-1*(var(--_ui5_popup_content_padding) + 2px))}:host([actual-placement-type=Top]) .ui5-popover-arrow:after{margin:-.375rem 0 0 .125rem}:host(:not([actual-placement-type])) .ui5-popover-arrow,:host([actual-placement-type=Right]) .ui5-popover-arrow{left:-.5625rem;top:calc(50% - .5625rem);width:.5625rem;height:1rem}:host(:not([actual-placement-type])) .ui5-popover-arrow:after,:host([actual-placement-type=Right]) .ui5-popover-arrow:after{margin:.125rem 0 0 .25rem}:host(:not([actual-placement-type])) [dir=rtl] .ui5-popover-arrow:after,:host([actual-placement-type=Right]) [dir=rtl] .ui5-popover-arrow:after{margin:.1875rem -.375rem 0 0}:host([no-arrow]) .ui5-popover-arrow{display:none}";

	const arrowSize = 8;

	/**
	 * @public
	 */
	const metadata$6 = {
		tag: "ui5-popover",
		properties: /** @lends sap.ui.webcomponents.main.Popover.prototype */ {
			/**
			 * Defines the header text.
			 * <br><br>
			 * <b>Note:</b> If <code>header</code> slot is provided, the <code>headerText</code> is ignored.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			headerText: {
				type: String,
			},

			/**
			 * Determines on which side the <code>ui5-popover</code> is placed at.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Left</code></li>
			 * <li><code>Right</code></li>
			 * <li><code>Top</code></li>
			 * <li><code>Bottom</code></li>
			 * </ul>
			 *
			 * @type {PopoverPlacementType}
			 * @defaultvalue "Right"
			 * @public
			 */
			placementType: {
				type: PopoverPlacementType,
				defaultValue: PopoverPlacementType.Right,
			},

			/**
			 * Determines the horizontal alignment of the <code>ui5-popover</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Center</code></li>
			 * <li><code>Left</code></li>
			 * <li><code>Right</code></li>
			 * <li><code>Stretch</code></li>
			 * </ul>
			 *
			 * @type {PopoverHorizontalAlign}
			 * @defaultvalue "Center"
			 * @public
			 */
			horizontalAlign: {
				type: PopoverHorizontalAlign,
				defaultValue: PopoverHorizontalAlign.Center,
			},

			/**
			 * Determines the vertical alignment of the <code>ui5-popover</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Center</code></li>
			 * <li><code>Top</code></li>
			 * <li><code>Bottom</code></li>
			 * <li><code>Stretch</code></li>
			 * </ul>
			 *
			 * @type {PopoverVerticalAlign}
			 * @defaultvalue "Center"
			 * @public
			 */
			verticalAlign: {
				type: PopoverVerticalAlign,
				defaultValue: PopoverVerticalAlign.Center,
			},

			/**
			 * Defines whether the <code>ui5-popover</code> should close when
			 * clicking/tapping outside of the popover.
			 * If enabled, it blocks any interaction with the background.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			modal: {
				type: Boolean,
			},

			/**
			 * Defines whether the block layer will be shown if modal property is set to true.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.10
			 */
			hideBackdrop: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-popover</code> arrow is hidden.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			noArrow: {
				type: Boolean,
			},

			/**
			 * Determines if there is no enough space, the <code>ui5-popover</code> can be placed
			 * over the target.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			allowTargetOverlap: {
				type: Boolean,
			},

			/**
			 * Defines whether the content is scrollable.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @private
			 */
			disableScrolling: {
				type: Boolean,
			},

			/**
			 * Sets the X translation of the arrow
			 *
			 * @private
			 */
			arrowTranslateX: {
				type: Integer,
				defaultValue: 0,
				noAttribute: true,
			},

			/**
			 * Sets the Y translation of the arrow
			 *
			 * @private
			 */
			arrowTranslateY: {
				type: Integer,
				defaultValue: 0,
				noAttribute: true,
			},

			/**
			 * Returns the calculated placement depending on the free space
			 *
			 * @private
			 */
			actualPlacementType: {
				type: PopoverPlacementType,
				defaultValue: PopoverPlacementType.Right,
			},

			_maxContentHeight: { type: Integer },
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.Popover.prototype */ {
			/**
			 * Defines the header HTML Element.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			header: {
				type: HTMLElement,
			},

			/**
			 * Defines the footer HTML Element.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			footer: {
				type: HTMLElement,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.Popover.prototype */ {
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-popover</code> component displays additional information for an object
	 * in a compact way and without leaving the page.
	 * The Popover can contain various UI elements, such as fields, tables, images, and charts.
	 * It can also include actions in the footer.
	 *
	 * <h3>Structure</h3>
	 *
	 * The popover has three main areas:
	 * <ul>
	 * <li>Header (optional)</li>
	 * <li>Content</li>
	 * <li>Footer (optional)</li>
	 * </ul>
	 *
	 * <b>Note:</b> The <code>ui5-popover</code> is closed when the user clicks
	 * or taps outside the popover
	 * or selects an action within the popover. You can prevent this with the
	 * <code>modal</code> property.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Popover.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Popover
	 * @extends Popup
	 * @tagname ui5-popover
	 * @since 1.0.0-rc.6
	 * @public
	 */
	class Popover extends Popup {
		static get metadata() {
			return metadata$6;
		}

		static get styles() {
			return [PopupsCommonCss, PopoverCss];
		}

		static get template() {
			return main$8;
		}

		static get MIN_OFFSET() {
			return 10; // px
		}

		isOpenerClicked(event) {
			const target = event.target;
			return target === this._opener || (target.getFocusDomRef && target.getFocusDomRef() === this._opener) || event.composedPath().indexOf(this._opener) > -1;
		}

		/**
		 * Opens the popover.
		 * @param {HTMLElement} opener the element that the popover is opened by
		 * @param {boolean} preventInitialFocus prevents applying the focus inside the popover
		 * @public
		 */
		openBy(opener, preventInitialFocus = false) {
			if (!opener || this.opened) {
				return;
			}

			this._opener = opener;

			super.open(preventInitialFocus);
		}

		/**
		 * Override for the _addOpenedPopup hook, which would otherwise just call addOpenedPopup(this)
		 * @private
		 */
		_addOpenedPopup() {
			addOpenedPopover(this);
		}

		/**
		 * Override for the _removeOpenedPopup hook, which would otherwise just call removeOpenedPopup(this)
		 * @private
		 */
		_removeOpenedPopup() {
			removeOpenedPopover(this);
		}

		shouldCloseDueToOverflow(placement, openerRect) {
			const threshold = 32;
			const limits = {
				"Right": openerRect.right,
				"Left": openerRect.left,
				"Top": openerRect.top,
				"Bottom": openerRect.bottom,
			};

			const closedPopupParent = getClosedPopupParent(this._opener);
			let overflowsBottom = false;
			let overflowsTop = false;

			if (closedPopupParent.openBy) {
				const contentRect = closedPopupParent.contentDOM.getBoundingClientRect();
				overflowsBottom = openerRect.top > (contentRect.top + contentRect.height);
				overflowsTop = (openerRect.top + openerRect.height) < contentRect.top;
			}

			return (limits[placement] < 0 || (limits[placement] + threshold > closedPopupParent.innerHeight)) || overflowsBottom || overflowsTop;
		}

		shouldCloseDueToNoOpener(openerRect) {
			return openerRect.top === 0
				&& openerRect.bottom === 0
				&& openerRect.left === 0
				&& openerRect.right === 0;
		}

		reposition() {
			this.show();
		}

		show() {
			let placement;
			const popoverSize = this.popoverSize;
			const openerRect = this._opener.getBoundingClientRect();

			if (this.shouldCloseDueToNoOpener(openerRect) && this.isFocusWithin()) {
				// reuse the old placement as the opener is not available,
				// but keep the popover open as the focus is within
				placement = this._oldPlacement;
			} else {
				placement = this.calcPlacement(openerRect, popoverSize);
			}

			const stretching = this.horizontalAlign === PopoverHorizontalAlign.Stretch;

			if (this._preventRepositionAndClose) {
				return this.close();
			}

			if (this._oldPlacement && (this._oldPlacement.left === placement.left) && (this._oldPlacement.top === placement.top) && stretching) {
				super.show();
				this.style.width = this._width;
				return;
			}

			this._oldPlacement = placement;

			const popoverOnLeftBorder = this._left === 0;
			const popoverOnTopBorder = this._top === 0;

			this.actualPlacementType = placement.placementType;
			this.arrowTranslateX = popoverOnLeftBorder ? placement.arrowX - Popover.MIN_OFFSET : placement.arrowX;
			this.arrowTranslateY = popoverOnTopBorder ? placement.arrowY - Popover.MIN_OFFSET : placement.arrowY;

			this.style.left = `${popoverOnLeftBorder ? Popover.MIN_OFFSET : this._left}px`;
			this.style.top = `${popoverOnTopBorder ? Popover.MIN_OFFSET : this._top}px`;
			super.show();

			if (stretching && this._width) {
				this.style.width = this._width;
			}
		}

		get popoverSize() {
			let width,
				height;
			let rect = this.getBoundingClientRect();

			if (this.opened) {
				width = rect.width;
				height = rect.height;

				return { width, height };
			}

			this.style.visibility = "hidden";
			this.style.display = "block";

			rect = this.getBoundingClientRect();

			width = rect.width;
			height = rect.height;

			this.hide();
			this.style.visibility = "visible";

			return { width, height };
		}

		get contentDOM() {
			return this.shadowRoot.querySelector(".ui5-popup-content");
		}

		get arrowDOM() {
			return this.shadowRoot.querySelector(".ui5-popover-arrow");
		}

		calcPlacement(targetRect, popoverSize) {
			let left = 0;
			let top = 0;
			const allowTargetOverlap = this.allowTargetOverlap;

			const clientWidth = document.documentElement.clientWidth;
			const clientHeight = document.documentElement.clientHeight;

			let maxHeight = clientHeight;

			let width = "";
			let height = "";

			const placementType = this.getActualPlacementType(targetRect, popoverSize);

			this._preventRepositionAndClose = this.shouldCloseDueToNoOpener(targetRect) || this.shouldCloseDueToOverflow(placementType, targetRect);

			const isVertical = placementType === PopoverPlacementType.Top
				|| placementType === PopoverPlacementType.Bottom;

			if (this.horizontalAlign === PopoverHorizontalAlign.Stretch && isVertical) {
				popoverSize.width = targetRect.width;
				width = `${targetRect.width}px`;
			} else if (this.verticalAlign === PopoverVerticalAlign.Stretch && !isVertical) {
				popoverSize.height = targetRect.height;
				height = `${targetRect.height}px`;
			}

			this._width = width;
			this._height = height;

			const arrowOffset = this.noArrow ? 0 : arrowSize;

			// calc popover positions
			switch (placementType) {
			case PopoverPlacementType.Top:
				left = this.getVerticalLeft(targetRect, popoverSize);
				top = Math.max(targetRect.top - popoverSize.height - arrowOffset, 0);

				if (!allowTargetOverlap) {
					maxHeight = targetRect.top - arrowOffset;
				}
				break;
			case PopoverPlacementType.Bottom:
				left = this.getVerticalLeft(targetRect, popoverSize);

				if (allowTargetOverlap) {
					top = Math.max(Math.min(targetRect.bottom + arrowOffset, clientHeight - popoverSize.height), 0);
				} else {
					top = targetRect.bottom + arrowOffset;
					maxHeight = clientHeight - targetRect.bottom - arrowOffset;
				}
				break;
			case PopoverPlacementType.Left:
				left = Math.max(targetRect.left - popoverSize.width - arrowOffset, 0);
				top = this.getHorizontalTop(targetRect, popoverSize);
				break;
			case PopoverPlacementType.Right:
				if (allowTargetOverlap) {
					left = Math.max(Math.min(targetRect.left + targetRect.width + arrowOffset, clientWidth - popoverSize.width), 0);
				} else {
					left = targetRect.left + targetRect.width + arrowOffset;
				}

				top = this.getHorizontalTop(targetRect, popoverSize);
				break;
			}

			// correct popover positions
			if (isVertical) {
				if (popoverSize.width > clientWidth || left < 0) {
					left = 0;
				} else if (left + popoverSize.width > clientWidth) {
					left -= left + popoverSize.width - clientWidth;
				}
			} else {
				if (popoverSize.height > clientHeight || top < 0) { // eslint-disable-line
					top = 0;
				} else if (top + popoverSize.height > clientHeight) {
					top -= top + popoverSize.height - clientHeight;
				}
			}

			let maxContentHeight = Math.round(maxHeight);

			const hasHeader = this.header.length || this.headerText;

			if (hasHeader) {
				const headerDomRef = this.shadowRoot.querySelector(".ui5-popup-header-root")
					|| this.shadowRoot.querySelector(".ui5-popup-header-text");

				if (headerDomRef) {
					maxContentHeight = Math.round(maxHeight - headerDomRef.offsetHeight);
				}
			}

			this._maxContentHeight = maxContentHeight;

			const arrowXCentered = this.horizontalAlign === PopoverHorizontalAlign.Center || this.horizontalAlign === PopoverHorizontalAlign.Stretch;
			const arrowTranslateX = isVertical && arrowXCentered ? targetRect.left + targetRect.width / 2 - left - popoverSize.width / 2 : 0;
			const arrowTranslateY = !isVertical ? targetRect.top + targetRect.height / 2 - top - popoverSize.height / 2 : 0;

			if (this._left === undefined || Math.abs(this._left - left) > 1.5) {
				this._left = Math.round(left);
			}

			if (this._top === undefined || Math.abs(this._top - top) > 1.5) {
				this._top = Math.round(top);
			}

			return {
				arrowX: Math.round(arrowTranslateX),
				arrowY: Math.round(arrowTranslateY),
				top: this._top,
				left: this._left,
				placementType,
			};
		}

		/**
		 * Fallbacks to new placement, prioritizing <code>Left</code> and <code>Right</code> placements.
		 * @private
		 */
		fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) {
			if (targetRect.left > popoverSize.width) {
				return PopoverPlacementType.Left;
			}

			if (clientWidth - targetRect.right > targetRect.left) {
				return PopoverPlacementType.Right;
			}

			if (clientHeight - targetRect.bottom > popoverSize.height) {
				return PopoverPlacementType.Bottom;
			}

			if (clientHeight - targetRect.bottom < targetRect.top) {
				return PopoverPlacementType.Top;
			}
		}

		getActualPlacementType(targetRect, popoverSize) {
			const placementType = this.placementType;
			let actualPlacementType = placementType;

			const clientWidth = document.documentElement.clientWidth;
			const clientHeight = document.documentElement.clientHeight;

			switch (placementType) {
			case PopoverPlacementType.Top:
				if (targetRect.top < popoverSize.height
					&& targetRect.top < clientHeight - targetRect.bottom) {
					actualPlacementType = PopoverPlacementType.Bottom;
				}
				break;
			case PopoverPlacementType.Bottom:
				if (clientHeight - targetRect.bottom < popoverSize.height
					&& clientHeight - targetRect.bottom < targetRect.top) {
					actualPlacementType = PopoverPlacementType.Top;
				}
				break;
			case PopoverPlacementType.Left:
				if (targetRect.left < popoverSize.width) {
					actualPlacementType = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placementType;
				}
				break;
			case PopoverPlacementType.Right:
				if (clientWidth - targetRect.right < popoverSize.width) {
					actualPlacementType = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placementType;
				}
				break;
			}

			return actualPlacementType;
		}

		getVerticalLeft(targetRect, popoverSize) {
			let left;

			switch (this.horizontalAlign) {
			case PopoverHorizontalAlign.Center:
			case PopoverHorizontalAlign.Stretch:
				left = targetRect.left - (popoverSize.width - targetRect.width) / 2;
				break;
			case PopoverHorizontalAlign.Left:
				left = targetRect.left;
				break;
			case PopoverHorizontalAlign.Right:
				left = targetRect.right - popoverSize.width;
				break;
			}

			return left;
		}

		getHorizontalTop(targetRect, popoverSize) {
			let top;

			switch (this.verticalAlign) {
			case PopoverVerticalAlign.Center:
			case PopoverVerticalAlign.Stretch:
				top = targetRect.top - (popoverSize.height - targetRect.height) / 2;
				break;
			case PopoverVerticalAlign.Top:
				top = targetRect.top;
				break;
			case PopoverVerticalAlign.Bottom:
				top = targetRect.bottom - popoverSize.height;
				break;
			}

			return top;
		}

		get isModal() { // Required by Popup.js
			return this.modal;
		}

		get shouldHideBackdrop() { // Required by Popup.js
			return this.hideBackdrop;
		}

		get _ariaLabelledBy() { // Required by Popup.js
			return this.ariaLabel ? undefined : "ui5-popup-header";
		}

		get _ariaModal() { // Required by Popup.js
			return true;
		}

		get styles() {
			return {
				...super.styles,
				content: {
					"max-height": `${this._maxContentHeight}px`,
				},
				arrow: {
					transform: `translate(${this.arrowTranslateX}px, ${this.arrowTranslateY}px)`,
				},
			};
		}

		get classes() {
			return {
				root: {
					"ui5-popup-root": true,
				},
				content: {
					"ui5-popup-content": true,
				},
			};
		}

		/**
		 * Hook for descendants to hide header.
		 */
		get _displayHeader() {
			return true;
		}

		/**
		 * Hook for descendants to hide footer.
		 */
		get _displayFooter() {
			return true;
		}
	}

	Popover.define();

	const name$4 = "resize-corner";
	const pathData$4 = "M384 224v32q0 12-10 22L182 470q-10 10-22 10h-32zM224 480l160-160v32q0 12-10 22l-96 96q-10 10-22 10h-32zm160-64v32q0 12-10 22t-22 10h-32z";
	const ltr$4 = false;
	const collection$4 = "SAP-icons";

	registerIcon(name$4, { pathData: pathData$4, ltr: ltr$4, collection: collection$4});

	const block0$9 = (context) => { return scopedHtml`<section style="${styleMap(context.styles.root)}" class="${classMap(context.classes.root)}" role="dialog" aria-modal="${ifDefined(context._ariaModal)}" aria-label="${ifDefined(context._ariaLabel)}" aria-labelledby="${ifDefined(context._ariaLabelledBy)}" dir="${ifDefined(context.dir)}"><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToLast}></span><header class="ui5-popup-header-root" id="ui5-popup-header" @mousedown="${context._onDragMouseDown}">${ context.header.length ? block1$6() : block2$5(context) }</header><div style="${styleMap(context.styles.content)}" class="${classMap(context.classes.content)}"  @scroll="${context._scroll}"><slot></slot></div>${ context.footer.length ? block3$3() : undefined }${ context.resizable ? block4$3(context) : undefined }<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${context.forwardToFirst}></span></section> `; };
	const block1$6 = (context) => { return scopedHtml`<slot name="header"></slot>`; };
	const block2$5 = (context) => { return scopedHtml`<h2 class="ui5-popup-header-text">${ifDefined(context.headerText)}</h2>`; };
	const block3$3 = (context) => { return scopedHtml`<footer class="ui5-popup-footer-root"><slot name="footer"></slot></footer>`; };
	const block4$3 = (context) => { return scopedHtml`<ui5-icon name="resize-corner" dir="${ifDefined(context.effectiveDir)}" class="ui5-popup-resize-handle" @mousedown="${context._onResizeMouseDown}"></ui5-icon>`; };


	const main$9 = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$9(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var dialogCSS = ":host{min-width:20rem;min-height:6rem;box-shadow:var(--sapContent_Shadow3)}:host([stretch]){width:90%;height:90%}:host([stretch][on-phone]){width:100%;height:100%}:host([stretch][on-phone]) .ui5-popup-root{max-height:100vh;max-width:100vw}:host([draggable]) .ui5-popup-header-root,:host([draggable]) ::slotted([slot=header]){cursor:move}:host([draggable]) .ui5-popup-header-root *{cursor:auto}.ui5-popup-root{display:flex;flex-direction:column;max-width:100vw}.ui5-popup-content{min-height:var(--_ui5_dialog_content_min_height);flex:1 1 auto}.ui5-popup-resize-handle{position:absolute;bottom:-.0625rem;right:-.25rem;cursor:se-resize;color:var(--_ui5_dialog_resize_handle_color)}.ui5-popup-resize-handle[dir=rtl]{left:-.25rem;right:unset;cursor:sw-resize}";

	/**
	 * @public
	 */
	const metadata$7 = {
		tag: "ui5-dialog",
		slots: /** @lends  sap.ui.webcomponents.main.Popup.prototype */ {
			/**
			 * Defines the header HTML Element.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			header: {
				type: HTMLElement,
			},

			/**
			 * Defines the footer HTML Element.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			footer: {
				type: HTMLElement,
			},
		},
		properties: /** @lends  sap.ui.webcomponents.main.Dialog.prototype */ {
			/**
			 * Defines the header text.
			 * <br><br>
			 * <b>Note:</b> If <code>header</code> slot is provided, the <code>headerText</code> is ignored.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			headerText: {
				type: String,
			},

			/**
			 * Determines whether the <code>ui5-dialog</code> should be stretched to fullscreen.
			 * <br><br>
			 * <b>Note:</b> The <code>ui5-dialog</code> will be stretched to approximately
			 * 90% of the viewport.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			stretch: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-dialog</code> is draggable.
			 * If this property is set to true, the Dialog will be draggable by its header.
			 * <br><br>
			 * <b>Note:</b> The <code>ui5-dialog</code> can be draggable only in desktop mode.
			 * @type {boolean}
			 * @defaultvalue false
			 * @since 1.0.0-rc.9
			 * @public
			 */
			draggable: {
				type: Boolean,
			},

			/**
			 * Configures the <code>ui5-dialog</code> to be resizable.
			 * If this property is set to true, the Dialog will have a resize handle in its bottom right corner in LTR languages.
			 * In RTL languages, the resize handle will be placed in the bottom left corner.
			 * <br><br>
			 * <b>Note:</b> The <code>ui5-dialog</code> can be resizable only in desktop mode.
			 * <br>
			 * <b>Note:</b> Upon resizing, externally defined height and width styling will be ignored.
			 * @type {boolean}
			 * @defaultvalue false
			 * @since 1.0.0-rc.10
			 * @public
			 */
			resizable: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			onPhone: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			onDesktop: {
				type: Boolean,
			},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 * The <code>ui5-dialog</code> component is used to temporarily display some information in a
	 * size-limited window in front of the regular app screen.
	 * It is used to prompt the user for an action or a confirmation.
	 * The <code>ui5-dialog</code> interrupts the current app processing as it is the only focused UI element and
	 * the main screen is dimmed/blocked.
	 * The dialog combines concepts known from other technologies where the windows have
	 * names such as dialog box, dialog window, pop-up, pop-up window, alert box, or message box.
	 * <br><br>
	 * The <code>ui5-dialog</code> is modal, which means that user action is required before returning to the parent window is possible.
	 * The content of the <code>ui5-dialog</code> is fully customizable.
	 *
	 * <h3>Structure</h3>
	 * A <code>ui5-dialog</code> consists of a header, content, and a footer for action buttons.
	 * The <code>ui5-dialog</code> is usually displayed at the center of the screen.
	 * Its position can be changed by the user. To enable this, you need to set the property <code>draggable</code> accordingly.


	 *
	 * <h3>Responsive Behavior</h3>
	 * The <code>stretch</code> property can be used to stretch the
	 * <code>ui5-dialog</code> on full screen.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Dialog";</code>
	 *
	 * <b>Note:</b> We don't recommend nesting popup-like components (<code>ui5-dialog</code>, <code>ui5-popover</code>) inside <code>ui5-dialog</code>.
	 * Ideally you should create all popups on the same level inside your HTML page and just open them from one another, rather than nesting them.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Dialog
	 * @extends Popup
	 * @tagname ui5-dialog
	 * @public
	 */
	class Dialog extends Popup {
		constructor() {
			super();

			this._screenResizeHandler = this._center.bind(this);

			this._dragMouseMoveHandler = this._onDragMouseMove.bind(this);
			this._dragMouseUpHandler = this._onDragMouseUp.bind(this);

			this._resizeMouseMoveHandler = this._onResizeMouseMove.bind(this);
			this._resizeMouseUpHandler = this._onResizeMouseUp.bind(this);
		}

		static get metadata() {
			return metadata$7;
		}

		static get dependencies() {
			return [
				Icon,
			];
		}

		static get template() {
			return main$9;
		}

		static get styles() {
			return [PopupsCommonCss, dialogCSS];
		}

		get isModal() { // Required by Popup.js
			return true;
		}

		get shouldHideBackdrop() { // Required by Popup.js
			return false;
		}

		get _ariaLabelledBy() { // Required by Popup.js
			return this.ariaLabel ? undefined : "ui5-popup-header";
		}

		get _ariaModal() { // Required by Popup.js
			return true;
		}

		get _displayProp() {
			return "flex";
		}

		get classes() {
			return {
				root: {
					"ui5-popup-root": true,
				},
				content: {
					"ui5-popup-content": true,
				},
			};
		}

		show() {
			super.show();
			this._center();
		}

		_clamp(val, min, max) {
			return Math.min(Math.max(val, min), max);
		}

		onBeforeRendering() {
			this._isRTL = this.effectiveDir === "rtl";
			this.onPhone = isPhone();
			this.onDesktop = isDesktop();
		}

		onEnterDOM() {
			ResizeHandler.register(this, this._screenResizeHandler);
			ResizeHandler.register(document.body, this._screenResizeHandler);
		}

		onExitDOM() {
			ResizeHandler.deregister(this, this._screenResizeHandler);
			ResizeHandler.deregister(document.body, this._screenResizeHandler);
		}

		_center() {
			const height = window.innerHeight - this.offsetHeight,
				width = window.innerWidth - this.offsetWidth;

			Object.assign(this.style, {
				top: `${Math.round(height / 2)}px`,
				left: `${Math.round(width / 2)}px`,
			});
		}

		_revertSize() {
			Object.assign(this.style, {
				top: "",
				left: "",
				width: "",
				height: "",
			});
			this.removeEventListener("ui5-before-close", this._revertSize);
		}

		/**
		 * Event handlers
		 */
		_onDragMouseDown(event) {
			if (!(this.draggable && this.onDesktop)) {
				return;
			}

			// only allow dragging on the header's whitespace
			if (!event.target.classList.contains("ui5-popup-header-root")
				&& event.target.getAttribute("slot") !== "header") {
				return;
			}

			event.preventDefault();

			const {
				top,
				left,
			} = this.getBoundingClientRect();
			const {
				width,
				height,
			} = window.getComputedStyle(this);

			Object.assign(this.style, {
				top: `${top}px`,
				left: `${left}px`,
				width: `${Math.round(Number.parseFloat(width) * 100) / 100}px`,
				height: `${Math.round(Number.parseFloat(height) * 100) / 100}px`,
			});

			this._x = event.clientX;
			this._y = event.clientY;

			this._attachDragHandlers();
		}

		_onDragMouseMove(event) {
			event.preventDefault();

			const calcX = this._x - event.clientX;
			const calcY = this._y - event.clientY;
			const {
				left,
				top,
			} = this.getBoundingClientRect();

			Object.assign(this.style, {
				left: `${Math.floor(left - calcX)}px`,
				top: `${Math.floor(top - calcY)}px`,
			});

			this._x = event.clientX;
			this._y = event.clientY;
		}

		_onDragMouseUp() {
			this._x = null;
			this._y = null;

			this._detachDragHandlers();
		}

		_attachDragHandlers() {
			ResizeHandler.deregister(this, this._screenResizeHandler);
			ResizeHandler.deregister(document.body, this._screenResizeHandler);

			window.addEventListener("mousemove", this._dragMouseMoveHandler);
			window.addEventListener("mouseup", this._dragMouseUpHandler);
		}

		_detachDragHandlers() {
			window.removeEventListener("mousemove", this._dragMouseMoveHandler);
			window.removeEventListener("mouseup", this._dragMouseUpHandler);
		}

		_onResizeMouseDown(event) {
			if (!(this.resizable && this.onDesktop)) {
				return;
			}

			event.preventDefault();

			const {
				top,
				left,
			} = this.getBoundingClientRect();
			const {
				width,
				height,
				minWidth,
				minHeight,
			} = window.getComputedStyle(this);

			this._initialX = event.clientX;
			this._initialY = event.clientY;
			this._initialWidth = Number.parseFloat(width);
			this._initialHeight = Number.parseFloat(height);
			this._initialTop = top;
			this._initialLeft = left;
			this._minWidth = Number.parseFloat(minWidth);
			this._minHeight = Number.parseFloat(minHeight);

			Object.assign(this.style, {
				top: `${top}px`,
				left: `${left}px`,
			});

			this._attachResizeHandlers();
		}

		_onResizeMouseMove(event) {
			const { clientX, clientY } = event;

			let newWidth;
			let newLeft;

			if (this._isRTL) {
				newWidth = this._clamp(
					this._initialWidth - (clientX - this._initialX),
					this._minWidth,
					this._initialLeft + this._initialWidth
				);

				newLeft = this._clamp(
					this._initialLeft + (clientX - this._initialX),
					0,
					this._initialX + this._initialWidth - this._minWidth
				);
			} else {
				newWidth = this._clamp(
					this._initialWidth + (clientX - this._initialX),
					this._minWidth,
					window.innerWidth - this._initialLeft
				);
			}

			const newHeight = this._clamp(
				this._initialHeight + (clientY - this._initialY),
				this._minHeight,
				window.innerHeight - this._initialTop
			);

			Object.assign(this.style, {
				height: `${newHeight}px`,
				width: `${newWidth}px`,
				left: newLeft ? `${newLeft}px` : undefined,
			});
		}

		_onResizeMouseUp() {
			this._initialX = null;
			this._initialY = null;
			this._initialWidth = null;
			this._initialHeight = null;
			this._initialTop = null;
			this._initialLeft = null;
			this._minWidth = null;
			this._minHeight = null;

			this._detachResizeHandlers();
		}

		_attachResizeHandlers() {
			ResizeHandler.deregister(this, this._screenResizeHandler);
			ResizeHandler.deregister(document.body, this._screenResizeHandler);

			window.addEventListener("mousemove", this._resizeMouseMoveHandler);
			window.addEventListener("mouseup", this._resizeMouseUpHandler);
			this.addEventListener("ui5-before-close", this._revertSize);
		}

		_detachResizeHandlers() {
			window.removeEventListener("mousemove", this._resizeMouseMoveHandler);
			window.removeEventListener("mouseup", this._resizeMouseUpHandler);
		}
	}

	Dialog.define();

	/**
	 * @lends sap.ui.webcomponents.main.types.TitleLevel.prototype
	 * @public
	 */
	const TitleLevels = {
		/**
		 * Renders <code>h1</code> tag.
		 * @public
		 * @type {H1}
		 */
		H1: "H1",

		/**
		 * Renders <code>h2</code> tag.
		 * @public
		 * @type {H2}
		 */
		H2: "H2",

		/**
		 * Renders <code>h3</code> tag.
		 * @public
		 * @type {H3}
		 */
		H3: "H3",

		/**
		 * Renders <code>h4</code> tag.
		 * @public
		 * @type {H4}
		 */
		H4: "H4",

		/**
		 * Renders <code>h5</code> tag.
		 * @public
		 * @type {H5}
		 */
		H5: "H5",

		/**
		 * Renders <code>h6</code> tag.
		 * @public
		 * @type {H6}
		 */
		H6: "H6",
	};

	/**
	 * @class
	 * Defines the <code>ui5-title</code> level
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.TitleLevel
	 * @public
	 * @enum {string}
	 */
	class TitleLevel extends DataType {
		static isValid(value) {
			return !!TitleLevels[value];
		}
	}

	TitleLevel.generateTypeAccessors(TitleLevels);

	const block0$a = (context) => { return scopedHtml`${ context.h1 ? block1$7(context) : undefined }${ context.h2 ? block2$6(context) : undefined }${ context.h3 ? block3$4(context) : undefined }${ context.h4 ? block4$4(context) : undefined }${ context.h5 ? block5$3(context) : undefined }${ context.h6 ? block6$2(context) : undefined }`; };
	const block1$7 = (context) => { return scopedHtml`<h1 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h1>`; };
	const block2$6 = (context) => { return scopedHtml`<h2 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h2>`; };
	const block3$4 = (context) => { return scopedHtml`<h3 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h3>`; };
	const block4$4 = (context) => { return scopedHtml`<h4 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h4>`; };
	const block5$3 = (context) => { return scopedHtml`<h5 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h5>`; };
	const block6$2 = (context) => { return scopedHtml`<h6 class="ui5-title-root"><span id="${ifDefined(context._id)}-inner"><slot></slot></span></h6>`; };


	const main$a = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$a(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var titleCss = ":host(:not([hidden])){display:block;cursor:text}:host{max-width:100%;color:var(--sapGroup_TitleTextColor);font-size:var(--ui5_title_level_2Size);font-family:\"72override\",var(--sapFontFamily);text-shadow:var(--sapContent_TextShadow)}.ui5-title-root{display:inline-block;position:relative;font-weight:400;font-size:inherit;box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:100%;vertical-align:bottom;-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;margin:0;cursor:inherit}:host([wrap]) .ui5-title-root{white-space:pre-line}:host([level=H1]){font-size:var(--ui5_title_level_1Size)}:host([level=H2]){font-size:var(--ui5_title_level_2Size)}:host([level=H3]){font-size:var(--ui5_title_level_3Size)}:host([level=H4]){font-size:var(--ui5_title_level_4Size)}:host([level=H5]){font-size:var(--ui5_title_level_5Size)}:host([level=H6]){font-size:var(--ui5_title_level_6Size)}";

	/**
	 * @public
	 */
	const metadata$8 = {
		tag: "ui5-title",
		properties: /** @lends sap.ui.webcomponents.main.Title.prototype */ {

			/**
			 * Defines whether the <code>ui5-title</code> would wrap.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			*/
			wrap: {
				type: Boolean,
			},

			/**
			 * Defines the <code>ui5-title</code> level.
			 * Available options are: <code>"H6"</code> to <code>"H1"</code>.
			 *
			 * @type {TitleLevel}
			 * @defaultvalue "H2"
			 * @public
			*/
			level: {
				type: TitleLevel,
				defaultValue: TitleLevel.H2,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.Title.prototype */ {
			/**
			 * Defines the text of the <code>ui5-title</code>.
			 * <br><br>
			 * <b>Note:</b> Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-title</code> component is used to display titles inside a page.
	 * It is a simple, large-sized text with explicit header/title semantics.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Title";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Title
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-title
	 * @public
	 */
	class Title extends UI5Element {
		static get metadata() {
			return metadata$8;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$a;
		}

		static get styles() {
			return titleCss;
		}

		get normalizedLevel() {
			return this.level.toLowerCase();
		}

		get h1() {
			return this.normalizedLevel === "h1";
		}

		get h2() {
			return this.normalizedLevel === "h2";
		}

		get h3() {
			return this.normalizedLevel === "h3";
		}

		get h4() {
			return this.normalizedLevel === "h4";
		}

		get h5() {
			return this.normalizedLevel === "h5";
		}

		get h6() {
			return this.normalizedLevel === "h6";
		}
	}

	Title.define();

	const name$5 = "decline";
	const pathData$5 = "M86 109l22-23q5-5 12-5 6 0 11 5l124 125L380 86q5-5 11-5 7 0 12 5l22 23q12 11 0 23L301 256l124 125q11 11 0 22l-22 23q-8 5-12 5-3 0-11-5L255 301 131 426q-5 5-11 5-4 0-12-5l-22-23q-11-11 0-22l124-125L86 132q-12-12 0-23z";
	const ltr$5 = false;
	const collection$5 = "SAP-icons";

	registerIcon(name$5, { pathData: pathData$5, ltr: ltr$5, collection: collection$5});

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var ResponsivePopoverCss = ":host{--_ui5_input_width:100%;min-width:6.25rem;min-height:2rem}:host(:not([with-padding])){--_ui5_popup_content_padding:0}:host([opened]){display:inline-block}.ui5-responsive-popover-header{height:var(--_ui5-responnsive_popover_header_height);display:flex;justify-content:space-between;align-items:center;padding:0 1rem;box-shadow:var(--sapContent_HeaderShadow)}:host [dir=rtl] .ui5-responsive-popover-header{padding:0 1rem 0 0}.ui5-responsive-popover-header-text{display:flex;align-items:center;width:calc(100% - var(--_ui5_button_base_min_width))}";

	const POPOVER_MIN_WIDTH = 100;

	/**
	 * @public
	 */
	const metadata$9 = {
		tag: "ui5-responsive-popover",
		properties: /** @lends sap.ui.webcomponents.main.ResponsivePopover.prototype */ {

			/**
			 * Defines whether the component will stretch to fit its content.
			 * <br/><b>Note:</b> by default the popover will be as wide as its opener component and will grow if the content is not fitting.
			 * <br/><b>Note:</b> if set to true, it will take only as much space as it needs.
			 * @private
			 */
			noStretch: {
				type: Boolean,
			},

			/**
			 * Defines if padding would be added around the content.
			 * @private
			 */
			withPadding: {
				type: Boolean,
			},

			/**
			 * Defines if only the content would be displayed (without header and footer) in the popover on Desktop.
			 * By default both the header and footer would be displayed.
			 * @private
			 */
			contentOnlyOnDesktop: {
				type: Boolean,
			},

			/**
			 * Used internaly for controls which must not have header.
			 * @private
			 */
			_hideHeader: {
				type: Boolean,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 * The <code>ui5-responsive-popover</code> acts as a Popover on desktop and tablet, while on phone it acts as a Dialog.
	 * The component improves tremendously the user experience on mobile.
	 *
	 * <h3>Usage</h3>
	 * Use it when you want to make sure that all the content is visible on any device.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.ResponsivePopover
	 * @extends Popover
	 * @tagname ui5-responsive-popover
	 * @since 1.0.0-rc.6
	 * @public
	 */
	class ResponsivePopover extends Popover {
		static get metadata() {
			return metadata$9;
		}

		static get styles() {
			return [Popover.styles, ResponsivePopoverCss];
		}

		static get template() {
			return main$5;
		}

		static get dependencies() {
			return [
				Button,
				Dialog,
				Title,
			];
		}

		/**
		 * Opens popover on desktop and dialog on mobile.
		 * @param {HTMLElement} opener the element that the popover is opened by
		 * @public
		 */
		open(opener) {
			this.style.display = this._isPhone ? "contents" : "";

			if (this.isOpen() || (this._dialog && this._dialog.isOpen())) {
				return;
			}

			if (!isPhone()) {
				// make popover width be >= of the opener's width
				if (!this.noStretch) {
					this._minWidth = Math.max(POPOVER_MIN_WIDTH, opener.getBoundingClientRect().width);
				}

				this.openBy(opener);
			} else {
				this.style.zIndex = getNextZIndex();
				this._dialog.open();
			}
		}

		/**
		 * Closes the popover/dialog.
		 * @public
		 */
		close(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
			if (!isPhone()) {
				super.close(escPressed, preventRegistryUpdate, preventFocusRestore);
			} else {
				this._dialog.close();
			}
		}

		toggle(opener) {
			if (this.isOpen()) {
				return this.close();
			}

			this.open(opener);
		}

		isOpen() {
			return isPhone() ? this._dialog.isOpen() : super.isOpen();
		}

		get styles() {
			const popoverStyles = super.styles;

			popoverStyles.root = {
				"min-width": `${this._minWidth}px`,
			};

			return popoverStyles;
		}

		get _dialog() {
			return this.shadowRoot.querySelector("[ui5-dialog]");
		}

		get _isPhone() {
			return isPhone();
		}

		get _displayHeader() {
			return this._isPhone || !this.contentOnlyOnDesktop;
		}

		get _displayFooter() {
			return this._isPhone || !this.contentOnlyOnDesktop;
		}

		_afterDialogOpen(event) {
			this.opened = true;
			this._propagateDialogEvent(event);
		}

		_afterDialogClose(event) {
			this.opened = false;
			this._propagateDialogEvent(event);
		}

		_propagateDialogEvent(event) {
			const type = event.type.replace("ui5-", "");

			this.fireEvent(type, event.detail);
		}
	}

	ResponsivePopover.define();

	/**
	 * @lends sap.ui.webcomponents.main.types.TabContainerTabsPlacement.prototype
	 * @public
	 */
	const TabContainerTabsPlacements = {
		/**
		 * The tab strip is displayed above the tab content (Default)
		 * @public
		 * @type {Top}
		 */
		Top: "Top",

		/**
		 * The tab strip is displayed below the tab content
		 * @public
		 * @type {Bottom}
		 */
		Bottom: "Bottom",
	};

	/**
	 * @class
	 * Different options for the position of the tab strip relative to the tab content area.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.TabContainerTabsPlacement
	 * @public
	 * @enum {string}
	 */
	class TabContainerTabsPlacement extends DataType {
		static isValid(value) {
			return !!TabContainerTabsPlacements[value];
		}
	}

	TabContainerTabsPlacement.generateTypeAccessors(TabContainerTabsPlacements);

	const block0$b = (context) => { return scopedHtml`<div class="${classMap(context.classes.root)}" dir="${ifDefined(context.effectiveDir)}">${ context.tabsAtTheBottom ? block1$8(context) : undefined }<div class="${classMap(context.classes.header)}" id="${ifDefined(context._id)}-header"><ui5-icon @click="${context._onHeaderBackArrowClick}" class="${classMap(context.classes.headerBackArrow)}" name="slim-arrow-left" tabindex="-1" accessible-name="${ifDefined(context.previousIconACCName)}" show-tooltip></ui5-icon><!-- tab items --><div class="${classMap(context.classes.headerScrollContainer)}" id="${ifDefined(context._id)}-headerScrollContainer"><ul role="tablist" class="${classMap(context.classes.headerList)}" @click="${context._onHeaderClick}" @keydown="${context._onHeaderKeyDown}" @keyup="${context._onHeaderKeyUp}">${ repeat(context.items, (item, index) => item._id || index, (item, index) => block4$5(item, index, context)) }</ul></div><ui5-icon @click="${context._onHeaderForwardArrowClick}" class="${classMap(context.classes.headerForwardArrow)}" name="slim-arrow-right" tabindex="-1" accessible-name="${ifDefined(context.nextIconACCName)}" show-tooltip></ui5-icon><!-- overflow button -->${ context.shouldShowOverflow ? block7$2(context) : undefined }</div>${ !context.tabsAtTheBottom ? block10$1(context) : undefined }</div> `; };
	const block1$8 = (context) => { return scopedHtml`<div class="${classMap(context.classes.content)}">${ repeat(context.items, (item, index) => item._id || index, (item, index) => block2$7(item)) }</div>`; };
	const block2$7 = (item, index, context) => { return scopedHtml`${ !item.isSeparator ? block3$5(item) : undefined }`; };
	const block3$5 = (item, index, context) => { return scopedHtml`<div class="ui5-tc__contentItem" id="ui5-tc-contentItem-${ifDefined(item._posinset)}" ?hidden="${item.effectiveHidden}" role="tabpanel" aria-labelledby="${ifDefined(item._id)}"><slot name="${ifDefined(item._individualSlot)}"></slot></div>`; };
	const block4$5 = (item, index, context) => { return scopedHtml`${ !item.isSeparator ? block5$4(item) : undefined }${ item.isSeparator ? block6$3(item, index, context) : undefined }`; };
	const block5$4 = (item, index, context) => { return scopedHtml`${ifDefined(item.stripPresentation)}`; };
	const block6$3 = (item, index, context) => { return scopedHtml`<li id="${ifDefined(item._id)}" role="separator" class="${classMap(context.classes.separator)}" style="list-style-type: none;"></li>`; };
	const block7$2 = (context) => { return scopedHtml`<div class="ui-tc__overflowButton" @click="${context._onOverflowButtonClick}">${ context.overflowButton.length ? block8$1() : block9$1(context) }</div>`; };
	const block8$1 = (context) => { return scopedHtml`<slot name="overflowButton"></slot>`; };
	const block9$1 = (context) => { return scopedHtml`<ui5-button icon="${ifDefined(context.overflowMenuIcon)}" design="Transparent" aria-label="${ifDefined(context.overflowMenuTitle)}" aria-haspopup="true"></ui5-button>`; };
	const block10$1 = (context) => { return scopedHtml`<div class="${classMap(context.classes.content)}">${ repeat(context.items, (item, index) => item._id || index, (item, index) => block11(item)) }</div>`; };
	const block11 = (item, index, context) => { return scopedHtml`${ !item.isSeparator ? block12(item) : undefined }`; };
	const block12 = (item, index, context) => { return scopedHtml`<div class="ui5-tc__contentItem" id="ui5-tc-contentItem-${ifDefined(item._posinset)}" ?hidden="${item.effectiveHidden}" role="tabpanel" aria-labelledby="${ifDefined(item._id)}"><slot name="${ifDefined(item._individualSlot)}"></slot></div>`; };


	const main$b = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$b(context);
	};

	const block0$c = (context) => { return scopedHtml`<ui5-responsive-popover id="${ifDefined(context._id)}-overflowMenu" horizontal-align="Right" placement-type="Bottom" content-only-on-desktop with-padding no-arrow _hide-header><ui5-list @ui5-item-press="${ifDefined(context._onOverflowListItemSelect)}">${ repeat(context.items, (item, index) => item._id || index, (item, index) => block1$9(item)) }</ui5-list><div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${context._closeRespPopover}">Cancel</ui5-button></div></ui5-responsive-popover>`; };
	const block1$9 = (item, index, context) => { return scopedHtml`${ !item.isSeparator ? block2$8(item) : undefined }`; };
	const block2$8 = (item, index, context) => { return scopedHtml`${ifDefined(item.overflowPresentation)}`; };


	const main$c = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$c(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var tabContainerCss = ":host(:not([hidden])){display:inline-block;width:100%}.ui5-tc-root{display:flex;flex-direction:column;width:100%;height:100%;font-family:\"72override\",var(--sapFontFamily);font-size:1rem}.ui5-tc__header{display:flex;align-items:center;height:var(--_ui5_tc_header_height);background-color:var(--sapObjectHeader_Background);box-shadow:var(--sapContent_HeaderShadow);box-sizing:border-box}:host([tabs-placement=Bottom]) .ui5-tc__header{border-top:var(--_ui5_tc_header_border_bottom)}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__header{height:var(--_ui5_tc_header_height_text_only)}.ui-tc__headerScrollContainer{box-sizing:border-box;overflow:hidden;flex:1}.ui5-tc__headerList{display:flex;margin:0;padding:0;list-style:none}.ui5-tc__separator{width:0;border-left:2px solid var(--sapList_BorderColor);margin:.5rem .25rem}.ui5-tc__separator:focus{outline:none}.ui5-tc__headerArrow{cursor:pointer;color:var(--sapContent_IconColor);padding:0 .25rem;visibility:hidden}.ui5-tc__headerArrow:active,.ui5-tc__headerArrow:hover{color:var(--sapHighlightColor)}.ui5-tc__headerArrow--visible{visibility:visible}.ui-tc__overflowButton{margin-left:auto;margin-right:.25rem}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__content{height:calc(100% - var(--_ui5_tc_header_height_text_only))}.ui5-tc__content{position:relative;display:flex;height:calc(100% - var(--_ui5_tc_header_height));padding:1rem;background-color:var(--sapGroup_ContentBackground);border-bottom:var(--_ui5_tc_content_border_bottom);box-sizing:border-box}:host([tabs-placement=Bottom]) .ui5-tc__content{border-top:var(--_ui5_tc_content_border_bottom)}.ui5-tc__content--collapsed{display:none}.ui5-tc--transparent .ui5-tc__content{background-color:transparent}.ui5-tc__contentItem{max-height:100%;display:flex;flex-grow:1;overflow:auto}.ui5-tc__contentItem[hidden]{display:none}[dir=rtl] .ui-tc__overflowButton{margin-right:auto;margin-left:.25rem}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var ResponsivePopoverCommonCss = ".input-root-phone{flex:1;height:var(--_ui5_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:\"72override\",var(--sapFontFamily);background-color:var(--sapField_Background);border:1px solid var(--sapField_BorderColor);border-radius:var(--_ui5_input_wrapper_border_radius);box-sizing:border-box}.input-root-phone [inner-input]{padding:0 .5rem;width:100%;height:100%}.input-root-phone[value-state]:not([value-state=None])[focused]{outline:var(--_ui5_input_focus_border_width) dotted var(--sapContent_FocusColor);outline-offset:-4px}.input-root-phone [value-state=Error] [input-icon][data-ui5-compact-size],.input-root-phone [value-state=Success] [input-icon][data-ui5-compact-size],.input-root-phone [value-state=Warning] [input-icon][data-ui5-compact-size]{padding:.1875rem .5rem}[inner-input]{background:transparent;color:inherit;border:none;font-style:normal;-webkit-appearance:none;-moz-appearance:textfield;line-height:normal;padding:var(--_ui5_input_inner_padding);box-sizing:border-box;min-width:3rem;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit}[inner-input]::-moz-selection,[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}[inner-input]::-webkit-input-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}[inner-input]::-moz-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}[inner-input]:-ms-input-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}.input-root-phone[value-state]:not([value-state=None]){border-width:var(--_ui5_input_state_border_width)}.input-root-phone[value-state=Error] [inner-input],.input-root-phone[value-state=Warning] [inner-input]{font-style:var(--_ui5_input_error_warning_font_style)}.input-root-phone[value-state=Error] [inner-input]{font-weight:var(--_ui5_input_error_font_weight)}.input-root-phone[value-state=Error]:not([readonly]){background-color:var(--sapField_InvalidBackground);border-color:var(--sapField_InvalidColor)}.input-root-phone[value-state=Error]:not([readonly]):not([disabled]),.input-root-phone[value-state=Warning]:not([readonly]):not([disabled]){border-style:var(--_ui5_input_error_warning_border_style)}.input-root-phone[value-state=Warning]:not([readonly]){background-color:var(--sapField_WarningBackground);border-color:var(--sapField_WarningColor)}.input-root-phone[value-state=Success]:not([readonly]){background-color:var(--sapField_SuccessBackground);border-color:var(--sapField_SuccessColor)}[inner-input]::-ms-clear{height:0;width:0}.ui5-multi-combobox-toggle-button{margin-left:.5rem}.ui5-responsive-popover-header{width:100%;min-height:2.5rem;display:flex;flex-direction:column}.ui5-responsive-popover-header-text{display:flex;align-items:center;width:calc(100% - var(--_ui5_button_base_min_width))}.ui5-responsive-popover-header .row{box-sizing:border-box;padding:.25rem 1rem;min-height:2.5rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontHeader5Size)}.ui5-responsive-popover-footer{display:flex;justify-content:flex-end;padding:.25rem;width:100%}.ui5-responsive-popover-close-btn{position:absolute;right:1rem}";

	const SCROLL_STEP = 128;

	const tabStyles = [];
	const staticAreaTabStyles = [];

	/**
	 * @public
	 */
	const metadata$a = {
		tag: "ui5-tabcontainer",
		languageAware: true,
		managedSlots: true,
		slots: /** @lends  sap.ui.webcomponents.main.TabContainer.prototype */ {
			/**
			 * Defines the tabs.
			 * <br><br>
			 * <b>Note:</b> Use <code>ui5-tab</code> and <code>ui5-tab-separator</code> for the intended design.
			 *
			 * @type {HTMLElement[]}
			 * @public
			 * @slot
			 */
			"default": {
				propertyName: "items",
				type: HTMLElement,
				individualSlots: true,
				invalidateOnChildChange: {
					properties: true,
					slots: false,
				},
			},

			/**
			 * Defines the button which will open the overflow menu. If nothing is provided to this slot, the default button will be used.
			 *
			 * @type {HTMLElement[]}
			 * @public
			 * @slot
			 * @since 1.0.0-rc.9
			 */
			overflowButton: {
				type: HTMLElement,
			},
		},
		properties: /** @lends  sap.ui.webcomponents.main.TabContainer.prototype */ {
			/**
			 * Defines whether the tabs are in a fixed state that is not
			 * expandable/collapsible by user interaction.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			fixed: {
				type: Boolean,
			},

			/**
			 * Defines whether the tab content is collapsed.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			collapsed: {
				type: Boolean,
			},

			/**
			 * Defines the placement of the tab strip (tab buttons area) relative to the actual tabs' content.
			 * <br><br>
			 * <b>Note:</b> By default the tab strip is displayed above the tabs' content area and this is the recommended
			 * layout for most scenarios. Set to <code>Bottom</code> only when the <code>ui5-tabcontainer</code> is at the
			 * bottom of the page and you want the tab strip to act as a menu.
			 *
			 * @type {TabContainerTabsPlacement}
			 * @defaultvalue "Top"
			 * @since 1.0.0-rc.7
			 * @public
			 */
			tabsPlacement: {
				type: TabContainerTabsPlacement,
				defaultValue: TabContainerTabsPlacement.Top,
			},

			/**
			 * Defines whether the overflow select list is displayed.
			 * <br><br>
			 * The overflow select list represents a list, where all tab filters are displayed
			 * so that it's easier for the user to select a specific tab filter.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showOverflow: {
				type: Boolean,
			},

			/**
			 * Defines the alignment of the <code>main text</code> and the <code>additionalText</code> of a tab.
			 *
			 * <br><br>
			 * <b>Note:</b>
			 * The <code>main text</code> and the <code>additionalText</code> would be displayed vertically by defualt,
			 * but when set to <code>Inline</code>, they would be displayed horizontally.
			 *
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Standard</code></li>
			 * <li><code>Inline</code></li>
			 * <ul>
			 *
			 * @type {TabLayout}
			 * @defaultvalue "Standard"
			 * @public
			 */
			tabLayout: {
				type: String,
				defaultValue: TabLayout.Standard,
			},

			_selectedTab: {
				type: Object,
			},

			_scrollable: {
				type: Boolean,
				noAttribute: true,
			},

			_scrollableBack: {
				type: Boolean,
				noAttribute: true,
			},

			_scrollableForward: {
				type: Boolean,
				noAttribute: true,
			},

			_animationRunning: {
				type: Boolean,
				noAttribute: true,
			},

			_contentCollapsed: {
				type: Boolean,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.TabContainer.prototype */ {

			/**
			 * Fired when a tab is selected.
			 *
			 * @event sap.ui.webcomponents.main.TabContainer#tab-select
			 * @param {HTMLElement} tab The selected <code>tab</code>.
			 * @param {Number} tabIndex The selected <code>tab</code> index.
			 * @public
			 */
			"tab-select": {
				tab: { type: HTMLElement },
				tabIndex: { type: Number },
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-tabcontainer</code> represents a collection of tabs with associated content.
	 * Navigation through the tabs changes the content display of the currently active content area.
	 * A tab can be labeled with text only, or icons with text.
	 *
	 * <h3>Structure</h3>
	 *
	 * The <code>ui5-tabcontainer</code> can hold two types of entities:
	 * <ul>
	 * <li><code>ui5-tab</code> - contains all the information on an item (text and icon)</li>
	 * <li><code>ui5-tab-separator</code> - used to separate tabs with a vertical line</li>
	 * </ul>
	 *
	 * <h3>Stable DOM Refs</h3>
	 *
	 * In the context of <code>ui5-tabcontainer</code>, you can provide a custom stable DOM refs for:
	 * <ul>
	 * <li>Each <code>ui5-tab</code>
	 * Example: <code><ui5-tab stable-dom-ref="in-stock"></ui5-tab></code></li>
	 * </ul>
	 *
	 * <h3>ES6 import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/TabContainer";</code>
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/Tab";</code> (for <code>ui5-tab</code>)
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/TabSeparator";</code> (for <code>ui5-tab-separator</code>)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.TabContainer
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @appenddocs Tab TabSeparator
	 * @tagname ui5-tabcontainer
	 * @public
	 */
	class TabContainer extends UI5Element {
		static get metadata() {
			return metadata$a;
		}

		static get styles() {
			return [tabStyles, tabContainerCss];
		}

		static get staticAreaStyles() {
			return [ResponsivePopoverCommonCss, staticAreaTabStyles];
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$b;
		}

		static get staticAreaTemplate() {
			return main$c;
		}

		static registerTabStyles(styles) {
			tabStyles.push(styles);
		}

		static registerStaticAreaTabStyles(styles) {
			staticAreaTabStyles.push(styles);
		}

		constructor() {
			super();

			this._handleHeaderResize = this._handleHeaderResize.bind(this);

			// Init ScrollEnablement
			this._scrollEnablement = new ScrollEnablement(this);
			this._scrollEnablement.attachEvent("scroll", this._updateScrolling.bind(this));

			// Init ItemNavigation
			this._itemNavigation = new ItemNavigation(this, {
				getItemsCallback: () => this._getTabs(),
			});

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			// Set external properties to items
			this.items.filter(item => !item.isSeparator).forEach((item, index, arr) => {
				item._isInline = this.tabLayout === TabLayout.Inline;
				item._mixedMode = this.mixedMode;
				item._posinset = index + 1;
				item._setsize = arr.length;
				item._getTabContainerHeaderItemCallback = _ => {
					return this.getDomRef().querySelector(`#${item._id}`);
				};
				item._itemSelectCallback = this._onItemSelect.bind(this);
			});

			if (!this._animationRunning) {
				this._contentCollapsed = this.collapsed;
			}
		}

		onAfterRendering() {
			this._scrollEnablement.scrollContainer = this._getHeaderScrollContainer();
			this._updateScrolling();
		}

		onEnterDOM() {
			ResizeHandler.register(this._getHeader(), this._handleHeaderResize);
		}

		onExitDOM() {
			ResizeHandler.deregister(this._getHeader(), this._handleHeaderResize);
		}

		_onHeaderClick(event) {
			const tab = getTab(event.target);
			if (!tab) {
				return;
			}

			this._onHeaderItemSelect(tab);
		}

		_onHeaderKeyDown(event) {
			const tab = getTab(event.target);
			if (!tab) {
				return;
			}

			if (isEnter(event)) {
				this._onHeaderItemSelect(tab);
			}

			// Prevent Scrolling
			if (isSpace(event)) {
				event.preventDefault();
			}
		}

		_onHeaderKeyUp(event) {
			const tab = getTab(event.target);
			if (!tab) {
				return;
			}

			if (isSpace(event)) {
				this._onHeaderItemSelect(tab);
			}
		}

		_onHeaderItemSelect(tab) {
			if (!tab.hasAttribute("disabled")) {
				this._onItemSelect(tab);
			}
		}

		_onOverflowListItemSelect(event) {
			this._onItemSelect(event.detail.item);
			this.responsivePopover.close();
			this.shadowRoot.querySelector(`#${event.detail.item.id}`).focus();
		}

		_onItemSelect(target) {
			const selectedIndex = findIndex(this.items, item => item._id === target.id);
			const selectedTabIndex = findIndex(this._getTabs(), item => item._id === target.id);
			const selectedTab = this.items[selectedIndex];

			// update selected items
			this.items.forEach((item, index) => {
				if (!item.isSeparator) {
					const selected = selectedIndex === index;
					item.selected = selected;

					if (selected) {
						this._itemNavigation.update(item);
					}
				}
			}, this);

			if (this.fixed) {
				this.selectTab(selectedTab, selectedTabIndex);
				return;
			}

			if (!this.animate) {
				this.toggle(selectedTab);
				this.selectTab(selectedTab, selectedTabIndex);
				return;
			}

			this.toggleAnimated(selectedTab);
			this.selectTab(selectedTab, selectedTabIndex);
		}

		async toggleAnimated(selectedTab) {
			const content = this.shadowRoot.querySelector(".ui5-tc__content");
			let animationPromise = null;

			this._animationRunning = true;

			if (selectedTab === this._selectedTab) {
				// click on already selected tab - animate both directions
				this.collapsed = !this.collapsed;
				animationPromise = this.collapsed ? this.slideContentUp(content) : this.slideContentDown(content);
			} else {
				// click on new tab - animate if the content is currently collapsed
				animationPromise = this.collapsed ? this.slideContentDown(content) : Promise.resolve();
				this.collapsed = false;
			}

			await animationPromise;
			this._contentCollapsed = this.collapsed;
			this._animationRunning = false;
		}

		toggle(selectedTab) {
			if (selectedTab === this._selectedTab) {
				this.collapsed = !this.collapsed;
			} else {
				this.collapsed = false;
			}
		}

		selectTab(selectedTab, selectedTabIndex) {
			// select the tab
			this._selectedTab = selectedTab;
			this.fireEvent("tab-select", {
				tab: selectedTab,
				tabIndex: selectedTabIndex,
			});
		}

		slideContentDown(element) {
			return slideDown({ element }).promise();
		}

		slideContentUp(element) {
			return slideUp({ element }).promise();
		}

		async _onOverflowButtonClick(event) {
			const button = this.overflowButton[0] || this.getDomRef().querySelector(".ui-tc__overflowButton > ui5-button");

			if (event.target !== button) {
				return;
			}

			this.responsivePopover = await this._respPopover();
			this.updateStaticAreaItemContentDensity();
			if (this.responsivePopover.opened) {
				this.responsivePopover.close();
			} else {
				this.responsivePopover.open(button);
			}
		}

		_onHeaderBackArrowClick() {
			this._scrollEnablement.move(-SCROLL_STEP, 0).promise()
				.then(_ => this._updateScrolling());
		}

		_onHeaderForwardArrowClick() {
			this._scrollEnablement.move(SCROLL_STEP, 0).promise()
				.then(_ => this._updateScrolling());
		}

		_handleHeaderResize() {
			this._updateScrolling();
		}

		async _closeRespPopover() {
			this.responsivePopover = await this._respPopover();
			this.responsivePopover.close();
		}

		_updateScrolling() {
			const headerScrollContainer = this._getHeaderScrollContainer();

			this._scrollable = headerScrollContainer.offsetWidth < headerScrollContainer.scrollWidth;
			this._scrollableBack = headerScrollContainer.scrollLeft > 0;
			this._scrollableForward = Math.ceil(headerScrollContainer.scrollLeft) < headerScrollContainer.scrollWidth - headerScrollContainer.offsetWidth;

			if (!this._scrollable) {
				this._closeRespPopover();
			}
		}

		_getHeader() {
			return this.shadowRoot.querySelector(`#${this._id}-header`);
		}

		_getTabs() {
			return this.items.filter(item => !item.isSeparator);
		}

		_getHeaderScrollContainer() {
			return this.shadowRoot.querySelector(`#${this._id}-headerScrollContainer`);
		}

		async _respPopover() {
			const staticAreaItem = await this.getStaticAreaItemDomRef();
			return staticAreaItem.querySelector(`#${this._id}-overflowMenu`);
		}

		get shouldShowOverflow() {
			return this.showOverflow && this._scrollable;
		}

		get classes() {
			return {
				root: {
					"ui5-tc-root": true,
					"ui5-tc--textOnly": this.textOnly,
				},
				header: {
					"ui5-tc__header": true,
					"ui5-tc__header--scrollable": this._scrollable,
				},
				headerScrollContainer: {
					"ui-tc__headerScrollContainer": true,
				},
				headerList: {
					"ui5-tc__headerList": true,
				},
				separator: {
					"ui5-tc__separator": true,
				},
				headerBackArrow: {
					"ui5-tc__headerArrow": true,
					"ui5-tc__headerArrowLeft": true,
					"ui5-tc__headerArrow--visible": this._scrollableBack,
				},
				headerForwardArrow: {
					"ui5-tc__headerArrow": true,
					"ui5-tc__headerArrowRight": true,
					"ui5-tc__headerArrow--visible": this._scrollableForward,
				},
				content: {
					"ui5-tc__content": true,
					"ui5-tc__content--collapsed": this._contentCollapsed,
				},
			};
		}

		get mixedMode() {
			return this.items.some(item => item.icon) && this.items.some(item => item.text);
		}

		get textOnly() {
			return this.items.every(item => !item.icon);
		}

		get previousIconACCName() {
			return this.i18nBundle.getText(TABCONTAINER_PREVIOUS_ICON_ACC_NAME);
		}

		get nextIconACCName() {
			return this.i18nBundle.getText(TABCONTAINER_NEXT_ICON_ACC_NAME);
		}

		get overflowMenuTitle() {
			return this.i18nBundle.getText(TABCONTAINER_OVERFLOW_MENU_TITLE);
		}

		get tabsAtTheBottom() {
			return this.tabsPlacement === TabContainerTabsPlacement.Bottom;
		}

		get overflowMenuIcon() {
			return this.tabsAtTheBottom ? "slim-arrow-up" : "slim-arrow-down";
		}

		get animate() {
			return getAnimationMode$1() !== AnimationMode.None;
		}

		static get dependencies() {
			return [
				Button,
				Icon,
				List,
				ResponsivePopover,
			];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	const isTabLi = el => el.localName === "li" && el.getAttribute("role") === "tab";

	const getTab = el => {
		while (el) {
			if (isTabLi(el)) {
				return el;
			}

			el = el.parentElement;
		}

		return false;
	};

	const findIndex = (arr, predicate) => {
		for (let i = 0; i < arr.length; i++) {
			const result = predicate(arr[i]);

			if (result) {
				return i;
			}
		}

		return -1;
	};

	TabContainer.define();

	const name$6 = "edit";
	const pathData$6 = "M475 104q5 7 5 12 0 6-5 11L150 453q-4 4-8 4L32 480l22-110q0-5 4-9L384 36q4-4 11-4t11 4zm-121 99l-46-45L84 381l46 46zm87-88l-46-44-64 64 45 45z";
	const ltr$6 = false;
	const collection$6 = "SAP-icons";

	registerIcon(name$6, { pathData: pathData$6, ltr: ltr$6, collection: collection$6});

	/**
	 * @lends sap.ui.webcomponents.main.types.ListItemType.prototype
	 * @public
	 */
	const ListItemTypes = {
		/**
		 * Indicates the list item does not have any active feedback when item is pressed.
		 * @public
		 * @type {Inactive}
		 */
		Inactive: "Inactive",

		/**
		 * Indicates that the item is clickable via active feedback when item is pressed.
		 * @public
		 * @type {Active}
		 */
		Active: "Active",

		/**
		 * Enables detail button of the list item that fires detail-click event.
		 * @public
		 * @type {Detail}
		 */
		Detail: "Detail",
	};

	/**
	 * @class
	 * Different types of ListItem.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.ListItemType
	 * @public
	 * @enum {string}
	 */
	class ListItemType extends DataType {
		static isValid(value) {
			return !!ListItemTypes[value];
		}
	}

	ListItemType.generateTypeAccessors(ListItemTypes);

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$1 = ":host(:not([hidden])){display:block}:host{height:var(--_ui5_list_item_base_height);background:var(--ui5-listitem-background-color);box-sizing:border-box;border-bottom:1px solid transparent}:host([selected]){background:var(--sapList_SelectionBackgroundColor)}:host([has-border]){border-bottom:var(--ui5-listitem-border-bottom)}:host([selected]){border-bottom:var(--ui5-listitem-selected-border-bottom)}:host([selected][has-border]){border-bottom:var(--ui5-listitem-selected-border-bottom)}.ui5-li-root{position:relative;display:flex;align-items:center;width:100%;height:100%;padding:0 1rem 0 1rem;box-sizing:border-box}:host([focused]) .ui5-li-root.ui5-li--focusable{outline:none}:host([focused]) .ui5-li-root.ui5-li--focusable:after{content:\"\";border:var(--_ui5_listitembase_focus_width) dotted var(--sapContent_FocusColor);position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}:host([focused]) .ui5-li-content:focus:after{content:\"\";border:var(--_ui5_listitembase_focus_width) dotted var(--sapContent_FocusColor);position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}:host([active][focused]) .ui5-li-root.ui5-li--focusable:after{border-color:var(--sapContent_ContrastFocusColor)}.ui5-li-content{max-width:100%;min-height:1px;font-family:\"72override\",var(--sapFontFamily);pointer-events:none}";

	/**
	 * @public
	 */
	const metadata$b = {
		properties: /** @lends  sap.ui.webcomponents.main.ListItemBase.prototype */  {

			/**
			 * Defines the selected state of the <code>ListItem</code>.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			selected: {
				type: Boolean,
			},

			/**
			* Defines if the list item should display its bottom border.
			* @private
			*/
			hasBorder: {
				type: Boolean,
			},

			_tabIndex: {
				type: String,
				defaultValue: "-1",
				noAttribute: true,
			},

			/**
			 * Indicates if the element is on focus
			 * @private
			 */
			focused: {
				type: Boolean,
			},
		},
		events: {
			_focused: {},
			"_forward-after": {},
			"_forward-before": {},
		},
	};

	/**
	 * A class to serve as a foundation
	 * for the <code>ListItem</code> and <code>GroupHeaderListItem</code> classes.
	 *
	 * @abstract
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.ListItemBase
	 * @extends UI5Element
	 * @public
	 */
	class ListItemBase extends UI5Element {
		static get metadata() {
			return metadata$b;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return styles$1;
		}

		_onfocusin(event) {
			if (event.isMarked === "button" || event.isMarked === "link") {
				return;
			}

			this.focused = true;
			this.fireEvent("_focused", event);
		}

		_onfocusout(_event) {
			this.focused = false;
		}

		_onkeydown(event) {
			if (isTabNext(event)) {
				return this._handleTabNext(event);
			}

			if (isTabPrevious(event)) {
				return this._handleTabPrevious(event);
			}
		}

		_onkeyup() {}

		_handleTabNext(event) {
			const target = event.target;

			if (this.shouldForwardTabAfter(target)) {
				this.fireEvent("_forward-after", { item: target });
			}
		}

		_handleTabPrevious(event) {
			const target = event.target;

			if (this.shouldForwardTabBefore(target)) {
				const eventData = event;
				eventData.item = target;
				this.fireEvent("_forward-before", eventData);
			}
		}

		/*
		* Determines if th current list item either has no tabbable content or
		* [TAB] is performed onto the last tabbale content item.
		*/
		shouldForwardTabAfter(target) {
			const aContent = getTabbableElements(this.getDomRef());

			if (target.getFocusDomRef) {
				target = target.getFocusDomRef();
			}

			return !aContent.length || (aContent[aContent.length - 1] === target);
		}

		/*
		* Determines if the current list item is target of [SHIFT+TAB].
		*/
		shouldForwardTabBefore(target) {
			return this.getDomRef() === target;
		}

		get classes() {
			return {
				main: {
					"ui5-li-root": true,
					"ui5-li--focusable": true,
				},
			};
		}
	}

	/**
	 * Different states.
	 */
	const ValueStates = {
		None: "None",
		Success: "Success",
		Warning: "Warning",
		Error: "Error",
		Information: "Information",
	};

	class ValueState extends DataType {
		static isValid(value) {
			return !!ValueStates[value];
		}
	}

	ValueState.generateTypeAccessors(ValueStates);

	class RadioButtonGroup {
		static hasGroup(groupName) {
			return this.groups.has(groupName);
		}

		static getGroup(groupName) {
			return this.groups.get(groupName);
		}

		static getSelectedRadioFromGroup(groupName) {
			return this.selectedRadios.get(groupName);
		}

		static removeGroup(groupName) {
			this.selectedRadios.delete(groupName);
			return this.groups.delete(groupName);
		}

		static addToGroup(radioBtn, groupName) {
			if (this.hasGroup(groupName)) {
				this.enforceSingleSelection(radioBtn, groupName);
				this.getGroup(groupName).push(radioBtn);
			} else {
				this.createGroup(radioBtn, groupName);
			}
		}

		static removeFromGroup(radioBtn, groupName) {
			if (!this.hasGroup(groupName)) {
				return;
			}

			const group = this.getGroup(groupName);
			const selectedRadio = this.getSelectedRadioFromGroup(groupName);

			// Remove the radio button from the given group
			group.forEach((_radioBtn, idx, arr) => {
				if (radioBtn._id === _radioBtn._id) {
					return arr.splice(idx, 1);
				}
			});

			if (selectedRadio === radioBtn) {
				this.selectedRadios.set(groupName, null);
			}

			// Remove the group if it is empty
			if (!group.length) {
				this.removeGroup(groupName);
			}
		}

		static createGroup(radioBtn, groupName) {
			if (radioBtn.selected) {
				this.selectedRadios.set(groupName, radioBtn);
			}

			this.groups.set(groupName, [radioBtn]);
		}

		static selectNextItem(item, groupName) {
			const group = this.getGroup(groupName),
				groupLength = group.length,
				currentItemPosition = group.indexOf(item);

			if (groupLength <= 1) {
				return;
			}

			const nextItemToSelect = this._nextSelectable(currentItemPosition, group);

			this.updateSelectionInGroup(nextItemToSelect, groupName);
		}

		static selectPreviousItem(item, groupName) {
			const group = this.getGroup(groupName),
				groupLength = group.length,
				currentItemPosition = group.indexOf(item);

			if (groupLength <= 1) {
				return;
			}

			const previousItemToSelect = this._previousSelectable(currentItemPosition, group);

			this.updateSelectionInGroup(previousItemToSelect, groupName);
		}

		static selectItem(item, groupName) {
			this.updateSelectionInGroup(item, groupName);
		}

		static updateSelectionInGroup(radioBtnToSelect, groupName) {
			const selectedRadio = this.getSelectedRadioFromGroup(groupName);

			this._deselectRadio(selectedRadio);
			this._selectRadio(radioBtnToSelect);
			this.selectedRadios.set(groupName, radioBtnToSelect);
		}

		static _deselectRadio(radioBtn) {
			if (radioBtn) {
				radioBtn.selected = false;
			}
		}

		static _selectRadio(radioBtn) {
			if (radioBtn) {
				radioBtn.focus();
				radioBtn.selected = true;
				radioBtn._selected = true;
				radioBtn.fireEvent("select");
			}
		}

		static _nextSelectable(pos, group) {
			const groupLength = group.length;
			let nextRadioToSelect = null;

			if (pos === groupLength - 1) {
				if (group[0].disabled || group[0].readonly) {
					return this._nextSelectable(1, group);
				}
				nextRadioToSelect = group[0];
			} else if (group[pos + 1].disabled || group[pos + 1].readonly) {
				return this._nextSelectable(pos + 1, group);
			} else {
				nextRadioToSelect = group[pos + 1];
			}

			return nextRadioToSelect;
		}

		static _previousSelectable(pos, group) {
			const groupLength = group.length;
			let previousRadioToSelect = null;
			if (pos === 0) {
				if (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {
					return this._previousSelectable(groupLength - 1, group);
				}
				previousRadioToSelect = group[groupLength - 1];
			} else if (group[pos - 1].disabled || group[pos - 1].readonly) {
				return this._previousSelectable(pos - 1, group);
			} else {
				previousRadioToSelect = group[pos - 1];
			}

			return previousRadioToSelect;
		}

		static enforceSingleSelection(radioBtn, groupName) {
			const selectedRadio = this.getSelectedRadioFromGroup(groupName);

			if (radioBtn.selected) {
				if (!selectedRadio) {
					this.selectedRadios.set(groupName, radioBtn);
				} else if (radioBtn !== selectedRadio) {
					this._deselectRadio(selectedRadio);
					this.selectedRadios.set(groupName, radioBtn);
				}
			} else if (radioBtn === selectedRadio) {
				this.selectedRadios.set(groupName, null);
			}
		}

		static get groups() {
			if (!this._groups) {
				this._groups = new Map();
			}
			return this._groups;
		}

		static get selectedRadios() {
			if (!this._selectedRadios) {
				this._selectedRadios = new Map();
			}
			return this._selectedRadios;
		}
	}

	const block0$d = (context) => { return scopedHtml`<div class="ui5-radio-root ${classMap(context.classes.main)}" role="radio" aria-checked="${ifDefined(context.selected)}" aria-readonly="${ifDefined(context.ariaReadonly)}" aria-disabled="${ifDefined(context.ariaDisabled)}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" aria-describedby="${ifDefined(context.ariaDescribedBy)}" tabindex="${ifDefined(context.tabIndex)}" dir="${ifDefined(context.effectiveDir)}" @click="${context._onclick}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}"><div class='ui5-radio-inner ${classMap(context.classes.inner)}'><svg class="ui5-radio-svg" focusable="false" aria-hidden="true">${blockSVG1$1()}</svg><input type='radio' ?checked="${context.selected}" ?readonly="${context.readonly}" ?disabled="${context.disabled}" name="${ifDefined(context.name)}" data-sap-no-tab-ref/></div>${ context.text ? block1$a(context) : undefined }${ context.hasValueState ? block2$9(context) : undefined }</div>`; };
	const block1$a = (context) => { return scopedHtml`<ui5-label id="${ifDefined(context._id)}-label" class="ui5-radio-label" for="${ifDefined(context._id)}" ?wrap="${context.wrap}">${ifDefined(context.text)}</ui5-label>`; };
	const block2$9 = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}-descr" class="ui5-hidden-text">${ifDefined(context.valueStateText)}</span>`; };

	const blockSVG1$1 = (context) => {return scopedSvg`<circle class="ui5-radio-svg-outer" cx="50%" cy="50%" r="50%" /><circle class="ui5-radio-svg-inner" cx="50%" cy="50%" r="22%" />`};

	const main$d = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$d(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var radioButtonCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5_radiobutton_min_width);max-width:100%;text-overflow:ellipsis;overflow:hidden;color:var(--sapField_BorderColor)}:host([selected]){color:var(--_ui5_radiobutton_selected_fill)}:host([selected]) .ui5-radio-svg-inner{fill:currentColor}:host([selected]) .ui5-radio-svg-outer{stroke:var(--sapField_BorderColor)}:host([disabled]) .ui5-radio-root{opacity:var(--sapContent_DisabledOpacity)}:host(:not([disabled])) .ui5-radio-root:focus:before{content:\"\";display:block;position:absolute;top:var(--_ui5_rb_focus_dist);bottom:var(--_ui5_rb_focus_dist);left:var(--_ui5_rb_focus_dist);right:var(--_ui5_rb_focus_dist);pointer-events:none;border:var(--_ui5_radiobutton_border_width) dotted var(--sapContent_FocusColor)}:host(:not([value-state=Error]):not([value-state=Warning])) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5_radiobutton_hover_fill);stroke:var(--sapField_Hover_BorderColor)}:host([text]) .ui5-radio-root:focus:before{right:0}:host([selected][readonly]) .ui5-radio-svg-inner{fill:var(--sapContent_NonInteractiveIconColor)}:host([readonly]) .ui5-radio-root .ui5-radio-svg-outer{fill:var(--sapField_ReadOnly_Background);stroke:var(--sapField_ReadOnly_BorderColor)}:host([value-state=Error]) .ui5-radio-svg-outer,:host([value-state=Warning]) .ui5-radio-svg-outer{stroke-width:2}:host([value-state=Error][selected]) .ui5-radio-svg-inner{fill:var(--_ui5_radiobutton_selected_error_fill)}:host([value-state=Error]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer,:host([value-state=Error]) .ui5-radio-svg-outer{stroke:var(--sapField_InvalidColor);fill:var(--sapField_InvalidBackground)}:host([value-state=Warning][selected]) .ui5-radio-svg-inner{fill:var(--_ui5_radiobutton_selected_warning_fill)}:host([value-state=Warning]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer,:host([value-state=Warning]) .ui5-radio-svg-outer{stroke:var(--sapField_WarningColor);fill:var(--sapField_WarningBackground)}:host([value-state=Error]) .ui5-radio-root,:host([value-state=Information]) .ui5-radio-root,:host([value-state=Warning]) .ui5-radio-root{stroke-dasharray:var(--_ui5_radiobutton_warning_error_border_dash)}.ui5-radio-root{height:var(--_ui5_rb_height);position:relative;display:flex;flex-wrap:nowrap;outline:none;max-width:100%}.ui5-radio-inner{display:flex;align-items:center;justify-content:center;flex-shrink:0;width:var(--_ui5_rb_inner_size);height:var(--_ui5_rb_inner_size);font-size:1rem;pointer-events:none;vertical-align:top}.ui5-radio-inner:focus{outline:none}.ui5-radio-inner input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit;margin:0}[ui5-label].ui5-radio-label{display:flex;align-items:center;width:var(--_ui5_rb_label_width);padding-right:1px;vertical-align:top;cursor:default;max-width:100%;text-overflow:ellipsis;overflow:hidden;pointer-events:none}:host([wrap][text]) .ui5-radio-root{height:auto}:host([wrap][text]) [ui5-label].ui5-radio-label{padding:var(--_ui5_rb_label_side_padding) 0;word-break:break-all}.ui5-radio-svg{height:var(--_ui5_rb_svg_size);width:var(--_ui5_rb_svg_size);overflow:visible;pointer-events:none}.ui5-radio-svg-outer{fill:var(--sapField_Background);stroke:currentColor;stroke-width:1}.ui5-radio-svg-inner{fill:none}.ui5-radio-svg-inner,.ui5-radio-svg-outer{flex-shrink:0}:host([text]) [dir=rtl].ui5-radio-root:focus:before{left:0;right:var(--_ui5_rb_rtl_focus_right)}:host(.ui5-li-singlesel-radiobtn) .ui5-radio-root .ui5-radio-inner .ui5-radio-svg-outer{fill:var(--sapList_Background)}";

	/**
	 * @public
	 */
	const metadata$c = {
		tag: "ui5-radiobutton",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.main.RadioButton.prototype */  {

			/**
			 * Determines whether the <code>ui5-radiobutton</code> is disabled.
			 * <br><br>
			 * <b>Note:</b> A disabled <code>ui5-radiobutton</code> is completely noninteractive.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-radiobutton</code> is read-only.
			 * <br><br>
			 * <b>Note:</b> A read-only <code>ui5-radiobutton</code> is not editable,
			 * but still provides visual feedback upon user interaction.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			readonly: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-radiobutton</code> is selected or not.
			 * <br><br>
			 * <b>Note:</b> The property value can be changed with user interaction,
			 * either by cliking/tapping on the <code>ui5-radiobutton</code>,
			 * or by using the Space or Enter key.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			selected: {
				type: Boolean,
			},

			/**
			 * Defines the text of the <code>ui5-radiobutton</code>.
			 *
			 * @type  {string}
			 * @defaultvalue ""
			 * @public
			 */
			text: {
				type: String,
			},

			/**
			 * Defines the value state of the <code>ui5-radiobutton</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>None</code></li>
			 * <li><code>Error</code></li>
			 * <li><code>Warning</code></li>
			 * </ul>
			 *
			 * @type {ValueState}
			 * @defaultvalue "None"
			 * @public
			 */
			valueState: {
				defaultValue: ValueState.None,
				type: ValueState,
			},

			/**
			 * Defines the name of the <code>ui5-radiobutton</code>.
			 * Radio buttons with the same <code>name</code> will form a radio button group.
			 *
			 * <br><br>
			 * <b>Note:</b>
			 * The selection can be changed with <code>ARROW_UP/DOWN</code> and <code>ARROW_LEFT/RIGHT</code> keys between radio buttons in same group.
			 *
			 * <br><br>
			 * <b>Note:</b>
			 * Only one radio button can be selected per group.
			 *
			 * <br><br>
			 * <b>Important:</b> For the <code>name</code> property to have effect when submitting forms, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * <br><br>
			 * <b>Note:</b> When set, a native <code>input</code> HTML element
			 * will be created inside the <code>ui5-radiobutton</code> so that it can be submitted as
			 * part of an HTML form.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			name: {
				type: String,
			},

			/**
			 * Defines the form value of the <code>ui5-radiobutton</code>.
			 * When a form with a radio button group is submitted, the group's value
			 * will be the value of the currently selected radio button.
			 * <br>
			 * <b>Important:</b> For the <code>value</code> property to have effect, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			value: {
				type: String,
			},

			/**
			 * Defines whether the <code>ui5-radiobutton</code> text wraps when there is not enough space.
			 * <br><br>
			 * <b>Note:</b> By default, the text truncates when there is not enough space.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			wrap: {
				type: Boolean,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.RadioButton.prototype */ {

			/**
			 * Fired when the <code>ui5-radiobutton</code> selected state changes.
			 *
			 * @event
			 * @public
			 */
			select: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-radiobutton</code> component enables users to select a single option from a set of options.
	 * When a <code>ui5-radiobutton</code> is selected by the user, the
	 * <code>select</code> event is fired.
	 * When a <code>ui5-radiobutton</code> that is within a group is selected, the one
	 * that was previously selected gets automatically deselected. You can group radio buttons by using the <code>name</code> property.
	 * <br>
	 * <b>Note:</b> If <code>ui5-radiobutton</code> is not part of a group, it can be selected once, but can not be deselected back.
	 *
	 * <h3>Keyboard Handling</h3>
	 *
	 * Once the <code>ui5-radiobutton</code> is on focus, it might be selected by pressing the Space and Enter keys.
	 * <br>
	 * The Arrow Down/Arrow Up and Arrow Left/Arrow Right keys can be used to change selection between next/previous radio buttons in one group,
	 * while TAB and SHIFT + TAB can be used to enter or leave the radio button group.
	 * <br>
	 * <b>Note:</b> On entering radio button group, the focus goes to the currently selected radio button.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/RadioButton";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.RadioButton
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-radiobutton
	 * @public
	 */
	class RadioButton extends UI5Element {
		constructor() {
			super();

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		static get metadata() {
			return metadata$c;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$d;
		}

		static get styles() {
			return radioButtonCss;
		}

		static get dependencies() {
			return [Label];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			this.syncGroup();

			this._enableFormSupport();
		}

		syncGroup() {
			const oldGroup = this._name;
			const currentGroup = this.name;

			if (currentGroup !== oldGroup) {
				if (oldGroup) {
					// remove the control from the previous group
					RadioButtonGroup.removeFromGroup(this, oldGroup);
				}

				if (currentGroup) {
					// add the control to the existing group
					RadioButtonGroup.addToGroup(this, currentGroup);
				}
			} else if (currentGroup) {
				RadioButtonGroup.enforceSingleSelection(this, currentGroup);
			}

			this._name = this.name;
		}

		_enableFormSupport() {
			const FormSupport = getFeature("FormSupport");
			if (FormSupport) {
				FormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {
					nativeInput.disabled = element.disabled || !element.selected;
					nativeInput.value = element.selected ? element.value : "";
				});
			} else if (this.value) {
				console.warn(`In order for the "value" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
			}
		}

		_onclick() {
			return this.toggle();
		}

		_handleDown(event) {
			const currentGroup = this.name;

			if (!currentGroup) {
				return;
			}

			event.preventDefault();
			RadioButtonGroup.selectNextItem(this, currentGroup);
		}

		_handleUp(event) {
			const currentGroup = this.name;

			if (!currentGroup) {
				return;
			}

			event.preventDefault();
			RadioButtonGroup.selectPreviousItem(this, currentGroup);
		}

		_onkeydown(event) {
			if (isSpace(event)) {
				return event.preventDefault();
			}

			if (isEnter(event)) {
				return this.toggle();
			}

			if (isDown(event) || isRight(event)) {
				this._handleDown(event);
			}

			if (isUp(event) || isLeft(event)) {
				this._handleUp(event);
			}
		}

		_onkeyup(event) {
			if (isSpace(event)) {
				this.toggle();
			}
		}

		toggle() {
			if (!this.canToggle()) {
				return this;
			}

			if (!this.name) {
				this.selected = !this.selected;
				this.fireEvent("select");
				return this;
			}

			RadioButtonGroup.selectItem(this, this.name);
			return this;
		}

		canToggle() {
			return !(this.disabled || this.readonly || this.selected);
		}

		valueStateTextMappings() {
			const i18nBundle = this.i18nBundle;

			return {
				"Error": i18nBundle.getText(VALUE_STATE_ERROR),
				"Warning": i18nBundle.getText(VALUE_STATE_WARNING),
			};
		}

		get classes() {
			return {
				inner: {
					"ui5-radio-inner--hoverable": !this.disabled && !this.readonly && isDesktop(),
				},
			};
		}

		get ariaReadonly() {
			return this.readonly ? "true" : undefined;
		}

		get ariaDisabled() {
			return this.disabled ? "true" : undefined;
		}

		get ariaLabelledBy() {
			return this.text ? `${this._id}-label` : undefined;
		}

		get ariaDescribedBy() {
			return this.hasValueState ? `${this._id}-descr` : undefined;
		}

		get hasValueState() {
			return this.valueState !== ValueState.None;
		}

		get valueStateText() {
			return this.valueStateTextMappings()[this.valueState];
		}

		get tabIndex() {
			const tabindex = this.getAttribute("tabindex");

			if (this.disabled) {
				return "-1";
			}

			if (this.name) {
				return this.selected ? "0" : "-1";
			}

			return tabindex || "0";
		}

		get strokeWidth() {
			return this.valueState === "None" ? "1" : "2";
		}
	}

	RadioButton.define();

	const name$7 = "accept";
	const pathData$7 = "M455.8 94q9 9 3 19l-222 326q-4 8-12 9t-14-5l-151-167q-5-5-4.5-11t5.5-11l25-25q12-12 23 0l96 96q5 5 13 4.5t12-8.5l175-249q4-7 11.5-8t13.5 4z";
	const ltr$7 = true;
	const collection$7 = "SAP-icons";

	registerIcon(name$7, { pathData: pathData$7, ltr: ltr$7, collection: collection$7});

	const block0$e = (context) => { return scopedHtml`<div class="ui5-checkbox-root ${classMap(context.classes.main)}" role="checkbox" aria-checked="${ifDefined(context.checked)}" aria-readonly="${ifDefined(context.ariaReadonly)}" aria-disabled="${ifDefined(context.ariaDisabled)}" aria-label="${ifDefined(context.ariaLabelText)}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" aria-describedby="${ifDefined(context.ariaDescribedBy)}" tabindex="${ifDefined(context.tabIndex)}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @click="${context._onclick}" dir="${ifDefined(context.effectiveDir)}"><div id="${ifDefined(context._id)}-CbBg" class="ui5-checkbox-inner">${ context.checked ? block1$b() : undefined }<input id="${ifDefined(context._id)}-CB" type='checkbox' ?checked="${context.checked}" ?readonly="${context.readonly}" ?disabled="${context.disabled}" role="none" data-sap-no-tab-ref /></div>${ context._label.text ? block2$a(context) : undefined }${ context.hasValueState ? block3$6(context) : undefined }<slot name="formSupport"></slot></div>`; };
	const block1$b = (context) => { return scopedHtml`<ui5-icon name="accept" class="ui5-checkbox-icon"></ui5-icon>`; };
	const block2$a = (context) => { return scopedHtml`<ui5-label id="${ifDefined(context._id)}-label" class="ui5-checkbox-label" ?wrap="${context._label.wrap}">${ifDefined(context._label.text)}</ui5-label>`; };
	const block3$6 = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}-descr" class="ui5-hidden-text">${ifDefined(context.valueStateText)}</span>`; };


	const main$e = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$e(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var checkboxCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:inline-block}:host{overflow:hidden;max-width:100%;outline:none}:host([disabled]) .ui5-checkbox-root{opacity:.5}:host([readonly]:not([value-state=Warning]):not([value-state=Error])) .ui5-checkbox-inner{background:var(--sapField_ReadOnly_Background);border:var(--_ui5_checkbox_inner_readonly_border);color:var(--sapContent_NonInteractiveIconColor)}:host([wrap][text]) .ui5-checkbox-root{min-height:auto;box-sizing:border-box;align-items:flex-start;padding-top:var(--_ui5_checkbox_root_side_padding);padding-bottom:var(--_ui5_checkbox_root_side_padding)}:host([wrap][text]) .ui5-checkbox-root .ui5-checkbox-inner,:host([wrap][text]) .ui5-checkbox-root .ui5-checkbox-label{margin-top:var(--_ui5_checkbox_wrapped_content_margin_top)}:host([wrap][text]) .ui5-checkbox-root .ui5-checkbox-label{word-break:break-all}:host([wrap]) .ui5-checkbox-root:focus:before{bottom:var(--_ui5_checkbox_wrapped_focus_left_top_bottom_position)}:host([value-state=Error]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host([value-state=Error]) .ui5-checkbox-inner{background:var(--sapField_InvalidBackground);border:var(--_ui5_checkbox_inner_error_border);color:var(--sapField_InvalidColor)}:host([value-state=Warning]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host([value-state=Warning]) .ui5-checkbox-inner{background:var(--sapField_WarningBackground);border:var(--_ui5_checkbox_inner_warning_border);color:var(--sapField_WarningColor)}:host([value-state=Information]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host([value-state=Information]) .ui5-checkbox-inner{background:var(--sapField_InformationBackground);border:var(--_ui5_checkbox_inner_information_border);color:var(--sapField_InformationColor)}:host([value-state=Warning]) .ui5-checkbox-icon{color:var(--_ui5_checkbox_checkmark_warning_color)}:host([text]) .ui5-checkbox-root{padding-right:0}:host([text]) .ui5-checkbox-root:focus:before{right:0}.ui5-checkbox-root{position:relative;display:inline-flex;align-items:center;justify-content:center;width:100%;min-height:var(--_ui5_checkbox_width_height);min-width:var(--_ui5_checkbox_width_height);padding:0 var(--_ui5_checkbox_wrapper_padding);box-sizing:border-box;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.ui5-checkbox-root:after{content:\"\";min-height:inherit;font-size:0}.ui5-checkbox-root:focus:before{content:\"\";position:absolute;top:var(--_ui5_checkbox_focus_position);left:var(--_ui5_checkbox_focus_position);right:var(--_ui5_checkbox_focus_position);bottom:var(--_ui5_checkbox_focus_position);border:var(--_ui5_checkbox_focus_outline)}.ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5_checkbox_hover_background);border-color:var(--sapField_Hover_BorderColor)}.ui5-checkbox-inner{display:flex;justify-content:center;align-items:center;min-width:var(--_ui5_checkbox_inner_width_height);max-width:var(--_ui5_checkbox_inner_width_height);height:var(--_ui5_checkbox_inner_width_height);max-height:var(--_ui5_checkbox_inner_width_height);border:var(--_ui5_checkbox_inner_border);border-radius:var(--_ui5_checkbox_inner_border_radius);background:var(--sapField_Background);color:var(--_ui5_checkbox_checkmark_color);box-sizing:border-box;position:relative;cursor:default;pointer-events:none}.ui5-checkbox-icon{color:currentColor;cursor:default}.ui5-checkbox-inner input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit}.ui5-checkbox-root .ui5-checkbox-label{margin-left:var(--_ui5_checkbox_wrapper_padding);cursor:default;text-overflow:ellipsis;overflow:hidden;pointer-events:none;user-select:none;-ms-user-select:none;-webkit-user-select:none}.ui5-checkbox-icon{width:var(--_ui5_checkbox_icon_size);height:var(--_ui5_checkbox_icon_size)}:host([text]) [dir=rtl].ui5-checkbox-root{padding-left:0;padding-right:var(--_ui5_checkbox_wrapper_padding)}:host([text]) [dir=rtl].ui5-checkbox-root:focus:before{left:0;right:var(--_ui5_checkbox_focus_position)}:host([text]) [dir=rtl].ui5-checkbox-root .ui5-checkbox-label{margin-left:0;margin-right:var(--_ui5_checkbox_compact_wrapper_padding)}";

	/**
	 * @public
	 */
	const metadata$d = {
		tag: "ui5-checkbox",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {

			/**
			 * Defines whether the <code>ui5-checkbox</code> is disabled.
			 * <br><br>
			 * <b>Note:</b> A disabled <code>ui5-checkbox</code> is completely noninteractive.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Defines whether the <code>ui5-checkbox</code> is read-only.
			 * <br><br>
			 * <b>Note:</b> A red-only <code>ui5-checkbox</code> is not editable,
			 * but still provides visual feedback upon user interaction.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			readonly: {
				type: Boolean,
			},

			/**
			 * Defines if the <code>ui5-checkbox</code> is checked.
			 * <br><br>
			 * <b>Note:</b> The property can be changed with user interaction,
			 * either by cliking/tapping on the <code>ui5-checkbox</code>, or by
			 * pressing the Enter or Space key.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			checked: {
				type: Boolean,
			},

			/**
			 * Defines the text of the <code>ui5-checkbox</code>.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			text: {
				type: String,
			},

			/**
			 * Defines the value state of the <code>ui5-checkbox</code>.
			 * <br><br>
			 * <b>Note:</b> Available options are <code>Warning</code>, <code>Error</code>, and <code>None</code> (default).
			 *
			 * @type {ValueState}
			 * @defaultvalue "None"
			 * @public
			 */
			valueState: {
				type: ValueState,
				defaultValue: ValueState.None,
			},

			/**
			 * Defines whether the <code>ui5-checkbox</code> text wraps when there is not enough space.
			 * <br><br>
			 * <b>Note:</b> By default, the text truncates when there is not enough space.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			wrap: {
				type: Boolean,
			},

			/**
			 * Determines the name with which the <code>ui5-checkbox</code> will be submitted in an HTML form.
			 *
			 * <br><br>
			 * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * <br><br>
			 * <b>Note:</b> When set, a native <code>input</code> HTML element
			 * will be created inside the <code>ui5-checkbox</code> so that it can be submitted as
			 * part of an HTML form. Do not use this property unless you need to submit a form.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			name: {
				type: String,
			},

			/**
			 * Determines the <code>aria-label</code>, set on the component root tag.
			 * @type {string}
			 * @defaultvalue undefined
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabel: {
				type: String,
				defaultValue: undefined,
			},

			/**
			 * Receives id(or many ids) of the elements that label the checkbox
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.9
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			_label: {
				type: Object,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {

			/**
			 * Fired when the <code>ui5-checkbox</code> checked state changes.
			 *
			 * @public
			 * @event
			 */
			change: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * Allows the user to set a binary value, such as true/false or yes/no for an item.
	 * <br><br>
	 * The <code>ui5-checkbox</code> component consists of a box and a label that describes its purpose.
	 * If it's checked, an indicator is displayed inside the box.
	 * To check/uncheck the <code>ui5-checkbox</code>, the user has to click or tap the square
	 * box or its label.
	 * <br><br>
	 * The <code>ui5-checkbox</code> component only has 2 states - checked and unchecked.
	 * Clicking or tapping toggles the <code>ui5-checkbox</code> between checked and unchecked state.
	 *
	 * <h3>Usage</h3>
	 *
	 * You can manually set the width of the element containing the box and the label using the <code>width</code> property.
	 * If the text exceeds the available width, it is truncated.
	 * The touchable area for toggling the <code>ui5-checkbox</code> ends where the text ends.
	 * <br><br>
	 * You can disable the <code>ui5-checkbox</code> by setting the <code>disabled</code> property to
	 * <code>true</code>,
	 * or use the <code>ui5-checkbox</code> in read-only mode by setting the <code>readonly</code>
	 * property to <code>true</code>.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/CheckBox";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.CheckBox
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-checkbox
	 * @public
	 */
	class CheckBox extends UI5Element {
		static get metadata() {
			return metadata$d;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$e;
		}

		static get styles() {
			return checkboxCss;
		}

		constructor() {
			super();

			this._label = {};
			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			this.syncLabel();

			this._enableFormSupport();
		}

		syncLabel() {
			this._label = Object.assign({}, this._label);
			this._label.text = this.text;
			this._label.wrap = this.wrap;
			this._label.textDirection = this.textDirection;
		}

		_enableFormSupport() {
			const FormSupport = getFeature("FormSupport");
			if (FormSupport) {
				FormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {
					nativeInput.disabled = element.disabled || !element.checked;
					nativeInput.value = element.checked ? "on" : "";
				});
			} else if (this.name) {
				console.warn(`In order for the "name" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
			}
		}

		_onclick() {
			this.toggle();
		}

		_onkeydown(event) {
			if (isSpace(event)) {
				event.preventDefault();
			}

			if (isEnter(event)) {
				this.toggle();
			}
		}

		_onkeyup(event) {
			if (isSpace(event)) {
				this.toggle();
			}
		}

		toggle() {
			if (this.canToggle()) {
				this.checked = !this.checked;
				this.fireEvent("change");
				// Angular two way data binding
				this.fireEvent("value-changed");
			}
			return this;
		}

		canToggle() {
			return !(this.disabled || this.readonly);
		}

		valueStateTextMappings() {
			const i18nBundle = this.i18nBundle;

			return {
				"Error": i18nBundle.getText(VALUE_STATE_ERROR),
				"Warning": i18nBundle.getText(VALUE_STATE_WARNING),
			};
		}

		get classes() {
			return {
				main: {
					"ui5-checkbox--hoverable": !this.disabled && !this.readonly && isDesktop(),
				},
			};
		}

		get ariaReadonly() {
			return this.readonly ? "true" : undefined;
		}

		get ariaDisabled() {
			return this.disabled ? "true" : undefined;
		}

		get ariaLabelText() {
			return getEffectiveAriaLabelText(this);
		}

		get ariaLabelledBy() {
			if (!this.ariaLabelText) {
				return this.text ? `${this._id}-label` : undefined;
			}

			return undefined;
		}

		get ariaDescribedBy() {
			return this.hasValueState ? `${this._id}-descr` : undefined;
		}

		get hasValueState() {
			return this.valueState !== ValueState.None;
		}

		get valueStateText() {
			return this.valueStateTextMappings()[this.valueState];
		}

		get tabIndex() {
			const tabindex = this.getAttribute("tabindex");
			return this.disabled ? undefined : tabindex || "0";
		}

		static get dependencies() {
			return [
				Label,
				Icon,
			];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	CheckBox.define();

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$2 = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host([actionable]){cursor:pointer}:host([selected][actionable]:not([active]):hover){background:var(--sapList_Hover_SelectionBackground)}:host([active][actionable]),:host([selected][active][actionable]){background:var(--sapList_Active_Background)}:host([actionable]:not([active]):not([selected]):hover){background:var(--sapList_Hover_Background)}:host([active][actionable]) .ui5-li-root.ui5-li--focusable .ui5-li-content:focus,:host([active][actionable]) .ui5-li-root.ui5-li--focusable:focus{outline-color:var(--sapContent_ContrastFocusColor)}:host([active][actionable]) .ui5-li-root .ui5-li-icon{color:var(--sapList_Active_TextColor)}:host([active][actionable]) .ui5-li-desc,:host([active][actionable]) .ui5-li-info,:host([active][actionable]) .ui5-li-title{color:var(--sapList_Active_TextColor)}:host([info-state=Warning]) .ui5-li-info{color:var(--sapCriticalTextColor)}:host([info-state=Success]) .ui5-li-info{color:var(--sapPositiveTextColor)}:host([info-state=Error]) .ui5-li-info{color:var(--sapNegativeTextColor)}:host([info-state=Information]) .ui5-li-info{color:var(--sapInformativeTextColor)}:host([has-title][description]){height:5rem}:host([has-title][image]){height:5rem}:host([image]) .ui5-li-content{height:3rem}:host([description]) .ui5-li-root{padding:1rem}:host([description]) .ui5-li-content{height:3rem}:host([has-title][description]) .ui5-li-title{padding-bottom:.375rem}.ui5-li-text-wrapper{display:flex;flex-direction:column;flex:auto;min-width:1px;line-height:normal}:host([description]) .ui5-li-text-wrapper{height:100%;justify-content:space-between;padding:.125rem 0}.ui5-li-description-info-wrapper{display:flex;justify-content:space-between}.ui5-li-title{color:var(--sapTextColor);font-size:var(--_ui5_list_item_title_size)}.ui5-li-desc,.ui5-li-info,.ui5-li-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-li-desc{color:var(--sapContent_LabelColor);font-size:var(--sapFontSize)}.ui5-li-info{margin:0 .25rem;color:var(--sapNeutralTextColor);font-size:.875rem;min-width:6rem;text-align:right;max-width:40%}:host([description]) .ui5-li-info{align-self:flex-end}.ui5-li-img{width:var(--_ui5_list_item_img_size);min-width:var(--_ui5_list_item_img_size);height:var(--_ui5_list_item_img_size);min-height:var(--_ui5_list_item_img_size);margin:var(--_ui5_list_item_img_margin);border-radius:.25rem}.ui5-li-icon{min-width:var(--_ui5_list_item_icon_size);min-height:var(--_ui5_list_item_icon_size);color:var(--sapContent_NonInteractiveIconColor);padding-right:.5rem}.ui5-li-content{display:flex;align-items:center;flex:auto;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;pointer-events:none}.ui5-li-deletebtn{display:flex;align-items:center}.ui5-li-multisel-cb,.ui5-li-singlesel-radiobtn{flex-shrink:0}:host([description]) .ui5-li-singlesel-radiobtn{align-self:flex-start;margin-top:var(--_ui5_list_item_selection_btn_margin_top)}:host([description]) .ui5-li-multisel-cb{align-self:flex-start;margin-top:var(--_ui5_list_item_selection_btn_margin_top)}:host([_mode=SingleSelectBegin]) .ui5-li-root{padding-right:1rem;padding-left:0}:host([_mode=MultiSelect]) .ui5-li-root{padding-right:1rem;padding-left:0}:host([_mode=SingleSelectEnd]) .ui5-li-root{padding-right:0;padding-left:1rem}:host [ui5-checkbox].ui5-li-singlesel-radiobtn{margin-right:var(--_ui5_list_item_cb_margin_right)}:host [dir=rtl] .ui5-li-icon{padding-left:.5rem;padding-right:0}:host [dir=rtl] .ui5-li-img{margin:.5rem 0 .5rem .75rem}[dir=rtl] .ui5-li-info{text-align:left}:host([_mode=SingleSelectBegin]) [dir=rtl].ui5-li-root{padding-right:0;padding-left:1rem}:host([_mode=MultiSelect]) [dir=rtl].ui5-li-root{padding-right:0;padding-left:1rem}:host([_mode=SingleSelectEnd]) [dir=rtl].ui5-li-root{padding-right:1rem;padding-left:0}";

	/**
	 * @public
	 */
	const metadata$e = {
		languageAware: true,
		properties: /** @lends  sap.ui.webcomponents.main.ListItem.prototype */ {

			/**
			 * Defines the visual indication and behavior of the list items.
			 * Available options are <code>Active</code> (by default), <code>Inactive</code> and <code>Detail</code>.
			 * <br><br>
			 * <b>Note:</b> When set to <code>Active</code>, the item will provide visual response upon press and hover,
			 * while with type <code>Inactive</code> and <code>Detail</code> - will not.
			 *
			 * @type {ListItemType}
			 * @defaultvalue "Active"
			 * @public
			*/
			type: {
				type: ListItemType,
				defaultValue: ListItemType.Active,
			},

			/**
			 * Indicates if the list item is active, e.g pressed down with the mouse or the keyboard keys.
			 *
			 * @type {boolean}
			 * @private
			*/
			active: {
				type: Boolean,
			},

			/**
			 * Indicates if the list item is actionable, e.g has hover and pressed effects.
			 *
			 * @type {boolean}
			 * @private
			*/
			actionable: {
				type: Boolean,
			},

			/**
			 * Used to define the role of the list item.
			 *
			 * @private
			 * @type {String}
			 * @defaultvalue "option"
			 * @since 1.0.0-rc.9
			 *
			 */
			role: {
				type: String,
				defaultValue: "option",
			},

			_mode: {
				type: ListMode,
				defaultValue: ListMode.None,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.ListItem.prototype */ {
			/**
			 * Fired when the user clicks on the detail button when type is <code>Detail</code>.
			 *
			 * @event sap.ui.webcomponents.main.ListItem#detail-click
			 * @public
			 */
			"detail-click": {},
			_press: {},
			_focused: {},
			"_selection-requested": {},
		},
	};

	/**
	 * @class
	 * A class to serve as a base
	 * for the <code>StandardListItem</code> and <code>CustomListItem</code> classes.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.ListItem
	 * @extends ListItemBase
	 * @public
	 */
	class ListItem extends ListItemBase {
		static get metadata() {
			return metadata$e;
		}

		static get styles() {
			return [ListItemBase.styles, styles$2];
		}

		static get dependencies() {
			return [
				Button,
				RadioButton,
				CheckBox,
			];
		}

		constructor() {
			super();

			this.deactivateByKey = event => {
				if (isEnter(event)) {
					this.deactivate();
				}
			};

			this.deactivate = () => {
				if (this.active) {
					this.active = false;
				}
			};

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering(...params) {
			this.actionable = (this.type === ListItemType.Active) && (this._mode !== ListMode.Delete);
		}

		onEnterDOM() {
			document.addEventListener("mouseup", this.deactivate);
			document.addEventListener("touchend", this.deactivate);
			document.addEventListener("keyup", this.deactivateByKey);
		}

		onExitDOM() {
			document.removeEventListener("mouseup", this.deactivate);
			document.removeEventListener("keyup", this.deactivateByKey);
			document.removeEventListener("touchend", this.deactivate);
		}

		_onkeydown(event) {
			super._onkeydown(event);

			const itemActive = this.type === ListItemType.Active;

			if (isSpace(event)) {
				event.preventDefault();
			}

			if ((isSpace(event) || isEnter(event)) && itemActive) {
				this.activate();
			}

			if (isEnter(event)) {
				this.fireItemPress(event);
			}
		}

		_onkeyup(event) {
			if (isSpace(event) || isEnter(event)) {
				this.deactivate();
			}

			if (isSpace(event)) {
				this.fireItemPress(event);
			}
		}

		_onmousedown(event) {
			if (event.isMarked === "button") {
				return;
			}
			this.activate();
		}

		_onmouseup(event) {
			if (event.isMarked === "button") {
				return;
			}
			this.deactivate();
		}

		_ontouchstart(event) {
			this._onmousedown(event);
		}

		_ontouchend(event) {
			this._onmouseup(event);
		}

		_onfocusout() {
			super._onfocusout();
			this.deactivate();
		}

		_onclick(event) {
			if (event.isMarked === "button") {
				return;
			}
			this.fireItemPress(event);
		}

		/*
		 * Called when selection components in Single (ui5-radiobutton)
		 * and Multi (ui5-checkbox) selection modes are used.
		 */
		onMultiSelectionComponentPress(event) {
			if (this.isInactive) {
				return;
			}

			this.fireEvent("_selection-requested", { item: this, selected: event.target.checked, selectionComponentPressed: true });
		}

		onSingleSelectionComponentPress(event) {
			if (this.isInactive) {
				return;
			}

			this.fireEvent("_selection-requested", { item: this, selected: !event.target.selected, selectionComponentPressed: true });
		}

		activate() {
			if (this.type === ListItemType.Active) {
				this.active = true;
			}
		}

		onDelete(event) {
			this.fireEvent("_selection-requested", { item: this, selectionComponentPressed: false });
		}

		onDetailClick(event) {
			this.fireEvent("detail-click", { item: this, selected: this.selected });
		}

		fireItemPress(event) {
			if (this.isInactive) {
				return;
			}

			this.fireEvent("_press", { item: this, selected: this.selected, key: event.key });
		}

		get isInactive() {
			return this.type === ListItemType.Inactive || this.type === ListItemType.Detail;
		}

		get placeSelectionElementBefore() {
			return this._mode === ListMode.MultiSelect
				|| this._mode === ListMode.SingleSelectBegin;
		}

		get placeSelectionElementAfter() {
			return !this.placeSelectionElementBefore
				&& (this._mode === ListMode.SingleSelectEnd || this._mode === ListMode.Delete);
		}

		get modeSingleSelect() {
			return [
				ListMode.SingleSelectBegin,
				ListMode.SingleSelectEnd,
				ListMode.SingleSelect,
			].includes(this._mode);
		}

		get modeMultiSelect() {
			return this._mode === ListMode.MultiSelect;
		}

		get modeDelete() {
			return this._mode === ListMode.Delete;
		}

		get typeDetail() {
			return this.type === ListItemType.Detail;
		}

		get typeActive() {
			return this.type === ListItemType.Active;
		}

		get ariaSelected() {
			if (this.modeMultiSelect || this.modeSingleSelect) {
				return this.selected;
			}

			return undefined;
		}

		get deleteText() {
			return this.i18nBundle.getText(DELETE);
		}

		get _accInfo() {
			return {
				role: this.role,
				ariaExpanded: undefined,
				ariaLevel: undefined,
				ariaLabel: this.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),
			};
		}

		static async onDefine() {
			await Promise.all([
				fetchI18nBundle("@ui5/webcomponents"),
			]);
		}
	}

	const block0$f = (context) => { return scopedHtml`<li tabindex="${ifDefined(context._tabIndex)}" class="${classMap(context.classes.main)}" dir="${ifDefined(context.effectiveDir)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" @keyup="${context._onkeyup}" @keydown="${context._onkeydown}" @mouseup="${context._onmouseup}" @mousedown="${context._onmousedown}" @touchstart="${context._ontouchstart}" @touchend="${context._ontouchend}" @click="${context._onclick}" aria-selected="${ifDefined(context.ariaSelected)}" role="${ifDefined(context._accInfo.role)}" aria-expanded="${ifDefined(context._accInfo.ariaExpanded)}" aria-level="${ifDefined(context._accInfo.ariaLevel)}" style="list-style-type: none;">${ context.placeSelectionElementBefore ? block1$c(context) : undefined }<div id="${ifDefined(context._id)}-content" class="ui5-li-content"><slot></slot></div>${ context.typeDetail ? block5$5(context) : undefined }${ context.placeSelectionElementAfter ? block6$4(context) : undefined }</li> `; };
	const block1$c = (context) => { return scopedHtml`${ context.modeSingleSelect ? block2$b(context) : undefined }${ context.modeMultiSelect ? block3$7(context) : undefined }${ context.modeDelete ? block4$6(context) : undefined }`; };
	const block2$b = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block3$7 = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block4$6 = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };
	const block5$5 = (context) => { return scopedHtml`<div class="ui5-li-detailbtn"><ui5-button design="Transparent" icon="edit" @click="${context.onDetailClick}"></ui5-button></div>`; };
	const block6$4 = (context) => { return scopedHtml`${ context.modeSingleSelect ? block7$3(context) : undefined }${ context.modeMultiSelect ? block8$2(context) : undefined }${ context.modeDelete ? block9$2(context) : undefined }`; };
	const block7$3 = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block8$2 = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block9$2 = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };


	const main$f = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$f(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var customListItemCss = ":host(:not([hidden])){display:block}:host{height:var(--_ui5_custom_list_item_height);box-sizing:border-box}.ui5-li-root.ui5-custom-li-root{padding:0;pointer-events:inherit}.ui5-li-root.ui5-custom-li-root .ui5-li-content{pointer-events:inherit}[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radiobutton].ui5-li-singlesel-radiobtn{display:flex;align-items:center}.ui5-li-root.ui5-custom-li-root,[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radiobutton].ui5-li-singlesel-radiobtn{min-width:var(--_ui5_custom_list_item_rb_min_width)}";

	/**
	 * @public
	 */
	const metadata$f = {
		tag: "ui5-li-custom",
		slots: /** @lends sap.ui.webcomponents.main.CustomListItem.prototype */ {

			/**
			 * Defines the content of the <code>ui5-li-custom</code>.
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
		properties: /** @lends sap.ui.webcomponents.main.CustomListItem.prototype */ {
		},
	};

	/**
	 * @class
	 *
	 * A component to be used as custom list item within the <code>ui5-list</code>
	 * the same way as the standard <code>ui5-li</code>.
	 *
	 * The <code>ui5-li-custom</code> accepts arbitrary HTML content to allow full customization.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.CustomListItem
	 * @extends ListItem
	 * @tagname ui5-li-custom
	 * @public
	 */
	class CustomListItem extends ListItem {
		static get metadata() {
			return metadata$f;
		}

		static get template() {
			return main$f;
		}

		static get styles() {
			return [ListItem.styles, customListItemCss];
		}

		_onkeydown(event) {
			if (!this.focused) {
				return;
			}

			super._onkeydown(event);
		}

		_onkeyup(event) {
			if (!this.focused) {
				return;
			}

			super._onkeyup(event);
		}

		get classes() {
			const result = super.classes;
			result.main["ui5-custom-li-root"] = true;
			return result;
		}
	}

	CustomListItem.define();

	const block0$g = (context) => { return scopedHtml`<div id="${ifDefined(context._id)}" class="ui5-tab-root"><slot></slot></div>`; };


	const main$g = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$g(context);
	};

	const block0$h = (context) => { return scopedHtml`<li id="${ifDefined(context._id)}" class="${ifDefined(context.headerClasses)}" tabindex="${ifDefined(context._tabIndex)}" role="tab" aria-posinset="${ifDefined(context._posinset)}" aria-setsize="${ifDefined(context._setsize)}" aria-controls="ui5-tc-contentItem-${ifDefined(context._posinset)}" aria-selected="${ifDefined(context.effectiveSelected)}" aria-disabled="${ifDefined(context.effectiveDisabled)}" ?disabled="${context.effectiveDisabled}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" data-ui5-stable="${ifDefined(context.stableDomRef)}" style="list-style-type: none;">${ context.icon ? block1$d(context) : undefined }<div class="ui5-tab-strip-itemContent">${ !context._isInline ? block2$c(context) : undefined }${ context.text ? block4$7(context) : undefined }${ context._isInline ? block5$6(context) : undefined }</div></li><!-- Additional text --> `; };
	const block1$d = (context) => { return scopedHtml`<div class="ui5-tab-strip-item-icon-outer"><ui5-icon name="${ifDefined(context.icon)}" class="ui5-tab-strip-item-icon"></ui5-icon></div>`; };
	const block2$c = (context) => { return scopedHtml`${ context.additionalText ? block3$8(context) : undefined }`; };
	const block3$8 = (context) => { return scopedHtml`<span class="ui5-tab-strip-itemAdditionalText" id="${ifDefined(context._id)}-additionalText">${ifDefined(context.additionalText)}</span>`; };
	const block4$7 = (context) => { return scopedHtml`<span class="ui5-tab-strip-itemText" id="${ifDefined(context._id)}-text"><span class="${ifDefined(context.headerSemanticIconClasses)}"></span>${ifDefined(context.text)}</span>`; };
	const block5$6 = (context) => { return scopedHtml`${ context.additionalText ? block6$5(context) : undefined }`; };
	const block6$5 = (context) => { return scopedHtml`<span class="ui5-tab-strip-itemAdditionalText" id="${ifDefined(context._id)}-additionalText">${ifDefined(context.additionalText)}</span>`; };


	const main$h = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$h(context);
	};

	const block0$i = (context) => { return scopedHtml`<ui5-li-custom id="${ifDefined(context._id)}" class="${ifDefined(context.overflowClasses)}" type="${ifDefined(context.overflowState)}" ?selected="${context.effectiveSelected}" ?disabled="${context.effectiveDisabled}" aria-disabled="${ifDefined(context.effectiveDisabled)}" aria-selected="${ifDefined(context.effectiveSelected)}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}"><div class="ui5-tab-overflow-itemContent">${ context.icon ? block1$e(context) : undefined }${ifDefined(context.text)}${ context.additionalText ? block2$d(context) : undefined }</div></ui5-li-custom>`; };
	const block1$e = (context) => { return scopedHtml`<ui5-icon name="${ifDefined(context.icon)}"></ui5-icon>`; };
	const block2$d = (context) => { return scopedHtml` (${ifDefined(context.additionalText)}) `; };


	const main$i = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$i(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var css = ":host{display:inline-block;width:100%}.ui5-tab-root{width:100%;height:100%}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var stripCss = ".ui5-tab-strip-item{color:var(--_ui5_tc_headerItem_color);cursor:pointer;flex-shrink:0;margin:0 1rem;font-size:var(--sapFontSmallSize);text-shadow:var(--sapContent_TextShadow);position:relative;display:inline-flex;align-items:center}.ui5-tab-strip-item:last-child{margin-right:0}.ui5-tab-strip-itemContent{pointer-events:none}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly{color:var(--_ui5_tc_headeritem_text_selected_color)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{content:\"\";position:absolute;width:100%;bottom:0;left:0;border-bottom:var(--_ui5_tc_headerItemContent_border_bottom)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{bottom:-.8rem}.ui5-tab-strip-item--disabled{cursor:default;opacity:.5}.ui5-tab-strip-item:focus{outline:none}.ui5-tab-strip-item--textOnly:not(.ui5-tab-strip-item--inline):focus .ui5-tab-strip-itemText,.ui5-tab-strip-item--withIcon:focus .ui5-tab-strip-item-icon-outer{outline:var(--_ui5_tc_headerItem_focus_border)}.ui5-tab-strip-item--inline.ui5-tab-strip-item--textOnly:focus .ui5-tab-strip-itemContent,.ui5-tab-strip-item--mixedMode:focus .ui5-tab-strip-itemContent{outline:var(--_ui5_tc_headerItem_focus_border)}.ui5-tab-strip-item-semanticIcon:before{display:var(--_ui5_tc_headerItemSemanticIcon_display);font-family:SAP-icons;font-size:.75rem;margin-right:.25rem;speak:none;-webkit-font-smoothing:antialiased}.ui5-tab-strip-item-semanticIcon--positive:before{content:\"\\e1ab\"}.ui5-tab-strip-item-semanticIcon--negative:before{content:\"\\e1ac\"}.ui5-tab-strip-item-semanticIcon--critical:before{content:\"\\e1ae\"}.ui5-tab-strip-item--mixedMode,.ui5-tab-strip-item--withIcon{margin-top:.75rem;padding-bottom:.75rem}.ui5-tab-strip-item-icon-outer{display:flex;justify-content:center;align-items:center;position:relative;border:var(--_ui5_tc_headerItemIcon_border);border-radius:50%;margin-right:.25rem;height:var(--_ui5_tc_item_text);width:var(--_ui5_tc_item_text);pointer-events:none}.ui5-tab-strip-item-icon{width:var(--_ui5_tc_item_icon_size);height:var(--_ui5_tc_item_icon_size);color:var(--_ui5_tc_headerItemIcon_color);text-shadow:var(--sapContent_TextShadow);pointer-events:none}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5_tc_headerItemIcon_selected_background)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItemIcon_selected_color);text-shadow:none}.ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:block}.ui5-tab-strip-item--inline .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:inline}.ui5-tab-strip-item--withIcon .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{margin-top:var(--_ui5_tc_item_add_text_margin_top)}.ui5-tab-strip-item--textOnly{font-size:var(--sapFontSize);height:var(--_ui5_tc_item_text_text_only);display:flex;align-items:center;line-height:var(--_ui5_tc_item_text_line_height)}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText,.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemText{display:inline-block;vertical-align:middle}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{font-size:1.5rem;margin-right:.5rem}.ui5-tab-strip-item--positive.ui5-tab-strip-item--textOnly,.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer,.ui5-tab-strip-item-semanticIcon--positive:before{color:var(--sapPositiveColor);border-color:var(--_ui5_tc_headerItem_positive_selected_border_color)}.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItem_positive_color)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5_tc_headerItemIcon_positive_selected_background);color:var(--_ui5_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer:after,.ui5-tab-strip-item.ui5-tab-strip-item--positive .ui5-tab-strip-itemContent:after{border-color:var(--_ui5_tc_headerItem_positive_border_color)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--textOnly,.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer,.ui5-tab-strip-item-semanticIcon--negative:before{color:var(--sapNegativeColor);border-color:var(--_ui5_tc_headerItem_negative_selected_border_color)}.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItem_negative_color)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5_tc_headerItemIcon_negative_selected_background)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer:after,.ui5-tab-strip-item.ui5-tab-strip-item--negative .ui5-tab-strip-itemContent:after{border-color:var(--_ui5_tc_headerItem_negative_border_color)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--textOnly,.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer,.ui5-tab-strip-item-semanticIcon--critical:before{color:var(--sapCriticalColor);border-color:var(--_ui5_tc_headerItem_critical_selected_border_color)}.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItem_critical_color)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5_tc_headerItemIcon_critical_selected_background)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer:after,.ui5-tab-strip-item.ui5-tab-strip-item--critical .ui5-tab-strip-itemContent:after{border-color:var(--_ui5_tc_headerItem_critical_border_color)}.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon-outer,.ui5-tab-strip-item--nutral.ui5-tab-strip-item--textOnly{color:var(--sapNeutralColor);border-color:var(--_ui5_tc_headerItem_neutral_selected_border_color)}.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItem_neutral_color)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5_tc_headerItemIcon_neutral_selected_background)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon:after,.ui5-tab-strip-items.ui5-tab-strip-item--neutral .ui5-tab-strip-itemContent:after{border-color:var(--_ui5_tc_headerItem_neutral_border_color)}[dir=rtl] .ui5-tab-strip-item:last-child{margin-left:0}[dir=rtl] .ui5-tab-strip-item-semanticIcon:before{margin-left:.25rem;margin-right:0}[dir=rtl] .ui5-tab-strip-item-icon-outer{margin-left:.25rem;margin-right:0}[dir=rtl] .ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{margin-right:0;margin-left:.5rem}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var overflowCss = ".ui5-tab-overflow-item{color:var(--_ui5_tc_overflowItem_default_color)}.ui5-tab-overflow-item--disabled{cursor:default;opacity:.5}.ui5-tab-overflow-item--positive{color:var(--_ui5_tc_overflowItem_positive_color);border-color:var(--_ui5_tc_headerItem_positive_selected_border_color)}.ui5-tab-overflow-item--negative{color:var(--_ui5_tc_overflowItem_negative_color);border-color:var(--_ui5_tc_headerItem_negative_selected_border_color)}.ui5-tab-overflow-item--critical{color:var(--_ui5_tc_overflowItem_critical_color);border-color:var(--_ui5_tc_headerItem_critical_selected_border_color)}.ui5-tab-overflow-item--neutral{color:var(--_ui5_tc_overflowItem_neutral_color);border-color:var(--_ui5_tc_headerItem_neutral_selected_border_color)}.ui5-tab-overflow-item[active] .ui5-tab-overflow-itemContent{color:var(--sapList_Active_TextColor)}.ui5-tab-overflow-itemContent{display:flex;align-items:center;padding:0 .5rem;height:var(--_ui5_tc_item_text);pointer-events:none}.ui5-tab-overflow-item [ui5-icon]{width:1.375rem;height:1.375rem;padding-right:1rem;color:var(--_ui5_tc_overflowItem_current_color)}";

	/**
	 * @public
	 */
	const metadata$g = {
		tag: "ui5-tab",
		slots: /** @lends sap.ui.webcomponents.main.Tab.prototype */ {

			/**
			 * Defines the tab content.
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
		properties: /** @lends sap.ui.webcomponents.main.Tab.prototype */ {

			/**
			 * The text to be displayed for the item.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			text: {
				type: String,
			},

			/**
			 * Enabled items can be selected.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Represents the "additionalText" text, which is displayed in the tab filter.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			additionalText: {
				type: String,
			},

			/**
			 * Defines the icon source URI to be displayed as graphical element within the <code>ui5-tab</code>.
			 * The SAP-icons font provides numerous built-in icons.
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines the <code>ui5-tab</code> semantic color.
			 * <br><br>
			 * The color is applied to:
			 * <ul>
			 * <li>the <code>ui5-tab</code> icon</li>
			 * <li>the <code>text</code> when <code>ui5-tab</code> overflows</li>
			 * <li>the tab selection line</li>
			 * </ul>
			 *
			 * <br><br>
			 * Available semantic colors are: <code>"Default"</code>, <code>"Neutral"</code>, <code>"Positive"</code>, <code>"Critical"</code> and <code>"Negative"</code>.
			 *
			 * <br><br>
			 * <b>Note:</b> The color value depends on the current theme.
			 * @type {SemanticColor}
			 * @defaultvalue "Default"
			 * @public
			 */
			semanticColor: {
				type: SemanticColor,
				defaultValue: SemanticColor.Default,
			},

			/**
			 * Defines the stable selector that you can use via getStableDomRef method.
			 * @public
			 * @since 1.0.0-rc.8
			 */
			stableDomRef: {
				type: String,
			},

			/**
			 * Specifies if the <code>ui5-tab</code> is selected.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			selected: {
				type: Boolean,
			},

			_tabIndex: {
				type: String,
				defaultValue: "-1",
				noAttribute: true,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.Tab.prototype */ {
		},
	};

	/**
	 * @class
	 * The <code>ui5-tab</code> represents a selectable item inside a <code>ui5-tabcontainer</code>.
	 * It defines both the item in the tab strip (top part of the <code>ui5-tabcontainer</code>) and the
	 * content that is presented to the user once the tab is selected.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Tab
	 * @extends UI5Element
	 * @tagname ui5-tab
	 * @public
	 */
	class Tab extends UI5Element {
		static get metadata() {
			return metadata$g;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$g;
		}

		static get stripTemplate() {
			return main$h;
		}

		static get overflowTemplate() {
			return main$i;
		}

		static get styles() {
			return css;
		}

		static get dependencies() {
			return [
				Icon,
				CustomListItem,
			];
		}

		get isSeparator() {
			return false;
		}

		get stripPresentation() {
			return executeTemplate(this.constructor.stripTemplate, this);
		}

		get overflowPresentation() {
			return executeTemplate(this.constructor.overflowTemplate, this);
		}

		getFocusDomRef() {
			let focusedDomRef = super.getFocusDomRef();

			if (this._getTabContainerHeaderItemCallback) {
				focusedDomRef = this._getTabContainerHeaderItemCallback();
			}

			return focusedDomRef;
		}

		get isMixedModeTab() {
			return !this.icon && this._mixedMode;
		}

		get isTextOnlyTab() {
			return !this.icon && !this._mixedMode;
		}

		get isIconTab() {
			return !!this.icon;
		}

		get effectiveDisabled() {
			return this.disabled || undefined;
		}

		get effectiveSelected() {
			return this.selected || false;
		}

		get effectiveHidden() {
			return !this.selected;
		}

		get ariaLabelledBy() {
			const labels = [];

			if (this.text) {
				labels.push(`${this._id}-text`);
			}

			if (this.additionalText) {
				labels.push(`${this._id}-additionalText`);
			}

			if (this.icon) {
				labels.push(`${this._id}-icon`);
			}

			return labels.join(" ");
		}

		get headerClasses() {
			const classes = ["ui5-tab-strip-item"];

			if (this.selected) {
				classes.push("ui5-tab-strip-item--selected");
			}

			if (this.disabled) {
				classes.push("ui5-tab-strip-item--disabled");
			}

			if (this.tabLayout === TabLayout.Inline) {
				classes.push("ui5-tab-strip-item--inline");
			}

			if (!this.icon && !this._mixedMode) {
				classes.push("ui5-tab-strip-item--textOnly");
			}

			if (this.icon) {
				classes.push("ui5-tab-strip-item--withIcon");
			}

			if (!this.icon && this._mixedMode) {
				classes.push("ui5-tab-strip-item--mixedMode");
			}

			if (this.semanticColor !== SemanticColor.Default) {
				classes.push(`ui5-tab-strip-item--${this.semanticColor.toLowerCase()}`);
			}

			return classes.join(" ");
		}

		get headerSemanticIconClasses() {
			const classes = ["ui5-tab-strip-item-semanticIcon"];

			if (this.semanticColor !== SemanticColor.Default) {
				classes.push(`ui5-tab-strip-item-semanticIcon--${this.semanticColor.toLowerCase()}`);
			}

			return classes.join(" ");
		}

		get overflowClasses() {
			const classes = ["ui5-tab-overflow-item"];

			if (this.semanticColor !== SemanticColor.Default) {
				classes.push(`ui5-tab-overflow-item--${this.semanticColor.toLowerCase()}`);
			}

			if (this.disabled) {
				classes.push("ui5-tab-overflow-item--disabled");
			}

			return classes.join(" ");
		}

		get overflowState() {
			return this.disabled ? "Inactive" : "Active";
		}
	}

	Tab.define();

	TabContainer.registerTabStyles(stripCss);
	TabContainer.registerStaticAreaTabStyles(overflowCss);

	/**
	 * Different calendar types.
	 */
	const CalendarTypes = {
		Gregorian: "Gregorian",
		Islamic: "Islamic",
		Japanese: "Japanese",
		Buddhist: "Buddhist",
		Persian: "Persian",
	};

	class CalendarType extends DataType {
		static isValid(value) {
			return !!CalendarTypes[value];
		}
	}

	CalendarType.generateTypeAccessors(CalendarTypes);

	let calendarType;

	const getCalendarType$1 = () => {
		if (calendarType === undefined) {
			calendarType = getCalendarType();
		}

		if (CalendarType.isValid(calendarType)) {
			return calendarType;
		}

		return CalendarType.Gregorian;
	};

	const emptyFn = () => {};

	/**
	 * OpenUI5 FormatSettings shim
	 */
	const FormatSettings = {
		getFormatLocale: getLocale,
		getLegacyDateFormat: emptyFn,
		getLegacyDateCalendarCustomizing: emptyFn,
		getCustomLocaleData: emptyFn,
	};

	/**
	 * OpenUI5 Configuration Shim
	 */
	const Configuration = {
		getLanguage: getLanguage$1,
		getCalendarType: getCalendarType$1,
		getSupportedLanguages: () => getDesigntimePropertyAsArray("$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,ko,lt,lv,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$"),
		getOriginInfo: emptyFn,
		getFormatSettings: () => FormatSettings,
	};

	/**
	 * OpenUI5 Core shim
	 */
	const Core = {
		getConfiguration: () => Configuration,
		getLibraryResourceBundle: emptyFn(),
		getFormatSettings: () => FormatSettings,
	};

	var class2type$1 = {};
	var hasOwn$1 = class2type$1.hasOwnProperty;
	var toString$1 = class2type$1.toString;
	var fnToString$1 = hasOwn$1.toString;
	var ObjectFunctionString$1 = fnToString$1.call(Object);
	var fnIsPlainObject$1 = function (obj) {
	  var proto, Ctor;
	  if (!obj || toString$1.call(obj) !== "[object Object]") {
	    return false;
	  }
	  proto = Object.getPrototypeOf(obj);
	  if (!proto) {
	    return true;
	  }
	  Ctor = hasOwn$1.call(proto, "constructor") && proto.constructor;
	  return typeof Ctor === "function" && fnToString$1.call(Ctor) === ObjectFunctionString$1;
	};

	var oToken$1 = Object.create(null);
	var fnMerge$2 = function () {
	    var src, copyIsArray, copy, name, options, clone, target = arguments[2] || {}, i = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? undefined : oToken$1;
	    if (typeof target !== 'object' && typeof target !== 'function') {
	        target = {};
	    }
	    for (; i < length; i++) {
	        if ((options = arguments[i]) != null) {
	            for (name in options) {
	                src = target[name];
	                copy = options[name];
	                if (name === '__proto__' || target === copy) {
	                    continue;
	                }
	                if (deep && copy && (fnIsPlainObject$1(copy) || (copyIsArray = Array.isArray(copy)))) {
	                    if (copyIsArray) {
	                        copyIsArray = false;
	                        clone = src && Array.isArray(src) ? src : [];
	                    } else {
	                        clone = src && fnIsPlainObject$1(src) ? src : {};
	                    }
	                    target[name] = fnMerge$2(deep, arguments[1], clone, copy);
	                } else if (copy !== skipToken) {
	                    target[name] = copy;
	                }
	            }
	        }
	    }
	    return target;
	};

	var fnExtend = function () {
	    var args = [
	        false,
	        true
	    ];
	    args.push.apply(args, arguments);
	    return fnMerge$2.apply(null, args);
	};

	var BaseObject;
	var Interface = function (oObject, aMethods, bFacade) {
	  if (!oObject) {
	    return oObject;
	  }
	  BaseObject = BaseObject || sap.ui.requireSync("sap/ui/base/Object");
	  function fCreateDelegator(oObject, sMethodName) {
	    return function () {
	      var tmp = oObject[sMethodName].apply(oObject, arguments);
	      if (bFacade) {
	        return this;
	      } else {
	        return tmp instanceof BaseObject ? tmp.getInterface() : tmp;
	      }
	    };
	  }
	  if (!aMethods) {
	    return {};
	  }
	  var sMethodName;
	  for (var i = 0, ml = aMethods.length; i < ml; i++) {
	    sMethodName = aMethods[i];
	    if (!oObject[sMethodName] || typeof oObject[sMethodName] === "function") {
	      this[sMethodName] = fCreateDelegator(oObject, sMethodName);
	    }
	  }
	};

	var ObjectPath = {};
	var defaultRootContext = window;
	function getObjectPathArray(vObjectPath) {
	  return Array.isArray(vObjectPath) ? vObjectPath.slice() : vObjectPath.split(".");
	}
	ObjectPath.create = function (vObjectPath, oRootContext) {
	  var oObject = oRootContext || defaultRootContext;
	  var aNames = getObjectPathArray(vObjectPath);
	  for (var i = 0; i < aNames.length; i++) {
	    var sName = aNames[i];
	    if (oObject[sName] === null || oObject[sName] !== undefined && (typeof oObject[sName] !== "object" && typeof oObject[sName] !== "function")) {
	      throw new Error("Could not set object-path for '" + aNames.join(".") + "', path segment '" + sName + "' already exists.");
	    }
	    oObject[sName] = oObject[sName] || ({});
	    oObject = oObject[sName];
	  }
	  return oObject;
	};
	ObjectPath.get = function (vObjectPath, oRootContext) {
	  var oObject = oRootContext || defaultRootContext;
	  var aNames = getObjectPathArray(vObjectPath);
	  var sPropertyName = aNames.pop();
	  for (var i = 0; i < aNames.length && oObject; i++) {
	    oObject = oObject[aNames[i]];
	  }
	  return oObject ? oObject[sPropertyName] : undefined;
	};
	ObjectPath.set = function (vObjectPath, vValue, oRootContext) {
	  oRootContext = oRootContext || defaultRootContext;
	  var aNames = getObjectPathArray(vObjectPath);
	  var sPropertyName = aNames.pop();
	  var oObject = ObjectPath.create(aNames, oRootContext);
	  oObject[sPropertyName] = vValue;
	};

	var Device$1 = {
	  browser: {
	    phantomJS: false
	  }
	};

	var fnNow = !(typeof window != "undefined" && window.performance && performance.now && performance.timing) ? Date.now : (function () {
	  var iNavigationStart = performance.timing.navigationStart;
	  return function perfnow() {
	    return iNavigationStart + performance.now();
	  };
	})();

	var Log = {};
	Log.Level = {
	    NONE: -1,
	    FATAL: 0,
	    ERROR: 1,
	    WARNING: 2,
	    INFO: 3,
	    DEBUG: 4,
	    TRACE: 5,
	    ALL: 5 + 1
	};
	var sDefaultComponent, aLog = [], mMaxLevel = { '': Log.Level.ERROR }, iLogEntriesLimit = 3000, oListener = null, bLogSupportInfo = false;
	function pad0(i, w) {
	    return ('000' + String(i)).slice(-w);
	}
	function level(sComponent) {
	    return !sComponent || isNaN(mMaxLevel[sComponent]) ? mMaxLevel[''] : mMaxLevel[sComponent];
	}
	function discardLogEntries() {
	    var iLogLength = aLog.length;
	    if (iLogLength) {
	        var iEntriesToKeep = Math.min(iLogLength, Math.floor(iLogEntriesLimit * 0.7));
	        if (oListener) {
	            oListener.onDiscardLogEntries(aLog.slice(0, iLogLength - iEntriesToKeep));
	        }
	        if (iEntriesToKeep) {
	            aLog = aLog.slice(-iEntriesToKeep, iLogLength);
	        } else {
	            aLog = [];
	        }
	    }
	}
	function getLogEntryListenerInstance() {
	    if (!oListener) {
	        oListener = {
	            listeners: [],
	            onLogEntry: function (oLogEntry) {
	                for (var i = 0; i < oListener.listeners.length; i++) {
	                    if (oListener.listeners[i].onLogEntry) {
	                        oListener.listeners[i].onLogEntry(oLogEntry);
	                    }
	                }
	            },
	            onDiscardLogEntries: function (aDiscardedLogEntries) {
	                for (var i = 0; i < oListener.listeners.length; i++) {
	                    if (oListener.listeners[i].onDiscardLogEntries) {
	                        oListener.listeners[i].onDiscardLogEntries(aDiscardedLogEntries);
	                    }
	                }
	            },
	            attach: function (oLog, oLstnr) {
	                if (oLstnr) {
	                    oListener.listeners.push(oLstnr);
	                    if (oLstnr.onAttachToLog) {
	                        oLstnr.onAttachToLog(oLog);
	                    }
	                }
	            },
	            detach: function (oLog, oLstnr) {
	                for (var i = 0; i < oListener.listeners.length; i++) {
	                    if (oListener.listeners[i] === oLstnr) {
	                        if (oLstnr.onDetachFromLog) {
	                            oLstnr.onDetachFromLog(oLog);
	                        }
	                        oListener.listeners.splice(i, 1);
	                        return;
	                    }
	                }
	            }
	        };
	    }
	    return oListener;
	}
	Log.fatal = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.FATAL, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.error = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.ERROR, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.warning = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.WARNING, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.info = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.INFO, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.debug = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.DEBUG, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.trace = function (sMessage, sDetails, sComponent, fnSupportInfo) {
	    log(Log.Level.TRACE, sMessage, sDetails, sComponent, fnSupportInfo);
	};
	Log.setLevel = function (iLogLevel, sComponent, _bDefault) {
	    sComponent = sComponent || sDefaultComponent || '';
	    if (!_bDefault || mMaxLevel[sComponent] == null) {
	        mMaxLevel[sComponent] = iLogLevel;
	        var sLogLevel;
	        Object.keys(Log.Level).forEach(function (sLevel) {
	            if (Log.Level[sLevel] === iLogLevel) {
	                sLogLevel = sLevel;
	            }
	        });
	        log(Log.Level.INFO, 'Changing log level ' + (sComponent ? 'for \'' + sComponent + '\' ' : '') + 'to ' + sLogLevel, '', 'sap.base.log');
	    }
	};
	Log.getLevel = function (sComponent) {
	    return level(sComponent || sDefaultComponent);
	};
	Log.isLoggable = function (iLevel, sComponent) {
	    return (iLevel == null ? Log.Level.DEBUG : iLevel) <= level(sComponent || sDefaultComponent);
	};
	Log.logSupportInfo = function (bEnabled) {
	    bLogSupportInfo = bEnabled;
	};
	function log(iLevel, sMessage, sDetails, sComponent, fnSupportInfo) {
	    if (!fnSupportInfo && !sComponent && typeof sDetails === 'function') {
	        fnSupportInfo = sDetails;
	        sDetails = '';
	    }
	    if (!fnSupportInfo && typeof sComponent === 'function') {
	        fnSupportInfo = sComponent;
	        sComponent = '';
	    }
	    sComponent = sComponent || sDefaultComponent;
	    if (iLevel <= level(sComponent)) {
	        var fNow = fnNow(), oNow = new Date(fNow), iMicroSeconds = Math.floor((fNow - Math.floor(fNow)) * 1000), oLogEntry = {
	                time: pad0(oNow.getHours(), 2) + ':' + pad0(oNow.getMinutes(), 2) + ':' + pad0(oNow.getSeconds(), 2) + '.' + pad0(oNow.getMilliseconds(), 3) + pad0(iMicroSeconds, 3),
	                date: pad0(oNow.getFullYear(), 4) + '-' + pad0(oNow.getMonth() + 1, 2) + '-' + pad0(oNow.getDate(), 2),
	                timestamp: fNow,
	                level: iLevel,
	                message: String(sMessage || ''),
	                details: String(sDetails || ''),
	                component: String(sComponent || '')
	            };
	        if (bLogSupportInfo && typeof fnSupportInfo === 'function') {
	            oLogEntry.supportInfo = fnSupportInfo();
	        }
	        if (iLogEntriesLimit) {
	            if (aLog.length >= iLogEntriesLimit) {
	                discardLogEntries();
	            }
	            aLog.push(oLogEntry);
	        }
	        if (oListener) {
	            oListener.onLogEntry(oLogEntry);
	        }
	        if (console) {
	            var isDetailsError = sDetails instanceof Error, logText = oLogEntry.date + ' ' + oLogEntry.time + ' ' + oLogEntry.message + ' - ' + oLogEntry.details + ' ' + oLogEntry.component;
	            switch (iLevel) {
	            case Log.Level.FATAL:
	            case Log.Level.ERROR:
	                isDetailsError ? console.error(logText, '\n', sDetails) : console.error(logText);
	                break;
	            case Log.Level.WARNING:
	                isDetailsError ? console.warn(logText, '\n', sDetails) : console.warn(logText);
	                break;
	            case Log.Level.INFO:
	                if (console.info) {
	                    isDetailsError ? console.info(logText, '\n', sDetails) : console.info(logText);
	                } else {
	                    isDetailsError ? console.log(logText, '\n', sDetails) : console.log(logText);
	                }
	                break;
	            case Log.Level.DEBUG:
	                if (console.debug) {
	                    isDetailsError ? console.debug(logText, '\n', sDetails) : console.debug(logText);
	                } else {
	                    isDetailsError ? console.log(logText, '\n', sDetails) : console.log(logText);
	                }
	                break;
	            case Log.Level.TRACE:
	                if (console.trace) {
	                    isDetailsError ? console.trace(logText, '\n', sDetails) : console.trace(logText);
	                } else {
	                    isDetailsError ? console.log(logText, '\n', sDetails) : console.log(logText);
	                }
	                break;
	            }
	            if (console.info && oLogEntry.supportInfo) {
	                console.info(oLogEntry.supportInfo);
	            }
	        }
	        return oLogEntry;
	    }
	}
	Log.getLogEntries = function () {
	    return aLog.slice();
	};
	Log.getLogEntriesLimit = function () {
	    return iLogEntriesLimit;
	};
	Log.setLogEntriesLimit = function (iLimit) {
	    if (iLimit < 0) {
	        throw new Error('The log entries limit needs to be greater than or equal to 0!');
	    }
	    iLogEntriesLimit = iLimit;
	    if (aLog.length >= iLogEntriesLimit) {
	        discardLogEntries();
	    }
	};
	Log.addLogListener = function (oListener) {
	    getLogEntryListenerInstance().attach(this, oListener);
	};
	Log.removeLogListener = function (oListener) {
	    getLogEntryListenerInstance().detach(this, oListener);
	};
	function Logger(sComponent) {
	    this.fatal = function (msg, detail, comp, support) {
	        Log.fatal(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.error = function (msg, detail, comp, support) {
	        Log.error(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.warning = function (msg, detail, comp, support) {
	        Log.warning(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.info = function (msg, detail, comp, support) {
	        Log.info(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.debug = function (msg, detail, comp, support) {
	        Log.debug(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.trace = function (msg, detail, comp, support) {
	        Log.trace(msg, detail, comp || sComponent, support);
	        return this;
	    };
	    this.setLevel = function (level, comp) {
	        Log.setLevel(level, comp || sComponent);
	        return this;
	    };
	    this.getLevel = function (comp) {
	        return Log.getLevel(comp || sComponent);
	    };
	    this.isLoggable = function (level, comp) {
	        return Log.isLoggable(level, comp || sComponent);
	    };
	}
	Log.getLogger = function (sComponent, iDefaultLogLevel) {
	    if (!isNaN(iDefaultLogLevel) && mMaxLevel[sComponent] == null) {
	        mMaxLevel[sComponent] = iDefaultLogLevel;
	    }
	    return new Logger(sComponent);
	};

	var fnAssert = function (bResult, vMessage) {
	    if (!bResult) {
	        var sMessage = typeof vMessage === 'function' ? vMessage() : vMessage;
	        if (console && console.assert) {
	            console.assert(bResult, sMessage);
	        } else {
	            Log.debug('[Assertions] ' + sMessage);
	        }
	    }
	};

	var fnUniqueSort = function (aArray) {
	    fnAssert(aArray instanceof Array, 'uniqueSort: input parameter must be an Array');
	    var l = aArray.length;
	    if (l > 1) {
	        aArray.sort();
	        var j = 0;
	        for (var i = 1; i < l; i++) {
	            if (aArray[i] !== aArray[j]) {
	                aArray[++j] = aArray[i];
	            }
	        }
	        if (++j < l) {
	            aArray.splice(j, l - j);
	        }
	    }
	    return aArray;
	};

	var Metadata = function (sClassName, oClassInfo) {
	    fnAssert(typeof sClassName === 'string' && sClassName, 'Metadata: sClassName must be a non-empty string');
	    fnAssert(typeof oClassInfo === 'object', 'Metadata: oClassInfo must be empty or an object');
	    if (!oClassInfo || typeof oClassInfo.metadata !== 'object') {
	        oClassInfo = {
	            metadata: oClassInfo || {},
	            constructor: ObjectPath.get(sClassName)
	        };
	        oClassInfo.metadata.__version = 1;
	    }
	    oClassInfo.metadata.__version = oClassInfo.metadata.__version || 2;
	    if (typeof oClassInfo.constructor !== 'function') {
	        throw Error('constructor for class ' + sClassName + ' must have been declared before creating metadata for it');
	    }
	    this._sClassName = sClassName;
	    this._oClass = oClassInfo.constructor;
	    this.extend(oClassInfo);
	};
	Metadata.prototype.extend = function (oClassInfo) {
	    this.applySettings(oClassInfo);
	    this.afterApplySettings();
	};
	Metadata.prototype.applySettings = function (oClassInfo) {
	    var that = this, oStaticInfo = oClassInfo.metadata, oPrototype;
	    if (oStaticInfo.baseType) {
	        var oParentClass = ObjectPath.get(oStaticInfo.baseType);
	        if (typeof oParentClass !== 'function') {
	            Log.fatal('base class \'' + oStaticInfo.baseType + '\' does not exist');
	        }
	        if (oParentClass.getMetadata) {
	            this._oParent = oParentClass.getMetadata();
	            fnAssert(oParentClass === oParentClass.getMetadata().getClass(), 'Metadata: oParentClass must match the class in the parent metadata');
	        } else {
	            this._oParent = new Metadata(oStaticInfo.baseType, {});
	        }
	    } else {
	        this._oParent = undefined;
	    }
	    this._bAbstract = !!oStaticInfo['abstract'];
	    this._bFinal = !!oStaticInfo['final'];
	    this._sStereotype = oStaticInfo.stereotype || (this._oParent ? this._oParent._sStereotype : 'object');
	    this._bDeprecated = !!oStaticInfo['deprecated'];
	    this._aInterfaces = oStaticInfo.interfaces || [];
	    this._aPublicMethods = oStaticInfo.publicMethods || [];
	    this._bInterfacesUnique = false;
	    oPrototype = this._oClass.prototype;
	    for (var n in oClassInfo) {
	        if (n !== 'metadata' && n !== 'constructor') {
	            oPrototype[n] = oClassInfo[n];
	            if (!n.match(/^_|^on|^init$|^exit$/)) {
	                that._aPublicMethods.push(n);
	            }
	        }
	    }
	};
	Metadata.prototype.afterApplySettings = function () {
	    if (this._oParent) {
	        this._aAllPublicMethods = this._oParent._aAllPublicMethods.concat(this._aPublicMethods);
	        this._bInterfacesUnique = false;
	    } else {
	        this._aAllPublicMethods = this._aPublicMethods;
	    }
	};
	Metadata.prototype.getStereotype = function () {
	    return this._sStereotype;
	};
	Metadata.prototype.getName = function () {
	    return this._sClassName;
	};
	Metadata.prototype.getClass = function () {
	    return this._oClass;
	};
	Metadata.prototype.getParent = function () {
	    return this._oParent;
	};
	Metadata.prototype._dedupInterfaces = function () {
	    if (!this._bInterfacesUnique) {
	        fnUniqueSort(this._aInterfaces);
	        fnUniqueSort(this._aPublicMethods);
	        fnUniqueSort(this._aAllPublicMethods);
	        this._bInterfacesUnique = true;
	    }
	};
	Metadata.prototype.getPublicMethods = function () {
	    this._dedupInterfaces();
	    return this._aPublicMethods;
	};
	Metadata.prototype.getAllPublicMethods = function () {
	    this._dedupInterfaces();
	    return this._aAllPublicMethods;
	};
	Metadata.prototype.getInterfaces = function () {
	    this._dedupInterfaces();
	    return this._aInterfaces;
	};
	Metadata.prototype.isInstanceOf = function (sInterface) {
	    if (this._oParent) {
	        if (this._oParent.isInstanceOf(sInterface)) {
	            return true;
	        }
	    }
	    var a = this._aInterfaces;
	    for (var i = 0, l = a.length; i < l; i++) {
	        if (a[i] === sInterface) {
	            return true;
	        }
	    }
	    return false;
	};
	var WRITABLE_IFF_PHANTOM = !!Device$1.browser.phantomJS;
	Object.defineProperty(Metadata.prototype, '_mImplementedTypes', {
	    get: function () {
	        if (this === Metadata.prototype) {
	            throw new Error('sap.ui.base.Metadata: The \'_mImplementedTypes\' property must not be accessed on the prototype');
	        }
	        var result = Object.create(this._oParent ? this._oParent._mImplementedTypes : null);
	        result[this._sClassName] = true;
	        var aInterfaces = this._aInterfaces, i = aInterfaces.length;
	        while (i-- > 0) {
	            if (!result[aInterfaces[i]]) {
	                result[aInterfaces[i]] = true;
	            }
	        }
	        Object.defineProperty(this, '_mImplementedTypes', {
	            value: Object.freeze(result),
	            writable: WRITABLE_IFF_PHANTOM,
	            configurable: false
	        });
	        return result;
	    },
	    configurable: true
	});
	Metadata.prototype.isA = function (vTypeName) {
	    var mTypes = this._mImplementedTypes;
	    if (Array.isArray(vTypeName)) {
	        for (var i = 0; i < vTypeName.length; i++) {
	            if (vTypeName[i] in mTypes) {
	                return true;
	            }
	        }
	        return false;
	    }
	    return vTypeName in mTypes;
	};
	Metadata.prototype.isAbstract = function () {
	    return this._bAbstract;
	};
	Metadata.prototype.isFinal = function () {
	    return this._bFinal;
	};
	Metadata.prototype.isDeprecated = function () {
	    return this._bDeprecated;
	};
	Metadata.prototype.addPublicMethods = function (sMethod) {
	    var aNames = sMethod instanceof Array ? sMethod : arguments;
	    Array.prototype.push.apply(this._aPublicMethods, aNames);
	    Array.prototype.push.apply(this._aAllPublicMethods, aNames);
	    this._bInterfacesUnique = false;
	};
	Metadata.createClass = function (fnBaseClass, sClassName, oClassInfo, FNMetaImpl) {
	    if (typeof fnBaseClass === 'string') {
	        FNMetaImpl = oClassInfo;
	        oClassInfo = sClassName;
	        sClassName = fnBaseClass;
	        fnBaseClass = null;
	    }
	    fnAssert(!fnBaseClass || typeof fnBaseClass === 'function');
	    fnAssert(typeof sClassName === 'string' && !!sClassName);
	    fnAssert(!oClassInfo || typeof oClassInfo === 'object');
	    fnAssert(!FNMetaImpl || typeof FNMetaImpl === 'function');
	    FNMetaImpl = FNMetaImpl || Metadata;
	    if (typeof FNMetaImpl.preprocessClassInfo === 'function') {
	        oClassInfo = FNMetaImpl.preprocessClassInfo(oClassInfo);
	    }
	    oClassInfo = oClassInfo || {};
	    oClassInfo.metadata = oClassInfo.metadata || {};
	    if (!oClassInfo.hasOwnProperty('constructor')) {
	        oClassInfo.constructor = undefined;
	    }
	    var fnClass = oClassInfo.constructor;
	    fnAssert(!fnClass || typeof fnClass === 'function');
	    if (fnBaseClass) {
	        if (!fnClass) {
	            if (oClassInfo.metadata.deprecated) {
	                fnClass = function () {
	                    Log.warning('Usage of deprecated class: ' + sClassName);
	                    fnBaseClass.apply(this, arguments);
	                };
	            } else {
	                fnClass = function () {
	                    fnBaseClass.apply(this, arguments);
	                };
	            }
	        }
	        fnClass.prototype = Object.create(fnBaseClass.prototype);
	        fnClass.prototype.constructor = fnClass;
	        oClassInfo.metadata.baseType = fnBaseClass.getMetadata().getName();
	    } else {
	        fnClass = fnClass || function () {
	        };
	        delete oClassInfo.metadata.baseType;
	    }
	    oClassInfo.constructor = fnClass;
	    ObjectPath.set(sClassName, fnClass);
	    var oMetadata = new FNMetaImpl(sClassName, oClassInfo);
	    fnClass.getMetadata = fnClass.prototype.getMetadata = function () {
	        return oMetadata;
	    };
	    if (!fnClass.getMetadata().isFinal()) {
	        fnClass.extend = function (sSCName, oSCClassInfo, fnSCMetaImpl) {
	            return Metadata.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
	        };
	    }
	    return fnClass;
	};

	var BaseObject$1 = Metadata.createClass('sap.ui.base.Object', {
	    constructor: function () {
	        if (!(this instanceof BaseObject$1)) {
	            throw Error('Cannot instantiate object: "new" is missing!');
	        }
	    }
	});
	BaseObject$1.prototype.destroy = function () {
	};
	BaseObject$1.prototype.getInterface = function () {
	    var oInterface = new Interface(this, this.getMetadata().getAllPublicMethods());
	    this.getInterface = function () {
	        return oInterface;
	    };
	    return oInterface;
	};
	BaseObject$1.defineClass = function (sClassName, oStaticInfo, FNMetaImpl) {
	    var oMetadata = new (FNMetaImpl || Metadata)(sClassName, oStaticInfo);
	    var fnClass = oMetadata.getClass();
	    fnClass.getMetadata = fnClass.prototype.getMetadata = function () {
	        return oMetadata;
	    };
	    if (!oMetadata.isFinal()) {
	        fnClass.extend = function (sSCName, oSCClassInfo, fnSCMetaImpl) {
	            return Metadata.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
	        };
	    }
	    Log.debug('defined class \'' + sClassName + '\'' + (oMetadata.getParent() ? ' as subclass of ' + oMetadata.getParent().getName() : ''));
	    return oMetadata;
	};
	BaseObject$1.prototype.isA = function (vTypeName) {
	    return this.getMetadata().isA(vTypeName);
	};
	BaseObject$1.isA = function (oObject, vTypeName) {
	    return oObject instanceof BaseObject$1 && oObject.isA(vTypeName);
	};

	var CalendarType$1 = {
	  Gregorian: "Gregorian",
	  Islamic: "Islamic",
	  Japanese: "Japanese",
	  Persian: "Persian",
	  Buddhist: "Buddhist"
	};

	var rLocale$1 = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
	var Locale$1 = BaseObject$1.extend('sap.ui.core.Locale', {
	    constructor: function (sLocaleId) {
	        BaseObject$1.apply(this);
	        var aResult = rLocale$1.exec(sLocaleId.replace(/_/g, '-'));
	        if (aResult === null) {
	            throw 'The given language \'' + sLocaleId + '\' does not adhere to BCP-47.';
	        }
	        this.sLocaleId = sLocaleId;
	        this.sLanguage = aResult[1] || null;
	        this.sScript = aResult[2] || null;
	        this.sRegion = aResult[3] || null;
	        this.sVariant = aResult[4] && aResult[4].slice(1) || null;
	        this.sExtension = aResult[5] && aResult[5].slice(1) || null;
	        this.sPrivateUse = aResult[6] || null;
	        if (this.sLanguage) {
	            this.sLanguage = this.sLanguage.toLowerCase();
	        }
	        if (this.sScript) {
	            this.sScript = this.sScript.toLowerCase().replace(/^[a-z]/, function ($) {
	                return $.toUpperCase();
	            });
	        }
	        if (this.sRegion) {
	            this.sRegion = this.sRegion.toUpperCase();
	        }
	    },
	    getLanguage: function () {
	        return this.sLanguage;
	    },
	    getScript: function () {
	        return this.sScript;
	    },
	    getRegion: function () {
	        return this.sRegion;
	    },
	    getVariant: function () {
	        return this.sVariant;
	    },
	    getVariantSubtags: function () {
	        return this.sVariant ? this.sVariant.split('-') : [];
	    },
	    getExtension: function () {
	        return this.sExtension;
	    },
	    getExtensionSubtags: function () {
	        return this.sExtension ? this.sExtension.slice(2).split('-') : [];
	    },
	    getPrivateUse: function () {
	        return this.sPrivateUse;
	    },
	    getPrivateUseSubtags: function () {
	        return this.sPrivateUse ? this.sPrivateUse.slice(2).split('-') : [];
	    },
	    hasPrivateUseSubtag: function (sSubtag) {
	        fnAssert(sSubtag && sSubtag.match(/^[0-9A-Z]{1,8}$/i), 'subtag must be a valid BCP47 private use tag');
	        return this.getPrivateUseSubtags().indexOf(sSubtag) >= 0;
	    },
	    toString: function () {
	        var r = [this.sLanguage];
	        if (this.sScript) {
	            r.push(this.sScript);
	        }
	        if (this.sRegion) {
	            r.push(this.sRegion);
	        }
	        if (this.sVariant) {
	            r.push(this.sVariant);
	        }
	        if (this.sExtension) {
	            r.push(this.sExtension);
	        }
	        if (this.sPrivateUse) {
	            r.push(this.sPrivateUse);
	        }
	        return r.join('-');
	    },
	    getSAPLogonLanguage: function () {
	        var sLanguage = this.sLanguage || '', m;
	        if (sLanguage.indexOf('-') >= 0) {
	            sLanguage = sLanguage.slice(0, sLanguage.indexOf('-'));
	        }
	        sLanguage = M_ISO639_OLD_TO_NEW$2[sLanguage] || sLanguage;
	        if (sLanguage === 'zh') {
	            if (this.sScript === 'Hant' || !this.sScript && this.sRegion === 'TW') {
	                sLanguage = 'zf';
	            }
	        }
	        if (this.sPrivateUse && (m = /-(saptrc|sappsd)(?:-|$)/i.exec(this.sPrivateUse))) {
	            sLanguage = m[1].toLowerCase() === 'saptrc' ? '1Q' : '2Q';
	        }
	        return sLanguage.toUpperCase();
	    }
	});
	var M_ISO639_OLD_TO_NEW$2 = {
	    'iw': 'he',
	    'ji': 'yi',
	    'in': 'id',
	    'sh': 'sr'
	};
	function getDesigntimePropertyAsArray$1(sValue) {
	    var m = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(sValue);
	    return m && m[2] ? m[2].split(/,/) : null;
	}
	var A_RTL_LOCALES$1 = getDesigntimePropertyAsArray$1('$cldr-rtl-locales:ar,fa,he$') || [];
	Locale$1._cldrLocales = getDesigntimePropertyAsArray$1('$cldr-locales:ar,ar_EG,ar_SA,bg,br,ca,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,kk,ko,lt,lv,ms,nb,nl,nl_BE,nn,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW$');
	Locale$1._coreI18nLocales = getDesigntimePropertyAsArray$1('$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,kk,ko,lt,lv,ms,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$');
	Locale$1._impliesRTL = function (vLanguage) {
	    var oLocale = vLanguage instanceof Locale$1 ? vLanguage : new Locale$1(vLanguage);
	    var sLanguage = oLocale.getLanguage() || '';
	    sLanguage = sLanguage && M_ISO639_OLD_TO_NEW$2[sLanguage] || sLanguage;
	    var sRegion = oLocale.getRegion() || '';
	    if (sRegion && A_RTL_LOCALES$1.indexOf(sLanguage + '_' + sRegion) >= 0) {
	        return true;
	    }
	    return A_RTL_LOCALES$1.indexOf(sLanguage) >= 0;
	};

	const LoaderExtensions = {
		loadResource: getModuleContent,
	};

	var LocaleData = BaseObject$1.extend('sap.ui.core.LocaleData', {
	    constructor: function (oLocale) {
	        this.oLocale = oLocale;
	        BaseObject$1.apply(this);
	        this.mData = getData(oLocale);
	    },
	    _get: function () {
	        return this._getDeep(this.mData, arguments);
	    },
	    _getMerged: function () {
	        return this._get.apply(this, arguments);
	    },
	    _getDeep: function (oObject, aPropertyNames) {
	        var oResult = oObject;
	        for (var i = 0; i < aPropertyNames.length; i++) {
	            oResult = oResult[aPropertyNames[i]];
	            if (oResult === undefined) {
	                break;
	            }
	        }
	        return oResult;
	    },
	    getOrientation: function () {
	        return this._get('orientation');
	    },
	    getLanguages: function () {
	        return this._get('languages');
	    },
	    getScripts: function () {
	        return this._get('scripts');
	    },
	    getTerritories: function () {
	        return this._get('territories');
	    },
	    getMonths: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'months', 'format', sWidth);
	    },
	    getMonthsStandAlone: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'months', 'stand-alone', sWidth);
	    },
	    getDays: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide' || sWidth == 'short', 'sWidth must be narrow, abbreviate, wide or short');
	        return this._get(getCLDRCalendarName(sCalendarType), 'days', 'format', sWidth);
	    },
	    getDaysStandAlone: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide' || sWidth == 'short', 'sWidth must be narrow, abbreviated, wide or short');
	        return this._get(getCLDRCalendarName(sCalendarType), 'days', 'stand-alone', sWidth);
	    },
	    getQuarters: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'quarters', 'format', sWidth);
	    },
	    getQuartersStandAlone: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'quarters', 'stand-alone', sWidth);
	    },
	    getDayPeriods: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'dayPeriods', 'format', sWidth);
	    },
	    getDayPeriodsStandAlone: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'narrow' || sWidth == 'abbreviated' || sWidth == 'wide', 'sWidth must be narrow, abbreviated or wide');
	        return this._get(getCLDRCalendarName(sCalendarType), 'dayPeriods', 'stand-alone', sWidth);
	    },
	    getDatePattern: function (sStyle, sCalendarType) {
	        fnAssert(sStyle == 'short' || sStyle == 'medium' || sStyle == 'long' || sStyle == 'full', 'sStyle must be short, medium, long or full');
	        return this._get(getCLDRCalendarName(sCalendarType), 'dateFormats', sStyle);
	    },
	    getTimePattern: function (sStyle, sCalendarType) {
	        fnAssert(sStyle == 'short' || sStyle == 'medium' || sStyle == 'long' || sStyle == 'full', 'sStyle must be short, medium, long or full');
	        return this._get(getCLDRCalendarName(sCalendarType), 'timeFormats', sStyle);
	    },
	    getDateTimePattern: function (sStyle, sCalendarType) {
	        fnAssert(sStyle == 'short' || sStyle == 'medium' || sStyle == 'long' || sStyle == 'full', 'sStyle must be short, medium, long or full');
	        return this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', sStyle);
	    },
	    getCombinedDateTimePattern: function (sDateStyle, sTimeStyle, sCalendarType) {
	        fnAssert(sDateStyle == 'short' || sDateStyle == 'medium' || sDateStyle == 'long' || sDateStyle == 'full', 'sStyle must be short, medium, long or full');
	        fnAssert(sTimeStyle == 'short' || sTimeStyle == 'medium' || sTimeStyle == 'long' || sTimeStyle == 'full', 'sStyle must be short, medium, long or full');
	        var sDateTimePattern = this.getDateTimePattern(sDateStyle, sCalendarType), sDatePattern = this.getDatePattern(sDateStyle, sCalendarType), sTimePattern = this.getTimePattern(sTimeStyle, sCalendarType);
	        return sDateTimePattern.replace('{0}', sTimePattern).replace('{1}', sDatePattern);
	    },
	    getCustomDateTimePattern: function (sSkeleton, sCalendarType) {
	        var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'availableFormats');
	        return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType);
	    },
	    getIntervalPattern: function (sId, sCalendarType) {
	        var oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'intervalFormats'), aIdParts, sIntervalId, sDifference, oInterval, sPattern;
	        if (sId) {
	            aIdParts = sId.split('-');
	            sIntervalId = aIdParts[0];
	            sDifference = aIdParts[1];
	            oInterval = oIntervalFormats[sIntervalId];
	            if (oInterval) {
	                sPattern = oInterval[sDifference];
	                if (sPattern) {
	                    return sPattern;
	                }
	            }
	        }
	        return oIntervalFormats.intervalFormatFallback;
	    },
	    getCombinedIntervalPattern: function (sPattern, sCalendarType) {
	        var oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'intervalFormats'), sFallbackPattern = oIntervalFormats.intervalFormatFallback;
	        return sFallbackPattern.replace(/\{(0|1)\}/g, sPattern);
	    },
	    getCustomIntervalPattern: function (sSkeleton, vGreatestDiff, sCalendarType) {
	        var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'intervalFormats');
	        return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vGreatestDiff);
	    },
	    _getFormatPattern: function (sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
	        var vPattern, aPatterns, oIntervalFormats;
	        if (!vDiff) {
	            vPattern = oAvailableFormats[sSkeleton];
	        } else if (typeof vDiff === 'string') {
	            if (vDiff == 'j' || vDiff == 'J') {
	                vDiff = this.getPreferredHourSymbol();
	            }
	            oIntervalFormats = oAvailableFormats[sSkeleton];
	            vPattern = oIntervalFormats && oIntervalFormats[vDiff];
	        }
	        if (vPattern) {
	            if (typeof vPattern === 'object') {
	                aPatterns = Object.keys(vPattern).map(function (sKey) {
	                    return vPattern[sKey];
	                });
	            } else {
	                return vPattern;
	            }
	        }
	        if (!aPatterns) {
	            aPatterns = this._createFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vDiff);
	        }
	        if (aPatterns && aPatterns.length === 1) {
	            return aPatterns[0];
	        }
	        return aPatterns;
	    },
	    _createFormatPattern: function (sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
	        var aTokens = this._parseSkeletonFormat(sSkeleton), aPatterns, oBestMatch = this._findBestMatch(aTokens, sSkeleton, oAvailableFormats), oToken, oAvailableDateTimeFormats, oSymbol, oGroup, sPattern, sSinglePattern, sDiffSymbol, sDiffGroup, rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, bSingleDate, i;
	        if (vDiff) {
	            if (typeof vDiff === 'string') {
	                sDiffGroup = mCLDRSymbols[vDiff] ? mCLDRSymbols[vDiff].group : '';
	                if (sDiffGroup) {
	                    bSingleDate = mCLDRSymbolGroups[sDiffGroup].index > aTokens[aTokens.length - 1].index;
	                }
	                sDiffSymbol = vDiff;
	            } else {
	                bSingleDate = true;
	                if (aTokens[0].symbol === 'y' && oBestMatch && oBestMatch.pattern.G) {
	                    oSymbol = mCLDRSymbols['G'];
	                    oGroup = mCLDRSymbolGroups[oSymbol.group];
	                    aTokens.splice(0, 0, {
	                        symbol: 'G',
	                        group: oSymbol.group,
	                        match: oSymbol.match,
	                        index: oGroup.index,
	                        field: oGroup.field,
	                        length: 1
	                    });
	                }
	                for (i = aTokens.length - 1; i >= 0; i--) {
	                    oToken = aTokens[i];
	                    if (vDiff[oToken.group]) {
	                        bSingleDate = false;
	                        break;
	                    }
	                }
	                for (i = 0; i < aTokens.length; i++) {
	                    oToken = aTokens[i];
	                    if (vDiff[oToken.group]) {
	                        sDiffSymbol = oToken.symbol;
	                        break;
	                    }
	                }
	                if ((sDiffSymbol == 'h' || sDiffSymbol == 'K') && vDiff.DayPeriod) {
	                    sDiffSymbol = 'a';
	                }
	            }
	            if (bSingleDate) {
	                return [this.getCustomDateTimePattern(sSkeleton, sCalendarType)];
	            }
	            if (oBestMatch && oBestMatch.missingTokens.length === 0) {
	                sPattern = oBestMatch.pattern[sDiffSymbol];
	                if (sPattern && oBestMatch.distance > 0) {
	                    sPattern = this._expandFields(sPattern, oBestMatch.patternTokens, aTokens);
	                }
	            }
	            if (!sPattern) {
	                oAvailableDateTimeFormats = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'availableFormats');
	                if (rMixedSkeleton.test(sSkeleton) && 'ahHkKjJms'.indexOf(sDiffSymbol) >= 0) {
	                    sPattern = this._getMixedFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType, vDiff);
	                } else {
	                    sSinglePattern = this._getFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType);
	                    sPattern = this.getCombinedIntervalPattern(sSinglePattern, sCalendarType);
	                }
	            }
	            aPatterns = [sPattern];
	        } else if (!oBestMatch) {
	            sPattern = sSkeleton;
	            aPatterns = [sPattern];
	        } else {
	            if (typeof oBestMatch.pattern === 'string') {
	                aPatterns = [oBestMatch.pattern];
	            } else if (typeof oBestMatch.pattern === 'object') {
	                aPatterns = [];
	                for (var sKey in oBestMatch.pattern) {
	                    sPattern = oBestMatch.pattern[sKey];
	                    aPatterns.push(sPattern);
	                }
	            }
	            if (oBestMatch.distance > 0) {
	                if (oBestMatch.missingTokens.length > 0) {
	                    if (rMixedSkeleton.test(sSkeleton)) {
	                        aPatterns = [this._getMixedFormatPattern(sSkeleton, oAvailableFormats, sCalendarType)];
	                    } else {
	                        aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
	                        aPatterns = this._appendItems(aPatterns, oBestMatch.missingTokens, sCalendarType);
	                    }
	                } else {
	                    aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
	                }
	            }
	        }
	        if (sSkeleton.indexOf('J') >= 0) {
	            aPatterns.forEach(function (sPattern, iIndex) {
	                aPatterns[iIndex] = sPattern.replace(/ ?[abB](?=([^']*'[^']*')*[^']*)$/g, '');
	            });
	        }
	        return aPatterns;
	    },
	    _parseSkeletonFormat: function (sSkeleton) {
	        var aTokens = [], oToken = { index: -1 }, sSymbol, oSymbol, oGroup;
	        for (var i = 0; i < sSkeleton.length; i++) {
	            sSymbol = sSkeleton.charAt(i);
	            if (sSymbol == 'j' || sSymbol == 'J') {
	                sSymbol = this.getPreferredHourSymbol();
	            }
	            if (sSymbol == oToken.symbol) {
	                oToken.length++;
	                continue;
	            }
	            oSymbol = mCLDRSymbols[sSymbol];
	            oGroup = mCLDRSymbolGroups[oSymbol.group];
	            if (oSymbol.group == 'Other' || oGroup.diffOnly) {
	                throw new Error('Symbol \'' + sSymbol + '\' is not allowed in skeleton format \'' + sSkeleton + '\'');
	            }
	            if (oGroup.index <= oToken.index) {
	                throw new Error('Symbol \'' + sSymbol + '\' at wrong position or duplicate in skeleton format \'' + sSkeleton + '\'');
	            }
	            oToken = {
	                symbol: sSymbol,
	                group: oSymbol.group,
	                match: oSymbol.match,
	                index: oGroup.index,
	                field: oGroup.field,
	                length: 1
	            };
	            aTokens.push(oToken);
	        }
	        return aTokens;
	    },
	    _findBestMatch: function (aTokens, sSkeleton, oAvailableFormats) {
	        var aTestTokens, aMissingTokens, oToken, oTestToken, iTest, iDistance, bMatch, iFirstDiffPos, oTokenSymbol, oTestTokenSymbol, oBestMatch = {
	                distance: 10000,
	                firstDiffPos: -1
	            };
	        for (var sTestSkeleton in oAvailableFormats) {
	            if (sTestSkeleton === 'intervalFormatFallback' || sTestSkeleton.indexOf('B') > -1) {
	                continue;
	            }
	            aTestTokens = this._parseSkeletonFormat(sTestSkeleton);
	            iDistance = 0;
	            aMissingTokens = [];
	            bMatch = true;
	            if (aTokens.length < aTestTokens.length) {
	                continue;
	            }
	            iTest = 0;
	            iFirstDiffPos = aTokens.length;
	            for (var i = 0; i < aTokens.length; i++) {
	                oToken = aTokens[i];
	                oTestToken = aTestTokens[iTest];
	                if (iFirstDiffPos === aTokens.length) {
	                    iFirstDiffPos = i;
	                }
	                if (oTestToken) {
	                    oTokenSymbol = mCLDRSymbols[oToken.symbol];
	                    oTestTokenSymbol = mCLDRSymbols[oTestToken.symbol];
	                    if (oToken.symbol === oTestToken.symbol) {
	                        if (oToken.length === oTestToken.length) {
	                            if (iFirstDiffPos === i) {
	                                iFirstDiffPos = aTokens.length;
	                            }
	                        } else {
	                            if (oToken.length < oTokenSymbol.numericCeiling ? oTestToken.length < oTestTokenSymbol.numericCeiling : oTestToken.length >= oTestTokenSymbol.numericCeiling) {
	                                iDistance += Math.abs(oToken.length - oTestToken.length);
	                            } else {
	                                iDistance += 5;
	                            }
	                        }
	                        iTest++;
	                        continue;
	                    } else {
	                        if (oToken.match == oTestToken.match) {
	                            iDistance += Math.abs(oToken.length - oTestToken.length) + 10;
	                            iTest++;
	                            continue;
	                        }
	                    }
	                }
	                aMissingTokens.push(oToken);
	                iDistance += 50 - i;
	            }
	            if (iTest < aTestTokens.length) {
	                bMatch = false;
	            }
	            if (bMatch && (iDistance < oBestMatch.distance || iDistance === oBestMatch.distance && iFirstDiffPos > oBestMatch.firstDiffPos)) {
	                oBestMatch.distance = iDistance;
	                oBestMatch.firstDiffPos = iFirstDiffPos;
	                oBestMatch.missingTokens = aMissingTokens;
	                oBestMatch.pattern = oAvailableFormats[sTestSkeleton];
	                oBestMatch.patternTokens = aTestTokens;
	            }
	        }
	        if (oBestMatch.pattern) {
	            return oBestMatch;
	        }
	    },
	    _expandFields: function (vPattern, aPatternTokens, aTokens) {
	        var bSinglePattern = typeof vPattern === 'string';
	        var aPatterns;
	        if (bSinglePattern) {
	            aPatterns = [vPattern];
	        } else {
	            aPatterns = vPattern;
	        }
	        var aResult = aPatterns.map(function (sPattern) {
	            var mGroups = {}, mPatternGroups = {}, sResultPatterm = '', bQuoted = false, i = 0, iSkeletonLength, iPatternLength, iBestLength, iNewLength, oSkeletonToken, oBestToken, oSymbol, sChar;
	            aTokens.forEach(function (oToken) {
	                mGroups[oToken.group] = oToken;
	            });
	            aPatternTokens.forEach(function (oToken) {
	                mPatternGroups[oToken.group] = oToken;
	            });
	            while (i < sPattern.length) {
	                sChar = sPattern.charAt(i);
	                if (bQuoted) {
	                    sResultPatterm += sChar;
	                    if (sChar == '\'') {
	                        bQuoted = false;
	                    }
	                } else {
	                    oSymbol = mCLDRSymbols[sChar];
	                    if (oSymbol && mGroups[oSymbol.group] && mPatternGroups[oSymbol.group]) {
	                        oSkeletonToken = mGroups[oSymbol.group];
	                        oBestToken = mPatternGroups[oSymbol.group];
	                        iSkeletonLength = oSkeletonToken.length;
	                        iBestLength = oBestToken.length;
	                        iPatternLength = 1;
	                        while (sPattern.charAt(i + 1) == sChar) {
	                            i++;
	                            iPatternLength++;
	                        }
	                        if (iSkeletonLength === iBestLength || (iSkeletonLength < oSymbol.numericCeiling ? iPatternLength >= oSymbol.numericCeiling : iPatternLength < oSymbol.numericCeiling)) {
	                            iNewLength = iPatternLength;
	                        } else {
	                            iNewLength = Math.max(iPatternLength, iSkeletonLength);
	                        }
	                        for (var j = 0; j < iNewLength; j++) {
	                            sResultPatterm += sChar;
	                        }
	                    } else {
	                        sResultPatterm += sChar;
	                        if (sChar == '\'') {
	                            bQuoted = true;
	                        }
	                    }
	                }
	                i++;
	            }
	            return sResultPatterm;
	        });
	        return bSinglePattern ? aResult[0] : aResult;
	    },
	    _appendItems: function (aPatterns, aMissingTokens, sCalendarType) {
	        var oAppendItems = this._get(getCLDRCalendarName(sCalendarType), 'dateTimeFormats', 'appendItems');
	        aPatterns.forEach(function (sPattern, iIndex) {
	            var sDisplayName, sAppendPattern, sAppendField;
	            aMissingTokens.forEach(function (oToken) {
	                sAppendPattern = oAppendItems[oToken.group];
	                sDisplayName = '\'' + this.getDisplayName(oToken.field) + '\'';
	                sAppendField = '';
	                for (var i = 0; i < oToken.length; i++) {
	                    sAppendField += oToken.symbol;
	                }
	                aPatterns[iIndex] = sAppendPattern.replace(/\{0\}/, sPattern).replace(/\{1\}/, sAppendField).replace(/\{2\}/, sDisplayName);
	            }.bind(this));
	        }.bind(this));
	        return aPatterns;
	    },
	    _getMixedFormatPattern: function (sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
	        var rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, rWideMonth = /MMMM|LLLL/, rAbbrevMonth = /MMM|LLL/, rWeekDay = /E|e|c/, oResult, sDateSkeleton, sTimeSkeleton, sStyle, sDatePattern, sTimePattern, sDateTimePattern, sResultPattern;
	        oResult = rMixedSkeleton.exec(sSkeleton);
	        sDateSkeleton = oResult[1];
	        sTimeSkeleton = oResult[2];
	        sDatePattern = this._getFormatPattern(sDateSkeleton, oAvailableFormats, sCalendarType);
	        if (vDiff) {
	            sTimePattern = this.getCustomIntervalPattern(sTimeSkeleton, vDiff, sCalendarType);
	        } else {
	            sTimePattern = this._getFormatPattern(sTimeSkeleton, oAvailableFormats, sCalendarType);
	        }
	        if (rWideMonth.test(sDateSkeleton)) {
	            sStyle = rWeekDay.test(sDateSkeleton) ? 'full' : 'long';
	        } else if (rAbbrevMonth.test(sDateSkeleton)) {
	            sStyle = 'medium';
	        } else {
	            sStyle = 'short';
	        }
	        sDateTimePattern = this.getDateTimePattern(sStyle, sCalendarType);
	        sResultPattern = sDateTimePattern.replace(/\{1\}/, sDatePattern).replace(/\{0\}/, sTimePattern);
	        return sResultPattern;
	    },
	    getNumberSymbol: function (sType) {
	        fnAssert(sType == 'decimal' || sType == 'group' || sType == 'plusSign' || sType == 'minusSign' || sType == 'percentSign', 'sType must be decimal, group, plusSign, minusSign or percentSign');
	        return this._get('symbols-latn-' + sType);
	    },
	    getLenientNumberSymbols: function (sType) {
	        fnAssert(sType == 'plusSign' || sType == 'minusSign', 'sType must be plusSign or minusSign');
	        return this._get('lenient-scope-number')[sType];
	    },
	    getDecimalPattern: function () {
	        return this._get('decimalFormat').standard;
	    },
	    getCurrencyPattern: function (sContext) {
	        return this._get('currencyFormat')[sContext] || this._get('currencyFormat').standard;
	    },
	    getCurrencySpacing: function (sPosition) {
	        return this._get('currencyFormat', 'currencySpacing', sPosition === 'after' ? 'afterCurrency' : 'beforeCurrency');
	    },
	    getPercentPattern: function () {
	        return this._get('percentFormat').standard;
	    },
	    getMiscPattern: function (sName) {
	        fnAssert(sName == 'approximately' || sName == 'atLeast' || sName == 'atMost' || sName == 'range', 'sName must be approximately, atLeast, atMost or range');
	        return this._get('miscPattern')[sName];
	    },
	    getMinimalDaysInFirstWeek: function () {
	        return this._get('weekData-minDays');
	    },
	    getFirstDayOfWeek: function () {
	        return this._get('weekData-firstDay');
	    },
	    getWeekendStart: function () {
	        return this._get('weekData-weekendStart');
	    },
	    getWeekendEnd: function () {
	        return this._get('weekData-weekendEnd');
	    },
	    getCustomCurrencyCodes: function () {
	        var mCustomCurrencies = this._get('currency') || {}, mCustomCurrencyCodes = {};
	        Object.keys(mCustomCurrencies).forEach(function (sCurrencyKey) {
	            mCustomCurrencyCodes[sCurrencyKey] = sCurrencyKey;
	        });
	        return mCustomCurrencyCodes;
	    },
	    getCurrencyDigits: function (sCurrency) {
	        var mCustomCurrencies = this._get('currency');
	        if (mCustomCurrencies) {
	            if (mCustomCurrencies[sCurrency] && mCustomCurrencies[sCurrency].hasOwnProperty('digits')) {
	                return mCustomCurrencies[sCurrency].digits;
	            } else if (mCustomCurrencies['DEFAULT'] && mCustomCurrencies['DEFAULT'].hasOwnProperty('digits')) {
	                return mCustomCurrencies['DEFAULT'].digits;
	            }
	        }
	        var iDigits = this._get('currencyDigits', sCurrency);
	        if (iDigits == null) {
	            iDigits = this._get('currencyDigits', 'DEFAULT');
	            if (iDigits == null) {
	                iDigits = 2;
	            }
	        }
	        return iDigits;
	    },
	    getCurrencySymbol: function (sCurrency) {
	        var oCurrencySymbols = this.getCurrencySymbols();
	        return oCurrencySymbols && oCurrencySymbols[sCurrency] || sCurrency;
	    },
	    getCurrencyCodeBySymbol: function (sCurrencySymbol) {
	        var oCurrencySymbols = this._get('currencySymbols'), sCurrencyCode;
	        for (sCurrencyCode in oCurrencySymbols) {
	            if (oCurrencySymbols[sCurrencyCode] === sCurrencySymbol) {
	                return sCurrencyCode;
	            }
	        }
	        return sCurrencySymbol;
	    },
	    getCurrencySymbols: function () {
	        var mCustomCurrencies = this._get('currency'), mCustomCurrencySymbols = {}, sIsoCode;
	        for (var sCurrencyKey in mCustomCurrencies) {
	            sIsoCode = mCustomCurrencies[sCurrencyKey].isoCode;
	            if (mCustomCurrencies[sCurrencyKey].symbol) {
	                mCustomCurrencySymbols[sCurrencyKey] = mCustomCurrencies[sCurrencyKey].symbol;
	            } else if (sIsoCode) {
	                mCustomCurrencySymbols[sCurrencyKey] = this._get('currencySymbols')[sIsoCode];
	            }
	        }
	        return Object.assign({}, this._get('currencySymbols'), mCustomCurrencySymbols);
	    },
	    getUnitDisplayName: function (sUnit) {
	        var mUnitFormat = this.getUnitFormat(sUnit);
	        return mUnitFormat && mUnitFormat['displayName'] || '';
	    },
	    getRelativePatterns: function (aScales, sStyle) {
	        if (sStyle === undefined) {
	            sStyle = 'wide';
	        }
	        fnAssert(sStyle === 'wide' || sStyle === 'short' || sStyle === 'narrow', 'sStyle is only allowed to be set with \'wide\', \'short\' or \'narrow\'');
	        var aPatterns = [], aPluralCategories = this.getPluralCategories(), oScale, oTimeEntry, iValue, iSign;
	        if (!aScales) {
	            aScales = [
	                'year',
	                'month',
	                'week',
	                'day',
	                'hour',
	                'minute',
	                'second'
	            ];
	        }
	        aScales.forEach(function (sScale) {
	            oScale = this._get('dateFields', sScale + '-' + sStyle);
	            for (var sEntry in oScale) {
	                if (sEntry.indexOf('relative-type-') === 0) {
	                    iValue = parseInt(sEntry.substr(14));
	                    aPatterns.push({
	                        scale: sScale,
	                        value: iValue,
	                        pattern: oScale[sEntry]
	                    });
	                } else if (sEntry.indexOf('relativeTime-type-') == 0) {
	                    oTimeEntry = oScale[sEntry];
	                    iSign = sEntry.substr(18) === 'past' ? -1 : 1;
	                    aPluralCategories.forEach(function (sKey) {
	                        aPatterns.push({
	                            scale: sScale,
	                            sign: iSign,
	                            pattern: oTimeEntry['relativeTimePattern-count-' + sKey]
	                        });
	                    });
	                }
	            }
	        }.bind(this));
	        return aPatterns;
	    },
	    getRelativePattern: function (sScale, iDiff, bFuture, sStyle) {
	        var sPattern, oTypes, sKey, sPluralCategory;
	        if (typeof bFuture === 'string') {
	            sStyle = bFuture;
	            bFuture = undefined;
	        }
	        if (bFuture === undefined) {
	            bFuture = iDiff > 0;
	        }
	        if (sStyle === undefined) {
	            sStyle = 'wide';
	        }
	        fnAssert(sStyle === 'wide' || sStyle === 'short' || sStyle === 'narrow', 'sStyle is only allowed to be set with \'wide\', \'short\' or \'narrow\'');
	        sKey = sScale + '-' + sStyle;
	        if (iDiff === 0 || iDiff === -2 || iDiff === 2) {
	            sPattern = this._get('dateFields', sKey, 'relative-type-' + iDiff);
	        }
	        if (!sPattern) {
	            oTypes = this._get('dateFields', sKey, 'relativeTime-type-' + (bFuture ? 'future' : 'past'));
	            sPluralCategory = this.getPluralCategory(Math.abs(iDiff).toString());
	            sPattern = oTypes['relativeTimePattern-count-' + sPluralCategory];
	        }
	        return sPattern;
	    },
	    getRelativeSecond: function (iDiff, sStyle) {
	        return this.getRelativePattern('second', iDiff, sStyle);
	    },
	    getRelativeMinute: function (iDiff, sStyle) {
	        if (iDiff == 0) {
	            return null;
	        }
	        return this.getRelativePattern('minute', iDiff, sStyle);
	    },
	    getRelativeHour: function (iDiff, sStyle) {
	        if (iDiff == 0) {
	            return null;
	        }
	        return this.getRelativePattern('hour', iDiff, sStyle);
	    },
	    getRelativeDay: function (iDiff, sStyle) {
	        return this.getRelativePattern('day', iDiff, sStyle);
	    },
	    getRelativeWeek: function (iDiff, sStyle) {
	        return this.getRelativePattern('week', iDiff, sStyle);
	    },
	    getRelativeMonth: function (iDiff, sStyle) {
	        return this.getRelativePattern('month', iDiff, sStyle);
	    },
	    getDisplayName: function (sType, sStyle) {
	        fnAssert(sType == 'second' || sType == 'minute' || sType == 'hour' || sType == 'zone' || sType == 'day' || sType == 'weekday' || sType == 'week' || sType == 'month' || sType == 'quarter' || sType == 'year' || sType == 'era', 'sType must be second, minute, hour, zone, day, weekday, week, month, quarter, year, era');
	        if (sStyle === undefined) {
	            sStyle = 'wide';
	        }
	        fnAssert(sStyle === 'wide' || sStyle === 'short' || sStyle === 'narrow', 'sStyle is only allowed to be set with \'wide\', \'short\' or \'narrow\'');
	        var aSingleFormFields = [
	                'era',
	                'weekday',
	                'zone'
	            ], sKey = aSingleFormFields.indexOf(sType) === -1 ? sType + '-' + sStyle : sType;
	        return this._get('dateFields', sKey, 'displayName');
	    },
	    getRelativeYear: function (iDiff, sStyle) {
	        return this.getRelativePattern('year', iDiff, sStyle);
	    },
	    getDecimalFormat: function (sStyle, sNumber, sPlural) {
	        var sFormat;
	        var oFormats;
	        switch (sStyle) {
	        case 'long':
	            oFormats = this._get('decimalFormat-long');
	            break;
	        default:
	            oFormats = this._get('decimalFormat-short');
	            break;
	        }
	        if (oFormats) {
	            var sName = sNumber + '-' + sPlural;
	            sFormat = oFormats[sName];
	            if (!sFormat) {
	                sName = sNumber + '-other';
	                sFormat = oFormats[sName];
	            }
	        }
	        return sFormat;
	    },
	    getCurrencyFormat: function (sStyle, sNumber, sPlural) {
	        var sFormat;
	        var oFormats = this._get('currencyFormat-' + sStyle);
	        if (!oFormats) {
	            if (sStyle === 'sap-short') {
	                throw new Error('Failed to get CLDR data for property "currencyFormat-sap-short"');
	            }
	            oFormats = this._get('currencyFormat-short');
	        }
	        if (oFormats) {
	            var sName = sNumber + '-' + sPlural;
	            sFormat = oFormats[sName];
	            if (!sFormat) {
	                sName = sNumber + '-other';
	                sFormat = oFormats[sName];
	            }
	        }
	        return sFormat;
	    },
	    getListFormat: function (sType, sStyle) {
	        var oFormats = this._get('listPattern-' + (sType || 'standard') + '-' + (sStyle || 'wide'));
	        if (oFormats) {
	            return oFormats;
	        }
	        return {};
	    },
	    getResolvedUnitFormat: function (sUnit) {
	        sUnit = this.getUnitFromMapping(sUnit) || sUnit;
	        return this.getUnitFormat(sUnit);
	    },
	    getUnitFormat: function (sUnit) {
	        return this._get('units', 'short', sUnit);
	    },
	    getUnitFormats: function () {
	        return this._getMerged('units', 'short');
	    },
	    getUnitFromMapping: function (sMapping) {
	        return this._get('unitMappings', sMapping);
	    },
	    getEras: function (sWidth, sCalendarType) {
	        fnAssert(sWidth == 'wide' || sWidth == 'abbreviated' || sWidth == 'narrow', 'sWidth must be wide, abbreviate or narrow');
	        var oEras = this._get(getCLDRCalendarName(sCalendarType), 'era-' + sWidth), aEras = [];
	        for (var i in oEras) {
	            aEras[parseInt(i)] = oEras[i];
	        }
	        return aEras;
	    },
	    getEraDates: function (sCalendarType) {
	        var oEraDates = this._get('eras-' + sCalendarType.toLowerCase()), aEraDates = [];
	        for (var i in oEraDates) {
	            aEraDates[parseInt(i)] = oEraDates[i];
	        }
	        return aEraDates;
	    },
	    getCalendarWeek: function (sStyle, iWeekNumber) {
	        fnAssert(sStyle == 'wide' || sStyle == 'narrow', 'sStyle must be wide or narrow');
	        var oMessageBundle = Core.getLibraryResourceBundle('sap.ui.core', this.oLocale.toString()), sKey = 'date.week.calendarweek.' + sStyle;
	        return oMessageBundle.getText(sKey, iWeekNumber);
	    },
	    getPreferredCalendarType: function () {
	        var sCalendarPreference = this._get('calendarPreference'), aCalendars = sCalendarPreference ? sCalendarPreference.split(' ') : [], sCalendarName, sType, i;
	        for (i = 0; i < aCalendars.length; i++) {
	            sCalendarName = aCalendars[i].split('-')[0];
	            for (sType in CalendarType$1) {
	                if (sCalendarName === sType.toLowerCase()) {
	                    return sType;
	                }
	            }
	        }
	        return CalendarType$1.Gregorian;
	    },
	    getPreferredHourSymbol: function () {
	        return this._get('timeData', '_preferred');
	    },
	    getPluralCategories: function () {
	        var oPlurals = this._get('plurals'), aCategories = Object.keys(oPlurals);
	        aCategories.push('other');
	        return aCategories;
	    },
	    getPluralCategory: function (sNumber) {
	        var oPlurals = this._get('plurals');
	        if (typeof sNumber === 'number') {
	            sNumber = sNumber.toString();
	        }
	        if (!this._pluralTest) {
	            this._pluralTest = {};
	        }
	        for (var sCategory in oPlurals) {
	            var fnTest = this._pluralTest[sCategory];
	            if (!fnTest) {
	                fnTest = this._parsePluralRule(oPlurals[sCategory]);
	                this._pluralTest[sCategory] = fnTest;
	            }
	            if (fnTest(sNumber)) {
	                return sCategory;
	            }
	        }
	        return 'other';
	    },
	    _parsePluralRule: function (sRule) {
	        var OP_OR = 'or', OP_AND = 'and', OP_MOD = '%', OP_EQ = '=', OP_NEQ = '!=', OPD_N = 'n', OPD_I = 'i', OPD_F = 'f', OPD_T = 't', OPD_V = 'v', OPD_W = 'w', RANGE = '..', SEP = ',';
	        var i = 0, aTokens;
	        aTokens = sRule.split(' ');
	        function accept(sToken) {
	            if (aTokens[i] === sToken) {
	                i++;
	                return true;
	            }
	            return false;
	        }
	        function consume() {
	            var sToken = aTokens[i];
	            i++;
	            return sToken;
	        }
	        function or_condition() {
	            var fnAnd, fnOr;
	            fnAnd = and_condition();
	            if (accept(OP_OR)) {
	                fnOr = or_condition();
	                return function (o) {
	                    return fnAnd(o) || fnOr(o);
	                };
	            }
	            return fnAnd;
	        }
	        function and_condition() {
	            var fnRelation, fnAnd;
	            fnRelation = relation();
	            if (accept(OP_AND)) {
	                fnAnd = and_condition();
	                return function (o) {
	                    return fnRelation(o) && fnAnd(o);
	                };
	            }
	            return fnRelation;
	        }
	        function relation() {
	            var fnExpr, fnRangeList, bEq;
	            fnExpr = expr();
	            if (accept(OP_EQ)) {
	                bEq = true;
	            } else if (accept(OP_NEQ)) {
	                bEq = false;
	            } else {
	                throw new Error('Expected \'=\' or \'!=\'');
	            }
	            fnRangeList = range_list();
	            if (bEq) {
	                return function (o) {
	                    return fnRangeList(o).indexOf(fnExpr(o)) >= 0;
	                };
	            } else {
	                return function (o) {
	                    return fnRangeList(o).indexOf(fnExpr(o)) === -1;
	                };
	            }
	        }
	        function expr() {
	            var fnOperand;
	            fnOperand = operand();
	            if (accept(OP_MOD)) {
	                var iDivisor = parseInt(consume());
	                return function (o) {
	                    return fnOperand(o) % iDivisor;
	                };
	            }
	            return fnOperand;
	        }
	        function operand() {
	            if (accept(OPD_N)) {
	                return function (o) {
	                    return o.n;
	                };
	            } else if (accept(OPD_I)) {
	                return function (o) {
	                    return o.i;
	                };
	            } else if (accept(OPD_F)) {
	                return function (o) {
	                    return o.f;
	                };
	            } else if (accept(OPD_T)) {
	                return function (o) {
	                    return o.t;
	                };
	            } else if (accept(OPD_V)) {
	                return function (o) {
	                    return o.v;
	                };
	            } else if (accept(OPD_W)) {
	                return function (o) {
	                    return o.w;
	                };
	            } else {
	                throw new Error('Unknown operand: ' + consume());
	            }
	        }
	        function range_list() {
	            var aValues = [], sRangeList = consume(), aParts = sRangeList.split(SEP), aRange, iFrom, iTo;
	            aParts.forEach(function (sPart) {
	                aRange = sPart.split(RANGE);
	                if (aRange.length === 1) {
	                    aValues.push(parseInt(sPart));
	                } else {
	                    iFrom = parseInt(aRange[0]);
	                    iTo = parseInt(aRange[1]);
	                    for (var i = iFrom; i <= iTo; i++) {
	                        aValues.push(i);
	                    }
	                }
	            });
	            return function (o) {
	                return aValues;
	            };
	        }
	        var fnOr = or_condition();
	        if (i != aTokens.length) {
	            throw new Error('Not completely parsed');
	        }
	        return function (sValue) {
	            var iDotPos = sValue.indexOf('.'), sDecimal, sFraction, sFractionNoZeros, o;
	            if (iDotPos === -1) {
	                sDecimal = sValue;
	                sFraction = '';
	                sFractionNoZeros = '';
	            } else {
	                sDecimal = sValue.substr(0, iDotPos);
	                sFraction = sValue.substr(iDotPos + 1);
	                sFractionNoZeros = sFraction.replace(/0+$/, '');
	            }
	            o = {
	                n: parseFloat(sValue),
	                i: parseInt(sDecimal),
	                v: sFraction.length,
	                w: sFractionNoZeros.length,
	                f: parseInt(sFraction),
	                t: parseInt(sFractionNoZeros)
	            };
	            return fnOr(o);
	        };
	    }
	});
	var mCLDRSymbolGroups = {
	    'Era': {
	        field: 'era',
	        index: 0
	    },
	    'Year': {
	        field: 'year',
	        index: 1
	    },
	    'Quarter': {
	        field: 'quarter',
	        index: 2
	    },
	    'Month': {
	        field: 'month',
	        index: 3
	    },
	    'Week': {
	        field: 'week',
	        index: 4
	    },
	    'Day-Of-Week': {
	        field: 'weekday',
	        index: 5
	    },
	    'Day': {
	        field: 'day',
	        index: 6
	    },
	    'DayPeriod': {
	        field: 'hour',
	        index: 7,
	        diffOnly: true
	    },
	    'Hour': {
	        field: 'hour',
	        index: 8
	    },
	    'Minute': {
	        field: 'minute',
	        index: 9
	    },
	    'Second': {
	        field: 'second',
	        index: 10
	    },
	    'Timezone': {
	        field: 'zone',
	        index: 11
	    }
	};
	var mCLDRSymbols = {
	    'G': {
	        group: 'Era',
	        match: 'Era',
	        numericCeiling: 1
	    },
	    'y': {
	        group: 'Year',
	        match: 'Year',
	        numericCeiling: 100
	    },
	    'Y': {
	        group: 'Year',
	        match: 'Year',
	        numericCeiling: 100
	    },
	    'Q': {
	        group: 'Quarter',
	        match: 'Quarter',
	        numericCeiling: 3
	    },
	    'q': {
	        group: 'Quarter',
	        match: 'Quarter',
	        numericCeiling: 3
	    },
	    'M': {
	        group: 'Month',
	        match: 'Month',
	        numericCeiling: 3
	    },
	    'L': {
	        group: 'Month',
	        match: 'Month',
	        numericCeiling: 3
	    },
	    'w': {
	        group: 'Week',
	        match: 'Week',
	        numericCeiling: 100
	    },
	    'W': {
	        group: 'Week',
	        match: 'Week',
	        numericCeiling: 100
	    },
	    'd': {
	        group: 'Day',
	        match: 'Day',
	        numericCeiling: 100
	    },
	    'D': {
	        group: 'Day',
	        match: 'Day',
	        numericCeiling: 100
	    },
	    'E': {
	        group: 'Day-Of-Week',
	        match: 'Day-Of-Week',
	        numericCeiling: 1
	    },
	    'e': {
	        group: 'Day-Of-Week',
	        match: 'Day-Of-Week',
	        numericCeiling: 3
	    },
	    'c': {
	        group: 'Day-Of-Week',
	        match: 'Day-Of-Week',
	        numericCeiling: 2
	    },
	    'h': {
	        group: 'Hour',
	        match: 'Hour12',
	        numericCeiling: 100
	    },
	    'H': {
	        group: 'Hour',
	        match: 'Hour24',
	        numericCeiling: 100
	    },
	    'k': {
	        group: 'Hour',
	        match: 'Hour24',
	        numericCeiling: 100
	    },
	    'K': {
	        group: 'Hour',
	        match: 'Hour12',
	        numericCeiling: 100
	    },
	    'm': {
	        group: 'Minute',
	        match: 'Minute',
	        numericCeiling: 100
	    },
	    's': {
	        group: 'Second',
	        match: 'Second',
	        numericCeiling: 100
	    },
	    'z': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'Z': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'O': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'v': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'V': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'X': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'x': {
	        group: 'Timezone',
	        match: 'Timezone',
	        numericCeiling: 1
	    },
	    'S': {
	        group: 'Other',
	        numericCeiling: 100
	    },
	    'u': {
	        group: 'Other',
	        numericCeiling: 100
	    },
	    'U': {
	        group: 'Other',
	        numericCeiling: 1
	    },
	    'r': {
	        group: 'Other',
	        numericCeiling: 100
	    },
	    'F': {
	        group: 'Other',
	        numericCeiling: 100
	    },
	    'g': {
	        group: 'Other',
	        numericCeiling: 100
	    },
	    'a': {
	        group: 'DayPeriod',
	        numericCeiling: 1
	    },
	    'b': {
	        group: 'Other',
	        numericCeiling: 1
	    },
	    'B': {
	        group: 'Other',
	        numericCeiling: 1
	    },
	    'A': {
	        group: 'Other',
	        numericCeiling: 100
	    }
	};
	var M_DEFAULT_DATA = {
	    'orientation': 'left-to-right',
	    'languages': {},
	    'scripts': {},
	    'territories': {},
	    'ca-gregorian': {
	        'dateFormats': {
	            'full': 'EEEE, MMMM d, y',
	            'long': 'MMMM d, y',
	            'medium': 'MMM d, y',
	            'short': 'M/d/yy'
	        },
	        'timeFormats': {
	            'full': 'h:mm:ss a zzzz',
	            'long': 'h:mm:ss a z',
	            'medium': 'h:mm:ss a',
	            'short': 'h:mm a'
	        },
	        'dateTimeFormats': {
	            'full': '{1} \'at\' {0}',
	            'long': '{1} \'at\' {0}',
	            'medium': '{1}, {0}',
	            'short': '{1}, {0}',
	            'availableFormats': {
	                'd': 'd',
	                'E': 'ccc',
	                'Ed': 'd E',
	                'Ehm': 'E h:mm a',
	                'EHm': 'E HH:mm',
	                'Ehms': 'E h:mm:ss a',
	                'EHms': 'E HH:mm:ss',
	                'Gy': 'y G',
	                'GyMMM': 'MMM y G',
	                'GyMMMd': 'MMM d, y G',
	                'GyMMMEd': 'E, MMM d, y G',
	                'h': 'h a',
	                'H': 'HH',
	                'hm': 'h:mm a',
	                'Hm': 'HH:mm',
	                'hms': 'h:mm:ss a',
	                'Hms': 'HH:mm:ss',
	                'hmsv': 'h:mm:ss a v',
	                'Hmsv': 'HH:mm:ss v',
	                'hmv': 'h:mm a v',
	                'Hmv': 'HH:mm v',
	                'M': 'L',
	                'Md': 'M/d',
	                'MEd': 'E, M/d',
	                'MMM': 'LLL',
	                'MMMd': 'MMM d',
	                'MMMEd': 'E, MMM d',
	                'MMMMd': 'MMMM d',
	                'ms': 'mm:ss',
	                'y': 'y',
	                'yM': 'M/y',
	                'yMd': 'M/d/y',
	                'yMEd': 'E, M/d/y',
	                'yMMM': 'MMM y',
	                'yMMMd': 'MMM d, y',
	                'yMMMEd': 'E, MMM d, y',
	                'yMMMM': 'MMMM y',
	                'yQQQ': 'QQQ y',
	                'yQQQQ': 'QQQQ y'
	            },
	            'appendItems': {
	                'Day': '{0} ({2}: {1})',
	                'Day-Of-Week': '{0} {1}',
	                'Era': '{0} {1}',
	                'Hour': '{0} ({2}: {1})',
	                'Minute': '{0} ({2}: {1})',
	                'Month': '{0} ({2}: {1})',
	                'Quarter': '{0} ({2}: {1})',
	                'Second': '{0} ({2}: {1})',
	                'Timezone': '{0} {1}',
	                'Week': '{0} ({2}: {1})',
	                'Year': '{0} {1}'
	            },
	            'intervalFormats': {
	                'intervalFormatFallback': '{0} \u2013 {1}',
	                'd': { 'd': 'd \u2013 d' },
	                'h': {
	                    'a': 'h a \u2013 h a',
	                    'h': 'h \u2013 h a'
	                },
	                'H': { 'H': 'HH \u2013 HH' },
	                'hm': {
	                    'a': 'h:mm a \u2013 h:mm a',
	                    'h': 'h:mm \u2013 h:mm a',
	                    'm': 'h:mm \u2013 h:mm a'
	                },
	                'Hm': {
	                    'H': 'HH:mm \u2013 HH:mm',
	                    'm': 'HH:mm \u2013 HH:mm'
	                },
	                'hmv': {
	                    'a': 'h:mm a \u2013 h:mm a v',
	                    'h': 'h:mm \u2013 h:mm a v',
	                    'm': 'h:mm \u2013 h:mm a v'
	                },
	                'Hmv': {
	                    'H': 'HH:mm \u2013 HH:mm v',
	                    'm': 'HH:mm \u2013 HH:mm v'
	                },
	                'hv': {
	                    'a': 'h a \u2013 h a v',
	                    'h': 'h \u2013 h a v'
	                },
	                'Hv': { 'H': 'HH \u2013 HH v' },
	                'M': { 'M': 'M \u2013 M' },
	                'Md': {
	                    'd': 'M/d \u2013 M/d',
	                    'M': 'M/d \u2013 M/d'
	                },
	                'MEd': {
	                    'd': 'E, M/d \u2013 E, M/d',
	                    'M': 'E, M/d \u2013 E, M/d'
	                },
	                'MMM': { 'M': 'MMM \u2013 MMM' },
	                'MMMd': {
	                    'd': 'MMM d \u2013 d',
	                    'M': 'MMM d \u2013 MMM d'
	                },
	                'MMMEd': {
	                    'd': 'E, MMM d \u2013 E, MMM d',
	                    'M': 'E, MMM d \u2013 E, MMM d'
	                },
	                'y': { 'y': 'y \u2013 y' },
	                'yM': {
	                    'M': 'M/y \u2013 M/y',
	                    'y': 'M/y \u2013 M/y'
	                },
	                'yMd': {
	                    'd': 'M/d/y \u2013 M/d/y',
	                    'M': 'M/d/y \u2013 M/d/y',
	                    'y': 'M/d/y \u2013 M/d/y'
	                },
	                'yMEd': {
	                    'd': 'E, M/d/y \u2013 E, M/d/y',
	                    'M': 'E, M/d/y \u2013 E, M/d/y',
	                    'y': 'E, M/d/y \u2013 E, M/d/y'
	                },
	                'yMMM': {
	                    'M': 'MMM \u2013 MMM y',
	                    'y': 'MMM y \u2013 MMM y'
	                },
	                'yMMMd': {
	                    'd': 'MMM d \u2013 d, y',
	                    'M': 'MMM d \u2013 MMM d, y',
	                    'y': 'MMM d, y \u2013 MMM d, y'
	                },
	                'yMMMEd': {
	                    'd': 'E, MMM d \u2013 E, MMM d, y',
	                    'M': 'E, MMM d \u2013 E, MMM d, y',
	                    'y': 'E, MMM d, y \u2013 E, MMM d, y'
	                },
	                'yMMMM': {
	                    'M': 'MMMM \u2013 MMMM y',
	                    'y': 'MMMM y \u2013 MMMM y'
	                }
	            }
	        },
	        'months': {
	            'format': {
	                'abbreviated': [
	                    'Jan',
	                    'Feb',
	                    'Mar',
	                    'Apr',
	                    'May',
	                    'Jun',
	                    'Jul',
	                    'Aug',
	                    'Sep',
	                    'Oct',
	                    'Nov',
	                    'Dec'
	                ],
	                'narrow': [
	                    'J',
	                    'F',
	                    'M',
	                    'A',
	                    'M',
	                    'J',
	                    'J',
	                    'A',
	                    'S',
	                    'O',
	                    'N',
	                    'D'
	                ],
	                'wide': [
	                    'January',
	                    'February',
	                    'March',
	                    'April',
	                    'May',
	                    'June',
	                    'July',
	                    'August',
	                    'September',
	                    'October',
	                    'November',
	                    'December'
	                ]
	            },
	            'stand-alone': {
	                'abbreviated': [
	                    'Jan',
	                    'Feb',
	                    'Mar',
	                    'Apr',
	                    'May',
	                    'Jun',
	                    'Jul',
	                    'Aug',
	                    'Sep',
	                    'Oct',
	                    'Nov',
	                    'Dec'
	                ],
	                'narrow': [
	                    'J',
	                    'F',
	                    'M',
	                    'A',
	                    'M',
	                    'J',
	                    'J',
	                    'A',
	                    'S',
	                    'O',
	                    'N',
	                    'D'
	                ],
	                'wide': [
	                    'January',
	                    'February',
	                    'March',
	                    'April',
	                    'May',
	                    'June',
	                    'July',
	                    'August',
	                    'September',
	                    'October',
	                    'November',
	                    'December'
	                ]
	            }
	        },
	        'days': {
	            'format': {
	                'abbreviated': [
	                    'Sun',
	                    'Mon',
	                    'Tue',
	                    'Wed',
	                    'Thu',
	                    'Fri',
	                    'Sat'
	                ],
	                'narrow': [
	                    'S',
	                    'M',
	                    'T',
	                    'W',
	                    'T',
	                    'F',
	                    'S'
	                ],
	                'short': [
	                    'Su',
	                    'Mo',
	                    'Tu',
	                    'We',
	                    'Th',
	                    'Fr',
	                    'Sa'
	                ],
	                'wide': [
	                    'Sunday',
	                    'Monday',
	                    'Tuesday',
	                    'Wednesday',
	                    'Thursday',
	                    'Friday',
	                    'Saturday'
	                ]
	            },
	            'stand-alone': {
	                'abbreviated': [
	                    'Sun',
	                    'Mon',
	                    'Tue',
	                    'Wed',
	                    'Thu',
	                    'Fri',
	                    'Sat'
	                ],
	                'narrow': [
	                    'S',
	                    'M',
	                    'T',
	                    'W',
	                    'T',
	                    'F',
	                    'S'
	                ],
	                'short': [
	                    'Su',
	                    'Mo',
	                    'Tu',
	                    'We',
	                    'Th',
	                    'Fr',
	                    'Sa'
	                ],
	                'wide': [
	                    'Sunday',
	                    'Monday',
	                    'Tuesday',
	                    'Wednesday',
	                    'Thursday',
	                    'Friday',
	                    'Saturday'
	                ]
	            }
	        },
	        'quarters': {
	            'format': {
	                'abbreviated': [
	                    'Q1',
	                    'Q2',
	                    'Q3',
	                    'Q4'
	                ],
	                'narrow': [
	                    '1',
	                    '2',
	                    '3',
	                    '4'
	                ],
	                'wide': [
	                    '1st quarter',
	                    '2nd quarter',
	                    '3rd quarter',
	                    '4th quarter'
	                ]
	            },
	            'stand-alone': {
	                'abbreviated': [
	                    'Q1',
	                    'Q2',
	                    'Q3',
	                    'Q4'
	                ],
	                'narrow': [
	                    '1',
	                    '2',
	                    '3',
	                    '4'
	                ],
	                'wide': [
	                    '1st quarter',
	                    '2nd quarter',
	                    '3rd quarter',
	                    '4th quarter'
	                ]
	            }
	        },
	        'dayPeriods': {
	            'format': {
	                'abbreviated': [
	                    'AM',
	                    'PM'
	                ],
	                'narrow': [
	                    'a',
	                    'p'
	                ],
	                'wide': [
	                    'AM',
	                    'PM'
	                ]
	            },
	            'stand-alone': {
	                'abbreviated': [
	                    'AM',
	                    'PM'
	                ],
	                'narrow': [
	                    'AM',
	                    'PM'
	                ],
	                'wide': [
	                    'AM',
	                    'PM'
	                ]
	            }
	        },
	        'era-wide': {
	            '0': 'Before Christ',
	            '1': 'Anno Domini'
	        },
	        'era-abbreviated': {
	            '0': 'BC',
	            '1': 'AD'
	        },
	        'era-narrow': {
	            '0': 'B',
	            '1': 'A'
	        }
	    },
	    'eras-gregorian': {
	        '0': { '_end': '0-12-31' },
	        '1': { '_start': '1-01-01' }
	    },
	    'dateFields': {
	        'era': { 'displayName': 'era' },
	        'year-wide': {
	            'displayName': 'year',
	            'relative-type--1': 'last year',
	            'relative-type-0': 'this year',
	            'relative-type-1': 'next year',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} year',
	                'relativeTimePattern-count-other': 'in {0} years'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} year ago',
	                'relativeTimePattern-count-other': '{0} years ago'
	            }
	        },
	        'year-short': {
	            'displayName': 'yr.',
	            'relative-type--1': 'last yr.',
	            'relative-type-0': 'this yr.',
	            'relative-type-1': 'next yr.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} yr.',
	                'relativeTimePattern-count-other': 'in {0} yr.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} yr. ago',
	                'relativeTimePattern-count-other': '{0} yr. ago'
	            }
	        },
	        'year-narrow': {
	            'displayName': 'yr.',
	            'relative-type--1': 'last yr.',
	            'relative-type-0': 'this yr.',
	            'relative-type-1': 'next yr.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} yr.',
	                'relativeTimePattern-count-other': 'in {0} yr.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} yr. ago',
	                'relativeTimePattern-count-other': '{0} yr. ago'
	            }
	        },
	        'quarter-wide': {
	            'displayName': 'quarter',
	            'relative-type--1': 'last quarter',
	            'relative-type-0': 'this quarter',
	            'relative-type-1': 'next quarter',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} quarter',
	                'relativeTimePattern-count-other': 'in {0} quarters'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} quarter ago',
	                'relativeTimePattern-count-other': '{0} quarters ago'
	            }
	        },
	        'quarter-short': {
	            'displayName': 'qtr.',
	            'relative-type--1': 'last qtr.',
	            'relative-type-0': 'this qtr.',
	            'relative-type-1': 'next qtr.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} qtr.',
	                'relativeTimePattern-count-other': 'in {0} qtrs.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} qtr. ago',
	                'relativeTimePattern-count-other': '{0} qtrs. ago'
	            }
	        },
	        'quarter-narrow': {
	            'displayName': 'qtr.',
	            'relative-type--1': 'last qtr.',
	            'relative-type-0': 'this qtr.',
	            'relative-type-1': 'next qtr.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} qtr.',
	                'relativeTimePattern-count-other': 'in {0} qtrs.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} qtr. ago',
	                'relativeTimePattern-count-other': '{0} qtrs. ago'
	            }
	        },
	        'month-wide': {
	            'displayName': 'month',
	            'relative-type--1': 'last month',
	            'relative-type-0': 'this month',
	            'relative-type-1': 'next month',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} month',
	                'relativeTimePattern-count-other': 'in {0} months'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} month ago',
	                'relativeTimePattern-count-other': '{0} months ago'
	            }
	        },
	        'month-short': {
	            'displayName': 'mo.',
	            'relative-type--1': 'last mo.',
	            'relative-type-0': 'this mo.',
	            'relative-type-1': 'next mo.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} mo.',
	                'relativeTimePattern-count-other': 'in {0} mo.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} mo. ago',
	                'relativeTimePattern-count-other': '{0} mo. ago'
	            }
	        },
	        'month-narrow': {
	            'displayName': 'mo.',
	            'relative-type--1': 'last mo.',
	            'relative-type-0': 'this mo.',
	            'relative-type-1': 'next mo.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} mo.',
	                'relativeTimePattern-count-other': 'in {0} mo.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} mo. ago',
	                'relativeTimePattern-count-other': '{0} mo. ago'
	            }
	        },
	        'week-wide': {
	            'displayName': 'week',
	            'relative-type--1': 'last week',
	            'relative-type-0': 'this week',
	            'relative-type-1': 'next week',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} week',
	                'relativeTimePattern-count-other': 'in {0} weeks'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} week ago',
	                'relativeTimePattern-count-other': '{0} weeks ago'
	            },
	            'relativePeriod': 'the week of {0}'
	        },
	        'week-short': {
	            'displayName': 'wk.',
	            'relative-type--1': 'last wk.',
	            'relative-type-0': 'this wk.',
	            'relative-type-1': 'next wk.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} wk.',
	                'relativeTimePattern-count-other': 'in {0} wk.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} wk. ago',
	                'relativeTimePattern-count-other': '{0} wk. ago'
	            },
	            'relativePeriod': 'the week of {0}'
	        },
	        'week-narrow': {
	            'displayName': 'wk.',
	            'relative-type--1': 'last wk.',
	            'relative-type-0': 'this wk.',
	            'relative-type-1': 'next wk.',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} wk.',
	                'relativeTimePattern-count-other': 'in {0} wk.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} wk. ago',
	                'relativeTimePattern-count-other': '{0} wk. ago'
	            },
	            'relativePeriod': 'the week of {0}'
	        },
	        'day-wide': {
	            'displayName': 'day',
	            'relative-type--1': 'yesterday',
	            'relative-type-0': 'today',
	            'relative-type-1': 'tomorrow',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} day',
	                'relativeTimePattern-count-other': 'in {0} days'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} day ago',
	                'relativeTimePattern-count-other': '{0} days ago'
	            }
	        },
	        'day-short': {
	            'displayName': 'day',
	            'relative-type--1': 'yesterday',
	            'relative-type-0': 'today',
	            'relative-type-1': 'tomorrow',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} day',
	                'relativeTimePattern-count-other': 'in {0} days'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} day ago',
	                'relativeTimePattern-count-other': '{0} days ago'
	            }
	        },
	        'day-narrow': {
	            'displayName': 'day',
	            'relative-type--1': 'yesterday',
	            'relative-type-0': 'today',
	            'relative-type-1': 'tomorrow',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} day',
	                'relativeTimePattern-count-other': 'in {0} days'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} day ago',
	                'relativeTimePattern-count-other': '{0} days ago'
	            }
	        },
	        'weekday': { 'displayName': 'day of the week' },
	        'hour-wide': {
	            'displayName': 'hour',
	            'relative-type-0': 'this hour',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} hour',
	                'relativeTimePattern-count-other': 'in {0} hours'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} hour ago',
	                'relativeTimePattern-count-other': '{0} hours ago'
	            }
	        },
	        'hour-short': {
	            'displayName': 'hr.',
	            'relative-type-0': 'this hour',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} hr.',
	                'relativeTimePattern-count-other': 'in {0} hr.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} hr. ago',
	                'relativeTimePattern-count-other': '{0} hr. ago'
	            }
	        },
	        'hour-narrow': {
	            'displayName': 'hr.',
	            'relative-type-0': 'this hour',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} hr.',
	                'relativeTimePattern-count-other': 'in {0} hr.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} hr. ago',
	                'relativeTimePattern-count-other': '{0} hr. ago'
	            }
	        },
	        'minute-wide': {
	            'displayName': 'minute',
	            'relative-type-0': 'this minute',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} minute',
	                'relativeTimePattern-count-other': 'in {0} minutes'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} minute ago',
	                'relativeTimePattern-count-other': '{0} minutes ago'
	            }
	        },
	        'minute-short': {
	            'displayName': 'min.',
	            'relative-type-0': 'this minute',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} min.',
	                'relativeTimePattern-count-other': 'in {0} min.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} min. ago',
	                'relativeTimePattern-count-other': '{0} min. ago'
	            }
	        },
	        'minute-narrow': {
	            'displayName': 'min.',
	            'relative-type-0': 'this minute',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} min.',
	                'relativeTimePattern-count-other': 'in {0} min.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} min. ago',
	                'relativeTimePattern-count-other': '{0} min. ago'
	            }
	        },
	        'second-wide': {
	            'displayName': 'second',
	            'relative-type-0': 'now',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} second',
	                'relativeTimePattern-count-other': 'in {0} seconds'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} second ago',
	                'relativeTimePattern-count-other': '{0} seconds ago'
	            }
	        },
	        'second-short': {
	            'displayName': 'sec.',
	            'relative-type-0': 'now',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} sec.',
	                'relativeTimePattern-count-other': 'in {0} sec.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} sec. ago',
	                'relativeTimePattern-count-other': '{0} sec. ago'
	            }
	        },
	        'second-narrow': {
	            'displayName': 'sec.',
	            'relative-type-0': 'now',
	            'relativeTime-type-future': {
	                'relativeTimePattern-count-one': 'in {0} sec.',
	                'relativeTimePattern-count-other': 'in {0} sec.'
	            },
	            'relativeTime-type-past': {
	                'relativeTimePattern-count-one': '{0} sec. ago',
	                'relativeTimePattern-count-other': '{0} sec. ago'
	            }
	        },
	        'zone': { 'displayName': 'time zone' }
	    },
	    'decimalFormat': { 'standard': '#,##0.###' },
	    'currencyFormat': {
	        'standard': '\xA4#,##0.00',
	        'currencySpacing': {
	            'beforeCurrency': {
	                'currencyMatch': '[:^S:]',
	                'surroundingMatch': '[:digit:]',
	                'insertBetween': '\xA0'
	            },
	            'afterCurrency': {
	                'currencyMatch': '[:^S:]',
	                'surroundingMatch': '[:digit:]',
	                'insertBetween': '\xA0'
	            }
	        }
	    },
	    'percentFormat': { 'standard': '#,##0%' },
	    'miscPattern': {
	        'approximately': '~{0}',
	        'atLeast': '{0}+',
	        'atMost': '\u2264{0}',
	        'range': '{0}\u2013{1}'
	    },
	    'symbols-latn-decimal': '.',
	    'symbols-latn-group': ',',
	    'symbols-latn-plusSign': '+',
	    'symbols-latn-minusSign': '-',
	    'symbols-latn-percentSign': '%',
	    'weekData-minDays': 4,
	    'weekData-firstDay': 1,
	    'weekData-weekendStart': 6,
	    'weekData-weekendEnd': 0,
	    'timeData': {
	        _allowed: 'H h',
	        _preferred: 'H'
	    },
	    'lenient-scope-number': {
	        'minusSign': '-\u2010\u2012\u2013\u207B\u208B\u2212\u2796\uFE63',
	        'commaSign': ',\u060C\u066B\u3001\uFE10\uFE11\uFE50\uFE51\uFF0C',
	        'plusSign': '+\u207A\u208A\u2795\uFB29\uFE62'
	    },
	    'plurals': {},
	    'units': {
	        'short': {
	            'per': { 'compoundUnitPattern': '{0}/{1}' },
	            'acceleration-g-force': {
	                'displayName': 'g-force',
	                'unitPattern-count-one': '{0} G',
	                'unitPattern-count-other': '{0} G'
	            },
	            'acceleration-meter-per-second-squared': {
	                'displayName': 'meters/sec\xB2',
	                'unitPattern-count-one': '{0} m/s\xB2',
	                'unitPattern-count-other': '{0} m/s\xB2'
	            },
	            'angle-revolution': {
	                'displayName': 'rev',
	                'unitPattern-count-one': '{0} rev',
	                'unitPattern-count-other': '{0} rev'
	            },
	            'angle-radian': {
	                'displayName': 'radians',
	                'unitPattern-count-one': '{0} rad',
	                'unitPattern-count-other': '{0} rad'
	            },
	            'angle-degree': {
	                'displayName': 'degrees',
	                'unitPattern-count-one': '{0} deg',
	                'unitPattern-count-other': '{0} deg'
	            },
	            'angle-arc-minute': {
	                'displayName': 'arcmins',
	                'unitPattern-count-one': '{0} arcmin',
	                'unitPattern-count-other': '{0} arcmins'
	            },
	            'angle-arc-second': {
	                'displayName': 'arcsecs',
	                'unitPattern-count-one': '{0} arcsec',
	                'unitPattern-count-other': '{0} arcsecs'
	            },
	            'area-square-kilometer': {
	                'displayName': 'km\xB2',
	                'unitPattern-count-one': '{0} km\xB2',
	                'unitPattern-count-other': '{0} km\xB2',
	                'perUnitPattern': '{0}/km\xB2'
	            },
	            'area-hectare': {
	                'displayName': 'hectares',
	                'unitPattern-count-one': '{0} ha',
	                'unitPattern-count-other': '{0} ha'
	            },
	            'area-square-meter': {
	                'displayName': 'meters\xB2',
	                'unitPattern-count-one': '{0} m\xB2',
	                'unitPattern-count-other': '{0} m\xB2',
	                'perUnitPattern': '{0}/m\xB2'
	            },
	            'area-square-centimeter': {
	                'displayName': 'cm\xB2',
	                'unitPattern-count-one': '{0} cm\xB2',
	                'unitPattern-count-other': '{0} cm\xB2',
	                'perUnitPattern': '{0}/cm\xB2'
	            },
	            'area-square-mile': {
	                'displayName': 'sq miles',
	                'unitPattern-count-one': '{0} sq mi',
	                'unitPattern-count-other': '{0} sq mi',
	                'perUnitPattern': '{0}/mi\xB2'
	            },
	            'area-acre': {
	                'displayName': 'acres',
	                'unitPattern-count-one': '{0} ac',
	                'unitPattern-count-other': '{0} ac'
	            },
	            'area-square-yard': {
	                'displayName': 'yards\xB2',
	                'unitPattern-count-one': '{0} yd\xB2',
	                'unitPattern-count-other': '{0} yd\xB2'
	            },
	            'area-square-foot': {
	                'displayName': 'sq feet',
	                'unitPattern-count-one': '{0} sq ft',
	                'unitPattern-count-other': '{0} sq ft'
	            },
	            'area-square-inch': {
	                'displayName': 'inches\xB2',
	                'unitPattern-count-one': '{0} in\xB2',
	                'unitPattern-count-other': '{0} in\xB2',
	                'perUnitPattern': '{0}/in\xB2'
	            },
	            'concentr-karat': {
	                'displayName': 'karats',
	                'unitPattern-count-one': '{0} kt',
	                'unitPattern-count-other': '{0} kt'
	            },
	            'concentr-milligram-per-deciliter': {
	                'displayName': 'mg/dL',
	                'unitPattern-count-one': '{0} mg/dL',
	                'unitPattern-count-other': '{0} mg/dL'
	            },
	            'concentr-millimole-per-liter': {
	                'displayName': 'millimol/liter',
	                'unitPattern-count-one': '{0} mmol/L',
	                'unitPattern-count-other': '{0} mmol/L'
	            },
	            'concentr-part-per-million': {
	                'displayName': 'parts/million',
	                'unitPattern-count-one': '{0} ppm',
	                'unitPattern-count-other': '{0} ppm'
	            },
	            'consumption-liter-per-kilometer': {
	                'displayName': 'liters/km',
	                'unitPattern-count-one': '{0} L/km',
	                'unitPattern-count-other': '{0} L/km'
	            },
	            'consumption-liter-per-100kilometers': {
	                'displayName': 'L/100 km',
	                'unitPattern-count-one': '{0} L/100 km',
	                'unitPattern-count-other': '{0} L/100 km'
	            },
	            'consumption-mile-per-gallon': {
	                'displayName': 'miles/gal',
	                'unitPattern-count-one': '{0} mpg',
	                'unitPattern-count-other': '{0} mpg'
	            },
	            'consumption-mile-per-gallon-imperial': {
	                'displayName': 'miles/gal Imp.',
	                'unitPattern-count-one': '{0} mpg Imp.',
	                'unitPattern-count-other': '{0} mpg Imp.'
	            },
	            'digital-terabyte': {
	                'displayName': 'TByte',
	                'unitPattern-count-one': '{0} TB',
	                'unitPattern-count-other': '{0} TB'
	            },
	            'digital-terabit': {
	                'displayName': 'Tbit',
	                'unitPattern-count-one': '{0} Tb',
	                'unitPattern-count-other': '{0} Tb'
	            },
	            'digital-gigabyte': {
	                'displayName': 'GByte',
	                'unitPattern-count-one': '{0} GB',
	                'unitPattern-count-other': '{0} GB'
	            },
	            'digital-gigabit': {
	                'displayName': 'Gbit',
	                'unitPattern-count-one': '{0} Gb',
	                'unitPattern-count-other': '{0} Gb'
	            },
	            'digital-megabyte': {
	                'displayName': 'MByte',
	                'unitPattern-count-one': '{0} MB',
	                'unitPattern-count-other': '{0} MB'
	            },
	            'digital-megabit': {
	                'displayName': 'Mbit',
	                'unitPattern-count-one': '{0} Mb',
	                'unitPattern-count-other': '{0} Mb'
	            },
	            'digital-kilobyte': {
	                'displayName': 'kByte',
	                'unitPattern-count-one': '{0} kB',
	                'unitPattern-count-other': '{0} kB'
	            },
	            'digital-kilobit': {
	                'displayName': 'kbit',
	                'unitPattern-count-one': '{0} kb',
	                'unitPattern-count-other': '{0} kb'
	            },
	            'digital-byte': {
	                'displayName': 'byte',
	                'unitPattern-count-one': '{0} byte',
	                'unitPattern-count-other': '{0} byte'
	            },
	            'digital-bit': {
	                'displayName': 'bit',
	                'unitPattern-count-one': '{0} bit',
	                'unitPattern-count-other': '{0} bit'
	            },
	            'duration-century': {
	                'displayName': 'c',
	                'unitPattern-count-one': '{0} c',
	                'unitPattern-count-other': '{0} c'
	            },
	            'duration-year': {
	                'displayName': 'years',
	                'unitPattern-count-one': '{0} yr',
	                'unitPattern-count-other': '{0} yrs',
	                'perUnitPattern': '{0}/y'
	            },
	            'duration-month': {
	                'displayName': 'months',
	                'unitPattern-count-one': '{0} mth',
	                'unitPattern-count-other': '{0} mths',
	                'perUnitPattern': '{0}/m'
	            },
	            'duration-week': {
	                'displayName': 'weeks',
	                'unitPattern-count-one': '{0} wk',
	                'unitPattern-count-other': '{0} wks',
	                'perUnitPattern': '{0}/w'
	            },
	            'duration-day': {
	                'displayName': 'days',
	                'unitPattern-count-one': '{0} day',
	                'unitPattern-count-other': '{0} days',
	                'perUnitPattern': '{0}/d'
	            },
	            'duration-hour': {
	                'displayName': 'hours',
	                'unitPattern-count-one': '{0} hr',
	                'unitPattern-count-other': '{0} hr',
	                'perUnitPattern': '{0}/h'
	            },
	            'duration-minute': {
	                'displayName': 'mins',
	                'unitPattern-count-one': '{0} min',
	                'unitPattern-count-other': '{0} min',
	                'perUnitPattern': '{0}/min'
	            },
	            'duration-second': {
	                'displayName': 'secs',
	                'unitPattern-count-one': '{0} sec',
	                'unitPattern-count-other': '{0} sec',
	                'perUnitPattern': '{0}/s'
	            },
	            'duration-millisecond': {
	                'displayName': 'millisecs',
	                'unitPattern-count-one': '{0} ms',
	                'unitPattern-count-other': '{0} ms'
	            },
	            'duration-microsecond': {
	                'displayName': 'μsecs',
	                'unitPattern-count-one': '{0} μs',
	                'unitPattern-count-other': '{0} μs'
	            },
	            'duration-nanosecond': {
	                'displayName': 'nanosecs',
	                'unitPattern-count-one': '{0} ns',
	                'unitPattern-count-other': '{0} ns'
	            },
	            'electric-ampere': {
	                'displayName': 'amps',
	                'unitPattern-count-one': '{0} A',
	                'unitPattern-count-other': '{0} A'
	            },
	            'electric-milliampere': {
	                'displayName': 'milliamps',
	                'unitPattern-count-one': '{0} mA',
	                'unitPattern-count-other': '{0} mA'
	            },
	            'electric-ohm': {
	                'displayName': 'ohms',
	                'unitPattern-count-one': '{0} Ω',
	                'unitPattern-count-other': '{0} Ω'
	            },
	            'electric-volt': {
	                'displayName': 'volts',
	                'unitPattern-count-one': '{0} V',
	                'unitPattern-count-other': '{0} V'
	            },
	            'energy-kilocalorie': {
	                'displayName': 'kcal',
	                'unitPattern-count-one': '{0} kcal',
	                'unitPattern-count-other': '{0} kcal'
	            },
	            'energy-calorie': {
	                'displayName': 'cal',
	                'unitPattern-count-one': '{0} cal',
	                'unitPattern-count-other': '{0} cal'
	            },
	            'energy-foodcalorie': {
	                'displayName': 'Cal',
	                'unitPattern-count-one': '{0} Cal',
	                'unitPattern-count-other': '{0} Cal'
	            },
	            'energy-kilojoule': {
	                'displayName': 'kilojoule',
	                'unitPattern-count-one': '{0} kJ',
	                'unitPattern-count-other': '{0} kJ'
	            },
	            'energy-joule': {
	                'displayName': 'joules',
	                'unitPattern-count-one': '{0} J',
	                'unitPattern-count-other': '{0} J'
	            },
	            'energy-kilowatt-hour': {
	                'displayName': 'kW-hour',
	                'unitPattern-count-one': '{0} kWh',
	                'unitPattern-count-other': '{0} kWh'
	            },
	            'frequency-gigahertz': {
	                'displayName': 'GHz',
	                'unitPattern-count-one': '{0} GHz',
	                'unitPattern-count-other': '{0} GHz'
	            },
	            'frequency-megahertz': {
	                'displayName': 'MHz',
	                'unitPattern-count-one': '{0} MHz',
	                'unitPattern-count-other': '{0} MHz'
	            },
	            'frequency-kilohertz': {
	                'displayName': 'kHz',
	                'unitPattern-count-one': '{0} kHz',
	                'unitPattern-count-other': '{0} kHz'
	            },
	            'frequency-hertz': {
	                'displayName': 'Hz',
	                'unitPattern-count-one': '{0} Hz',
	                'unitPattern-count-other': '{0} Hz'
	            },
	            'length-kilometer': {
	                'displayName': 'km',
	                'unitPattern-count-one': '{0} km',
	                'unitPattern-count-other': '{0} km',
	                'perUnitPattern': '{0}/km'
	            },
	            'length-meter': {
	                'displayName': 'm',
	                'unitPattern-count-one': '{0} m',
	                'unitPattern-count-other': '{0} m',
	                'perUnitPattern': '{0}/m'
	            },
	            'length-decimeter': {
	                'displayName': 'dm',
	                'unitPattern-count-one': '{0} dm',
	                'unitPattern-count-other': '{0} dm'
	            },
	            'length-centimeter': {
	                'displayName': 'cm',
	                'unitPattern-count-one': '{0} cm',
	                'unitPattern-count-other': '{0} cm',
	                'perUnitPattern': '{0}/cm'
	            },
	            'length-millimeter': {
	                'displayName': 'mm',
	                'unitPattern-count-one': '{0} mm',
	                'unitPattern-count-other': '{0} mm'
	            },
	            'length-micrometer': {
	                'displayName': 'µmeters',
	                'unitPattern-count-one': '{0} µm',
	                'unitPattern-count-other': '{0} µm'
	            },
	            'length-nanometer': {
	                'displayName': 'nm',
	                'unitPattern-count-one': '{0} nm',
	                'unitPattern-count-other': '{0} nm'
	            },
	            'length-picometer': {
	                'displayName': 'pm',
	                'unitPattern-count-one': '{0} pm',
	                'unitPattern-count-other': '{0} pm'
	            },
	            'length-mile': {
	                'displayName': 'miles',
	                'unitPattern-count-one': '{0} mi',
	                'unitPattern-count-other': '{0} mi'
	            },
	            'length-yard': {
	                'displayName': 'yards',
	                'unitPattern-count-one': '{0} yd',
	                'unitPattern-count-other': '{0} yd'
	            },
	            'length-foot': {
	                'displayName': 'feet',
	                'unitPattern-count-one': '{0} ft',
	                'unitPattern-count-other': '{0} ft',
	                'perUnitPattern': '{0}/ft'
	            },
	            'length-inch': {
	                'displayName': 'inches',
	                'unitPattern-count-one': '{0} in',
	                'unitPattern-count-other': '{0} in',
	                'perUnitPattern': '{0}/in'
	            },
	            'length-parsec': {
	                'displayName': 'parsecs',
	                'unitPattern-count-one': '{0} pc',
	                'unitPattern-count-other': '{0} pc'
	            },
	            'length-light-year': {
	                'displayName': 'light yrs',
	                'unitPattern-count-one': '{0} ly',
	                'unitPattern-count-other': '{0} ly'
	            },
	            'length-astronomical-unit': {
	                'displayName': 'au',
	                'unitPattern-count-one': '{0} au',
	                'unitPattern-count-other': '{0} au'
	            },
	            'length-furlong': {
	                'displayName': 'furlongs',
	                'unitPattern-count-one': '{0} fur',
	                'unitPattern-count-other': '{0} fur'
	            },
	            'length-fathom': {
	                'displayName': 'fathoms',
	                'unitPattern-count-one': '{0} ftm',
	                'unitPattern-count-other': '{0} ftm'
	            },
	            'length-nautical-mile': {
	                'displayName': 'nmi',
	                'unitPattern-count-one': '{0} nmi',
	                'unitPattern-count-other': '{0} nmi'
	            },
	            'length-mile-scandinavian': {
	                'displayName': 'smi',
	                'unitPattern-count-one': '{0} smi',
	                'unitPattern-count-other': '{0} smi'
	            },
	            'length-point': {
	                'displayName': 'points',
	                'unitPattern-count-one': '{0} pt',
	                'unitPattern-count-other': '{0} pt'
	            },
	            'light-lux': {
	                'displayName': 'lux',
	                'unitPattern-count-one': '{0} lx',
	                'unitPattern-count-other': '{0} lx'
	            },
	            'mass-metric-ton': {
	                'displayName': 't',
	                'unitPattern-count-one': '{0} t',
	                'unitPattern-count-other': '{0} t'
	            },
	            'mass-kilogram': {
	                'displayName': 'kg',
	                'unitPattern-count-one': '{0} kg',
	                'unitPattern-count-other': '{0} kg',
	                'perUnitPattern': '{0}/kg'
	            },
	            'mass-gram': {
	                'displayName': 'grams',
	                'unitPattern-count-one': '{0} g',
	                'unitPattern-count-other': '{0} g',
	                'perUnitPattern': '{0}/g'
	            },
	            'mass-milligram': {
	                'displayName': 'mg',
	                'unitPattern-count-one': '{0} mg',
	                'unitPattern-count-other': '{0} mg'
	            },
	            'mass-microgram': {
	                'displayName': 'µg',
	                'unitPattern-count-one': '{0} µg',
	                'unitPattern-count-other': '{0} µg'
	            },
	            'mass-ton': {
	                'displayName': 'tons',
	                'unitPattern-count-one': '{0} tn',
	                'unitPattern-count-other': '{0} tn'
	            },
	            'mass-stone': {
	                'displayName': 'stones',
	                'unitPattern-count-one': '{0} st',
	                'unitPattern-count-other': '{0} st'
	            },
	            'mass-pound': {
	                'displayName': 'pounds',
	                'unitPattern-count-one': '{0} lb',
	                'unitPattern-count-other': '{0} lb',
	                'perUnitPattern': '{0}/lb'
	            },
	            'mass-ounce': {
	                'displayName': 'oz',
	                'unitPattern-count-one': '{0} oz',
	                'unitPattern-count-other': '{0} oz',
	                'perUnitPattern': '{0}/oz'
	            },
	            'mass-ounce-troy': {
	                'displayName': 'oz troy',
	                'unitPattern-count-one': '{0} oz t',
	                'unitPattern-count-other': '{0} oz t'
	            },
	            'mass-carat': {
	                'displayName': 'carats',
	                'unitPattern-count-one': '{0} CD',
	                'unitPattern-count-other': '{0} CD'
	            },
	            'power-gigawatt': {
	                'displayName': 'GW',
	                'unitPattern-count-one': '{0} GW',
	                'unitPattern-count-other': '{0} GW'
	            },
	            'power-megawatt': {
	                'displayName': 'MW',
	                'unitPattern-count-one': '{0} MW',
	                'unitPattern-count-other': '{0} MW'
	            },
	            'power-kilowatt': {
	                'displayName': 'kW',
	                'unitPattern-count-one': '{0} kW',
	                'unitPattern-count-other': '{0} kW'
	            },
	            'power-watt': {
	                'displayName': 'watts',
	                'unitPattern-count-one': '{0} W',
	                'unitPattern-count-other': '{0} W'
	            },
	            'power-milliwatt': {
	                'displayName': 'mW',
	                'unitPattern-count-one': '{0} mW',
	                'unitPattern-count-other': '{0} mW'
	            },
	            'power-horsepower': {
	                'displayName': 'hp',
	                'unitPattern-count-one': '{0} hp',
	                'unitPattern-count-other': '{0} hp'
	            },
	            'pressure-hectopascal': {
	                'displayName': 'hPa',
	                'unitPattern-count-one': '{0} hPa',
	                'unitPattern-count-other': '{0} hPa'
	            },
	            'pressure-millimeter-of-mercury': {
	                'displayName': 'mmHg',
	                'unitPattern-count-one': '{0} mmHg',
	                'unitPattern-count-other': '{0} mmHg'
	            },
	            'pressure-pound-per-square-inch': {
	                'displayName': 'psi',
	                'unitPattern-count-one': '{0} psi',
	                'unitPattern-count-other': '{0} psi'
	            },
	            'pressure-inch-hg': {
	                'displayName': 'inHg',
	                'unitPattern-count-one': '{0} inHg',
	                'unitPattern-count-other': '{0} inHg'
	            },
	            'pressure-millibar': {
	                'displayName': 'mbar',
	                'unitPattern-count-one': '{0} mbar',
	                'unitPattern-count-other': '{0} mbar'
	            },
	            'speed-kilometer-per-hour': {
	                'displayName': 'km/hour',
	                'unitPattern-count-one': '{0} kph',
	                'unitPattern-count-other': '{0} kph'
	            },
	            'speed-meter-per-second': {
	                'displayName': 'meters/sec',
	                'unitPattern-count-one': '{0} m/s',
	                'unitPattern-count-other': '{0} m/s'
	            },
	            'speed-mile-per-hour': {
	                'displayName': 'miles/hour',
	                'unitPattern-count-one': '{0} mph',
	                'unitPattern-count-other': '{0} mph'
	            },
	            'speed-knot': {
	                'displayName': 'kn',
	                'unitPattern-count-one': '{0} kn',
	                'unitPattern-count-other': '{0} kn'
	            },
	            'temperature-generic': {
	                'displayName': '\xB0',
	                'unitPattern-count-other': '{0}\xB0'
	            },
	            'temperature-celsius': {
	                'displayName': 'deg. C',
	                'unitPattern-count-one': '{0}\xB0C',
	                'unitPattern-count-other': '{0}\xB0C'
	            },
	            'temperature-fahrenheit': {
	                'displayName': 'deg. F',
	                'unitPattern-count-one': '{0}\xB0F',
	                'unitPattern-count-other': '{0}\xB0F'
	            },
	            'temperature-kelvin': {
	                'displayName': 'K',
	                'unitPattern-count-one': '{0} K',
	                'unitPattern-count-other': '{0} K'
	            },
	            'volume-cubic-kilometer': {
	                'displayName': 'km\xB3',
	                'unitPattern-count-one': '{0} km\xB3',
	                'unitPattern-count-other': '{0} km\xB3'
	            },
	            'volume-cubic-meter': {
	                'displayName': 'm\xB3',
	                'unitPattern-count-one': '{0} m\xB3',
	                'unitPattern-count-other': '{0} m\xB3',
	                'perUnitPattern': '{0}/m\xB3'
	            },
	            'volume-cubic-centimeter': {
	                'displayName': 'cm\xB3',
	                'unitPattern-count-one': '{0} cm\xB3',
	                'unitPattern-count-other': '{0} cm\xB3',
	                'perUnitPattern': '{0}/cm\xB3'
	            },
	            'volume-cubic-mile': {
	                'displayName': 'mi\xB3',
	                'unitPattern-count-one': '{0} mi\xB3',
	                'unitPattern-count-other': '{0} mi\xB3'
	            },
	            'volume-cubic-yard': {
	                'displayName': 'yards\xB3',
	                'unitPattern-count-one': '{0} yd\xB3',
	                'unitPattern-count-other': '{0} yd\xB3'
	            },
	            'volume-cubic-foot': {
	                'displayName': 'feet\xB3',
	                'unitPattern-count-one': '{0} ft\xB3',
	                'unitPattern-count-other': '{0} ft\xB3'
	            },
	            'volume-cubic-inch': {
	                'displayName': 'inches\xB3',
	                'unitPattern-count-one': '{0} in\xB3',
	                'unitPattern-count-other': '{0} in\xB3'
	            },
	            'volume-megaliter': {
	                'displayName': 'ML',
	                'unitPattern-count-one': '{0} ML',
	                'unitPattern-count-other': '{0} ML'
	            },
	            'volume-hectoliter': {
	                'displayName': 'hL',
	                'unitPattern-count-one': '{0} hL',
	                'unitPattern-count-other': '{0} hL'
	            },
	            'volume-liter': {
	                'displayName': 'liters',
	                'unitPattern-count-one': '{0} L',
	                'unitPattern-count-other': '{0} L',
	                'perUnitPattern': '{0}/L'
	            },
	            'volume-deciliter': {
	                'displayName': 'dL',
	                'unitPattern-count-one': '{0} dL',
	                'unitPattern-count-other': '{0} dL'
	            },
	            'volume-centiliter': {
	                'displayName': 'cL',
	                'unitPattern-count-one': '{0} cL',
	                'unitPattern-count-other': '{0} cL'
	            },
	            'volume-milliliter': {
	                'displayName': 'mL',
	                'unitPattern-count-one': '{0} mL',
	                'unitPattern-count-other': '{0} mL'
	            },
	            'volume-pint-metric': {
	                'displayName': 'mpt',
	                'unitPattern-count-one': '{0} mpt',
	                'unitPattern-count-other': '{0} mpt'
	            },
	            'volume-cup-metric': {
	                'displayName': 'mcup',
	                'unitPattern-count-one': '{0} mc',
	                'unitPattern-count-other': '{0} mc'
	            },
	            'volume-acre-foot': {
	                'displayName': 'acre ft',
	                'unitPattern-count-one': '{0} ac ft',
	                'unitPattern-count-other': '{0} ac ft'
	            },
	            'volume-bushel': {
	                'displayName': 'bushels',
	                'unitPattern-count-one': '{0} bu',
	                'unitPattern-count-other': '{0} bu'
	            },
	            'volume-gallon': {
	                'displayName': 'gal',
	                'unitPattern-count-one': '{0} gal',
	                'unitPattern-count-other': '{0} gal',
	                'perUnitPattern': '{0}/gal US'
	            },
	            'volume-gallon-imperial': {
	                'displayName': 'Imp. gal',
	                'unitPattern-count-one': '{0} gal Imp.',
	                'unitPattern-count-other': '{0} gal Imp.',
	                'perUnitPattern': '{0}/gal Imp.'
	            },
	            'volume-quart': {
	                'displayName': 'qts',
	                'unitPattern-count-one': '{0} qt',
	                'unitPattern-count-other': '{0} qt'
	            },
	            'volume-pint': {
	                'displayName': 'pints',
	                'unitPattern-count-one': '{0} pt',
	                'unitPattern-count-other': '{0} pt'
	            },
	            'volume-cup': {
	                'displayName': 'cups',
	                'unitPattern-count-one': '{0} c',
	                'unitPattern-count-other': '{0} c'
	            },
	            'volume-fluid-ounce': {
	                'displayName': 'fl oz',
	                'unitPattern-count-one': '{0} fl oz',
	                'unitPattern-count-other': '{0} fl oz'
	            },
	            'volume-tablespoon': {
	                'displayName': 'tbsp',
	                'unitPattern-count-one': '{0} tbsp',
	                'unitPattern-count-other': '{0} tbsp'
	            },
	            'volume-teaspoon': {
	                'displayName': 'tsp',
	                'unitPattern-count-one': '{0} tsp',
	                'unitPattern-count-other': '{0} tsp'
	            },
	            'coordinateUnit': {
	                'east': '{0} E',
	                'north': '{0} N',
	                'south': '{0} S',
	                'west': '{0} W'
	            }
	        }
	    }
	};
	var M_ISO639_OLD_TO_NEW$3 = {
	    'iw': 'he',
	    'ji': 'yi',
	    'in': 'id',
	    'sh': 'sr'
	};
	var M_SUPPORTED_LOCALES = function () {
	    var LOCALES = Locale$1._cldrLocales, result = {}, i;
	    if (LOCALES) {
	        for (i = 0; i < LOCALES.length; i++) {
	            result[LOCALES[i]] = true;
	        }
	    }
	    return result;
	}();
	var mLocaleDatas = {};
	function getCLDRCalendarName(sCalendarType) {
	    if (!sCalendarType) {
	        sCalendarType = Core.getConfiguration().getCalendarType();
	    }
	    return 'ca-' + sCalendarType.toLowerCase();
	}
	function getData(oLocale) {
	    var sLanguage = oLocale.getLanguage() || '', sScript = oLocale.getScript() || '', sRegion = oLocale.getRegion() || '', mData;
	    function merge(obj, fallbackObj) {
	        var name, value, fallbackValue;
	        if (!fallbackObj) {
	            return;
	        }
	        for (name in fallbackObj) {
	            if (fallbackObj.hasOwnProperty(name)) {
	                value = obj[name];
	                fallbackValue = fallbackObj[name];
	                if (value === undefined) {
	                    obj[name] = fallbackValue;
	                } else if (value === null) {
	                    delete obj[name];
	                } else if (typeof value === 'object' && typeof fallbackValue === 'object') {
	                    merge(value, fallbackValue);
	                }
	            }
	        }
	    }
	    function getOrLoad(sId) {
	        if (!mLocaleDatas[sId] && (!M_SUPPORTED_LOCALES || M_SUPPORTED_LOCALES[sId] === true)) {
	            var data = mLocaleDatas[sId] = LoaderExtensions.loadResource('sap/ui/core/cldr/' + sId + '.json', {
	                dataType: 'json',
	                failOnError: false
	            });
	            if (data && data.__fallbackLocale) {
	                merge(data, getOrLoad(data.__fallbackLocale));
	                delete data.__fallbackLocale;
	            }
	        }
	        return mLocaleDatas[sId];
	    }
	    sLanguage = sLanguage && M_ISO639_OLD_TO_NEW$3[sLanguage] || sLanguage;
	    if (sLanguage === 'no') {
	        sLanguage = 'nb';
	    }
	    if (sLanguage === 'zh' && !sRegion) {
	        if (sScript === 'Hans') {
	            sRegion = 'CN';
	        } else if (sScript === 'Hant') {
	            sRegion = 'TW';
	        }
	    }
	    var sId = sLanguage + '_' + sRegion;
	    if (sLanguage && sRegion) {
	        mData = getOrLoad(sId);
	    }
	    if (!mData && sLanguage) {
	        mData = getOrLoad(sLanguage);
	    }
	    mLocaleDatas[sId] = mData || M_DEFAULT_DATA;
	    return mLocaleDatas[sId];
	}
	var CustomLocaleData = LocaleData.extend('sap.ui.core.CustomLocaleData', {
	    constructor: function (oLocale) {
	        LocaleData.apply(this, arguments);
	        this.mCustomData = Core.getConfiguration().getFormatSettings().getCustomLocaleData();
	    },
	    _get: function () {
	        var aArguments = Array.prototype.slice.call(arguments), sCalendar, sKey;
	        if (aArguments[0].indexOf('ca-') == 0) {
	            sCalendar = aArguments[0];
	            if (sCalendar == getCLDRCalendarName()) {
	                aArguments = aArguments.slice(1);
	            }
	        }
	        sKey = aArguments.join('-');
	        var vValue = this.mCustomData[sKey];
	        if (vValue == null) {
	            vValue = this._getDeep(this.mCustomData, arguments);
	            if (vValue == null) {
	                vValue = this._getDeep(this.mData, arguments);
	            }
	        }
	        return vValue;
	    },
	    _getMerged: function () {
	        var mData = this._getDeep(this.mData, arguments);
	        var mCustomData = this._getDeep(this.mCustomData, arguments);
	        return fnExtend({}, mData, mCustomData);
	    }
	});
	LocaleData.getInstance = function (oLocale) {
	    return oLocale.hasPrivateUseSubtag('sapufmt') ? new CustomLocaleData(oLocale) : new LocaleData(oLocale);
	};

	const cache$2 = new Map();

	const getCachedLocaleDataInstance = locale => {
		if (!cache$2.has(locale)) {
			cache$2.set(locale, LocaleData.getInstance(locale));
		}

		return cache$2.get(locale);
	};

	var mRegistry = new Map();
	var _Calendars = {
	  get: function (sCalendarType) {
	    if (!mRegistry.has(sCalendarType)) {
	      throw new Error("Required calendar type: " + sCalendarType + " not loaded.");
	    }
	    return mRegistry.get(sCalendarType);
	  },
	  set: function (sCalendarType, CalendarClass) {
	    mRegistry.set(sCalendarType, CalendarClass);
	  }
	};

	var UniversalDate = BaseObject$1.extend('sap.ui.core.date.UniversalDate', {
	    constructor: function () {
	        var clDate = UniversalDate.getClass();
	        return this.createDate(clDate, arguments);
	    }
	});
	UniversalDate.UTC = function () {
	    var clDate = UniversalDate.getClass();
	    return clDate.UTC.apply(clDate, arguments);
	};
	UniversalDate.now = function () {
	    return Date.now();
	};
	UniversalDate.prototype.createDate = function (clDate, aArgs) {
	    switch (aArgs.length) {
	    case 0:
	        return new clDate();
	    case 1:
	        return new clDate(aArgs[0]);
	    case 2:
	        return new clDate(aArgs[0], aArgs[1]);
	    case 3:
	        return new clDate(aArgs[0], aArgs[1], aArgs[2]);
	    case 4:
	        return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3]);
	    case 5:
	        return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4]);
	    case 6:
	        return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5]);
	    case 7:
	        return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5], aArgs[6]);
	    }
	};
	UniversalDate.getInstance = function (oDate, sCalendarType) {
	    var clDate, oInstance;
	    if (oDate instanceof UniversalDate) {
	        oDate = oDate.getJSDate();
	    }
	    if (!sCalendarType) {
	        sCalendarType = Core.getConfiguration().getCalendarType();
	    }
	    clDate = UniversalDate.getClass(sCalendarType);
	    oInstance = Object.create(clDate.prototype);
	    oInstance.oDate = oDate;
	    oInstance.sCalendarType = sCalendarType;
	    return oInstance;
	};
	UniversalDate.getClass = function (sCalendarType) {
	    if (!sCalendarType) {
	        sCalendarType = Core.getConfiguration().getCalendarType();
	    }
	    return _Calendars.get(sCalendarType);
	};
	[
	    'getDate',
	    'getMonth',
	    'getFullYear',
	    'getYear',
	    'getDay',
	    'getHours',
	    'getMinutes',
	    'getSeconds',
	    'getMilliseconds',
	    'getUTCDate',
	    'getUTCMonth',
	    'getUTCFullYear',
	    'getUTCDay',
	    'getUTCHours',
	    'getUTCMinutes',
	    'getUTCSeconds',
	    'getUTCMilliseconds',
	    'getTime',
	    'valueOf',
	    'getTimezoneOffset',
	    'toString',
	    'toDateString',
	    'setDate',
	    'setFullYear',
	    'setYear',
	    'setMonth',
	    'setHours',
	    'setMinutes',
	    'setSeconds',
	    'setMilliseconds',
	    'setUTCDate',
	    'setUTCFullYear',
	    'setUTCMonth',
	    'setUTCHours',
	    'setUTCMinutes',
	    'setUTCSeconds',
	    'setUTCMilliseconds'
	].forEach(function (sName) {
	    UniversalDate.prototype[sName] = function () {
	        return this.oDate[sName].apply(this.oDate, arguments);
	    };
	});
	UniversalDate.prototype.getJSDate = function () {
	    return this.oDate;
	};
	UniversalDate.prototype.getCalendarType = function () {
	    return this.sCalendarType;
	};
	UniversalDate.prototype.getEra = function () {
	    return UniversalDate.getEraByDate(this.sCalendarType, this.oDate.getFullYear(), this.oDate.getMonth(), this.oDate.getDate());
	};
	UniversalDate.prototype.setEra = function (iEra) {
	};
	UniversalDate.prototype.getUTCEra = function () {
	    return UniversalDate.getEraByDate(this.sCalendarType, this.oDate.getUTCFullYear(), this.oDate.getUTCMonth(), this.oDate.getUTCDate());
	};
	UniversalDate.prototype.setUTCEra = function (iEra) {
	};
	UniversalDate.prototype.getWeek = function () {
	    return UniversalDate.getWeekByDate(this.sCalendarType, this.getFullYear(), this.getMonth(), this.getDate());
	};
	UniversalDate.prototype.setWeek = function (oWeek) {
	    var oDate = UniversalDate.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week);
	    this.setFullYear(oDate.year, oDate.month, oDate.day);
	};
	UniversalDate.prototype.getUTCWeek = function () {
	    return UniversalDate.getWeekByDate(this.sCalendarType, this.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate());
	};
	UniversalDate.prototype.setUTCWeek = function (oWeek) {
	    var oDate = UniversalDate.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week);
	    this.setUTCFullYear(oDate.year, oDate.month, oDate.day);
	};
	UniversalDate.prototype.getQuarter = function () {
	    return Math.floor(this.getMonth() / 3);
	};
	UniversalDate.prototype.getUTCQuarter = function () {
	    return Math.floor(this.getUTCMonth() / 3);
	};
	UniversalDate.prototype.getDayPeriod = function () {
	    if (this.getHours() < 12) {
	        return 0;
	    } else {
	        return 1;
	    }
	};
	UniversalDate.prototype.getUTCDayPeriod = function () {
	    if (this.getUTCHours() < 12) {
	        return 0;
	    } else {
	        return 1;
	    }
	};
	UniversalDate.prototype.getTimezoneShort = function () {
	    if (this.oDate.getTimezoneShort) {
	        return this.oDate.getTimezoneShort();
	    }
	};
	UniversalDate.prototype.getTimezoneLong = function () {
	    if (this.oDate.getTimezoneLong) {
	        return this.oDate.getTimezoneLong();
	    }
	};
	var iMillisecondsInWeek = 7 * 24 * 60 * 60 * 1000;
	UniversalDate.getWeekByDate = function (sCalendarType, iYear, iMonth, iDay) {
	    var oLocale = Core.getConfiguration().getFormatSettings().getFormatLocale(), clDate = this.getClass(sCalendarType), oFirstDay = getFirstDayOfFirstWeek(clDate, iYear), oDate = new clDate(clDate.UTC(iYear, iMonth, iDay)), iWeek, iLastYear, iNextYear, oLastFirstDay, oNextFirstDay;
	    if (oLocale.getRegion() === 'US') {
	        iWeek = calculateWeeks(oFirstDay, oDate);
	    } else {
	        iLastYear = iYear - 1;
	        iNextYear = iYear + 1;
	        oLastFirstDay = getFirstDayOfFirstWeek(clDate, iLastYear);
	        oNextFirstDay = getFirstDayOfFirstWeek(clDate, iNextYear);
	        if (oDate >= oNextFirstDay) {
	            iYear = iNextYear;
	            iWeek = 0;
	        } else if (oDate < oFirstDay) {
	            iYear = iLastYear;
	            iWeek = calculateWeeks(oLastFirstDay, oDate);
	        } else {
	            iWeek = calculateWeeks(oFirstDay, oDate);
	        }
	    }
	    return {
	        year: iYear,
	        week: iWeek
	    };
	};
	UniversalDate.getFirstDateOfWeek = function (sCalendarType, iYear, iWeek) {
	    var oLocale = Core.getConfiguration().getFormatSettings().getFormatLocale(), clDate = this.getClass(sCalendarType), oFirstDay = getFirstDayOfFirstWeek(clDate, iYear), oDate = new clDate(oFirstDay.valueOf() + iWeek * iMillisecondsInWeek);
	    if (oLocale.getRegion() === 'US' && iWeek === 0 && oFirstDay.getUTCFullYear() < iYear) {
	        return {
	            year: iYear,
	            month: 0,
	            day: 1
	        };
	    }
	    return {
	        year: oDate.getUTCFullYear(),
	        month: oDate.getUTCMonth(),
	        day: oDate.getUTCDate()
	    };
	};
	function getFirstDayOfFirstWeek(clDate, iYear) {
	    var oLocale = Core.getConfiguration().getFormatSettings().getFormatLocale(), oLocaleData = LocaleData.getInstance(oLocale), iMinDays = oLocaleData.getMinimalDaysInFirstWeek(), iFirstDayOfWeek = oLocaleData.getFirstDayOfWeek(), oFirstDay = new clDate(clDate.UTC(iYear, 0, 1)), iDayCount = 7;
	    while (oFirstDay.getUTCDay() !== iFirstDayOfWeek) {
	        oFirstDay.setUTCDate(oFirstDay.getUTCDate() - 1);
	        iDayCount--;
	    }
	    if (iDayCount < iMinDays) {
	        oFirstDay.setUTCDate(oFirstDay.getUTCDate() + 7);
	    }
	    return oFirstDay;
	}
	function calculateWeeks(oFromDate, oToDate) {
	    return Math.floor((oToDate.valueOf() - oFromDate.valueOf()) / iMillisecondsInWeek);
	}
	var mEras = {};
	UniversalDate.getEraByDate = function (sCalendarType, iYear, iMonth, iDay) {
	    var aEras = getEras(sCalendarType), iTimestamp = new Date(0).setUTCFullYear(iYear, iMonth, iDay), oEra;
	    for (var i = aEras.length - 1; i >= 0; i--) {
	        oEra = aEras[i];
	        if (!oEra) {
	            continue;
	        }
	        if (oEra._start && iTimestamp >= oEra._startInfo.timestamp) {
	            return i;
	        }
	        if (oEra._end && iTimestamp < oEra._endInfo.timestamp) {
	            return i;
	        }
	    }
	};
	UniversalDate.getCurrentEra = function (sCalendarType) {
	    var oNow = new Date();
	    return this.getEraByDate(sCalendarType, oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
	};
	UniversalDate.getEraStartDate = function (sCalendarType, iEra) {
	    var aEras = getEras(sCalendarType), oEra = aEras[iEra] || aEras[0];
	    if (oEra._start) {
	        return oEra._startInfo;
	    }
	};
	function getEras(sCalendarType) {
	    var oLocale = Core.getConfiguration().getFormatSettings().getFormatLocale(), oLocaleData = LocaleData.getInstance(oLocale), aEras = mEras[sCalendarType];
	    if (!aEras) {
	        var aEras = oLocaleData.getEraDates(sCalendarType);
	        if (!aEras[0]) {
	            aEras[0] = { _start: '1-1-1' };
	        }
	        for (var i = 0; i < aEras.length; i++) {
	            var oEra = aEras[i];
	            if (!oEra) {
	                continue;
	            }
	            if (oEra._start) {
	                oEra._startInfo = parseDateString(oEra._start);
	            }
	            if (oEra._end) {
	                oEra._endInfo = parseDateString(oEra._end);
	            }
	        }
	        mEras[sCalendarType] = aEras;
	    }
	    return aEras;
	}
	function parseDateString(sDateString) {
	    var aParts = sDateString.split('-'), iYear, iMonth, iDay;
	    if (aParts[0] == '') {
	        iYear = -parseInt(aParts[1]);
	        iMonth = parseInt(aParts[2]) - 1;
	        iDay = parseInt(aParts[3]);
	    } else {
	        iYear = parseInt(aParts[0]);
	        iMonth = parseInt(aParts[1]) - 1;
	        iDay = parseInt(aParts[2]);
	    }
	    return {
	        timestamp: new Date(0).setUTCFullYear(iYear, iMonth, iDay),
	        year: iYear,
	        month: iMonth,
	        day: iDay
	    };
	}

	var fnEqual = function (a, b, maxDepth, contains, depth) {
	    if (typeof maxDepth == 'boolean') {
	        contains = maxDepth;
	        maxDepth = undefined;
	    }
	    if (!depth) {
	        depth = 0;
	    }
	    if (!maxDepth) {
	        maxDepth = 10;
	    }
	    if (depth > maxDepth) {
	        Log.warning('deepEqual comparison exceeded maximum recursion depth of ' + maxDepth + '. Treating values as unequal');
	        return false;
	    }
	    if (a === b) {
	        return true;
	    }
	    var bIsReallyNaN = typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);
	    if (bIsReallyNaN) {
	        return true;
	    }
	    if (Array.isArray(a) && Array.isArray(b)) {
	        if (!contains && a.length !== b.length) {
	            return false;
	        }
	        if (a.length > b.length) {
	            return false;
	        }
	        for (var i = 0; i < a.length; i++) {
	            if (!fnEqual(a[i], b[i], maxDepth, contains, depth + 1)) {
	                return false;
	            }
	        }
	        return true;
	    }
	    if (typeof a == 'object' && typeof b == 'object') {
	        if (!a || !b) {
	            return false;
	        }
	        if (a.constructor !== b.constructor) {
	            return false;
	        }
	        if (!contains && Object.keys(a).length !== Object.keys(b).length) {
	            return false;
	        }
	        if (a instanceof Node) {
	            return a.isEqualNode(b);
	        }
	        if (a instanceof Date) {
	            return a.valueOf() === b.valueOf();
	        }
	        for (var i in a) {
	            if (!fnEqual(a[i], b[i], maxDepth, contains, depth + 1)) {
	                return false;
	            }
	        }
	        return true;
	    }
	    return false;
	};

	var rMessageFormat = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
	var fnFormatMessage = function (sPattern, aValues) {
	    fnAssert(typeof sPattern === 'string' || sPattern instanceof String, 'pattern must be string');
	    if (arguments.length > 2 || aValues != null && !Array.isArray(aValues)) {
	        aValues = Array.prototype.slice.call(arguments, 1);
	    }
	    aValues = aValues || [];
	    return sPattern.replace(rMessageFormat, function ($0, $1, $2, $3, offset) {
	        if ($1) {
	            return '\'';
	        } else if ($2) {
	            return $2.replace(/''/g, '\'');
	        } else if ($3) {
	            return String(aValues[parseInt($3)]);
	        }
	        throw new Error('formatMessage: pattern syntax error at pos. ' + offset);
	    });
	};

	var DateFormat = function () {
	    throw new Error();
	};
	var mCldrDatePattern = {};
	DateFormat.oDateInfo = {
	    oDefaultFormatOptions: {
	        style: 'medium',
	        relativeScale: 'day',
	        relativeStyle: 'wide'
	    },
	    aFallbackFormatOptions: [
	        { style: 'short' },
	        { style: 'medium' },
	        { pattern: 'yyyy-MM-dd' },
	        {
	            pattern: 'yyyyMMdd',
	            strictParsing: true
	        }
	    ],
	    bShortFallbackFormatOptions: true,
	    bPatternFallbackWithoutDelimiter: true,
	    getPattern: function (oLocaleData, sStyle, sCalendarType) {
	        return oLocaleData.getDatePattern(sStyle, sCalendarType);
	    },
	    oRequiredParts: {
	        'text': true,
	        'year': true,
	        'weekYear': true,
	        'month': true,
	        'day': true
	    },
	    aRelativeScales: [
	        'year',
	        'month',
	        'week',
	        'day'
	    ],
	    aRelativeParseScales: [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second'
	    ],
	    aIntervalCompareFields: [
	        'Era',
	        'FullYear',
	        'Quarter',
	        'Month',
	        'Week',
	        'Date'
	    ]
	};
	DateFormat.oDateTimeInfo = {
	    oDefaultFormatOptions: {
	        style: 'medium',
	        relativeScale: 'auto',
	        relativeStyle: 'wide'
	    },
	    aFallbackFormatOptions: [
	        { style: 'short' },
	        { style: 'medium' },
	        { pattern: 'yyyy-MM-dd\'T\'HH:mm:ss' },
	        { pattern: 'yyyyMMdd HHmmss' }
	    ],
	    getPattern: function (oLocaleData, sStyle, sCalendarType) {
	        var iSlashIndex = sStyle.indexOf('/');
	        if (iSlashIndex > 0) {
	            return oLocaleData.getCombinedDateTimePattern(sStyle.substr(0, iSlashIndex), sStyle.substr(iSlashIndex + 1), sCalendarType);
	        } else {
	            return oLocaleData.getCombinedDateTimePattern(sStyle, sStyle, sCalendarType);
	        }
	    },
	    oRequiredParts: {
	        'text': true,
	        'year': true,
	        'weekYear': true,
	        'month': true,
	        'day': true,
	        'hour0_23': true,
	        'hour1_24': true,
	        'hour0_11': true,
	        'hour1_12': true
	    },
	    aRelativeScales: [
	        'year',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second'
	    ],
	    aRelativeParseScales: [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second'
	    ],
	    aIntervalCompareFields: [
	        'Era',
	        'FullYear',
	        'Quarter',
	        'Month',
	        'Week',
	        'Date',
	        'DayPeriod',
	        'Hours',
	        'Minutes',
	        'Seconds'
	    ]
	};
	DateFormat.oTimeInfo = {
	    oDefaultFormatOptions: {
	        style: 'medium',
	        relativeScale: 'auto',
	        relativeStyle: 'wide'
	    },
	    aFallbackFormatOptions: [
	        { style: 'short' },
	        { style: 'medium' },
	        { pattern: 'HH:mm:ss' },
	        { pattern: 'HHmmss' }
	    ],
	    getPattern: function (oLocaleData, sStyle, sCalendarType) {
	        return oLocaleData.getTimePattern(sStyle, sCalendarType);
	    },
	    oRequiredParts: {
	        'text': true,
	        'hour0_23': true,
	        'hour1_24': true,
	        'hour0_11': true,
	        'hour1_12': true
	    },
	    aRelativeScales: [
	        'hour',
	        'minute',
	        'second'
	    ],
	    aRelativeParseScales: [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second'
	    ],
	    aIntervalCompareFields: [
	        'DayPeriod',
	        'Hours',
	        'Minutes',
	        'Seconds'
	    ]
	};
	DateFormat.getInstance = function (oFormatOptions, oLocale) {
	    return this.getDateInstance(oFormatOptions, oLocale);
	};
	DateFormat.getDateInstance = function (oFormatOptions, oLocale) {
	    return this.createInstance(oFormatOptions, oLocale, this.oDateInfo);
	};
	DateFormat.getDateTimeInstance = function (oFormatOptions, oLocale) {
	    return this.createInstance(oFormatOptions, oLocale, this.oDateTimeInfo);
	};
	DateFormat.getTimeInstance = function (oFormatOptions, oLocale) {
	    return this.createInstance(oFormatOptions, oLocale, this.oTimeInfo);
	};
	function createIntervalPatternWithNormalConnector(oFormat) {
	    var sPattern = oFormat.oLocaleData.getIntervalPattern('', oFormat.oFormatOptions.calendarType);
	    sPattern = sPattern.replace(/[^\{\}01 ]/, '-');
	    return sPattern.replace(/\{(0|1)\}/g, oFormat.oFormatOptions.pattern);
	}
	DateFormat.createInstance = function (oFormatOptions, oLocale, oInfo) {
	    var oFormat = Object.create(this.prototype);
	    if (oFormatOptions instanceof Locale$1) {
	        oLocale = oFormatOptions;
	        oFormatOptions = undefined;
	    }
	    if (!oLocale) {
	        oLocale = Core.getConfiguration().getFormatSettings().getFormatLocale();
	    }
	    oFormat.oLocale = oLocale;
	    oFormat.oLocaleData = LocaleData.getInstance(oLocale);
	    oFormat.oFormatOptions = fnExtend({}, oInfo.oDefaultFormatOptions, oFormatOptions);
	    if (!oFormat.oFormatOptions.calendarType) {
	        oFormat.oFormatOptions.calendarType = Core.getConfiguration().getCalendarType();
	    }
	    if (!oFormat.oFormatOptions.pattern) {
	        if (oFormat.oFormatOptions.format) {
	            oFormat.oFormatOptions.pattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
	        } else {
	            oFormat.oFormatOptions.pattern = oInfo.getPattern(oFormat.oLocaleData, oFormat.oFormatOptions.style, oFormat.oFormatOptions.calendarType);
	        }
	    }
	    if (oFormat.oFormatOptions.interval) {
	        if (oFormat.oFormatOptions.format) {
	            oFormat.intervalPatterns = oFormat.oLocaleData.getCustomIntervalPattern(oFormat.oFormatOptions.format, null, oFormat.oFormatOptions.calendarType);
	            if (typeof oFormat.intervalPatterns === 'string') {
	                oFormat.intervalPatterns = [oFormat.intervalPatterns];
	            }
	            oFormat.intervalPatterns.push(oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType));
	        } else {
	            oFormat.intervalPatterns = [
	                oFormat.oLocaleData.getCombinedIntervalPattern(oFormat.oFormatOptions.pattern, oFormat.oFormatOptions.calendarType),
	                oFormat.oFormatOptions.pattern
	            ];
	        }
	        var sCommonConnectorPattern = createIntervalPatternWithNormalConnector(oFormat);
	        oFormat.intervalPatterns.push(sCommonConnectorPattern);
	    }
	    if (!oFormat.oFormatOptions.fallback) {
	        if (!oInfo.oFallbackFormats) {
	            oInfo.oFallbackFormats = {};
	        }
	        var sLocale = oLocale.toString(), sCalendarType = oFormat.oFormatOptions.calendarType, sKey = sLocale + '-' + sCalendarType, sPattern, aFallbackFormatOptions;
	        if (oFormat.oFormatOptions.pattern && oInfo.bPatternFallbackWithoutDelimiter) {
	            sKey = sKey + '-' + oFormat.oFormatOptions.pattern;
	        }
	        if (oFormat.oFormatOptions.interval) {
	            sKey = sKey + '-' + 'interval';
	        }
	        var oFallbackFormats = oInfo.oFallbackFormats[sKey] ? Object.assign({}, oInfo.oFallbackFormats[sKey]) : undefined;
	        if (!oFallbackFormats) {
	            aFallbackFormatOptions = oInfo.aFallbackFormatOptions;
	            if (oInfo.bShortFallbackFormatOptions) {
	                sPattern = oInfo.getPattern(oFormat.oLocaleData, 'short');
	                aFallbackFormatOptions = aFallbackFormatOptions.concat(DateFormat._createFallbackOptionsWithoutDelimiter(sPattern));
	            }
	            if (oFormat.oFormatOptions.pattern && oInfo.bPatternFallbackWithoutDelimiter) {
	                aFallbackFormatOptions = DateFormat._createFallbackOptionsWithoutDelimiter(oFormat.oFormatOptions.pattern).concat(aFallbackFormatOptions);
	            }
	            oFallbackFormats = DateFormat._createFallbackFormat(aFallbackFormatOptions, sCalendarType, oLocale, oInfo, oFormat.oFormatOptions.interval);
	        }
	        oFormat.aFallbackFormats = oFallbackFormats;
	    }
	    oFormat.oRequiredParts = oInfo.oRequiredParts;
	    oFormat.aRelativeScales = oInfo.aRelativeScales;
	    oFormat.aRelativeParseScales = oInfo.aRelativeParseScales;
	    oFormat.aIntervalCompareFields = oInfo.aIntervalCompareFields;
	    oFormat.init();
	    return oFormat;
	};
	DateFormat.prototype.init = function () {
	    var sCalendarType = this.oFormatOptions.calendarType;
	    this.aMonthsAbbrev = this.oLocaleData.getMonths('abbreviated', sCalendarType);
	    this.aMonthsWide = this.oLocaleData.getMonths('wide', sCalendarType);
	    this.aMonthsNarrow = this.oLocaleData.getMonths('narrow', sCalendarType);
	    this.aMonthsAbbrevSt = this.oLocaleData.getMonthsStandAlone('abbreviated', sCalendarType);
	    this.aMonthsWideSt = this.oLocaleData.getMonthsStandAlone('wide', sCalendarType);
	    this.aMonthsNarrowSt = this.oLocaleData.getMonthsStandAlone('narrow', sCalendarType);
	    this.aDaysAbbrev = this.oLocaleData.getDays('abbreviated', sCalendarType);
	    this.aDaysWide = this.oLocaleData.getDays('wide', sCalendarType);
	    this.aDaysNarrow = this.oLocaleData.getDays('narrow', sCalendarType);
	    this.aDaysShort = this.oLocaleData.getDays('short', sCalendarType);
	    this.aDaysAbbrevSt = this.oLocaleData.getDaysStandAlone('abbreviated', sCalendarType);
	    this.aDaysWideSt = this.oLocaleData.getDaysStandAlone('wide', sCalendarType);
	    this.aDaysNarrowSt = this.oLocaleData.getDaysStandAlone('narrow', sCalendarType);
	    this.aDaysShortSt = this.oLocaleData.getDaysStandAlone('short', sCalendarType);
	    this.aQuartersAbbrev = this.oLocaleData.getQuarters('abbreviated', sCalendarType);
	    this.aQuartersWide = this.oLocaleData.getQuarters('wide', sCalendarType);
	    this.aQuartersNarrow = this.oLocaleData.getQuarters('narrow', sCalendarType);
	    this.aQuartersAbbrevSt = this.oLocaleData.getQuartersStandAlone('abbreviated', sCalendarType);
	    this.aQuartersWideSt = this.oLocaleData.getQuartersStandAlone('wide', sCalendarType);
	    this.aQuartersNarrowSt = this.oLocaleData.getQuartersStandAlone('narrow', sCalendarType);
	    this.aErasNarrow = this.oLocaleData.getEras('narrow', sCalendarType);
	    this.aErasAbbrev = this.oLocaleData.getEras('abbreviated', sCalendarType);
	    this.aErasWide = this.oLocaleData.getEras('wide', sCalendarType);
	    this.aDayPeriods = this.oLocaleData.getDayPeriods('abbreviated', sCalendarType);
	    this.aFormatArray = this.parseCldrDatePattern(this.oFormatOptions.pattern);
	    this.sAllowedCharacters = this.getAllowedCharacters(this.aFormatArray);
	};
	DateFormat._createFallbackFormat = function (aFallbackFormatOptions, sCalendarType, oLocale, oInfo, bInterval) {
	    return aFallbackFormatOptions.map(function (oOptions) {
	        var oFormatOptions = Object.assign({}, oOptions);
	        if (bInterval) {
	            oFormatOptions.interval = true;
	        }
	        oFormatOptions.calendarType = sCalendarType;
	        oFormatOptions.fallback = true;
	        var oFallbackFormat = DateFormat.createInstance(oFormatOptions, oLocale, oInfo);
	        oFallbackFormat.bIsFallback = true;
	        return oFallbackFormat;
	    });
	};
	DateFormat._createFallbackOptionsWithoutDelimiter = function (sBasePattern) {
	    var rNonDateFields = /[^dMyGU]/g, oDayReplace = {
	            regex: /d+/g,
	            replace: 'dd'
	        }, oMonthReplace = {
	            regex: /M+/g,
	            replace: 'MM'
	        }, oYearReplace = {
	            regex: /[yU]+/g,
	            replace: [
	                'yyyy',
	                'yy'
	            ]
	        };
	    sBasePattern = sBasePattern.replace(rNonDateFields, '');
	    sBasePattern = sBasePattern.replace(oDayReplace.regex, oDayReplace.replace);
	    sBasePattern = sBasePattern.replace(oMonthReplace.regex, oMonthReplace.replace);
	    return oYearReplace.replace.map(function (sReplace) {
	        return {
	            pattern: sBasePattern.replace(oYearReplace.regex, sReplace),
	            strictParsing: true
	        };
	    });
	};
	var oParseHelper = {
	    isNumber: function (iCharCode) {
	        return iCharCode >= 48 && iCharCode <= 57;
	    },
	    findNumbers: function (sValue, iMaxLength) {
	        var iLength = 0;
	        while (iLength < iMaxLength && this.isNumber(sValue.charCodeAt(iLength))) {
	            iLength++;
	        }
	        if (typeof sValue !== 'string') {
	            sValue = sValue.toString();
	        }
	        return sValue.substr(0, iLength);
	    },
	    findEntry: function (sValue, aList) {
	        var iFoundIndex = -1, iMatchedLength = 0;
	        for (var j = 0; j < aList.length; j++) {
	            if (aList[j] && aList[j].length > iMatchedLength && sValue.indexOf(aList[j]) === 0) {
	                iFoundIndex = j;
	                iMatchedLength = aList[j].length;
	            }
	        }
	        return {
	            index: iFoundIndex,
	            value: iFoundIndex === -1 ? null : aList[iFoundIndex]
	        };
	    },
	    parseTZ: function (sValue, bISO) {
	        var iLength = 0;
	        var iTZFactor = sValue.charAt(0) == '+' ? -1 : 1;
	        var sPart;
	        iLength++;
	        sPart = this.findNumbers(sValue.substr(iLength), 2);
	        var iTZDiffHour = parseInt(sPart);
	        iLength += 2;
	        if (bISO) {
	            iLength++;
	        }
	        sPart = this.findNumbers(sValue.substr(iLength), 2);
	        iLength += 2;
	        var iTZDiff = parseInt(sPart);
	        return {
	            length: iLength,
	            tzDiff: (iTZDiff + 60 * iTZDiffHour) * iTZFactor
	        };
	    },
	    checkValid: function (sType, bPartInvalid, oFormat) {
	        if (sType in oFormat.oRequiredParts && bPartInvalid) {
	            return false;
	        }
	    }
	};
	DateFormat.prototype.oSymbols = {
	    '': {
	        name: 'text',
	        format: function (oField, oDate, bUTC, oFormat) {
	            return oField.value;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sChar;
	            var bValid = true;
	            var iValueIndex = 0;
	            var iPatternIndex = 0;
	            var sDelimiter = '-~\u2010\u2011\u2012\u2013\u2014\uFE58\uFE63\uFF0D\uFF5E';
	            for (; iPatternIndex < oPart.value.length; iPatternIndex++) {
	                sChar = oPart.value.charAt(iPatternIndex);
	                if (sChar === ' ') {
	                    while (sValue.charAt(iValueIndex) === ' ') {
	                        iValueIndex++;
	                    }
	                } else if (sDelimiter.includes(sChar)) {
	                    if (!sDelimiter.includes(sValue.charAt(iValueIndex))) {
	                        bValid = false;
	                    }
	                    iValueIndex++;
	                } else {
	                    if (sValue.charAt(iValueIndex) !== sChar) {
	                        bValid = false;
	                    }
	                    iValueIndex++;
	                }
	                if (!bValid) {
	                    break;
	                }
	            }
	            if (bValid) {
	                return { length: iValueIndex };
	            } else {
	                var bPartInvalid = false;
	                if (oConfig.index < oConfig.formatArray.length - 1) {
	                    bPartInvalid = oConfig.formatArray[oConfig.index + 1].type in oFormat.oRequiredParts;
	                }
	                return { valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat) };
	            }
	        }
	    },
	    'G': {
	        name: 'era',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iEra = bUTC ? oDate.getUTCEra() : oDate.getEra();
	            if (oField.digits <= 3) {
	                return oFormat.aErasAbbrev[iEra];
	            } else if (oField.digits === 4) {
	                return oFormat.aErasWide[iEra];
	            } else {
	                return oFormat.aErasNarrow[iEra];
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var aErasVariants = [
	                oFormat.aErasWide,
	                oFormat.aErasAbbrev,
	                oFormat.aErasNarrow
	            ];
	            for (var i = 0; i < aErasVariants.length; i++) {
	                var aVariants = aErasVariants[i];
	                var oFound = oParseHelper.findEntry(sValue, aVariants);
	                if (oFound.index !== -1) {
	                    return {
	                        era: oFound.index,
	                        length: oFound.value.length
	                    };
	                }
	            }
	            return {
	                era: oFormat.aErasWide.length - 1,
	                valid: oParseHelper.checkValid(oPart.type, true, oFormat)
	            };
	        }
	    },
	    'y': {
	        name: 'year',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iYear = bUTC ? oDate.getUTCFullYear() : oDate.getFullYear();
	            var sYear = String(iYear);
	            var sCalendarType = oFormat.oFormatOptions.calendarType;
	            if (oField.digits == 2 && sYear.length > 2) {
	                sYear = sYear.substr(sYear.length - 2);
	            }
	            if (sCalendarType != CalendarType$1.Japanese && oField.digits == 1 && iYear < 100) {
	                sYear = sYear.padStart(4, '0');
	            }
	            return sYear.padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sCalendarType = oFormat.oFormatOptions.calendarType;
	            var sPart;
	            if (oPart.digits == 1) {
	                sPart = oParseHelper.findNumbers(sValue, 4);
	            } else if (oPart.digits == 2) {
	                sPart = oParseHelper.findNumbers(sValue, 2);
	            } else {
	                sPart = oParseHelper.findNumbers(sValue, oPart.digits);
	            }
	            var iYear = parseInt(sPart);
	            if (sCalendarType != CalendarType$1.Japanese && sPart.length <= 2) {
	                var oCurrentDate = UniversalDate.getInstance(new Date(), sCalendarType), iCurrentYear = oCurrentDate.getFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iYear - iCurrentYear;
	                if (iYearDiff < -70) {
	                    iYear += (iCurrentCentury + 1) * 100;
	                } else if (iYearDiff < 30) {
	                    iYear += iCurrentCentury * 100;
	                } else {
	                    iYear += (iCurrentCentury - 1) * 100;
	                }
	            }
	            return {
	                length: sPart.length,
	                valid: oParseHelper.checkValid(oPart.type, sPart === '', oFormat),
	                year: iYear
	            };
	        }
	    },
	    'Y': {
	        name: 'weekYear',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var oWeek = bUTC ? oDate.getUTCWeek() : oDate.getWeek();
	            var iWeekYear = oWeek.year;
	            var sWeekYear = String(iWeekYear);
	            var sCalendarType = oFormat.oFormatOptions.calendarType;
	            if (oField.digits == 2 && sWeekYear.length > 2) {
	                sWeekYear = sWeekYear.substr(sWeekYear.length - 2);
	            }
	            if (sCalendarType != CalendarType$1.Japanese && oField.digits == 1 && iWeekYear < 100) {
	                sWeekYear = sWeekYear.padStart(4, '0');
	            }
	            return sWeekYear.padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sCalendarType = oFormat.oFormatOptions.calendarType;
	            var sPart;
	            if (oPart.digits == 1) {
	                sPart = oParseHelper.findNumbers(sValue, 4);
	            } else if (oPart.digits == 2) {
	                sPart = oParseHelper.findNumbers(sValue, 2);
	            } else {
	                sPart = oParseHelper.findNumbers(sValue, oPart.digits);
	            }
	            var iYear = parseInt(sPart);
	            var iWeekYear;
	            if (sCalendarType != CalendarType$1.Japanese && sPart.length <= 2) {
	                var oCurrentDate = UniversalDate.getInstance(new Date(), sCalendarType), iCurrentYear = oCurrentDate.getFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iWeekYear - iCurrentYear;
	                if (iYearDiff < -70) {
	                    iWeekYear += (iCurrentCentury + 1) * 100;
	                } else if (iYearDiff < 30) {
	                    iWeekYear += iCurrentCentury * 100;
	                } else {
	                    iWeekYear += (iCurrentCentury - 1) * 100;
	                }
	            }
	            return {
	                length: sPart.length,
	                valid: oParseHelper.checkValid(oPart.type, sPart === '', oFormat),
	                year: iYear,
	                weekYear: iWeekYear
	            };
	        }
	    },
	    'M': {
	        name: 'month',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iMonth = bUTC ? oDate.getUTCMonth() : oDate.getMonth();
	            if (oField.digits == 3) {
	                return oFormat.aMonthsAbbrev[iMonth];
	            } else if (oField.digits == 4) {
	                return oFormat.aMonthsWide[iMonth];
	            } else if (oField.digits > 4) {
	                return oFormat.aMonthsNarrow[iMonth];
	            } else {
	                return String(iMonth + 1).padStart(oField.digits, '0');
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var aMonthsVariants = [
	                oFormat.aMonthsWide,
	                oFormat.aMonthsWideSt,
	                oFormat.aMonthsAbbrev,
	                oFormat.aMonthsAbbrevSt,
	                oFormat.aMonthsNarrow,
	                oFormat.aMonthsNarrowSt
	            ];
	            var bValid;
	            var iMonth;
	            var sPart;
	            if (oPart.digits < 3) {
	                sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	                bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	                iMonth = parseInt(sPart) - 1;
	                if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
	                    bValid = false;
	                }
	            } else {
	                for (var i = 0; i < aMonthsVariants.length; i++) {
	                    var aVariants = aMonthsVariants[i];
	                    var oFound = oParseHelper.findEntry(sValue, aVariants);
	                    if (oFound.index !== -1) {
	                        return {
	                            month: oFound.index,
	                            length: oFound.value.length
	                        };
	                    }
	                }
	                bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
	            }
	            return {
	                month: iMonth,
	                length: sPart ? sPart.length : 0,
	                valid: bValid
	            };
	        }
	    },
	    'L': {
	        name: 'monthStandalone',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iMonth = bUTC ? oDate.getUTCMonth() : oDate.getMonth();
	            if (oField.digits == 3) {
	                return oFormat.aMonthsAbbrevSt[iMonth];
	            } else if (oField.digits == 4) {
	                return oFormat.aMonthsWideSt[iMonth];
	            } else if (oField.digits > 4) {
	                return oFormat.aMonthsNarrowSt[iMonth];
	            } else {
	                return String(iMonth + 1).padStart(oField.digits, '0');
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var aMonthsVariants = [
	                oFormat.aMonthsWide,
	                oFormat.aMonthsWideSt,
	                oFormat.aMonthsAbbrev,
	                oFormat.aMonthsAbbrevSt,
	                oFormat.aMonthsNarrow,
	                oFormat.aMonthsNarrowSt
	            ];
	            var bValid;
	            var iMonth;
	            var sPart;
	            if (oPart.digits < 3) {
	                sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	                bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	                iMonth = parseInt(sPart) - 1;
	                if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
	                    bValid = false;
	                }
	            } else {
	                for (var i = 0; i < aMonthsVariants.length; i++) {
	                    var aVariants = aMonthsVariants[i];
	                    var oFound = oParseHelper.findEntry(sValue, aVariants);
	                    if (oFound.index !== -1) {
	                        return {
	                            month: oFound.index,
	                            length: oFound.value.length
	                        };
	                    }
	                }
	                bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
	            }
	            return {
	                month: iMonth,
	                length: sPart ? sPart.length : 0,
	                valid: bValid
	            };
	        }
	    },
	    'w': {
	        name: 'weekInYear',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var oWeek = bUTC ? oDate.getUTCWeek() : oDate.getWeek();
	            var iWeek = oWeek.week;
	            var sWeek = String(iWeek + 1);
	            if (oField.digits < 3) {
	                sWeek = sWeek.padStart(oField.digits, '0');
	            } else {
	                sWeek = oFormat.oLocaleData.getCalendarWeek(oField.digits === 3 ? 'narrow' : 'wide', sWeek.padStart(2, '0'));
	            }
	            return sWeek;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart;
	            var iWeek;
	            var iLength = 0;
	            if (oPart.digits < 3) {
	                sPart = oParseHelper.findNumbers(sValue, 2);
	                iLength = sPart.length;
	                iWeek = parseInt(sPart) - 1;
	                bValid = oParseHelper.checkValid(oPart.type, !sPart, oFormat);
	            } else {
	                sPart = oFormat.oLocaleData.getCalendarWeek(oPart.digits === 3 ? 'narrow' : 'wide');
	                sPart = sPart.replace('{0}', '[0-9]+');
	                var rWeekNumber = new RegExp(sPart), oResult = rWeekNumber.exec(sValue);
	                if (oResult) {
	                    iLength = oResult[0].length;
	                    iWeek = parseInt(oResult[0]) - 1;
	                } else {
	                    bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
	                }
	            }
	            return {
	                length: iLength,
	                valid: bValid,
	                week: iWeek
	            };
	        }
	    },
	    'W': {
	        name: 'weekInMonth',
	        format: function (oField, oDate, bUTC, oFormat) {
	            return '';
	        },
	        parse: function () {
	            return {};
	        }
	    },
	    'D': {
	        name: 'dayInYear',
	        format: function (oField, oDate, bUTC, oFormat) {
	        },
	        parse: function () {
	            return {};
	        }
	    },
	    'd': {
	        name: 'day',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iDate = bUTC ? oDate.getUTCDate() : oDate.getDate();
	            return String(iDate).padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            var iDay = parseInt(sPart);
	            if (oConfig.strict && (iDay > 31 || iDay < 1)) {
	                bValid = false;
	            }
	            return {
	                day: iDay,
	                length: sPart.length,
	                valid: bValid
	            };
	        }
	    },
	    'Q': {
	        name: 'quarter',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iQuarter = bUTC ? oDate.getUTCQuarter() : oDate.getQuarter();
	            if (oField.digits == 3) {
	                return oFormat.aQuartersAbbrev[iQuarter];
	            } else if (oField.digits == 4) {
	                return oFormat.aQuartersWide[iQuarter];
	            } else if (oField.digits > 4) {
	                return oFormat.aQuartersNarrow[iQuarter];
	            } else {
	                return String(iQuarter + 1).padStart(oField.digits, '0');
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var iQuarter;
	            var sPart;
	            var aQuartersVariants = [
	                oFormat.aQuartersWide,
	                oFormat.aQuartersWideSt,
	                oFormat.aQuartersAbbrev,
	                oFormat.aQuartersAbbrevSt,
	                oFormat.aQuartersNarrow,
	                oFormat.aQuartersNarrowSt
	            ];
	            if (oPart.digits < 3) {
	                sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	                bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	                iQuarter = parseInt(sPart) - 1;
	                if (oConfig.strict && iQuarter > 3) {
	                    bValid = false;
	                }
	            } else {
	                for (var i = 0; i < aQuartersVariants.length; i++) {
	                    var aVariants = aQuartersVariants[i];
	                    var oFound = oParseHelper.findEntry(sValue, aVariants);
	                    if (oFound.index !== -1) {
	                        return {
	                            quarter: oFound.index,
	                            length: oFound.value.length
	                        };
	                    }
	                }
	                bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
	            }
	            return {
	                length: sPart ? sPart.length : 0,
	                quarter: iQuarter,
	                valid: bValid
	            };
	        }
	    },
	    'q': {
	        name: 'quarterStandalone',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iQuarter = bUTC ? oDate.getUTCQuarter() : oDate.getQuarter();
	            if (oField.digits == 3) {
	                return oFormat.aQuartersAbbrevSt[iQuarter];
	            } else if (oField.digits == 4) {
	                return oFormat.aQuartersWideSt[iQuarter];
	            } else if (oField.digits > 4) {
	                return oFormat.aQuartersNarrowSt[iQuarter];
	            } else {
	                return String(iQuarter + 1).padStart(oField.digits, '0');
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var iQuarter;
	            var sPart;
	            var aQuartersVariants = [
	                oFormat.aQuartersWide,
	                oFormat.aQuartersWideSt,
	                oFormat.aQuartersAbbrev,
	                oFormat.aQuartersAbbrevSt,
	                oFormat.aQuartersNarrow,
	                oFormat.aQuartersNarrowSt
	            ];
	            if (oPart.digits < 3) {
	                sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	                bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	                iQuarter = parseInt(sPart) - 1;
	                if (oConfig.strict && iQuarter > 3) {
	                    bValid = false;
	                }
	            } else {
	                for (var i = 0; i < aQuartersVariants.length; i++) {
	                    var aVariants = aQuartersVariants[i];
	                    var oFound = oParseHelper.findEntry(sValue, aVariants);
	                    if (oFound.index !== -1) {
	                        return {
	                            quarter: oFound.index,
	                            length: oFound.value.length
	                        };
	                    }
	                }
	                bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
	            }
	            return {
	                length: sPart ? sPart.length : 0,
	                quarter: iQuarter,
	                valid: bValid
	            };
	        }
	    },
	    'F': {
	        name: 'dayOfWeekInMonth',
	        format: function (oField, oDate, bUTC, oFormat) {
	            return '';
	        },
	        parse: function () {
	            return {};
	        }
	    },
	    'E': {
	        name: 'dayNameInWeek',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iDay = bUTC ? oDate.getUTCDay() : oDate.getDay();
	            if (oField.digits < 4) {
	                return oFormat.aDaysAbbrev[iDay];
	            } else if (oField.digits == 4) {
	                return oFormat.aDaysWide[iDay];
	            } else if (oField.digits == 5) {
	                return oFormat.aDaysNarrow[iDay];
	            } else {
	                return oFormat.aDaysShort[iDay];
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var aDaysVariants = [
	                oFormat.aDaysWide,
	                oFormat.aDaysWideSt,
	                oFormat.aDaysAbbrev,
	                oFormat.aDaysAbbrevSt,
	                oFormat.aDaysShort,
	                oFormat.aDaysShortSt,
	                oFormat.aDaysNarrow,
	                oFormat.aDaysNarrowSt
	            ];
	            for (var i = 0; i < aDaysVariants.length; i++) {
	                var aVariants = aDaysVariants[i];
	                var oFound = oParseHelper.findEntry(sValue, aVariants);
	                if (oFound.index !== -1) {
	                    return {
	                        dayOfWeek: oFound.index,
	                        length: oFound.value.length
	                    };
	                }
	            }
	        }
	    },
	    'c': {
	        name: 'dayNameInWeekStandalone',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iDay = bUTC ? oDate.getUTCDay() : oDate.getDay();
	            if (oField.digits < 4) {
	                return oFormat.aDaysAbbrevSt[iDay];
	            } else if (oField.digits == 4) {
	                return oFormat.aDaysWideSt[iDay];
	            } else if (oField.digits == 5) {
	                return oFormat.aDaysNarrowSt[iDay];
	            } else {
	                return oFormat.aDaysShortSt[iDay];
	            }
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var aDaysVariants = [
	                oFormat.aDaysWide,
	                oFormat.aDaysWideSt,
	                oFormat.aDaysAbbrev,
	                oFormat.aDaysAbbrevSt,
	                oFormat.aDaysShort,
	                oFormat.aDaysShortSt,
	                oFormat.aDaysNarrow,
	                oFormat.aDaysNarrowSt
	            ];
	            for (var i = 0; i < aDaysVariants.length; i++) {
	                var aVariants = aDaysVariants[i];
	                var oFound = oParseHelper.findEntry(sValue, aVariants);
	                if (oFound.index !== -1) {
	                    return {
	                        day: oFound.index,
	                        length: oFound.value.length
	                    };
	                }
	            }
	        }
	    },
	    'u': {
	        name: 'dayNumberOfWeek',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iDay = bUTC ? oDate.getUTCDay() : oDate.getDay();
	            return oFormat._adaptDayOfWeek(iDay);
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sPart = oParseHelper.findNumbers(sValue, oPart.digits);
	            return {
	                dayNumberOfWeek: parseInt(sPart),
	                length: sPart.length
	            };
	        }
	    },
	    'a': {
	        name: 'amPmMarker',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iDayPeriod = bUTC ? oDate.getUTCDayPeriod() : oDate.getDayPeriod();
	            return oFormat.aDayPeriods[iDayPeriod];
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bPM;
	            var iLength;
	            var sAM = oFormat.aDayPeriods[0], sPM = oFormat.aDayPeriods[1];
	            var rAMPM = /[aApP](?:\.)?[mM](?:\.)?/;
	            var aMatch = sValue.match(rAMPM);
	            var bVariant = aMatch && aMatch.index === 0;
	            if (bVariant) {
	                sValue = aMatch[0].replace(/\./g, '').toLowerCase() + sValue.substring(aMatch[0].length);
	                sAM = sAM.replace(/\./g, '').toLowerCase();
	                sPM = sPM.replace(/\./g, '').toLowerCase();
	            }
	            if (sValue.indexOf(sAM) === 0) {
	                bPM = false;
	                iLength = bVariant ? aMatch[0].length : sAM.length;
	            } else if (sValue.indexOf(sPM) === 0) {
	                bPM = true;
	                iLength = bVariant ? aMatch[0].length : sPM.length;
	            }
	            return {
	                pm: bPM,
	                length: iLength
	            };
	        }
	    },
	    'H': {
	        name: 'hour0_23',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iHours = bUTC ? oDate.getUTCHours() : oDate.getHours();
	            return String(iHours).padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iHours = parseInt(sPart);
	            bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (oConfig.strict && iHours > 23) {
	                bValid = false;
	            }
	            return {
	                hour: iHours,
	                length: sPart.length,
	                valid: bValid
	            };
	        }
	    },
	    'k': {
	        name: 'hour1_24',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iHours = bUTC ? oDate.getUTCHours() : oDate.getHours();
	            var sHours = iHours === 0 ? '24' : String(iHours);
	            return sHours.padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iHours = parseInt(sPart);
	            bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (iHours == 24) {
	                iHours = 0;
	            }
	            if (oConfig.strict && iHours > 23) {
	                bValid = false;
	            }
	            return {
	                hour: iHours,
	                length: sPart.length,
	                valid: bValid
	            };
	        }
	    },
	    'K': {
	        name: 'hour0_11',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iHours = bUTC ? oDate.getUTCHours() : oDate.getHours();
	            var sHours = String(iHours > 11 ? iHours - 12 : iHours);
	            return sHours.padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iHours = parseInt(sPart);
	            bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (oConfig.strict && iHours > 11) {
	                bValid = false;
	            }
	            return {
	                hour: iHours,
	                length: sPart.length,
	                valid: bValid
	            };
	        }
	    },
	    'h': {
	        name: 'hour1_12',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iHours = bUTC ? oDate.getUTCHours() : oDate.getHours();
	            var sHours;
	            if (iHours > 12) {
	                sHours = String(iHours - 12);
	            } else if (iHours == 0) {
	                sHours = '12';
	            } else {
	                sHours = String(iHours);
	            }
	            return sHours.padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bPM = oConfig.dateValue.pm;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iHours = parseInt(sPart);
	            var bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (iHours == 12) {
	                iHours = 0;
	                bPM = bPM === undefined ? true : bPM;
	            }
	            if (oConfig.strict && iHours > 11) {
	                bValid = false;
	            }
	            return {
	                hour: iHours,
	                length: sPart.length,
	                pm: bPM,
	                valid: bValid
	            };
	        }
	    },
	    'm': {
	        name: 'minute',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iMinutes = bUTC ? oDate.getUTCMinutes() : oDate.getMinutes();
	            return String(iMinutes).padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iMinutes = parseInt(sPart);
	            bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (oConfig.strict && iMinutes > 59) {
	                bValid = false;
	            }
	            return {
	                length: sPart.length,
	                minute: iMinutes,
	                valid: bValid
	            };
	        }
	    },
	    's': {
	        name: 'second',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iSeconds = bUTC ? oDate.getUTCSeconds() : oDate.getSeconds();
	            return String(iSeconds).padStart(oField.digits, '0');
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var bValid;
	            var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
	            var iSeconds = parseInt(sPart);
	            bValid = oParseHelper.checkValid(oPart.type, sPart === '', oFormat);
	            if (oConfig.strict && iSeconds > 59) {
	                bValid = false;
	            }
	            return {
	                length: sPart.length,
	                second: iSeconds,
	                valid: bValid
	            };
	        }
	    },
	    'S': {
	        name: 'fractionalsecond',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iMilliseconds = bUTC ? oDate.getUTCMilliseconds() : oDate.getMilliseconds();
	            var sMilliseconds = String(iMilliseconds);
	            var sFractionalseconds = sMilliseconds.padStart(3, '0');
	            sFractionalseconds = sFractionalseconds.substr(0, oField.digits);
	            sFractionalseconds = sFractionalseconds.padEnd(oField.digits, '0');
	            return sFractionalseconds;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var sPart = oParseHelper.findNumbers(sValue, oPart.digits);
	            var iLength = sPart.length;
	            sPart = sPart.substr(0, 3);
	            sPart = sPart.padEnd(3, '0');
	            var iMilliseconds = parseInt(sPart);
	            return {
	                length: iLength,
	                millisecond: iMilliseconds
	            };
	        }
	    },
	    'z': {
	        name: 'timezoneGeneral',
	        format: function (oField, oDate, bUTC, oFormat) {
	            if (oField.digits > 3 && oDate.getTimezoneLong()) {
	                return oDate.getTimezoneLong();
	            } else if (oDate.getTimezoneShort()) {
	                return oDate.getTimezoneShort();
	            }
	            var sTimeZone = 'GMT';
	            var iTZOffset = Math.abs(oDate.getTimezoneOffset());
	            var bPositiveOffset = oDate.getTimezoneOffset() > 0;
	            var iHourOffset = Math.floor(iTZOffset / 60);
	            var iMinuteOffset = iTZOffset % 60;
	            if (!bUTC && iTZOffset != 0) {
	                sTimeZone += bPositiveOffset ? '-' : '+';
	                sTimeZone += String(iHourOffset).padStart(2, '0');
	                sTimeZone += ':';
	                sTimeZone += String(iMinuteOffset).padStart(2, '0');
	            } else {
	                sTimeZone += 'Z';
	            }
	            return sTimeZone;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            var iLength = 0;
	            var iTZDiff;
	            var oTZ = sValue.substring(0, 3);
	            if (oTZ === 'GMT' || oTZ === 'UTC') {
	                iLength = 3;
	            } else if (sValue.substring(0, 2) === 'UT') {
	                iLength = 2;
	            } else if (sValue.charAt(0) == 'Z') {
	                iLength = 1;
	                iTZDiff = 0;
	            } else {
	                return { error: 'cannot be parsed correcly by sap.ui.core.format.DateFormat: The given timezone is not supported!' };
	            }
	            if (sValue.charAt(0) != 'Z') {
	                var oParsedTZ = oParseHelper.parseTZ(sValue.substr(iLength), true);
	                iLength += oParsedTZ.length;
	                iTZDiff = oParsedTZ.tzDiff;
	            }
	            return {
	                length: iLength,
	                tzDiff: iTZDiff
	            };
	        }
	    },
	    'Z': {
	        name: 'timezoneRFC822',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iTZOffset = Math.abs(oDate.getTimezoneOffset());
	            var bPositiveOffset = oDate.getTimezoneOffset() > 0;
	            var iHourOffset = Math.floor(iTZOffset / 60);
	            var iMinuteOffset = iTZOffset % 60;
	            var sTimeZone = '';
	            if (!bUTC && iTZOffset != 0) {
	                sTimeZone += bPositiveOffset ? '-' : '+';
	                sTimeZone += String(iHourOffset).padStart(2, '0');
	                sTimeZone += String(iMinuteOffset).padStart(2, '0');
	            }
	            return sTimeZone;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            return oParseHelper.parseTZ(sValue, false);
	        }
	    },
	    'X': {
	        name: 'timezoneISO8601',
	        format: function (oField, oDate, bUTC, oFormat) {
	            var iTZOffset = Math.abs(oDate.getTimezoneOffset());
	            var bPositiveOffset = oDate.getTimezoneOffset() > 0;
	            var iHourOffset = Math.floor(iTZOffset / 60);
	            var iMinuteOffset = iTZOffset % 60;
	            var sTimeZone = '';
	            if (!bUTC && iTZOffset != 0) {
	                sTimeZone += bPositiveOffset ? '-' : '+';
	                sTimeZone += String(iHourOffset).padStart(2, '0');
	                sTimeZone += ':';
	                sTimeZone += String(iMinuteOffset).padStart(2, '0');
	            } else {
	                sTimeZone += 'Z';
	            }
	            return sTimeZone;
	        },
	        parse: function (sValue, oPart, oFormat, oConfig) {
	            if (sValue.charAt(0) == 'Z') {
	                return {
	                    length: 1,
	                    tzDiff: 0
	                };
	            } else {
	                return oParseHelper.parseTZ(sValue, true);
	            }
	        }
	    }
	};
	DateFormat.prototype._format = function (oJSDate, bUTC) {
	    if (this.oFormatOptions.relative) {
	        var sRes = this.formatRelative(oJSDate, bUTC, this.oFormatOptions.relativeRange);
	        if (sRes) {
	            return sRes;
	        }
	    }
	    var sCalendarType = this.oFormatOptions.calendarType;
	    var oDate = UniversalDate.getInstance(oJSDate, sCalendarType);
	    var aBuffer = [], oPart, sResult, sSymbol;
	    for (var i = 0; i < this.aFormatArray.length; i++) {
	        oPart = this.aFormatArray[i];
	        sSymbol = oPart.symbol || '';
	        aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this));
	    }
	    sResult = aBuffer.join('');
	    if (Core.getConfiguration().getOriginInfo()) {
	        sResult = new String(sResult);
	        sResult.originInfo = {
	            source: 'Common Locale Data Repository',
	            locale: this.oLocale.toString(),
	            style: this.oFormatOptions.style,
	            pattern: this.oFormatOptions.pattern
	        };
	    }
	    return sResult;
	};
	DateFormat.prototype.format = function (vJSDate, bUTC) {
	    var sCalendarType = this.oFormatOptions.calendarType, sResult;
	    if (bUTC === undefined) {
	        bUTC = this.oFormatOptions.UTC;
	    }
	    if (Array.isArray(vJSDate)) {
	        if (!this.oFormatOptions.interval) {
	            Log.error('Non-interval DateFormat can\'t format more than one date instance.');
	            return '';
	        }
	        if (vJSDate.length !== 2) {
	            Log.error('Interval DateFormat can only format with 2 date instances but ' + vJSDate.length + ' is given.');
	            return '';
	        }
	        if (this.oFormatOptions.singleIntervalValue) {
	            if (vJSDate[0] === null) {
	                Log.error('First date instance which is passed to the interval DateFormat shouldn\'t be null.');
	                return '';
	            }
	            if (vJSDate[1] === null) {
	                sResult = this._format(vJSDate[0], bUTC);
	            }
	        }
	        if (sResult === undefined) {
	            var bValid = vJSDate.every(function (oJSDate) {
	                return oJSDate && !isNaN(oJSDate.getTime());
	            });
	            if (!bValid) {
	                Log.error('At least one date instance which is passed to the interval DateFormat isn\'t valid.');
	                return '';
	            }
	            sResult = this._formatInterval(vJSDate, bUTC);
	        }
	    } else {
	        if (!vJSDate || isNaN(vJSDate.getTime())) {
	            Log.error('The given date instance isn\'t valid.');
	            return '';
	        }
	        if (this.oFormatOptions.interval) {
	            Log.error('Interval DateFormat expects an array with two dates for the first argument but only one date is given.');
	            return '';
	        }
	        sResult = this._format(vJSDate, bUTC);
	    }
	    if (sCalendarType == CalendarType$1.Japanese && this.oLocale.getLanguage() === 'ja') {
	        sResult = sResult.replace(/(^|[^\d])1年/g, '$1元年');
	    }
	    return sResult;
	};
	DateFormat.prototype._formatInterval = function (aJSDates, bUTC) {
	    var sCalendarType = this.oFormatOptions.calendarType;
	    var oFromDate = UniversalDate.getInstance(aJSDates[0], sCalendarType);
	    var oToDate = UniversalDate.getInstance(aJSDates[1], sCalendarType);
	    var oDate;
	    var oPart;
	    var sSymbol;
	    var aBuffer = [];
	    var sPattern;
	    var aFormatArray = [];
	    var oDiffField = this._getGreatestDiffField([
	        oFromDate,
	        oToDate
	    ], bUTC);
	    if (!oDiffField) {
	        return this._format(aJSDates[0], bUTC);
	    }
	    if (this.oFormatOptions.format) {
	        sPattern = this.oLocaleData.getCustomIntervalPattern(this.oFormatOptions.format, oDiffField, sCalendarType);
	    } else {
	        sPattern = this.oLocaleData.getCombinedIntervalPattern(this.oFormatOptions.pattern, sCalendarType);
	    }
	    aFormatArray = this.parseCldrDatePattern(sPattern);
	    oDate = oFromDate;
	    for (var i = 0; i < aFormatArray.length; i++) {
	        oPart = aFormatArray[i];
	        sSymbol = oPart.symbol || '';
	        if (oPart.repeat) {
	            oDate = oToDate;
	        }
	        aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this));
	    }
	    return aBuffer.join('');
	};
	var mFieldToGroup = {
	    Era: 'Era',
	    FullYear: 'Year',
	    Quarter: 'Quarter',
	    Month: 'Month',
	    Week: 'Week',
	    Date: 'Day',
	    DayPeriod: 'DayPeriod',
	    Hours: 'Hour',
	    Minutes: 'Minute',
	    Seconds: 'Second'
	};
	DateFormat.prototype._getGreatestDiffField = function (aDates, bUTC) {
	    var bDiffFound = false, mDiff = {};
	    this.aIntervalCompareFields.forEach(function (sField) {
	        var sGetterPrefix = 'get' + (bUTC ? 'UTC' : ''), sMethodName = sGetterPrefix + sField, sFieldGroup = mFieldToGroup[sField], vFromValue = aDates[0][sMethodName].apply(aDates[0]), vToValue = aDates[1][sMethodName].apply(aDates[1]);
	        if (!fnEqual(vFromValue, vToValue)) {
	            bDiffFound = true;
	            mDiff[sFieldGroup] = true;
	        }
	    });
	    if (bDiffFound) {
	        return mDiff;
	    }
	    return null;
	};
	DateFormat.prototype._parse = function (sValue, aFormatArray, bUTC, bStrict) {
	    var iIndex = 0, oPart, sSubValue, oResult;
	    var oDateValue = { valid: true };
	    var oParseConf = {
	        formatArray: aFormatArray,
	        dateValue: oDateValue,
	        strict: bStrict
	    };
	    for (var i = 0; i < aFormatArray.length; i++) {
	        sSubValue = sValue.substr(iIndex);
	        oPart = aFormatArray[i];
	        oParseConf.index = i;
	        oResult = this.oSymbols[oPart.symbol || ''].parse(sSubValue, oPart, this, oParseConf) || {};
	        oDateValue = fnExtend(oDateValue, oResult);
	        if (oResult.valid === false) {
	            break;
	        }
	        iIndex += oResult.length || 0;
	    }
	    oDateValue.index = iIndex;
	    if (oDateValue.pm) {
	        oDateValue.hour += 12;
	    }
	    if (oDateValue.dayNumberOfWeek === undefined && oDateValue.dayOfWeek !== undefined) {
	        oDateValue.dayNumberOfWeek = this._adaptDayOfWeek(oDateValue.dayOfWeek);
	    }
	    if (oDateValue.quarter !== undefined && oDateValue.month === undefined && oDateValue.day === undefined) {
	        oDateValue.month = 3 * oDateValue.quarter;
	        oDateValue.day = 1;
	    }
	    return oDateValue;
	};
	DateFormat.prototype._parseInterval = function (sValue, sCalendarType, bUTC, bStrict) {
	    var aDateValues, iRepeat, oDateValue;
	    this.intervalPatterns.some(function (sPattern) {
	        var aFormatArray = this.parseCldrDatePattern(sPattern);
	        iRepeat = undefined;
	        for (var i = 0; i < aFormatArray.length; i++) {
	            if (aFormatArray[i].repeat) {
	                iRepeat = i;
	                break;
	            }
	        }
	        if (iRepeat === undefined) {
	            oDateValue = this._parse(sValue, aFormatArray, bUTC, bStrict);
	            if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
	                oDateValue.valid = false;
	            }
	            if (oDateValue.valid === false) {
	                return;
	            }
	            aDateValues = [
	                oDateValue,
	                oDateValue
	            ];
	            return true;
	        } else {
	            aDateValues = [];
	            oDateValue = this._parse(sValue, aFormatArray.slice(0, iRepeat), bUTC, bStrict);
	            if (oDateValue.valid === false) {
	                return;
	            }
	            aDateValues.push(oDateValue);
	            var iLength = oDateValue.index;
	            oDateValue = this._parse(sValue.substring(iLength), aFormatArray.slice(iRepeat), bUTC, bStrict);
	            if (oDateValue.index === 0 || oDateValue.index + iLength < sValue.length) {
	                oDateValue.valid = false;
	            }
	            if (oDateValue.valid === false) {
	                return;
	            }
	            aDateValues.push(oDateValue);
	            return true;
	        }
	    }.bind(this));
	    return aDateValues;
	};
	var fnCreateDate = function (oDateValue, sCalendarType, bUTC, bStrict) {
	    var oDate, iYear = typeof oDateValue.year === 'number' ? oDateValue.year : 1970;
	    if (oDateValue.valid) {
	        if (bUTC || oDateValue.tzDiff !== undefined) {
	            oDate = UniversalDate.getInstance(new Date(0), sCalendarType);
	            oDate.setUTCEra(oDateValue.era || UniversalDate.getCurrentEra(sCalendarType));
	            oDate.setUTCFullYear(iYear);
	            oDate.setUTCMonth(oDateValue.month || 0);
	            oDate.setUTCDate(oDateValue.day || 1);
	            oDate.setUTCHours(oDateValue.hour || 0);
	            oDate.setUTCMinutes(oDateValue.minute || 0);
	            oDate.setUTCSeconds(oDateValue.second || 0);
	            oDate.setUTCMilliseconds(oDateValue.millisecond || 0);
	            if (bStrict && (oDateValue.day || 1) !== oDate.getUTCDate()) {
	                oDateValue.valid = false;
	                oDate = undefined;
	            } else {
	                if (oDateValue.tzDiff) {
	                    oDate.setUTCMinutes((oDateValue.minute || 0) + oDateValue.tzDiff);
	                }
	                if (oDateValue.week !== undefined && (oDateValue.month === undefined || oDateValue.day === undefined)) {
	                    oDate.setUTCWeek({
	                        year: oDateValue.weekYear || oDateValue.year,
	                        week: oDateValue.week
	                    });
	                    if (oDateValue.dayNumberOfWeek !== undefined) {
	                        oDate.setUTCDate(oDate.getUTCDate() + oDateValue.dayNumberOfWeek - 1);
	                    }
	                }
	            }
	        } else {
	            oDate = UniversalDate.getInstance(new Date(1970, 0, 1, 0, 0, 0), sCalendarType);
	            oDate.setEra(oDateValue.era || UniversalDate.getCurrentEra(sCalendarType));
	            oDate.setFullYear(iYear);
	            oDate.setMonth(oDateValue.month || 0);
	            oDate.setDate(oDateValue.day || 1);
	            oDate.setHours(oDateValue.hour || 0);
	            oDate.setMinutes(oDateValue.minute || 0);
	            oDate.setSeconds(oDateValue.second || 0);
	            oDate.setMilliseconds(oDateValue.millisecond || 0);
	            if (bStrict && (oDateValue.day || 1) !== oDate.getDate()) {
	                oDateValue.valid = false;
	                oDate = undefined;
	            } else if (oDateValue.week !== undefined && (oDateValue.month === undefined || oDateValue.day === undefined)) {
	                oDate.setWeek({
	                    year: oDateValue.weekYear || oDateValue.year,
	                    week: oDateValue.week
	                });
	                if (oDateValue.dayNumberOfWeek !== undefined) {
	                    oDate.setDate(oDate.getDate() + oDateValue.dayNumberOfWeek - 1);
	                }
	            }
	        }
	        if (oDateValue.valid) {
	            oDate = oDate.getJSDate();
	            return oDate;
	        }
	    }
	    return null;
	};
	function mergeWithoutOverwrite(object1, object2) {
	    if (object1 === object2) {
	        return object1;
	    }
	    var oMergedObject = {};
	    Object.keys(object1).forEach(function (sKey) {
	        oMergedObject[sKey] = object1[sKey];
	    });
	    Object.keys(object2).forEach(function (sKey) {
	        if (!oMergedObject.hasOwnProperty(sKey)) {
	            oMergedObject[sKey] = object2[sKey];
	        }
	    });
	    return oMergedObject;
	}
	function isValidDateRange(oStartDate, oEndDate) {
	    if (oStartDate.getTime() > oEndDate.getTime()) {
	        return false;
	    }
	    return true;
	}
	DateFormat.prototype.parse = function (sValue, bUTC, bStrict) {
	    sValue = sValue == null ? '' : String(sValue).trim();
	    var oDateValue;
	    var sCalendarType = this.oFormatOptions.calendarType;
	    if (bUTC === undefined) {
	        bUTC = this.oFormatOptions.UTC;
	    }
	    if (bStrict === undefined) {
	        bStrict = this.oFormatOptions.strictParsing;
	    }
	    if (sCalendarType == CalendarType$1.Japanese && this.oLocale.getLanguage() === 'ja') {
	        sValue = sValue.replace(/元年/g, '1年');
	    }
	    if (!this.oFormatOptions.interval) {
	        var oJSDate = this.parseRelative(sValue, bUTC);
	        if (oJSDate) {
	            return oJSDate;
	        }
	        oDateValue = this._parse(sValue, this.aFormatArray, bUTC, bStrict);
	        if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
	            oDateValue.valid = false;
	        }
	        oJSDate = fnCreateDate(oDateValue, sCalendarType, bUTC, bStrict);
	        if (oJSDate) {
	            return oJSDate;
	        }
	    } else {
	        var aDateValues = this._parseInterval(sValue, sCalendarType, bUTC, bStrict);
	        var oJSDate1, oJSDate2;
	        if (aDateValues && aDateValues.length == 2) {
	            var oDateValue1 = mergeWithoutOverwrite(aDateValues[0], aDateValues[1]);
	            var oDateValue2 = mergeWithoutOverwrite(aDateValues[1], aDateValues[0]);
	            oJSDate1 = fnCreateDate(oDateValue1, sCalendarType, bUTC, bStrict);
	            oJSDate2 = fnCreateDate(oDateValue2, sCalendarType, bUTC, bStrict);
	            if (oJSDate1 && oJSDate2) {
	                if (this.oFormatOptions.singleIntervalValue && oJSDate1.getTime() === oJSDate2.getTime()) {
	                    return [
	                        oJSDate1,
	                        null
	                    ];
	                }
	                var bValid = isValidDateRange(oJSDate1, oJSDate2);
	                if (bStrict && !bValid) {
	                    Log.error('StrictParsing: Invalid date range. The given end date is before the start date.');
	                    return [
	                        null,
	                        null
	                    ];
	                }
	                return [
	                    oJSDate1,
	                    oJSDate2
	                ];
	            }
	        }
	    }
	    if (!this.bIsFallback) {
	        var vDate;
	        this.aFallbackFormats.every(function (oFallbackFormat) {
	            vDate = oFallbackFormat.parse(sValue, bUTC, bStrict);
	            if (Array.isArray(vDate)) {
	                return !(vDate[0] && vDate[1]);
	            } else {
	                return !vDate;
	            }
	        });
	        return vDate;
	    }
	    if (!this.oFormatOptions.interval) {
	        return null;
	    } else {
	        return [
	            null,
	            null
	        ];
	    }
	};
	DateFormat.prototype.parseCldrDatePattern = function (sPattern) {
	    if (mCldrDatePattern[sPattern]) {
	        return mCldrDatePattern[sPattern];
	    }
	    var aFormatArray = [], i, bQuoted = false, oCurrentObject = null, sState = '', sNewState = '', mAppeared = {}, bIntervalStartFound = false;
	    for (i = 0; i < sPattern.length; i++) {
	        var sCurChar = sPattern.charAt(i), sNextChar, sPrevChar, sPrevPrevChar;
	        if (bQuoted) {
	            if (sCurChar == '\'') {
	                sPrevChar = sPattern.charAt(i - 1);
	                sPrevPrevChar = sPattern.charAt(i - 2);
	                sNextChar = sPattern.charAt(i + 1);
	                if (sPrevChar == '\'' && sPrevPrevChar != '\'') {
	                    bQuoted = false;
	                } else if (sNextChar == '\'') {
	                    i += 1;
	                } else {
	                    bQuoted = false;
	                    continue;
	                }
	            }
	            if (sState == 'text') {
	                oCurrentObject.value += sCurChar;
	            } else {
	                oCurrentObject = {
	                    type: 'text',
	                    value: sCurChar
	                };
	                aFormatArray.push(oCurrentObject);
	                sState = 'text';
	            }
	        } else {
	            if (sCurChar == '\'') {
	                bQuoted = true;
	            } else if (this.oSymbols[sCurChar]) {
	                sNewState = this.oSymbols[sCurChar].name;
	                if (sState == sNewState) {
	                    oCurrentObject.digits++;
	                } else {
	                    oCurrentObject = {
	                        type: sNewState,
	                        symbol: sCurChar,
	                        digits: 1
	                    };
	                    aFormatArray.push(oCurrentObject);
	                    sState = sNewState;
	                    if (!bIntervalStartFound) {
	                        if (mAppeared[sNewState]) {
	                            oCurrentObject.repeat = true;
	                            bIntervalStartFound = true;
	                        } else {
	                            mAppeared[sNewState] = true;
	                        }
	                    }
	                }
	            } else {
	                if (sState == 'text') {
	                    oCurrentObject.value += sCurChar;
	                } else {
	                    oCurrentObject = {
	                        type: 'text',
	                        value: sCurChar
	                    };
	                    aFormatArray.push(oCurrentObject);
	                    sState = 'text';
	                }
	            }
	        }
	    }
	    mCldrDatePattern[sPattern] = aFormatArray;
	    return aFormatArray;
	};
	DateFormat.prototype.parseRelative = function (sValue, bUTC) {
	    var aPatterns, oEntry, rPattern, oResult, iValue;
	    if (!sValue) {
	        return null;
	    }
	    aPatterns = this.oLocaleData.getRelativePatterns(this.aRelativeParseScales, this.oFormatOptions.relativeStyle);
	    for (var i = 0; i < aPatterns.length; i++) {
	        oEntry = aPatterns[i];
	        rPattern = new RegExp('^\\s*' + oEntry.pattern.replace(/\{0\}/, '(\\d+)') + '\\s*$', 'i');
	        oResult = rPattern.exec(sValue);
	        if (oResult) {
	            if (oEntry.value !== undefined) {
	                return computeRelativeDate(oEntry.value, oEntry.scale);
	            } else {
	                iValue = parseInt(oResult[1]);
	                return computeRelativeDate(iValue * oEntry.sign, oEntry.scale);
	            }
	        }
	    }
	    function computeRelativeDate(iDiff, sScale) {
	        var iToday, oToday = new Date(), oJSDate;
	        if (bUTC) {
	            iToday = oToday.getTime();
	        } else {
	            iToday = Date.UTC(oToday.getFullYear(), oToday.getMonth(), oToday.getDate(), oToday.getHours(), oToday.getMinutes(), oToday.getSeconds(), oToday.getMilliseconds());
	        }
	        oJSDate = new Date(iToday);
	        switch (sScale) {
	        case 'second':
	            oJSDate.setUTCSeconds(oJSDate.getUTCSeconds() + iDiff);
	            break;
	        case 'minute':
	            oJSDate.setUTCMinutes(oJSDate.getUTCMinutes() + iDiff);
	            break;
	        case 'hour':
	            oJSDate.setUTCHours(oJSDate.getUTCHours() + iDiff);
	            break;
	        case 'day':
	            oJSDate.setUTCDate(oJSDate.getUTCDate() + iDiff);
	            break;
	        case 'week':
	            oJSDate.setUTCDate(oJSDate.getUTCDate() + iDiff * 7);
	            break;
	        case 'month':
	            oJSDate.setUTCMonth(oJSDate.getUTCMonth() + iDiff);
	            break;
	        case 'quarter':
	            oJSDate.setUTCMonth(oJSDate.getUTCMonth() + iDiff * 3);
	            break;
	        case 'year':
	            oJSDate.setUTCFullYear(oJSDate.getUTCFullYear() + iDiff);
	            break;
	        }
	        if (bUTC) {
	            return oJSDate;
	        } else {
	            return new Date(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate(), oJSDate.getUTCHours(), oJSDate.getUTCMinutes(), oJSDate.getUTCSeconds(), oJSDate.getUTCMilliseconds());
	        }
	    }
	};
	DateFormat.prototype.formatRelative = function (oJSDate, bUTC, aRange) {
	    var oToday = new Date(), oDateUTC, sScale = this.oFormatOptions.relativeScale || 'day', iDiff, sPattern, iDiffSeconds;
	    iDiffSeconds = (oJSDate.getTime() - oToday.getTime()) / 1000;
	    if (this.oFormatOptions.relativeScale == 'auto') {
	        sScale = this._getScale(iDiffSeconds, this.aRelativeScales);
	    }
	    if (!aRange) {
	        aRange = this._mRanges[sScale];
	    }
	    if (sScale == 'year' || sScale == 'month' || sScale == 'day') {
	        oToday = new Date(Date.UTC(oToday.getFullYear(), oToday.getMonth(), oToday.getDate()));
	        oDateUTC = new Date(0);
	        if (bUTC) {
	            oDateUTC.setUTCFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
	        } else {
	            oDateUTC.setUTCFullYear(oJSDate.getFullYear(), oJSDate.getMonth(), oJSDate.getDate());
	        }
	        oJSDate = oDateUTC;
	    }
	    iDiff = this._getDifference(sScale, [
	        oToday,
	        oJSDate
	    ]);
	    if (this.oFormatOptions.relativeScale != 'auto' && (iDiff < aRange[0] || iDiff > aRange[1])) {
	        return null;
	    }
	    sPattern = this.oLocaleData.getRelativePattern(sScale, iDiff, iDiffSeconds > 0, this.oFormatOptions.relativeStyle);
	    return fnFormatMessage(sPattern, [Math.abs(iDiff)]);
	};
	DateFormat.prototype._mRanges = {
	    second: [
	        -60,
	        60
	    ],
	    minute: [
	        -60,
	        60
	    ],
	    hour: [
	        -24,
	        24
	    ],
	    day: [
	        -6,
	        6
	    ],
	    week: [
	        -4,
	        4
	    ],
	    month: [
	        -12,
	        12
	    ],
	    year: [
	        -10,
	        10
	    ]
	};
	DateFormat.prototype._mScales = {
	    second: 1,
	    minute: 60,
	    hour: 3600,
	    day: 86400,
	    week: 604800,
	    month: 2592000,
	    quarter: 7776000,
	    year: 31536000
	};
	DateFormat.prototype._getScale = function (iDiffSeconds, aScales) {
	    var sScale, sTestScale;
	    iDiffSeconds = Math.abs(iDiffSeconds);
	    for (var i = 0; i < aScales.length; i++) {
	        sTestScale = aScales[i];
	        if (iDiffSeconds >= this._mScales[sTestScale]) {
	            sScale = sTestScale;
	            break;
	        }
	    }
	    if (!sScale) {
	        sScale = aScales[aScales.length - 1];
	    }
	    return sScale;
	};
	function cutDateFields(oDate, iStartIndex) {
	    var aFields = [
	            'FullYear',
	            'Month',
	            'Date',
	            'Hours',
	            'Minutes',
	            'Seconds',
	            'Milliseconds'
	        ], sMethodName;
	    for (var i = iStartIndex; i < aFields.length; i++) {
	        sMethodName = 'set' + aFields[iStartIndex];
	        oDate[sMethodName].apply(oDate, [0]);
	    }
	}
	var mRelativeDiffs = {
	    year: function (oFromDate, oToDate) {
	        return oToDate.getFullYear() - oFromDate.getFullYear();
	    },
	    month: function (oFromDate, oToDate) {
	        return oToDate.getMonth() - oFromDate.getMonth() + this.year(oFromDate, oToDate) * 12;
	    },
	    week: function (oFromDate, oToDate, oFormat) {
	        var iFromDay = oFormat._adaptDayOfWeek(oFromDate.getDay());
	        var iToDay = oFormat._adaptDayOfWeek(oToDate.getDay());
	        cutDateFields(oFromDate, 3);
	        cutDateFields(oToDate, 3);
	        return (oToDate.getTime() - oFromDate.getTime() - (iToDay - iFromDay) * oFormat._mScales.day * 1000) / (oFormat._mScales.week * 1000);
	    },
	    day: function (oFromDate, oToDate, oFormat) {
	        cutDateFields(oFromDate, 3);
	        cutDateFields(oToDate, 3);
	        return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.day * 1000);
	    },
	    hour: function (oFromDate, oToDate, oFormat) {
	        cutDateFields(oFromDate, 4);
	        cutDateFields(oToDate, 4);
	        return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.hour * 1000);
	    },
	    minute: function (oFromDate, oToDate, oFormat) {
	        cutDateFields(oFromDate, 5);
	        cutDateFields(oToDate, 5);
	        return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.minute * 1000);
	    },
	    second: function (oFromDate, oToDate, oFormat) {
	        cutDateFields(oFromDate, 6);
	        cutDateFields(oToDate, 6);
	        return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.second * 1000);
	    }
	};
	DateFormat.prototype._adaptDayOfWeek = function (iDayOfWeek) {
	    var iFirstDayOfWeek = LocaleData.getInstance(Core.getConfiguration().getFormatSettings().getFormatLocale()).getFirstDayOfWeek();
	    var iDayNumberOfWeek = iDayOfWeek - (iFirstDayOfWeek - 1);
	    if (iDayNumberOfWeek <= 0) {
	        iDayNumberOfWeek += 7;
	    }
	    return iDayNumberOfWeek;
	};
	DateFormat.prototype._getDifference = function (sScale, aDates) {
	    var oFromDate = aDates[0];
	    var oToDate = aDates[1];
	    return Math.round(mRelativeDiffs[sScale](oFromDate, oToDate, this));
	};
	DateFormat.prototype.getAllowedCharacters = function (aFormatArray) {
	    if (this.oFormatOptions.relative) {
	        return '';
	    }
	    var sAllowedCharacters = '';
	    var bNumbers = false;
	    var bAll = false;
	    var oPart;
	    for (var i = 0; i < aFormatArray.length; i++) {
	        oPart = aFormatArray[i];
	        switch (oPart.type) {
	        case 'text':
	            if (sAllowedCharacters.indexOf(oPart.value) < 0) {
	                sAllowedCharacters += oPart.value;
	            }
	            break;
	        case 'day':
	        case 'year':
	        case 'weekYear':
	        case 'dayNumberOfWeek':
	        case 'weekInYear':
	        case 'hour0_23':
	        case 'hour1_24':
	        case 'hour0_11':
	        case 'hour1_12':
	        case 'minute':
	        case 'second':
	        case 'fractionalsecond':
	            if (!bNumbers) {
	                sAllowedCharacters += '0123456789';
	                bNumbers = true;
	            }
	            break;
	        case 'month':
	        case 'monthStandalone':
	            if (oPart.digits < 3) {
	                if (!bNumbers) {
	                    sAllowedCharacters += '0123456789';
	                    bNumbers = true;
	                }
	            } else {
	                bAll = true;
	            }
	            break;
	        default:
	            bAll = true;
	            break;
	        }
	    }
	    if (bAll) {
	        sAllowedCharacters = '';
	    }
	    return sAllowedCharacters;
	};

	class CalendarDate {
		constructor() {
			let aArgs = arguments, // eslint-disable-line
				oJSDate,
				oNow,
				sCalendarType;

			switch (aArgs.length) {
			case 0: // defaults to the current date
				oNow = new Date();
				return this.constructor(oNow.getFullYear(), oNow.getMonth(), oNow.getDate());

			case 1: // CalendarDate
			case 2: // CalendarDate, sCalendarType
				if (!(aArgs[0] instanceof CalendarDate)) {
					throw new Error("Invalid arguments: the first argument must be of type sap.ui.unified.calendar.CalendarDate.");
				}
				sCalendarType = aArgs[1] ? aArgs[1] : aArgs[0]._oUDate.sCalendarType;
				// Use source.valueOf() (returns the same point of time regardless calendar type) instead of
				// source's getters to avoid non-gregorian Year, Month and Date may be used to construct a Gregorian date
				oJSDate = new Date(aArgs[0].valueOf());

				// Make this date really local. Now getters are safe.
				oJSDate.setFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
				oJSDate.setHours(oJSDate.getUTCHours(), oJSDate.getUTCMinutes(), oJSDate.getUTCSeconds(), oJSDate.getUTCMilliseconds());

				this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
				break;

			case 3: // year, month, date
			case 4: // year, month, date, sCalendarType
				checkNumericLike(aArgs[0], `Invalid year: ${aArgs[0]}`);
				checkNumericLike(aArgs[1], `Invalid month: ${aArgs[1]}`);
				checkNumericLike(aArgs[2], `Invalid date: ${aArgs[2]}`);

				oJSDate = new Date(0, 0, 1);
				oJSDate.setFullYear(aArgs[0], aArgs[1], aArgs[2]); // 2 digits year is not supported. If so, it is considered as full year as well.

				if (aArgs[3]) {
					sCalendarType = aArgs[3];
				}
				this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
				break;

			default:
				throw new Error(`${"Invalid arguments. Accepted arguments are: 1) oCalendarDate, (optional)calendarType"
				+ "or 2) year, month, date, (optional) calendarType"}${aArgs}`);
			}
		}

		getYear() {
			return this._oUDate.getUTCFullYear();
		}

		setYear(year) {
			checkNumericLike(year, `Invalid year: ${year}`);
			this._oUDate.setUTCFullYear(year);
			return this;
		}

		getMonth() {
			return this._oUDate.getUTCMonth();
		}

		/**
		 * Sets the given month as ordinal month of the year.
		 * @param {int} month An integer between 0 and 11, representing the months January through December( or their
		 * equivalent month names for the given calendar).
		 * If the specified value is is outside of the expected range, this method attempts to update the date information
		 * accordingly. For example, if 12 is given as a month, the year will be incremented by 1, and 1 will be used for month.
		 * @param {int} [date] An integer between 1 and 31, representing the day of the month, but other values are allowed.
		 * 0 will result in the previous month's last day.
		 * -1 will result in the day before the previous month's last day.
		 * 32 will result in:
		 * - first day of the next month if the current month has 31 days.
		 * - second day of the next month if the current month has 30 days.
		 * Other value will result in adding or subtracting days according to the given value.
		 * @returns {sap.ui.unified.calendar.CalendarDate} <code>this</code> for method chaining.
		 */
		setMonth(month, date) {
			checkNumericLike(month, `Invalid month: ${month}`);
			if (date || date === 0) {
				checkNumericLike(date, `Invalid date: ${date}`);
				this._oUDate.setUTCMonth(month, date);
			} else {
				this._oUDate.setUTCMonth(month);
			}
			return this;
		}

		getDate() {
			return this._oUDate.getUTCDate();
		}

		setDate(date) {
			checkNumericLike(date, `Invalid date: ${date}`);
			this._oUDate.setUTCDate(date);
			return this;
		}

		getDay() {
			return this._oUDate.getUTCDay();
		}

		getCalendarType() {
			return this._oUDate.sCalendarType;
		}

		isBefore(oCalendarDate) {
			checkCalendarDate(oCalendarDate);
			return this.valueOf() < oCalendarDate.valueOf();
		}

		isAfter(oCalendarDate) {
			checkCalendarDate(oCalendarDate);
			return this.valueOf() > oCalendarDate.valueOf();
		}

		isSameOrBefore(oCalendarDate) {
			checkCalendarDate(oCalendarDate);
			return this.valueOf() <= oCalendarDate.valueOf();
		}

		isSameOrAfter(oCalendarDate) {
			checkCalendarDate(oCalendarDate);
			return this.valueOf() >= oCalendarDate.valueOf();
		}

		isSame(oCalendarDate) {
			checkCalendarDate(oCalendarDate);
			return this.valueOf() === oCalendarDate.valueOf();
		}

		toLocalJSDate() {
			// Use this._oUDate.getTime()(returns the same point of time regardless calendar type)  instead of
			// this._oUDate's getters to avoid non-gregorian Year, Month and Date to be used to construct a Gregorian date
			const oLocalDate = new Date(this._oUDate.getTime());

			// Make this date really local. Now getters are safe.
			oLocalDate.setFullYear(oLocalDate.getUTCFullYear(), oLocalDate.getUTCMonth(), oLocalDate.getUTCDate());
			oLocalDate.setHours(0, 0, 0, 0);

			return oLocalDate;
		}

		toUTCJSDate() {
			// Use this._oUDate.getTime()(returns the same point of time regardless calendar type)  instead of
			// this._oUDate's getters to avoid non-gregorian Year, Month and Date to be used to construct a Gregorian date
			const oUTCDate = new Date(this._oUDate.getTime());
			oUTCDate.setUTCHours(0, 0, 0, 0);

			return oUTCDate;
		}

		toString() {
			return `${this._oUDate.sCalendarType}: ${this.getYear()}/${this.getMonth() + 1}/${this.getDate()}`;
		}

		valueOf() {
			return this._oUDate.getTime();
		}

		static fromLocalJSDate(oJSDate, sCalendarType) {
			// Cross frame check for a date should be performed here otherwise setDateValue would fail in OPA tests
			// because Date object in the test is different than the Date object in the application (due to the iframe).
			// We can use jQuery.type or this method:
			function isValidDate(date) {
				return date && Object.prototype.toString.call(date) === "[object Date]" && !isNaN(date); // eslint-disable-line
			}
			if (!isValidDate(oJSDate)) {
				throw new Error(`Date parameter must be a JavaScript Date object: [${oJSDate}].`);
			}
			return new CalendarDate(oJSDate.getFullYear(), oJSDate.getMonth(), oJSDate.getDate(), sCalendarType);
		}

		static fromTimestamp(iTimestamp, sCalendarType) {
			const oCalDate = new CalendarDate(0, 0, 1);
			oCalDate._oUDate = UniversalDate.getInstance(new Date(iTimestamp), sCalendarType);
			return oCalDate;
		}
	}

	function createUniversalUTCDate(oDate, sCalendarType) {
		if (sCalendarType) {
			return UniversalDate.getInstance(createUTCDate(oDate), sCalendarType);
		}
		return new UniversalDate(createUTCDate(oDate).getTime());
	}

	/**
	 * Creates a JavaScript UTC Date corresponding to the given JavaScript Date.
	 * @param {Date} oDate JavaScript date object. Time related information is cut.
	 * @returns {Date} JavaScript date created from the date object, but this time considered as UTC date information.
	 */
	function createUTCDate(oDate) {
		const oUTCDate = new Date(Date.UTC(0, 0, 1));

		oUTCDate.setUTCFullYear(oDate.getFullYear(), oDate.getMonth(), oDate.getDate());

		return oUTCDate;
	}

	function checkCalendarDate(oCalendarDate) {
		if (!(oCalendarDate instanceof CalendarDate)) {
			throw new Error(`Invalid calendar date: [${oCalendarDate}]. Expected: sap.ui.unified.calendar.CalendarDate`);
		}
	}

	/**
	 * Verifies the given value is numeric like, i.e. 3, "3" and throws an error if it is not.
	 * @param {any} value The value of any type to check. If null or undefined, this method throws an error.
	 * @param {string} message The message to be used if an error is to be thrown
	 * @throws will throw an error if the value is null or undefined or is not like a number
	 */
	function checkNumericLike(value, message) {
		if (value === undefined || value === Infinity || isNaN(value)) { // eslint-disable-line
			throw message;
		}
	}

	const name$8 = "appointment-2";
	const pathData$8 = "M32 481V65q0-14 9.5-23T64 33h64V1h32v32h192V1h32v32h64q14 0 23 9t9 23v416q0 14-9 23t-23 9H64q-13 0-22.5-9T32 481zm416 0V129H64v352h384zM256 193q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM128 321q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm256-128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm0 128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm-128 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM96 225q0-14 9-23t23-9 23 9 9 23-9 23-23 9-23-9-9-23zM384 97V65h-32v32h32zM128 65v32h32V65h-32z";
	const ltr$8 = false;
	const collection$8 = "SAP-icons";

	registerIcon(name$8, { pathData: pathData$8, ltr: ltr$8, collection: collection$8});

	const CalendarSelections = {
		Single: "Single",
		Multiple: "Multiple",
		Range: "Range",
	};

	class CalendarSelection extends DataType {
		static isValid(value) {
			return !!CalendarSelections[value];
		}
	}

	CalendarSelection.generateTypeAccessors(CalendarSelections);

	const getMinCalendarDate = primaryCalendarType => {
		const minDate = new CalendarDate(1, 0, 1, primaryCalendarType);
		minDate.setYear(1);
		minDate.setMonth(0);
		minDate.setDate(1);
		return minDate.valueOf();
	};

	const getMaxCalendarDate = primaryCalendarType => {
		const maxDate = new CalendarDate(1, 0, 1, primaryCalendarType);
		maxDate.setYear(9999);
		maxDate.setMonth(11);
		const tempDate = new CalendarDate(maxDate, primaryCalendarType);
		tempDate.setDate(1);
		tempDate.setMonth(tempDate.getMonth() + 1, 0);
		maxDate.setDate(tempDate.getDate());// 31st for Gregorian Calendar
		return maxDate.valueOf();
	};

	/**
	 * @public
	 */
	const metadata$h = {
		properties: /** @lends  sap.ui.webcomponents.main.MonthPicker.prototype */ {
			/**
			 * A UNIX timestamp - seconds since 00:00:00 UTC on Jan 1, 1970.
			 * @type {Integer}
			 * @public
			 */
			timestamp: {
				type: Integer,
			},

			/**
			 * Sets a calendar type used for display.
			 * If not set, the calendar type of the global configuration is used.
			 * @type {CalendarType}
			 * @public
			 */
			primaryCalendarType: {
				type: CalendarType,
			},

			/**
			 * Determines the мinimum date available for selection.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @since 1.0.0-rc.6
			 * @public
			 */
			minDate: {
				type: String,
			},

			/**
			 * Determines the maximum date available for selection.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @since 1.0.0-rc.6
			 * @public
			 */
			maxDate: {
				type: String,
			},

			/**
			 * Determines the format, displayed in the input field.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			formatPattern: {
				type: String,
			},

			/**
			 * Defines the selected dates as UTC timestamps.
			 * @type {Array}
			 * @public
			 */
			selectedDates: {
				type: Integer,
				multiple: true,
			},
		},
	};

	/**
	 * Base picker component.
	 *
	 * @class
	 *
	 * Abstract class for Calendar, DayPicker, MonthPicker and YearPicker
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.PickerBase
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-monthpicker
	 * @public
	 */
	class PickerBase extends UI5Element {
		static get metadata() {
			return metadata$h;
		}

		static get render() {
			return litRender;
		}

		constructor() {
			super();

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		get _timestamp() {
			return this.timestamp !== undefined ? this.timestamp : Math.floor(new Date().getTime() / 1000);
		}

		get _localDate() {
			return new Date(this._timestamp * 1000);
		}

		get _calendarDate() {
			return CalendarDate.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);
		}

		get _month() {
			return this._calendarDate.getMonth();
		}

		get _year() {
			return this._calendarDate.getYear();
		}

		get _primaryCalendarType() {
			const localeData = getCachedLocaleDataInstance(getLocale());
			return this.primaryCalendarType || getCalendarType$1() || localeData.getPreferredCalendarType();
		}

		get _isPattern() {
			return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
		}

		get _maxDate() {
			return this.maxDate ? this._getTimeStampFromString(this.maxDate) : this._getMaxCalendarDate();
		}

		get _minDate() {
			return this.minDate ? this._getTimeStampFromString(this.minDate) : this._getMinCalendarDate();
		}

		_getTimeStampFromString(value) {
			const jsDate = this.getFormat().parse(value);
			if (jsDate) {
				const calDate = CalendarDate.fromLocalJSDate(jsDate, this._primaryCalendarType);
				return calDate.toUTCJSDate().valueOf();
			}
			return undefined;
		}

		_getMinCalendarDate() {
			return getMinCalendarDate(this._primaryCalendarType);
		}

		_getMaxCalendarDate() {
			return getMaxCalendarDate(this._primaryCalendarType);
		}

		getFormat() {
			let dateFormat;
			if (this._isPattern) {
				dateFormat = DateFormat.getInstance({
					pattern: this._formatPattern,
					calendarType: this._primaryCalendarType,
				});
			} else {
				dateFormat = DateFormat.getInstance({
					style: this._formatPattern,
					calendarType: this._primaryCalendarType,
				});
			}
			return dateFormat;
		}

		get _formatPattern() {
			return this.formatPattern || "medium"; // get from config
		}

		getTimestampFromDom(domNode) {
			const oMonthDomRef = domNode.getAttribute("data-sap-timestamp");
			return parseInt(oMonthDomRef);
		}

		static async onDefine() {
			await Promise.all([
				fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),
				fetchI18nBundle("@ui5/webcomponents"),
			]);
		}
	}

	const block0$j = (context) => { return scopedHtml`<div class="ui5-calheader-root" dir="${ifDefined(context.effectiveDir)}" @keydown=${context._onkeydown}><div id="${ifDefined(context._id)}-btnPrev" class="${ifDefined(context._btnPrev.classes)}" @click=${context._handlePrevPress} data-sap-cal-head-button="Prev" title="${ifDefined(context._prevButtonText)}"><ui5-icon class="ui5-calheader-arrowicon" name="${ifDefined(context._btnPrev.icon)}"></ui5-icon></div><div class="ui5-calheader-midcontainer" @keydown="${context._onMidContainerKeyDown}"><div id="${ifDefined(context._id)}-btn1" class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${context._isMonthButtonHidden}" type="${ifDefined(context._btn1.type)}" tabindex="${ifDefined(context._tabIndex)}" @click=${context._showMonthPicker} data-sap-show-picker="Month">${ifDefined(context._btn1.text)}</div><div id="${ifDefined(context._id)}-btn2" class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" type="${ifDefined(context._btn2.type)}" tabindex="${ifDefined(context._tabIndex)}" @click=${context._showYearPicker} data-sap-show-picker="Year">${ifDefined(context._btn2.text)}</div></div><div class="${ifDefined(context._btnNext.classes)}" @click=${context._handleNextPress} id="${ifDefined(context._id)}-btnNext" data-sap-cal-head-button="Next" title=${ifDefined(context._nextButtonText)}><ui5-icon class="ui5-calheader-arrowicon" name="${ifDefined(context._btnNext.icon)}"></ui5-icon></div></div>`; };


	const main$j = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$j(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$3 = ":host{display:inline-block;width:100%}.ui5-calheader-root{display:flex;height:var(--_ui5_calendar_header_height);padding:var(--_ui5_calendar_header_padding);box-sizing:border-box}.ui5-calheader-root [ui5-button]{height:100%}.ui5-calheader-arrowbtn{display:flex;justify-content:center;align-items:center;width:var(--_ui5_calendar_header_arrow_button_width);background-color:var(--sapButton_Lite_Background);color:var(--sapButton_TextColor);cursor:pointer;overflow:hidden;white-space:nowrap;padding:0;font-size:var(--sapFontSize)}.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:active,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:focus,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:hover{pointer-events:none;opacity:.4;outline:none;background-color:var(--sapButton_Lite_Background);color:var(--sapButton_TextColor)}[hidden].ui5-calheader-arrowbtn.ui5-calheader-middlebtn{display:none}.ui5-calheader-arrowbtn:focus{outline:none}.ui5-calheader-arrowbtn:hover{background-color:var(--sapButton_Hover_Background);color:var(--sapButton_Hover_TextColor)}.ui5-calheader-arrowbtn:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}.ui5-calheader-arrowbtn,.ui5-calheader-middlebtn{border:var(--_ui5_calendar_header_arrow_button_border);border-radius:var(--_ui5_calendar_header_arrow_button_border_radius);display:flex}.ui5-calheader-arrowicon{color:currentColor;pointer-events:none}.ui5-calheader-midcontainer{display:flex;justify-content:space-around;flex:1 1 auto;padding:0 .5rem}.ui5-calheader-midcontainer .ui5-calheader-middlebtn:first-child{margin-right:.5rem}.ui5-calheader-middlebtn{font-family:\"72override\",var(--sapFontFamily);width:var(--_ui5_calendar_header_middle_button_width);flex:var(--_ui5_calendar_header_middle_button_flex);position:relative;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui5-calheader-middlebtn:focus{border:var(--_ui5_calendar_header_middle_button_focus_border);border-radius:var(--_ui5_calendar_header_middle_button_focus_border_radius)}.ui5-calheader-middlebtn:focus:after{content:\"\";display:var(--_ui5_calendar_header_middle_button_focus_after_display);width:var(--_ui5_calendar_header_middle_button_focus_after_width);height:var(--_ui5_calendar_header_middle_button_focus_after_height);border:1px dotted var(--sapContent_FocusColor);position:absolute;top:var(--_ui5_calendar_header_middle_button_focus_after_top_offset);left:var(--_ui5_calendar_header_middle_button_focus_after_left_offset)}.ui5-calheader-middlebtn:focus:active:after{border-color:var(--sapContent_ContrastFocusColor)}[dir=rtl] .ui5-calheader-root-midcontainer .ui5-calheader-middlebtn:first-child{margin-left:.5rem;margin-right:0}";

	const metadata$i = {
		tag: "ui5-calendar-header",
		properties: {
			monthText: {
				type: String,
			},
			yearText: {
				type: String,
			},
			_btnPrev: {
				type: Object,
			},
			_btnNext: {
				type: Object,
			},
			_btn1: {
				type: Object,
			},
			_btn2: {
				type: Object,
			},
			_isNextButtonDisabled: {
				type: Boolean,
			},
			_isPrevButtonDisabled: {
				type: Boolean,
			},
			_isMonthButtonHidden: {
				type: Boolean,
			},
			_tabIndex: {
				type: String,
				defaultValue: "0",
			},
		},
		events: {
			"previous-press": {},
			"next-press": {},
			"show-month-press": {},
			"show-year-press": {},
		},
	};

	class CalendarHeader extends UI5Element {
		static get metadata() {
			return metadata$i;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$j;
		}

		static get styles() {
			return styles$3;
		}

		static get dependencies() {
			return [Button, Icon];
		}

		constructor() {
			super();
			this._btnPrev = {};
			this._btnPrev.icon = "slim-arrow-left";

			this._btnNext = {};
			this._btnNext.icon = "slim-arrow-right";

			this._btn1 = {};
			this._btn1.type = ButtonDesign.Transparent;

			this._btn2 = {};
			this._btn2.type = ButtonDesign.Transparent;

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			this._btn1.text = this.monthText;
			this._btn2.text = this.yearText;
			this._btnPrev.classes = "ui5-calheader-arrowbtn";
			this._btnNext.classes = "ui5-calheader-arrowbtn";

			if (this._isNextButtonDisabled) {
				this._btnNext.classes += " ui5-calheader-arrowbtn-disabled";
			}

			if (this._isPrevButtonDisabled) {
				this._btnPrev.classes += " ui5-calheader-arrowbtn-disabled";
			}
		}

		_handlePrevPress(event) {
			this.fireEvent("previous-press", event);
		}

		_handleNextPress(event) {
			this.fireEvent("next-press", event);
		}

		_showMonthPicker(event) {
			this.fireEvent("show-month-press", event);
		}

		_showYearPicker(event) {
			this.fireEvent("show-year-press", event);
		}

		_onkeydown(event) {
			if (isSpace(event) || isEnter(event)) {
				const showPickerButton = event.target.getAttribute("data-sap-show-picker");

				if (showPickerButton) {
					this[`_show${showPickerButton}Picker`]();
				}
			}
		}

		_onMidContainerKeyDown(event) {
			if (isSpace(event)) {
				event.preventDefault();
			}
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}

		get _prevButtonText() {
			return this.i18nBundle.getText(CALENDAR_HEADER_PREVIOUS_BUTTON);
		}

		get _nextButtonText() {
			return this.i18nBundle.getText(CALENDAR_HEADER_NEXT_BUTTON);
		}
	}

	CalendarHeader.define();

	let formatSettings;

	const getFirstDayOfWeek = () => {
		if (formatSettings === undefined) {
			formatSettings = getFormatSettings();
		}

		return formatSettings.firstDayOfWeek;
	};

	const calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {
		let iWeekNum = 0;
		let iWeekDay = 0;
		const iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek();

		// search Locale for containing "en-US", since sometimes
		// when any user settings have been defined, subtag "sapufmt" is added to the locale name
		// this is described inside sap.ui.core.Configuration file
		if (oLocale && (oLocale.getLanguage() === "en" && oLocale.getRegion() === "US")) {
			/*
				* in US the week starts with Sunday
				* The first week of the year starts with January 1st. But Dec. 31 is still in the last year
				* So the week beginning in December and ending in January has 2 week numbers
				*/
			const oJanFirst = new UniversalDate(oDate.getTime());
			oJanFirst.setUTCFullYear(iYear, 0, 1);
			iWeekDay = oJanFirst.getUTCDay();

			// get the date for the same weekday like jan 1.
			const oCheckDate = new UniversalDate(oDate.getTime());
			oCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);

			iWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 86400000 / 7) + 1;
		} else {
			// normally the first week of the year is the one where the first Thursday of the year is
			// find Thursday of this week
			// if the checked day is before the 1. day of the week use a day of the previous week to check
			const oThursday = new UniversalDate(oDate.getTime());
			oThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);
			iWeekDay = oThursday.getUTCDay();
			oThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);

			const oFirstDayOfYear = new UniversalDate(oThursday.getTime());
			oFirstDayOfYear.setUTCMonth(0, 1);
			iWeekDay = oFirstDayOfYear.getUTCDay();
			let iAddDays = 0;
			if (iWeekDay > 4) {
				iAddDays = 7; // first day of year is after Thursday, so first Thursday is in the next week
			}
			const oFirstThursday = new UniversalDate(oFirstDayOfYear.getTime());
			oFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);

			iWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 86400000 / 7) + 1;
		}

		return iWeekNum;
	};

	const block0$k = (context) => { return scopedHtml`<div class="ui5-dp-root" style="${styleMap(context.styles.wrapper)}" @keydown=${context._onkeydown} @keyup=${context._onkeyup} @mousedown=${context._onmousedown} @mouseup=${context._onmouseup}><div id="${ifDefined(context._id)}-content" class="ui5-dp-content" role="grid" aria-roledescription="Calendar"><div role="row" class="ui5-dp-days-names-container">${ repeat(context._dayNames, (item, index) => item._id || index, (item, index) => block1$f(item)) }</div>${ repeat(context._weeks, (item, index) => item._id || index, (item, index) => block2$e(item, index, context)) }</div></div>`; };
	const block1$f = (item, index, context) => { return scopedHtml`<div id=${ifDefined(item.id)} role="columnheader" aria-label="${ifDefined(item.name)}" class="${ifDefined(item.classes)}">${ifDefined(item.ultraShortName)}</div>`; };
	const block2$e = (item, index, context) => { return scopedHtml`${ item.length ? block3$9(item, index, context) : block8$3() }`; };
	const block3$9 = (item, index, context) => { return scopedHtml`<div style="display: flex;" role="row"  @mouseover="${context._onitemmouseover}">${ repeat(item, (item, index) => item._id || index, (item, index) => block4$8(item)) }</div>`; };
	const block4$8 = (item, index, context) => { return scopedHtml`${ item.timestamp ? block5$7(item) : block6$6(item) }`; };
	const block5$7 = (item, index, context) => { return scopedHtml`<div id="${ifDefined(item.id)}" tabindex="${ifDefined(item._tabIndex)}" data-sap-timestamp="${ifDefined(item.timestamp)}" data-sap-index="${ifDefined(item._index)}" role="gridcell" aria-selected="${ifDefined(item.selected)}" aria-label="${ifDefined(item.ariaLabel)}" aria-disabled="${ifDefined(item.ariaDisabled)}" class="${ifDefined(item.classes)}"><span class="ui5-dp-daytext" data-sap-timestamp="${ifDefined(item.timestamp)}" data-sap-index="${ifDefined(item._index)}">${ifDefined(item.iDay)}</span></div>`; };
	const block6$6 = (item, index, context) => { return scopedHtml`${ !item.isHidden ? block7$4(item) : undefined }`; };
	const block7$4 = (item, index, context) => { return scopedHtml`<div class="ui5-dp-weekname-container" role="rowheader" aria-label="Calendar Week ${ifDefined(item.weekNum)}"><span class="ui5-dp-weekname">${ifDefined(item.weekNum)}</span></div>`; };
	const block8$3 = (item, index, context) => { return scopedHtml`<div class="sapWCEmptyWeek"></div>`; };


	const main$k = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$k(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var dayPickerCSS = ":host(:not([hidden])){display:inline-block}:host{height:100%;width:100%}:host([_hide-week-numbers]) .ui5-dp-content{flex-basis:100%}.ui5-dp-dayname,.ui5-dp-item,.ui5-dp-weekname{width:var(--_ui5_day_picker_item_width);height:var(--_ui5_day_picker_item_height);margin-top:var(--_ui5_daypicker_item_margin);margin-right:var(--_ui5_daypicker_item_margin);font-family:\"72override\",var(--sapFontFamily);border-radius:var(--_ui5_daypicker_item_border_radius)}.ui5-dp-weekname{color:var(--_ui5_daypicker_weekname_color)}.ui5-dp-content{display:flex;flex-basis:87.5%;flex-direction:column;font-family:\"72override\",var(--sapFontFamily)}.ui5-dp-days-names-container{display:flex;height:var(--_ui5_daypicker_daynames_container_height)}.ui5-dp-weeknumber-container{padding-top:var(--_ui5_daypicker_weeknumbers_container_padding_top);flex-basis:12.5%}.ui5-dp-dayname,.ui5-dp-item,.ui5-dp-weekname,.ui5-dp-weekname-container{display:flex;flex-grow:1;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);outline:none;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui5-dp-item{position:relative;color:var(--sapTextColor);background:var(--sapLegend_WorkingBackground);font-size:var(--sapFontSize);border:var(--_ui5_daypicker_item_border)}.ui5-dp-item:hover{background:var(--sapList_Hover_Background)}.ui5-dp-daytext{display:flex;width:100%;height:100%;justify-content:center;align-items:center;box-sizing:border-box}.ui5-dp-dayname{color:var(--_ui5_daypicker_dayname_color);height:100%}.ui5-dp-item.ui5-dp-item--weeekend{background:var(--sapLegend_NonWorkingBackground)}.ui5-dp-item.ui5-dp-item--disabled{pointer-events:none;opacity:.5}.ui5-dp-item.ui5-dp-item--weeekend:hover{background:var(--sapList_Hover_Background)}.ui5-dp-item.ui5-dp-item--othermonth{color:var(--_ui5_daypicker_item_othermonth_color);background:var(--_ui5_daypicker_item_othermonth_background_color);border-color:transparent}.ui5-dp-item.ui5-dp-item--othermonth:hover,.ui5-dp-item.ui5-dp-item--weeekend.ui5-dp-item--othermonth:hover{color:var(--_ui5_daypicker_item_othermonth_hover_color);background:var(--sapList_Hover_Background)}.ui5-dp-item:focus:after{content:\"\";width:calc(100% - .25rem);height:calc(100% - .25rem);border:var(--_ui5_daypicker_item_outline_width) dotted var(--sapContent_FocusColor);position:absolute;top:var(--_ui5_daypicker_item_outline_offset);left:var(--_ui5_daypicker_item_outline_offset)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--sapContent_Selected_Background);color:var(--sapContent_Selected_TextColor)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-daytext{border:1px solid var(--_ui5_daypicker_item_selected_border_color);border-radius:var(--_ui5_daypicker_item_now_inner_border_radius)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:focus:after{width:var(--_ui5_daypicker_item_now_selected_focus_after_width);height:var(--_ui5_daypicker_item_now_selected_focus_after_height);border-color:var(--sapContent_FocusColor);top:0;left:0}.ui5-dp-item.ui5-dp-item--selected:hover{background:var(--_ui5_daypicker_item_selected_hover_background_color);color:var(--sapContent_ContrastTextColor)}.ui5-dp-item.ui5-dp-item--selected:focus:after{border-color:var(--sapContent_ContrastFocusColor)}.ui5-dp-items-container{outline:none}.ui5-dp-item.ui5-dp-item--selected-between .ui5-dp-daytext,.ui5-dp-item[hovered] .ui5-dp-daytext{background-color:var(--sapList_SelectionBackgroundColor);color:var(--sapTextColor)}.ui5-dp-item.ui5-dp-item--selected-between,.ui5-dp-item[hovered]{border:1px solid var(--sapContent_Selected_Background);border-radius:5%}.ui5-dp-item.ui5-dp-item--now{border:.125rem solid var(--sapLegend_CurrentDateTime)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--selected-between:focus:after{border-color:var(--sapContent_FocusColor)}.ui5-dp-items-container>:first-child{justify-content:flex-end}.ui5-dp-emptyweek{height:var(--_ui5_day_picker_empty_height)}";

	const monthDiff = (startDate, endDate) => {
		let months;
		const _startDate = CalendarDate.fromTimestamp(startDate).toLocalJSDate(),
			_endDate = CalendarDate.fromTimestamp(endDate).toLocalJSDate();

		months = (_endDate.getFullYear() - _startDate.getFullYear()) * 12;
		months -= _startDate.getMonth();
		months += _endDate.getMonth();
		return months;
	};

	/**
	 * @public
	 */
	const metadata$j = {
		tag: "ui5-daypicker",
		properties: /** @lends  sap.ui.webcomponents.main.DayPicker.prototype */ {
			/**
			 * Defines the type of selection used in the calendar component.
			 * The property takes as value an object of type <code>CalendarSelection</code>.
			 * Accepted property values are:<br>
			 * <ul>
			 * <li><code>CalendarSelection.Single</code> - enables a single date selection.(default value)</li>
			 * <li><code>CalendarSelection.Range</code> - enables selection of a date range.</li>
			 * <li><code>CalendarSelection.Multiple</code> - enables selection of multiple dates.</li>
			 * </ul>
			 * @type {CalendarSelection}
			 * @defaultvalue "Single"
			 * @public
			 */
			selection: {
				type: CalendarSelection,
				defaultValue: CalendarSelection.Single,
			},

			/**
			 * Defines the visibility of the week numbers column.
			 * <br><br>
			 *
			 * <b>Note:<b> For calendars other than Gregorian,
			 * the week numbers are not displayed regardless of what is set.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			 */
			hideWeekNumbers: {
				type: Boolean,
			},

			/**
			 * Defines the effective weeks numbers visibility,
			 * based on the <code>primaryCalendarType</code> and <code>hideWeekNumbers</code> property.
			 * @type {boolean}
			 * @private
			 */
			_hideWeekNumbers: {
				type: Boolean,
			},

			/**
			 * @type {Object}
			 * @private
			 */
			_weeks: {
				type: Object,
				multiple: true,
			},

			/**
			 * @type {boolean}
			 * @private
			 */
			_hidden: {
				type: Boolean,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.DayPicker.prototype */ {
			/**
			 * Fired when the user selects a new Date on the Web Component.
			 * @public
			 * @event
			 */
			change: {},
			/**
			 * Fired when month, year has changed due to item navigation.
			 * @public
			 * @event
			 */
			navigate: {},
		},
	};

	/**
	 * @class
	 *
	 * Represents one month view inside a calendar.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.DayPicker
	 * @extends sap.ui.webcomponents.main.PickerBase
	 * @tagname ui5-daypicker
	 * @public
	 */
	class DayPicker extends PickerBase {
		static get metadata() {
			return metadata$j;
		}

		static get template() {
			return main$k;
		}

		static get styles() {
			return dayPickerCSS;
		}

		constructor() {
			super();
			this._itemNav = new ItemNavigation(this, {
				rowSize: 7,
				pageSize: 42,
				behavior: ItemNavigationBehavior.Paging,
				affectedPropertiesNames: ["_weeks"],
				getItemsCallback: () => this.focusableDays,
				hasNextPageCallback: this._hasNextMonth.bind(this),
				hasPreviousPageCallback: this._hasPrevMonth.bind(this),
			});

			this._itemNav.attachEvent(
				ItemNavigation.BORDER_REACH,
				this._handleItemNavigationBorderReach.bind(this)
			);

			this._itemNav.attachEvent(
				ItemNavigation.AFTER_FOCUS,
				this._handleItemNavigationAfterFocus.bind(this)
			);
		}

		onBeforeRendering() {
			const localeData = getCachedLocaleDataInstance(getLocale());

			let oCalDate,
				day,
				timestamp,
				lastWeekNumber = -1,
				isDaySelected = false,
				todayIndex = 0;

			const _aVisibleDays = this._getVisibleDays(this._calendarDate);
			this._weeks = [];
			let week = [];
			this._weekNumbers = [];
			let weekday;
			const _monthsNameWide = localeData.getMonths("wide", this._calendarDate._oUDate.sCalendarType);

			const visualizedSelectedDates = this._getVisualizedSelectedDates();

			/* eslint-disable no-loop-func */
			for (let i = 0; i < _aVisibleDays.length; i++) {
				oCalDate = _aVisibleDays[i];
				timestamp = oCalDate.valueOf() / 1000; // no need to round because CalendarDate does it

				// day of the week
				weekday = oCalDate.getDay() - this._getFirstDayOfWeek();
				if (weekday < 0) {
					weekday += 7;
				}

				const nonWorkingAriaLabel = this._isWeekend(oCalDate) ? `${this._dayPickerNonWorkingDay} ` : "";

				day = {
					timestamp: timestamp.toString(),
					selected: visualizedSelectedDates.some(d => {
						return d === timestamp;
					}),
					iDay: oCalDate.getDate(),
					_index: i.toString(),
					classes: `ui5-dp-item ui5-dp-wday${weekday}`,
					ariaLabel: `${nonWorkingAriaLabel}${_monthsNameWide[oCalDate.getMonth()]} ${oCalDate.getDate()}, ${oCalDate.getYear()}`,
				};

				const isToday = oCalDate.isSame(CalendarDate.fromLocalJSDate(new Date(), this._primaryCalendarType));

				week.push(day);

				if (oCalDate.getDay() === this._getFirstDayOfWeek()) {
					day.classes += " ui5-dp-firstday";
				}

				if (day.selected) {
					day.classes += " ui5-dp-item--selected";
					isDaySelected = true;
				}

				if (isToday) {
					day.classes += " ui5-dp-item--now";
					todayIndex = i;
					day.ariaLabel = `today ${day.ariaLabel}`;
				}

				if (oCalDate.getMonth() !== this._month) {
					day.classes += " ui5-dp-item--othermonth";
					day.ariaDisabled = "true";
				}

				day.id = `${this._id}-${timestamp}`;

				if (this._isWeekend(oCalDate)) {
					day.classes += " ui5-dp-item--weeekend";
				}
				if (this._isOutOfSelectableRange(oCalDate)) {
					day.classes += " ui5-dp-item--disabled";
					day.disabled = true;
				}

				this._hideWeekNumbers = this.shouldHideWeekNumbers;

				if (day.classes.indexOf("ui5-dp-wday6") !== -1
					|| _aVisibleDays.length - 1 === i) {
					const weekNumber = calculateWeekNumber(getFirstDayOfWeek(), oCalDate.toUTCJSDate(), oCalDate.getYear(), getLocale(), localeData);
					if (lastWeekNumber !== weekNumber) {
						const weekNum = {
							weekNum: weekNumber,
							isHidden: this._hideWeekNumbers,
						};
						week.unshift(weekNum);
						lastWeekNumber = weekNumber;
					}

					this._weeks.push(week);
					week = [];
				}
			}
			while (this._weeks.length < 6) {
				this._weeks.push([]);
			}
			/* eslint-enable no-loop-func */

			if (!isDaySelected && todayIndex && this._itemNav.current === 0) {
				this._itemNav.current = todayIndex;
			}

			const aDayNamesWide = localeData.getDays("wide", this._primaryCalendarType);
			const aDayNamesAbbreviated = localeData.getDays("abbreviated", this._primaryCalendarType);
			const aUltraShortNames = aDayNamesAbbreviated.map(n => n);
			let dayName;

			this._dayNames = [];
			this._dayNames.push({
				classes: "ui5-dp-dayname",
				name: this._dayPickerWeekNumberText,
			});
			for (let i = 0; i < 7; i++) {
				weekday = i + this._getFirstDayOfWeek();
				if (weekday > 6) {
					weekday -= 7;
				}
				dayName = {
					id: `${this._id}-WH${i.toString()}`,
					name: aDayNamesWide[weekday],
					ultraShortName: aUltraShortNames[weekday],
					classes: "ui5-dp-dayname",
				};

				this._dayNames.push(dayName);
			}

			this._dayNames[1].classes += " ui5-dp-firstday";
		}

		onAfterRendering() {
			const visualizedDates = this._getVisualizedSelectedDates();
			if (this.selection === CalendarSelection.Range && visualizedDates.length > 0) {
				const dayItems = this.getDomRef().querySelectorAll(".ui5-dp-item");
				const firstTimestamp = this.selectedDates[0];
				const lastTimestamp = (visualizedDates.length === 1) ? parseInt(dayItems[this._itemNav.currentIndex].dataset.sapTimestamp) : this.selectedDates[1];

				this._updateSelectionBetween(dayItems, firstTimestamp, lastTimestamp);
			}
		}

		_getVisualizedSelectedDates() {
			switch (this.selection) {
			case CalendarSelection.Single:
				return [this.selectedDates[0]];
			case CalendarSelection.Multiple:
				return [...this.selectedDates];
			case CalendarSelection.Range:
				return this.selectedDates.slice(0, 2);
			default:
				return [];
			}
		}

		_onmousedown(event) {
			const target = event.target;
			const dayPressed = this._isDayPressed(target);

			if (dayPressed) {
				const targetDate = this.getTimestampFromDom(target);
				const selectedDay = this.focusableDays.find(day => parseInt(day.timestamp) === targetDate);
				this._itemNav.update(selectedDay);

				this.targetDate = targetDate;
			}
		}

		_onmouseup(event) {
			const dayPressed = this._isDayPressed(event.target);
			if (this.targetDate) {
				this._modifySelectionAndNotifySubscribers(this.targetDate);
				this.targetDate = null;
			}

			if (!dayPressed) {
				this._itemNav.focusCurrent();
			}
		}

		_onitemmouseover(event) {
			const hoveredItem = event.target.classList.contains("ui5-dp-item") ? event.target : event.target.parentElement;
			if (this.selectedDates.length === 1 && this.selection === CalendarSelection.Range && hoveredItem.classList.contains("ui5-dp-item")) {
				const dayItems = this.getDomRef().querySelectorAll(".ui5-dp-item");
				const firstTimestamp = this.selectedDates[0];
				const lastTimestamp = parseInt(hoveredItem.dataset.sapTimestamp);

				this._updateSelectionBetween(dayItems, firstTimestamp, lastTimestamp);
			}
		}

		_updateSelectionBetween(dayItems, firstTimestamp, lastTimestamp) {
			dayItems.forEach(day => {
				const dayTimestamp = parseInt(day.dataset.sapTimestamp);

				if ((dayTimestamp > firstTimestamp && dayTimestamp < lastTimestamp) || (dayTimestamp > lastTimestamp && dayTimestamp < firstTimestamp)) {
					day.classList.add("ui5-dp-item--selected-between");
				} else {
					day.classList.remove("ui5-dp-item--selected-between");
				}
			});
		}

		_onkeydown(event) {
			if (isEnter(event)) {
				return this._handleEnter(event);
			}

			if (isSpace(event)) {
				event.preventDefault();
				return;
			}

			if (isHomeCtrl(event)) {
				this._navToStartEndDayOfTheMonth(event, true);
			}

			if (isEndCtrl(event)) {
				this._navToStartEndDayOfTheMonth(event, false);
			}

			if (isPageUpShift(event)) {
				this._changeYears(event, false, 1);
			}

			if (isPageUpShiftCtrl(event)) {
				this._changeYears(event, false, 10);
			}

			if (isPageDownShift(event)) {
				this._changeYears(event, true, 1);
			}

			if (isPageDownShiftCtrl(event)) {
				this._changeYears(event, true, 10);
			}
		}

		_onkeyup(event) {
			if (isSpace(event)) {
				this._handleSpace(event);
			}
		}

		_handleEnter(event) {
			event.preventDefault();
			if (event.target.className.indexOf("ui5-dp-item") > -1) {
				const targetDate = parseInt(event.target.getAttribute("data-sap-timestamp"));
				this._modifySelectionAndNotifySubscribers(targetDate);
			}
		}

		_handleSpace(event) {
			event.preventDefault();
			if (event.target.className.indexOf("ui5-dp-item") > -1) {
				const targetDate = parseInt(event.target.getAttribute("data-sap-timestamp"));
				this._modifySelectionAndNotifySubscribers(targetDate);
			}
		}

		_navToStartEndDayOfTheMonth(event, start) {
			event.preventDefault();

			const currentItem = this._itemNav._getCurrentItem();
			let currentTimestamp = parseInt(currentItem.getAttribute("data-sap-timestamp")) * 1000;
			let calDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);

			if (currentItem.classList.contains("ui5-dp-item--othermonth")) {
				return;
			}

			calDate.setDate(1);
			if (!start) {
				// set the day to be the last day of the current month
				calDate.setMonth(calDate.getMonth() + 1, 0);
			}

			if (calDate.valueOf() < this._minDate) {
				calDate = CalendarDate.fromLocalJSDate(new Date(this._minDate), this._primaryCalendarType);
			} else if (calDate.valueOf() > this._maxDate) {
				calDate = CalendarDate.fromLocalJSDate(new Date(this._maxDate), this._primaryCalendarType);
			}

			currentTimestamp = calDate.valueOf() / 1000;
			const newItemIndex = this.focusableDays.findIndex(item => parseInt(item.timestamp) === currentTimestamp);

			this._itemNav.currentIndex = newItemIndex;
			this._itemNav.focusCurrent();
		}

		/**
		 * Converts "timestamp" property value into a Java Script Date object and
		 * adds or extracts a given number of years from it
		 *
		 * @param {object} event used to prevent the default browser behavior
		 * @param {boolean} forward if true indicates addition
		 * @param {int} step for year number to substract or add
		 */
		_changeYears(event, forward, step) {
			const currentItem = this._itemNav._getCurrentItem();
			let currentTimestamp = parseInt(currentItem.getAttribute("data-sap-timestamp") * 1000);
			const currentDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);
			let newDate = new CalendarDate(currentDate, this._primaryCalendarType);

			if (forward) {
				newDate.setYear(newDate.getYear() + step);
			} else {
				newDate.setYear(newDate.getYear() - step);
			}

			if (currentDate.getMonth() !== newDate.getMonth()) {
				newDate.setDate(0);
			}

			if (newDate.valueOf() < this._minDate) {
				newDate = CalendarDate.fromLocalJSDate(new Date(this._minDate), this._primaryCalendarType);
			} else if (newDate.valueOf() > this._maxDate) {
				newDate = CalendarDate.fromLocalJSDate(new Date(this._maxDate), this._primaryCalendarType);
			}

			currentTimestamp = (newDate.valueOf() / 1000);

			this._navigateAndWaitRerender(currentTimestamp);

			event.preventDefault();
		}

		get shouldHideWeekNumbers() {
			if (this._primaryCalendarType !== CalendarType.Gregorian) {
				return true;
			}

			return this.hideWeekNumbers;
		}

		get _currentCalendarDate() {
			return CalendarDate.fromTimestamp(new Date().getTime(), this._primaryCalendarType);
		}

		get focusableDays() {
			const focusableDays = [];

			for (let i = 0; i < this._weeks.length; i++) {
				const week = this._weeks[i].slice(1).filter(dayItem => !dayItem.disabled);
				focusableDays.push(week);
			}

			return [].concat(...focusableDays);
		}

		get _dayPickerWeekNumberText() {
			return this.i18nBundle.getText(DAY_PICKER_WEEK_NUMBER_TEXT);
		}

		get _dayPickerNonWorkingDay() {
			return this.i18nBundle.getText(DAY_PICKER_NON_WORKING_DAY);
		}

		_setCurrentItemTabIndex(index) {
			const currentItem = this._itemNav._getCurrentItem();
			if (currentItem) {
				currentItem.setAttribute("tabindex", index.toString());
			}
		}

		_modifySelectionAndNotifySubscribers(timestamp) {
			if (this.selection === CalendarSelection.Single) {
				this.selectedDates = [timestamp];
			} else if (this.selection === CalendarSelection.Multiple) {
				this.selectedDates = this.selectedDates.includes(timestamp) ? this.selectedDates.filter(value => value !== timestamp) : [...this.selectedDates, timestamp];
			} else {
				this.selectedDates = (this.selectedDates.length === 1) ? [...this.selectedDates, timestamp]	: [timestamp];
			}

			this.fireEvent("change", { dates: [...this.selectedDates] });
		}

		_hasNextMonth() {
			let newMonth = this._month + 1;
			let newYear = this._year;
			const maxCalendarYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();

			if (newMonth > 11) {
				newMonth = 0;
				newYear++;
			}

			if (newYear > maxCalendarYear && newMonth === 0) {
				return false;
			}

			if (!this.maxDate) {
				return true;
			}

			const oNewDate = this._calendarDate;
			oNewDate.setDate(oNewDate.getDate());
			oNewDate.setYear(newYear);
			oNewDate.setMonth(newMonth);

			const monthsBetween = monthDiff(oNewDate.valueOf(), this._maxDate);
			if (monthsBetween < 0) {
				return false;
			}

			const lastFocusableDay = this.focusableDays[this.focusableDays.length - 1].iDay;
			if (monthsBetween === 0 && CalendarDate.fromTimestamp(this._maxDate).toLocalJSDate().getDate() === lastFocusableDay) {
				return false;
			}

			return true;
		}

		_hasPrevMonth() {
			let newMonth = this._month - 1;
			let newYear = this._year;
			const minCalendarYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();

			if (newMonth < 0) {
				newMonth = 11;
				newYear--;
			}

			if (newYear < minCalendarYear && newMonth === 11) {
				return false;
			}

			if (!this.minDate) {
				return true;
			}

			const oNewDate = this._calendarDate;
			oNewDate.setDate(oNewDate.getDate());
			oNewDate.setYear(newYear);
			oNewDate.setMonth(newMonth);

			const monthsBetween = monthDiff(this._minDate, oNewDate.valueOf());
			if (this.minDate && monthsBetween < 0) {
				return false;
			}

			return true;
		}

		_handleItemNavigationBorderReach(event) {
			const currentItem = this._itemNav._getCurrentItem();
			let newDate;
			let currentDate;
			let currentTimestamp;

			if (isUp(event.originalEvent) || isLeft(event.originalEvent)) {
				currentTimestamp = this._weeks[0][event.offset + 1].timestamp * 1000;
				newDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);
				newDate.setDate(newDate.getDate() - 7);
			}

			if (isDown(event.originalEvent) || isRight(event.originalEvent)) {
				currentTimestamp = this._weeks[this._weeks.length - 1][event.offset + 1].timestamp * 1000;
				newDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);
				newDate.setDate(newDate.getDate() + 7);
			}

			if (isPageUp(event.originalEvent)) {
				currentTimestamp = parseInt(currentItem.getAttribute("data-sap-timestamp") * 1000);
				currentDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);
				newDate = new CalendarDate(currentDate, this._primaryCalendarType);
				newDate.setMonth(newDate.getMonth() - 1);
				if (currentDate.getMonth() === newDate.getMonth()) {
					newDate.setDate(0);
				}
			}

			if (isPageDown(event.originalEvent)) {
				currentTimestamp = parseInt(currentItem.getAttribute("data-sap-timestamp") * 1000);
				currentDate = CalendarDate.fromTimestamp(currentTimestamp, this._primaryCalendarType);
				newDate = new CalendarDate(currentDate, this._primaryCalendarType);
				newDate.setMonth(newDate.getMonth() + 1);
				if (newDate.getMonth() - currentDate.getMonth() > 1) {
					newDate.setDate(0);
				}
			}

			if (!newDate) {
				return;
			}

			if (newDate.valueOf() < this._minDate) {
				newDate = CalendarDate.fromLocalJSDate(new Date(this._minDate), this._primaryCalendarType);
			} else if (newDate.valueOf() > this._maxDate) {
				newDate = CalendarDate.fromLocalJSDate(new Date(this._maxDate), this._primaryCalendarType);
			}

			currentTimestamp = (newDate.valueOf() / 1000);

			this._navigateAndWaitRerender(currentTimestamp);
		}

		_handleItemNavigationAfterFocus() {
			const currentItem = this._itemNav._getCurrentItem();
			const currentTimestamp = parseInt(currentItem.getAttribute("data-sap-timestamp"));

			if (currentItem.classList.contains("ui5-dp-item--othermonth")) {
				this._navigateAndWaitRerender(currentTimestamp);
			}
		}

		async _navigateAndWaitRerender(timestamp) {
			this.fireEvent("navigate", { timestamp });
			await RenderScheduler.whenFinished();

			const newItemIndex = this.focusableDays.findIndex(item => parseInt(item.timestamp) === timestamp);
			this._itemNav.currentIndex = newItemIndex;
			this._itemNav.focusCurrent();
		}

		_isWeekend(oDate) {
			const localeData = getCachedLocaleDataInstance(getLocale());

			const iWeekDay = oDate.getDay(),
				iWeekendStart = localeData.getWeekendStart(),
				iWeekendEnd = localeData.getWeekendEnd();

			return (iWeekDay >= iWeekendStart && iWeekDay <= iWeekendEnd)
				|| (iWeekendEnd < iWeekendStart && (iWeekDay >= iWeekendStart || iWeekDay <= iWeekendEnd));
		}

		_isDayPressed(target) {
			const targetParent = target.parentNode;
			return (target.className.indexOf("ui5-dp-item") > -1) || (targetParent && targetParent.classList && targetParent.classList.contains("ui5-dp-item"));
		}

		_isOutOfSelectableRange(date) {
			return date.valueOf() < this._minDate || date.valueOf() > this._maxDate;
		}

		_getVisibleDays(oStartDate, bIncludeBCDates) {
			let oCalDate,
				iDaysOldMonth,
				iYear;

			const minCalendarDateYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();
			const maxCalendarDateYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();
			const _aVisibleDays = [];

			// If date passed generate days for new start date else return the current one
			if (!oStartDate) {
				return _aVisibleDays;
			}

			const iFirstDayOfWeek = this._getFirstDayOfWeek();

			// determine weekday of first day in month
			const oFirstDay = new CalendarDate(oStartDate, this._primaryCalendarType);
			oFirstDay.setDate(1);
			iDaysOldMonth = oFirstDay.getDay() - iFirstDayOfWeek;
			if (iDaysOldMonth < 0) {
				iDaysOldMonth = 7 + iDaysOldMonth;
			}

			if (iDaysOldMonth > 0) {
				// determine first day for display
				oFirstDay.setDate(1 - iDaysOldMonth);
			}

			const oDay = new CalendarDate(oFirstDay);
			for (let i = 0; i < 42; i++) {
				iYear = oDay.getYear();
				oCalDate = new CalendarDate(oDay, this._primaryCalendarType);
				if (bIncludeBCDates && iYear < minCalendarDateYear) {
					// For dates before 0001-01-01 we should render only empty squares to keep
					// the month square matrix correct.
					oCalDate._bBeforeFirstYear = true;
					_aVisibleDays.push(oCalDate);
				} else if (iYear >= minCalendarDateYear && iYear <= maxCalendarDateYear) {
					// Days before 0001-01-01 or after 9999-12-31 should not be rendered.
					_aVisibleDays.push(oCalDate);
				}
				oDay.setDate(oDay.getDate() + 1);
			}

			return _aVisibleDays;
		}

		_getFirstDayOfWeek() {
			const localeData = getCachedLocaleDataInstance(getLocale());
			const confFirstDayOfWeek = getFirstDayOfWeek();
			return Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : localeData.getFirstDayOfWeek();
		}

		get styles() {
			return {
				wrapper: {
					display: this._hidden ? "none" : "flex",
				},
				main: {
					width: "100%",
				},
			};
		}
	}

	DayPicker.define();

	const block0$l = (context) => { return scopedHtml`<div class="ui5-mp-root" role="grid" aria-readonly="false" aria-multiselectable="false" style="${styleMap(context.styles.main)}" @keydown=${context._onkeydown} @mousedown=${context._onmousedown} @mouseup=${context._onmouseup}>${ repeat(context._quarters, (item, index) => item._id || index, (item, index) => block1$g(item)) }</div>`; };
	const block1$g = (item, index, context) => { return scopedHtml`<div class="ui5-mp-quarter">${ repeat(item, (item, index) => item._id || index, (item, index) => block2$f(item)) }</div>`; };
	const block2$f = (item, index, context) => { return scopedHtml`<div id="${ifDefined(item.id)}" data-sap-timestamp=${ifDefined(item.timestamp)} tabindex=${ifDefined(item._tabIndex)} class="${ifDefined(item.classes)}" role="gridcell" aria-selected="false">${ifDefined(item.name)}</div>`; };


	const main$l = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$l(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$4 = ":host(:not([hidden])){display:inline-block}:host{width:100%;height:100%}.ui5-mp-root{padding:2rem 0 1rem 0;display:flex;flex-direction:column;font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-mp-item{display:flex;width:calc(33.333% - .125rem);height:var(--_ui5_month_picker_item_height);color:var(--sapTextColor);background-color:var(--sapLegend_WorkingBackground);align-items:center;justify-content:center;margin:var(--_ui5_monthpicker_item_margin);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5_monthpicker_item_border);border-radius:var(--_ui5_monthpicker_item_border_radius)}.ui5-mp-item:hover{background-color:var(--sapList_Hover_Background)}.ui5-mp-item.ui5-mp-item--selected{background-color:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}.ui5-mp-item.ui5-mp-item--disabled{pointer-events:none;opacity:.5}.ui5-mp-item.ui5-mp-item--selected:focus{background-color:var(--sapContent_Selected_Background)}.ui5-mp-item.ui5-mp-item--selected:focus:after{border-color:var(--sapContent_ContrastFocusColor)}.ui5-mp-item.ui5-mp-item--selected:hover{background-color:var(--sapContent_Selected_Background)}.ui5-mp-item:focus:after{content:\"\";position:absolute;width:var(--_ui5_monthpicker_item_focus_after_width);height:var(--_ui5_monthpicker_item_focus_after_height);border:var(--_ui5_monthpicker_item_focus_after_border);top:var(--_ui5_monthpicker_item_focus_after_offset);left:var(--_ui5_monthpicker_item_focus_after_offset)}.ui5-mp-quarter{display:flex;justify-content:center;align-items:center;width:100%}";

	/**
	 * @public
	 */
	const metadata$k = {
		tag: "ui5-monthpicker",
		properties: /** @lends  sap.ui.webcomponents.main.MonthPicker.prototype */ {
			_quarters: {
				type: Object,
				multiple: true,
			},

			_hidden: {
				type: Boolean,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.MonthPicker.prototype */ {
			/**
			 * Fired when the user selects a new Date on the Web Component.
			 * @public
			 * @event
			 */
			change: {},
			/**
			 * Fired when month, year has changed due to item navigation.
			 * @since 1.0.0-rc.9
			 * @public
			 * @event
			 */
			navigate: {},
		},
	};

	/**
	 * Month picker component.
	 *
	 * @class
	 *
	 * Displays months which can be selected.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.MonthPicker
	 * @extends sap.ui.webcomponents.main.PickerBase
	 * @tagname ui5-monthpicker
	 * @public
	 */
	class MonthPicker extends PickerBase {
		static get metadata() {
			return metadata$k;
		}

		static get template() {
			return main$l;
		}

		static get styles() {
			return styles$4;
		}

		constructor() {
			super();

			this._itemNav = new ItemNavigation(this, {
				pageSize: 12,
				rowSize: 3,
				behavior: ItemNavigationBehavior.Paging,
				getItemsCallback: () => this.focusableMonths,
				affectedPropertiesNames: ["_quarters"],
			});

			this._itemNav.attachEvent(
				ItemNavigation.BORDER_REACH,
				this._handleItemNavigationBorderReach.bind(this)
			);
		}

		onBeforeRendering() {
			const localeData = getCachedLocaleDataInstance(getLocale());

			const quarters = [];
			const oCalDate = this._calendarDate;
			let timestamp;

			/* eslint-disable no-loop-func */
			for (let i = 0; i < 12; i++) {
				oCalDate.setMonth(i);
				timestamp = oCalDate.valueOf() / 1000;

				const month = {
					timestamp: timestamp.toString(),
					id: `${this._id}-m${i}`,
					selected: this.selectedDates.some(d => d === timestamp),
					name: localeData.getMonths("wide", this._primaryCalendarType)[i],
					classes: "ui5-mp-item",
				};

				if (month.selected) {
					month.classes += " ui5-mp-item--selected";
				}

				if ((this.minDate || this.maxDate) && this._isOutOfSelectableRange(i)) {
					month.classes += " ui5-mp-item--disabled";
					month.disabled = true;
				}

				const quarterIndex = parseInt(i / 3);

				if (quarters[quarterIndex]) {
					quarters[quarterIndex].push(month);
				} else {
					quarters[quarterIndex] = [month];
				}
			}

			this._quarters = quarters;
		}

		onAfterRendering() {
			this._itemNav.focusCurrent();
		}

		_setCurrentItemTabIndex(index) {
			const currentItem = this._itemNav._getCurrentItem();
			if (currentItem) {
				currentItem.setAttribute("tabindex", index.toString());
			}
		}

		_onmousedown(event) {
			if (event.target.className.indexOf("ui5-mp-item") > -1) {
				const targetTimestamp = this.getTimestampFromDom(event.target);
				const focusedItem = this.focusableMonths.find(item => parseInt(item.timestamp) === targetTimestamp);
				this._itemNav.update(focusedItem);
			}
		}

		_onmouseup(event) {
			if (event.target.className.indexOf("ui5-mp-item") > -1) {
				const timestamp = this.getTimestampFromDom(event.target);
				this.timestamp = timestamp;
				this.fireEvent("change", { timestamp });
			}
		}

		_onkeydown(event) {
			if (isSpace(event) || isEnter(event)) {
				this._activateMonth(event);
			}
		}

		_activateMonth(event) {
			event.preventDefault();
			if (event.target.className.indexOf("ui5-mp-item") > -1) {
				const timestamp = this.getTimestampFromDom(event.target);
				this.timestamp = timestamp;
				this.fireEvent("change", { timestamp });
			}
		}

		_handleItemNavigationBorderReach(event) {
			if (this._isOutOfSelectableRange(this._month)) {
				return;
			}

			this.fireEvent("navigate", event);
		}

		_isOutOfSelectableRange(monthIndex) {
			const currentDateYear = this._localDate.getFullYear(),
				minDate = new Date(this._minDate),
				maxDate = new Date(this._maxDate),
				minDateCheck = minDate && ((currentDateYear === minDate.getFullYear() && monthIndex < minDate.getMonth()) || currentDateYear < minDate.getFullYear()),
				maxDateCheck = maxDate && ((currentDateYear === maxDate.getFullYear() && monthIndex > maxDate.getMonth()) || (currentDateYear > maxDate.getFullYear()));

			return maxDateCheck || minDateCheck;
		}

		get focusableMonths() {
			const focusableMonths = [];

			for (let i = 0; i < this._quarters.length; i++) {
				const quarter = this._quarters[i].filter(x => !x.disabled);
				focusableMonths.push(quarter);
			}

			return [].concat(...focusableMonths);
		}

		get styles() {
			return {
				main: {
					display: this._hidden ? "none" : "",
				},
			};
		}
	}

	MonthPicker.define();

	const block0$m = (context) => { return scopedHtml`<div class="ui5-yp-root" role="grid" aria-readonly="false" aria-multiselectable="false" style="${styleMap(context.styles.main)}" @keydown=${context._onkeydown} @mousedown=${context._onmousedown} @mouseup=${context._onmouseup}>${ repeat(context._yearIntervals, (item, index) => item._id || index, (item, index) => block1$h(item)) }</div>`; };
	const block1$h = (item, index, context) => { return scopedHtml`<div class="ui5-yp-interval-container">${ repeat(item, (item, index) => item._id || index, (item, index) => block2$g(item)) }</div>`; };
	const block2$g = (item, index, context) => { return scopedHtml`<div id="${ifDefined(item.id)}" tabindex="${ifDefined(item._tabIndex)}" data-sap-timestamp="${ifDefined(item.timestamp)}" class="${ifDefined(item.classes)}" role="gridcell" aria-selected="false">${ifDefined(item.year)}</div>`; };


	const main$m = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$m(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$5 = ":host(:not([hidden])){display:inline-block}:host{width:100%;height:100%}.ui5-yp-root{padding:2rem 0 1rem 0;display:flex;flex-direction:column;font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-yp-interval-container{display:flex;justify-content:center;align-items:center;width:100%}.ui5-yp-item{display:flex;margin:var(--_ui5_yearpicker_item_margin);width:calc(25% - .125rem);height:var(--_ui5_year_picker_item_height);color:var(--sapTextColor);background-color:var(--sapLegend_WorkingBackground);align-items:center;justify-content:center;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5_yearpicker_item_border);border-radius:var(--_ui5_yearpicker_item_border_radius)}.ui5-yp-item:hover{background-color:var(--sapList_Hover_Background)}.ui5-yp-item.ui5-yp-item--selected{background-color:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}.ui5-yp-item.ui5-yp-item--disabled{pointer-events:none;opacity:.5}.ui5-yp-item.ui5-yp-item--selected:focus{background-color:var(--_ui5_yearpicker_item_selected_focus)}.ui5-yp-item.ui5-yp-item--selected:focus:after{border-color:var(--sapContent_ContrastFocusColor)}.ui5-yp-item.ui5-yp-item--selected:hover{background-color:var(--_ui5_yearpicker_item_selected_focus)}.ui5-yp-item:focus:after{content:\"\";position:absolute;width:var(--_ui5_yearpicker_item_focus_after_width);height:var(--_ui5_yearpicker_item_focus_after_height);border:var(--_ui5_yearpicker_item_focus_after_border);top:var(--_ui5_yearpicker_item_focus_after_offset);left:var(--_ui5_yearpicker_item_focus_after_offset)}";

	/**
	 * @public
	 */
	const metadata$l = {
		tag: "ui5-yearpicker",
		properties: /** @lends  sap.ui.webcomponents.main.YearPicker.prototype */ {
			_selectedYear: {
				type: Integer,
				noAttribute: true,
			},

			_yearIntervals: {
				type: Object,
				multiple: true,
			},

			_hidden: {
				type: Boolean,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.YearPicker.prototype */ {
			/**
			 * Fired when the user selects a new Date on the Web Component.
			 * @public
			 * @event
			 */
			change: {},
			/**
			 * Fired when month, year has changed due to item navigation.
			 * @since 1.0.0-rc.9
			 * @public
			 * @event
			 */
			navigate: {},
		},
	};

	/**
	 * @class
	 *
	 * Displays years which can be selected.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.YearPicker
	 * @extends sap.ui.webcomponents.main.PickerBase
	 * @tagname ui5-yearpicker
	 * @public
	 */
	class YearPicker extends PickerBase {
		static get metadata() {
			return metadata$l;
		}

		static get styles() {
			return styles$5;
		}

		static get template() {
			return main$m;
		}

		constructor() {
			super();

			this._oLocale = getLocale();

			this._itemNav = new ItemNavigation(this, {
				pageSize: 20,
				rowSize: 4,
				behavior: ItemNavigationBehavior.Paging,
				getItemsCallback: () => this.focusableYears,
				affectedPropertiesNames: ["_yearIntervals"],
			});

			this._itemNav.attachEvent(
				ItemNavigation.BORDER_REACH,
				this._handleItemNavigationBorderReach.bind(this)
			);

			this._yearIntervals = [];
		}

		onBeforeRendering() {
			const oYearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this._primaryCalendarType }, this._oLocale);
			const oCalDate = this._calendarDate;
			const maxCalendarDateYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();
			const minCalendarDateYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();

			oCalDate.setMonth(0);
			oCalDate.setDate(1);
			if (oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX - 1 > maxCalendarDateYear - YearPicker._ITEMS_COUNT) {
				oCalDate.setYear(maxCalendarDateYear - YearPicker._ITEMS_COUNT);
			} else if (oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX - 1 < minCalendarDateYear) {
				oCalDate.setYear(minCalendarDateYear - 1);
			} else {
				oCalDate.setYear(oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX - 1);
			}

			const intervals = [];
			let timestamp;

			if (this._selectedYear === undefined) {
				this._selectedYear = this._year;
			}

			/* eslint-disable no-loop-func */
			for (let i = 0; i < YearPicker._ITEMS_COUNT; i++) {
				const intervalIndex = parseInt(i / 4);
				if (!intervals[intervalIndex]) {
					intervals[intervalIndex] = [];
				}

				oCalDate.setYear(oCalDate.getYear() + 1);

				timestamp = oCalDate.valueOf() / 1000;

				const year = {
					timestamp: timestamp.toString(),
					id: `${this._id}-y${timestamp}`,
					selected: this.selectedDates.some(itemTimestamp => {
						const date = CalendarDate.fromTimestamp(itemTimestamp * 1000, this._primaryCalendarType);
						return date.getYear() === oCalDate.getYear();
					}),
					year: oYearFormat.format(oCalDate.toLocalJSDate()),
					classes: "ui5-yp-item",
				};

				if (year.selected) {
					year.classes += " ui5-yp-item--selected";
				}

				if ((this.minDate || this.maxDate) && this._isOutOfSelectableRange(oCalDate.getYear())) {
					year.classes += " ui5-yp-item--disabled";
					year.disabled = true;
				}

				if (intervals[intervalIndex]) {
					intervals[intervalIndex].push(year);
				}
			}

			this._yearIntervals = intervals;
		}

		onAfterRendering() {
			this._itemNav.focusCurrent();
		}

		_setCurrentItemTabIndex(index) {
			const currentItem = this._itemNav._getCurrentItem();
			if (currentItem) {
				currentItem.setAttribute("tabindex", index.toString());
			}
		}

		_onmousedown(event) {
			if (event.target.className.indexOf("ui5-yp-item") > -1) {
				const targetTimestamp = this.getTimestampFromDom(event.target);
				const focusedItem = this.focusableYears.find(item => parseInt(item.timestamp) === targetTimestamp);
				this._itemNav.update(focusedItem);
			}
		}

		_onmouseup(event) {
			if (event.target.className.indexOf("ui5-yp-item") > -1) {
				const timestamp = this.getTimestampFromDom(event.target);
				this.timestamp = timestamp;
				this._selectedYear = this._year;
				this.fireEvent("change", { timestamp });
			}
		}

		_onkeydown(event) {
			if (isEnter(event)) {
				return this._handleEnter(event);
			}

			if (isSpace(event)) {
				return this._handleSpace(event);
			}
		}

		_handleEnter(event) {
			event.preventDefault();
			if (event.target.className.indexOf("ui5-yp-item") > -1) {
				const timestamp = this.getTimestampFromDom(event.target);

				this.timestamp = timestamp;
				this._selectedYear = this._year;
				this._itemNav.current = YearPicker._MIDDLE_ITEM_INDEX;
				this.fireEvent("change", { timestamp });
			}
		}

		_handleSpace(event) {
			event.preventDefault();
			if (event.target.className.indexOf("ui5-yp-item") > -1) {
				const timestamp = this.getTimestampFromDom(event.target);

				this._selectedYear = CalendarDate.fromTimestamp(
					timestamp * 1000,
					this._primaryCalendarType
				).getYear();
			}
		}

		_handleItemNavigationBorderReach(event) {
			const oCalDate = this._calendarDate;
			const maxCalendarDateYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();
			const minCalendarDateYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();
			oCalDate.setMonth(0);
			oCalDate.setDate(1);

			if (event.end) {
				oCalDate.setYear(oCalDate.getYear() + YearPicker._ITEMS_COUNT);
			} else if (event.start) {
				if (oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX < minCalendarDateYear) {
					return;
				}
				oCalDate.setYear(oCalDate.getYear() - YearPicker._ITEMS_COUNT);
			}

			if (oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX > maxCalendarDateYear) {
				return;
			}

			if (this._isOutOfSelectableRange(oCalDate.getYear() - YearPicker._MIDDLE_ITEM_INDEX)
			&& this._isOutOfSelectableRange(oCalDate.getYear() + YearPicker._MIDDLE_ITEM_INDEX)) {
				return;
			}

			this.timestamp = oCalDate.valueOf() / 1000;

			this.fireEvent("navigate", event);
		}

		_isOutOfSelectableRange(year) {
			const minDate = new Date(this._minDate),
				maxDate = new Date(this._maxDate),
				minDateCheck = minDate && year < minDate.getFullYear(),
				maxDateCheck = maxDate && year > maxDate.getFullYear();

			return minDateCheck || maxDateCheck;
		}

		get focusableYears() {
			const focusableYears = [];

			for (let i = 0; i < this._yearIntervals.length; i++) {
				const yearInterval = this._yearIntervals[i].filter(x => !x.disabled);
				focusableYears.push(yearInterval);
			}

			return [].concat(...focusableYears);
		}

		get styles() {
			return {
				main: {
					display: this._hidden ? "none" : "",
				},
			};
		}
	}

	YearPicker._ITEMS_COUNT = 20;
	YearPicker._MIDDLE_ITEM_INDEX = 10;

	YearPicker.define();

	var Gregorian = UniversalDate.extend('sap.ui.core.date.Gregorian', {
	    constructor: function () {
	        this.oDate = this.createDate(Date, arguments);
	        this.sCalendarType = CalendarType$1.Gregorian;
	    }
	});
	Gregorian.UTC = function () {
	    return Date.UTC.apply(Date, arguments);
	};
	Gregorian.now = function () {
	    return Date.now();
	};
	_Calendars.set(CalendarType$1.Gregorian, Gregorian);

	const block0$n = (context) => { return scopedHtml`<div class="${classMap(context.classes.main)}" style="${styleMap(context.styles.main)} " @keydown=${context._onkeydown} @focusout=${context._onfocusout}><ui5-calendar-header id="${ifDefined(context._id)}-head" month-text="${ifDefined(context._header.monthText)}" year-text="${ifDefined(context._header.yearText)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" @ui5-previous-press="${ifDefined(context._header.onPressPrevious)}" @ui5-next-press="${ifDefined(context._header.onPressNext)}" @ui5-show-month-press="${ifDefined(context._header.onBtn1Press)}" @ui5-show-year-press="${ifDefined(context._header.onBtn2Press)}" ._isNextButtonDisabled="${ifDefined(context._header._isNextButtonDisabled)}" ._isPrevButtonDisabled="${ifDefined(context._header._isPrevButtonDisabled)}" ._isMonthButtonHidden="${ifDefined(context._header._isMonthButtonHidden)}" ._tabIndex="${ifDefined(context._header.tabIndex)}"></ui5-calendar-header><div id="${ifDefined(context._id)}-content"><ui5-daypicker id="${ifDefined(context._id)}-daypicker" class="${classMap(context.classes.dayPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" .selectedDates="${ifDefined(context._oMonth.selectedDates)}" ._hidden="${ifDefined(context._oMonth._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .selection="${ifDefined(context._oMonth.selection)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._oMonth.timestamp)}" @ui5-change="${ifDefined(context._oMonth.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(context._oMonth.onNavigate)}" ?hide-week-numbers="${context.hideWeekNumbers}"></ui5-daypicker><ui5-monthpicker id="${ifDefined(context._id)}-MP" class="${classMap(context.classes.monthPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" ._hidden="${ifDefined(context._monthPicker._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._monthPicker.timestamp)}" @ui5-change="${ifDefined(context._monthPicker.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(context._monthPicker.onNavigate)}"></ui5-monthpicker><ui5-yearpicker id="${ifDefined(context._id)}-YP" class="${classMap(context.classes.yearPicker)}" format-pattern="${ifDefined(context._oMonth.formatPattern)}" ._hidden="${ifDefined(context._yearPicker._hidden)}" .primaryCalendarType="${ifDefined(context._oMonth.primaryCalendarType)}" .minDate="${ifDefined(context._oMonth.minDate)}" .maxDate="${ifDefined(context._oMonth.maxDate)}" timestamp="${ifDefined(context._yearPicker.timestamp)}" ._selectedYear="${ifDefined(context._yearPicker._selectedYear)}" @ui5-change="${ifDefined(context._yearPicker.onSelectedYearChange)}" @ui5-navigate="${ifDefined(context._yearPicker.onNavigate)}"></ui5-yearpicker></div></div>`; };


	const main$n = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$n(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var calendarCSS = ":host{display:inline-block}.ui5-daypicker--hidden,.ui5-monthpicker--hidden,.ui5-yearpicker--hidden{display:none}.ui5-cal-root{background:var(--sapList_Background)}.ui5-cal-root [ui5-daypicker],.ui5-cal-root [ui5-month-picker],.ui5-cal-root [ui5-yearpicker]{vertical-align:top}";

	/**
	 * @public
	 */
	const metadata$m = {
		tag: "ui5-calendar",
		properties: /** @lends  sap.ui.webcomponents.main.Calendar.prototype */ {
			/**
			 * Defines the type of selection used in the calendar component.
			 * The property takes as value an object of type <code>CalendarSelection</code>.
			 * Accepted property values are:<br>
			 * <ul>
			 * <li><code>CalendarSelection.Single</code> - enables a single date selection.(default value)</li>
			 * <li><code>CalendarSelection.Range</code> - enables selection of a date range.</li>
			 * <li><code>CalendarSelection.Multiple</code> - enables selection of multiple dates.</li>
			 * </ul>
			 * @type {CalendarSelection}
			 * @defaultvalue "Single"
			 * @public
			 */
			selection: {
				type: CalendarSelection,
				defaultValue: CalendarSelection.Single,
			},

			/**
			 * Defines the visibility of the week numbers column.
			 * <br><br>
			 *
			 * <b>Note:<b> For calendars other than Gregorian,
			 * the week numbers are not displayed regardless of what is set.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			hideWeekNumbers: {
				type: Boolean,
			},

			_header: {
				type: Object,
			},

			_oMonth: {
				type: Object,
			},

			_monthPicker: {
				type: Object,
			},

			_yearPicker: {
				type: Object,
			},

			_calendarWidth: {
				type: String,
				noAttribute: true,
			},

			_calendarHeight: {
				type: String,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.Calendar.prototype */ {
			/**
			 * Fired when the selected dates changed.
			 * @event sap.ui.webcomponents.main.Calendar#selected-dates-change
			 * @param {Array} dates The selected dates timestamps
			 * @public
			 */
			"selected-dates-change": {
				detail: {
					dates: { type: Array },
				},
			 },
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-calendar</code> can be used stand alone to display the years, months, weeks and days
	 * <br><br>
	 *
	 * <h3>Usage</h3>
	 *
	 * The user can navigate to a particular date by:
	 * <br>
	 * <ul>
	 * <li>Pressing over a month inside the months view</li>
	 * <li>Pressing over an year inside the years view</li>
	 * </ul>
	 * <br>
	 * The user can comfirm a date selection by pressing over a date inside the days view.
	 * <br><br>
	 *
	 * <h3>Keyboard Handling</h3>
	 * The <code>ui5-calendar</code> provides advanced keyboard handling.
	 * If the <code>ui5-calendar</code> is focused the user can
	 * choose a picker by using the following shortcuts: <br>
	 * <ul>
	 * <li>[F4] - Shows month picker</li>
	 * <li>[SHIFT] + [F4] - Shows year picker</li>
	 * <br>
	 * When a picker is showed and focused the user can use the following keyboard
	 * shortcuts in order to perform a navigation:
	 * <br>
	 * - Day picker: <br>
	 * <ul>
	 * <li>[PAGEUP] - Navigate to the previous month</li>
	 * <li>[PAGEDOWN] - Navigate to the next month</li>
	 * <li>[SHIFT] + [PAGEUP] - Navigate to the previous year</li>
	 * <li>[SHIFT] + [PAGEDOWN] - Navigate to the next year</li>
	 * <li>[CTRL] + [SHIFT] + [PAGEUP] - Navigate ten years backwards</li>
	 * <li>[CTRL] + [SHIFT] + [PAGEDOWN] - Navigate ten years forwards</li>
	 * </ul>
	 * <br>
	 * - Month picker: <br>
	 * <ul>
	 * <li>[PAGEUP] - Navigate to the previous month</li>
	 * <li>[PAGEDOWN] - Navigate to the next month</li>
	 * </ul>
	 * <br>
	 * - Year picker: <br>
	 * <ul>
	 * <li>[PAGEUP] - Navigate to the previous year range</li>
	 * <li>[PAGEDOWN] - Navigate the next year range</li>
	 * </ul>
	 * <br>
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Calendar";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Calendar
	 * @extends sap.ui.webcomponents.main.PickerBase
	 * @tagname ui5-calendar
	 * @public
	 * @since 1.0.0-rc.11
	 */
	class Calendar extends PickerBase {
		static get metadata() {
			return metadata$m;
		}

		static get template() {
			return main$n;
		}

		static get styles() {
			return calendarCSS;
		}

		constructor() {
			super();
			this._header = {};
			this._header.onPressPrevious = this._handlePrevious.bind(this);
			this._header.onPressNext = this._handleNext.bind(this);
			this._header.onBtn1Press = this._handleMonthButtonPress.bind(this);
			this._header.onBtn2Press = this._handleYearButtonPress.bind(this);

			this._oMonth = {};
			this._oMonth.onSelectedDatesChange = this._handleSelectedDatesChange.bind(this);
			this._oMonth.onNavigate = this._handleMonthNavigate.bind(this);


			this._monthPicker = {};
			this._monthPicker._hidden = true;
			this._monthPicker.onSelectedMonthChange = this._handleSelectedMonthChange.bind(this);
			this._monthPicker.onNavigate = this._handleYearNavigate.bind(this);

			this._yearPicker = {};
			this._yearPicker._hidden = true;
			this._yearPicker.onSelectedYearChange = this._handleSelectedYearChange.bind(this);
			this._yearPicker.onNavigate = this._handleYearNavigate.bind(this);

			this._isShiftingYears = false;
		}

		onBeforeRendering() {
			const localeData = getCachedLocaleDataInstance(getLocale());
			const oYearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this._primaryCalendarType });
			const firstDayOfCalendarTimeStamp = this._getMinCalendarDate();

			if ((this.minDate || this.maxDate) && this._timestamp && !this.isInValidRange(this._timestamp * 1000)) {
				if (this._minDate) {
					this.timestamp = this._minDate / 1000;
				} else {
					this.timestamp = (new Date(firstDayOfCalendarTimeStamp)).getTime() / 1000;
				}
			}

			this._oMonth.formatPattern = this._formatPattern;
			this._oMonth.timestamp = this._timestamp;
			this._oMonth.selectedDates = [...this.selectedDates];
			this._oMonth.primaryCalendarType = this._primaryCalendarType;
			this._oMonth.selection = this.selection;
			this._oMonth.minDate = this.minDate;
			this._oMonth.maxDate = this.maxDate;
			this._header.monthText = localeData.getMonths("wide", this._primaryCalendarType)[this._month];
			this._header.yearText = oYearFormat.format(this._localDate, true);
			this._header.tabIndex = "-1";

			// month picker
			this._monthPicker.primaryCalendarType = this._primaryCalendarType;
			this._monthPicker.timestamp = this._timestamp;

			this._yearPicker.primaryCalendarType = this._primaryCalendarType;

			if (!this._isShiftingYears) {
				// year picker
				this._yearPicker.timestamp = this._timestamp;
			}

			this._isShiftingYears = false;

			this._refreshNavigationButtonsState();
		}

		onAfterRendering() {
			this._setDayPickerCurrentIndex(this._calendarDate, false);
		}

		_refreshNavigationButtonsState() {
			const minDateParsed = this.minDate && this.getFormat().parse(this.minDate);
			const maxDateParsed = this.maxDate && this.getFormat().parse(this.maxDate);
			let currentMonth = 0;
			let currentYear = 1;

			currentMonth = this.timestamp && CalendarDate.fromTimestamp(this.timestamp * 1000).getMonth();
			currentYear = this.timestamp && CalendarDate.fromTimestamp(this.timestamp * 1000).getYear();

			if (!this._oMonth._hidden) {
				if (this.minDate
					&& minDateParsed.getMonth() === currentMonth
					&& minDateParsed.getFullYear() === currentYear) {
					this._header._isPrevButtonDisabled = true;
				} else {
					this._header._isPrevButtonDisabled = false;
				}

				if (this.maxDate
					&& maxDateParsed.getMonth() === currentMonth
					&& maxDateParsed.getFullYear() === currentYear) {
					this._header._isNextButtonDisabled = true;
				} else {
					this._header._isNextButtonDisabled = false;
				}
			}

			if (!this._monthPicker._hidden) {
				if (this.minDate
					&& currentYear === minDateParsed.getFullYear()) {
					this._header._isPrevButtonDisabled = true;
				} else {
					this._header._isPrevButtonDisabled = false;
				}

				if (this.maxDate
					&& currentYear === maxDateParsed.getFullYear()) {
					this._header._isNextButtonDisabled = true;
				} else {
					this._header._isNextButtonDisabled = false;
				}
			}

			if (!this._yearPicker._hidden) {
				const cellsFromTheStart = 7;
				const cellsToTheEnd = 12;

				currentYear = this._yearPicker.timestamp && CalendarDate.fromTimestamp(this._yearPicker.timestamp * 1000).getYear();
				if (this.minDate
					&& (currentYear - minDateParsed.getFullYear()) < cellsFromTheStart) {
					this._header._isPrevButtonDisabled = true;
				} else {
					this._header._isPrevButtonDisabled = false;
				}

				if (this.maxDate
					&& (maxDateParsed.getFullYear() - currentYear) < cellsToTheEnd) {
					this._header._isNextButtonDisabled = true;
				} else {
					this._header._isNextButtonDisabled = false;
				}
			}
		}

		get dayPicker() {
			return this.shadowRoot.querySelector("ui5-daypicker");
		}

		get monthPicker() {
			return this.shadowRoot.querySelector("ui5-monthpicker");
		}

		get yearPicker() {
			return this.shadowRoot.querySelector("ui5-yearpicker");
		}

		get header() {
			return this.shadowRoot.querySelector("ui5-calendar-header");
		}

		get monthButton() {
			return this.header.shadowRoot.querySelector("[data-sap-show-picker='Month']");
		}

		get yearButton() {
			return this.header.shadowRoot.querySelector("[data-sap-show-picker='Year']");
		}

		_onkeydown(event) {
			if (isF4(event) && this._monthPicker._hidden) {
				this._showMonthPicker();
				if (!this._yearPicker._hidden) {
					this._hideYearPicker();
				}
			}

			if (isF4Shift(event) && this._yearPicker._hidden) {
				this._showYearPicker();
				if (!this._monthPicker._hidden) {
					this._hideMonthPicker();
				}
			}

			if (isTabNext(event)) {
				this._handleTabNext(event);
			}

			if (isTabPrevious(event)) {
				this._handleTabPrevous(event);
			}
		}

		_handleTabNext(event) {
			const target = event.target;

			if (target.tagName === "UI5-DAYPICKER" || target.tagName === "UI5-MONTHPICKER" || target.tagName === "UI5-YEARPICKER") {
				if (this.monthButton.getAttribute("hidden") === null) {
					this.monthButton.focus();
				} else {
					this.yearButton.focus();
				}
				event.preventDefault();
			} else if (target.tagName === "UI5-CALENDAR-HEADER" && event.path[0].getAttribute("data-sap-show-picker") === "Month") {
				this.yearButton.focus();
				event.preventDefault();
			} else {
				this._setPickerCurrentTabindex(-1);
			}
		}

		_handleTabPrevous(event) {
			const target = event.target;

			if (target.tagName === "UI5-CALENDAR-HEADER" && event.path[0].getAttribute("data-sap-show-picker") === "Month") {
				this._moveFocusToPickerContent();
				event.preventDefault();
			} else if (target.tagName === "UI5-CALENDAR-HEADER" && event.path[0].getAttribute("data-sap-show-picker") === "Year") {
				if (this.monthButton.getAttribute("hidden") === null) {
					this.monthButton.focus();
				} else {
					this._moveFocusToPickerContent();
				}
				event.preventDefault();
			}
		}

		_moveFocusToPickerContent() {
			if (!this._oMonth._hidden) {
				this.dayPicker._itemNav.focusCurrent();
			} else if (!this._monthPicker._hidden) {
				this.monthPicker._itemNav.focusCurrent();
			} else {
				this.yearPicker._itemNav.focusCurrent();
			}
		}

		_onfocusout(event) {
			this._header.tabIndex = "-1";
			this._setPickerCurrentTabindex(0);
		}

		_setPickerCurrentTabindex(index) {
			if (this.dayPicker) {
				this.dayPicker._setCurrentItemTabIndex(index);
			}

			if (this.monthPicker) {
				this.monthPicker._setCurrentItemTabIndex(index);
			}

			if (this.yearPicker) {
				this.yearPicker._setCurrentItemTabIndex(index);
			}
		}

		_handleSelectedDatesChange(event) {
			const selectedDates = event.detail.dates;

			// Deselecting a date in multiple selection type
			if (this.selection === CalendarSelection.Multiple && this.selectedDates.length > selectedDates.length) {
				const deselectedDates = this.selectedDates.filter(timestamp => !selectedDates.includes(timestamp));
				this.timestamp = deselectedDates[0];
			} else {
				this.timestamp = selectedDates[selectedDates.length - 1];
			}

			this.selectedDates = [...selectedDates];
			this.fireEvent("selected-dates-change", { dates: selectedDates });
		}

		_handleMonthNavigate(event) {
			this.timestamp = event.detail.timestamp;
		}

		_handleYearNavigate(event) {
			if (event.detail.start) {
				this._handlePrevious();
			}

			if (event.detail.end) {
				this._handleNext();
			}
		}

		_focusFirstDayOfMonth(targetDate) {
			let fistDayOfMonthIndex = -1;

			// focus first day of the month
			this.dayPicker._getVisibleDays(targetDate).forEach((date, index) => {
				if (date.getDate() === 1 && (fistDayOfMonthIndex === -1)) {
					fistDayOfMonthIndex = index;
				}
			});

			this.dayPicker._itemNav.currentIndex = fistDayOfMonthIndex;
			this.dayPicker._itemNav.focusCurrent();
		}

		_handleSelectedMonthChange(event) {
			const oNewDate = this._calendarDate;
			const oFocusedDate = CalendarDate.fromTimestamp(event.detail.timestamp * 1000, this._primaryCalendarType);

			oNewDate.setMonth(oFocusedDate.getMonth());
			this.timestamp = oNewDate.valueOf() / 1000;
			this._monthPicker.timestamp = this.timestamp;

			this._hideMonthPicker();
			this._setDayPickerCurrentIndex(oNewDate, true);
		}

		_handleSelectedYearChange(event) {
			const oNewDate = this._calendarDate;
			const oFocusedDate = CalendarDate.fromTimestamp(event.detail.timestamp * 1000, this._primaryCalendarType);

			oNewDate.setYear(oFocusedDate.getYear());
			this.timestamp = oNewDate.valueOf() / 1000;
			this._yearPicker.timestamp = this.timestamp;

			this._hideYearPicker();
			this._setDayPickerCurrentIndex(oNewDate, true);
		}

		async _setDayPickerCurrentIndex(calDate, applyFocus) {
			await RenderScheduler.whenFinished();
			const currentDate = new CalendarDate(calDate, this._primaryCalendarType);
			const currentIndex = this.dayPicker.focusableDays.findIndex(item => {
				return CalendarDate.fromLocalJSDate(new Date(item.timestamp * 1000), this._primaryCalendarType).isSame(currentDate);
			});
			this.dayPicker._itemNav.currentIndex = currentIndex;
			if (applyFocus) {
				this.dayPicker._itemNav.focusCurrent();
			} else {
				this.dayPicker._itemNav.update();
			}
		}

		_handleMonthButtonPress() {
			this._hideYearPicker();
			this._header._isMonthButtonHidden = true;

			this[`_${this._monthPicker._hidden ? "show" : "hide"}MonthPicker`]();
		}

		_handleYearButtonPress() {
			this._hideMonthPicker();
			this[`_${this._yearPicker._hidden ? "show" : "hide"}YearPicker`]();
		}

		_handlePrevious() {
			if (this._monthPicker._hidden && this._yearPicker._hidden) {
				this._showPrevMonth();
			} else if (this._monthPicker._hidden && !this._yearPicker._hidden) {
				this._showPrevPageYears();
			} else if (!this._monthPicker._hidden && this._yearPicker._hidden) {
				this._showPrevYear();
			}
		}

		_handleNext() {
			if (this._monthPicker._hidden && this._yearPicker._hidden) {
				this._showNextMonth();
			} else if (this._monthPicker._hidden && !this._yearPicker._hidden) {
				this._showNextPageYears();
			} else if (!this._monthPicker._hidden && this._yearPicker._hidden) {
				this._showNextYear();
			}
		}

		_showNextMonth() {
			const nextMonth = this._calendarDate;
			const maxCalendarDateYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();
			nextMonth.setDate(1);
			nextMonth.setMonth(nextMonth.getMonth() + 1);

			if (nextMonth.getYear() > maxCalendarDateYear) {
				return;
			}

			if (!this.isInValidRange(nextMonth.toLocalJSDate().valueOf())) {
				return;
			}

			this._focusFirstDayOfMonth(nextMonth);
			this.timestamp = nextMonth.valueOf() / 1000;
		}

		_showPrevMonth() {
			let iNewMonth = this._month - 1,
				iNewYear = this._calendarDate.getYear();

			const minCalendarDateYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();

			// focus first day of the month
			const currentMonthDate = this.dayPicker._calendarDate.setMonth(this.dayPicker._calendarDate.getMonth());
			const lastMonthDate = this.dayPicker._calendarDate.setMonth(this.dayPicker._calendarDate.getMonth() - 1);

			// set the date to last day of last month
			currentMonthDate.setDate(-1);

			// find the index of the last day
			let lastDayOfMonthIndex = -1;

			if (!this.isInValidRange(currentMonthDate.toLocalJSDate().valueOf())) {
				return;
			}

			this.dayPicker._getVisibleDays(lastMonthDate).forEach((date, index) => {
				const isSameDate = currentMonthDate.getDate() === date.getDate();
				const isSameMonth = currentMonthDate.getMonth() === date.getMonth();

				if (isSameDate && isSameMonth) {
					lastDayOfMonthIndex = (index + 1);
				}
			});

			if (lastDayOfMonthIndex !== -1) {
				// find the DOM for the last day index
				const lastDay = this.dayPicker.shadowRoot.querySelectorAll(".ui5-dp-content .ui5-dp-item")[lastDayOfMonthIndex];

				// update current item in ItemNavigation
				this.dayPicker._itemNav.current = lastDayOfMonthIndex;

				// focus the item
				lastDay.focus();
			}

			if (iNewMonth > 11) {
				iNewMonth = 0;
				iNewYear = this._calendarDate.getYear() + 1;
			}

			if (iNewMonth < 0) {
				iNewMonth = 11;
				iNewYear = this._calendarDate.getYear() - 1;
			}

			const oNewDate = this._calendarDate;
			oNewDate.setYear(iNewYear);
			oNewDate.setMonth(iNewMonth);


			if (oNewDate.getYear() < minCalendarDateYear) {
				return;
			}
			this.timestamp = oNewDate.valueOf() / 1000;
		}

		_showNextYear() {
			const maxCalendarDateYear = CalendarDate.fromTimestamp(this._getMaxCalendarDate(), this._primaryCalendarType).getYear();
			if (this._calendarDate.getYear() === maxCalendarDateYear) {
				return;
			}

			const newDate = this._calendarDate;
			newDate.setYear(this._calendarDate.getYear() + 1);

			this.timestamp = newDate.valueOf() / 1000;
		}

		_showPrevYear() {
			const minCalendarDateYear = CalendarDate.fromTimestamp(this._getMinCalendarDate(), this._primaryCalendarType).getYear();
			if (this._calendarDate.getYear() === minCalendarDateYear) {
				return;
			}

			const oNewDate = this._calendarDate;
			oNewDate.setYear(this._calendarDate.getYear() - 1);

			this.timestamp = oNewDate.valueOf() / 1000;
		}

		_showNextPageYears() {
			if (!this._isYearInRange(this._yearPicker.timestamp,
				YearPicker._ITEMS_COUNT - YearPicker._MIDDLE_ITEM_INDEX,
				CalendarDate.fromTimestamp(this._minDate, this._primaryCalendarType).getYear(),
				CalendarDate.fromTimestamp(this._maxDate, this._primaryCalendarType).getYear())) {
				return;
			}

			const newDate = CalendarDate.fromTimestamp(this._yearPicker.timestamp * 1000, this._primaryCalendarType);
			newDate.setYear(newDate.getYear() + YearPicker._ITEMS_COUNT);

			this._yearPicker = Object.assign({}, this._yearPicker, {
				timestamp: newDate.valueOf() / 1000,
			});

			this.timestamp = this._yearPicker.timestamp;

			this._isShiftingYears = true;
		}

		_showPrevPageYears() {
			if (!this._isYearInRange(this._yearPicker.timestamp,
				-YearPicker._MIDDLE_ITEM_INDEX - 1,
				CalendarDate.fromTimestamp(this._minDate, this._primaryCalendarType).getYear(),
				CalendarDate.fromTimestamp(this._maxDate, this._primaryCalendarType).getYear())) {
				return;
			}

			const newDate = CalendarDate.fromTimestamp(this._yearPicker.timestamp * 1000, this._primaryCalendarType);
			newDate.setYear(newDate.getYear() - YearPicker._ITEMS_COUNT);

			this._yearPicker = Object.assign({}, this._yearPicker, {
				timestamp: newDate.valueOf() / 1000,
			});

			this.timestamp = this._yearPicker.timestamp;

			this._isShiftingYears = true;
		}

		_showMonthPicker() {
			this._monthPicker = Object.assign({}, this._monthPicker);
			this._oMonth = Object.assign({}, this._oMonth);

			this._monthPicker.timestamp = this._timestamp;
			this._monthPicker._hidden = false;
			this._oMonth._hidden = true;

			const calendarRect = this.shadowRoot.querySelector(".ui5-cal-root").getBoundingClientRect();

			this._calendarWidth = calendarRect.width.toString();
			this._calendarHeight = calendarRect.height.toString();

			const monthPicker = this.shadowRoot.querySelector("[ui5-monthpicker]");
			monthPicker.selectedDates = [...this.selectedDates];
			const currentMonthIndex = monthPicker._itemNav._getItems().findIndex(item => {
				const calDate = CalendarDate.fromTimestamp(parseInt(item.timestamp) * 1000, this._primaryCalendarType);
				return calDate.getMonth() === this._calendarDate.getMonth();
			});
			monthPicker._itemNav.currentIndex = currentMonthIndex;
			this._header._isMonthButtonHidden = true;
		}

		_showYearPicker() {
			this._yearPicker = Object.assign({}, this._yearPicker);
			this._oMonth = Object.assign({}, this._oMonth);

			this._yearPicker.timestamp = this._timestamp;
			this._yearPicker._selectedYear = this._calendarDate.getYear();
			this._yearPicker._hidden = false;
			this._oMonth._hidden = true;

			const calendarRect = this.shadowRoot.querySelector(".ui5-cal-root").getBoundingClientRect();

			this._calendarWidth = calendarRect.width.toString();
			this._calendarHeight = calendarRect.height.toString();

			const yearPicker = this.shadowRoot.querySelector("[ui5-yearpicker]");
			yearPicker.selectedDates = [...this.selectedDates];
			const currentYearIndex = yearPicker._itemNav._getItems().findIndex(item => {
				const calDate = CalendarDate.fromTimestamp(parseInt(item.timestamp) * 1000, this._primaryCalendarType);
				return calDate.getYear() === this._calendarDate.getYear();
			});
			yearPicker._itemNav.currentIndex = currentYearIndex;
		}

		_hideMonthPicker() {
			this._monthPicker = Object.assign({}, this._monthPicker);
			this._oMonth = Object.assign({}, this._oMonth);

			if (this._yearPicker._hidden) {
				this._oMonth._hidden = false;
			}
			this._monthPicker._hidden = true;
			this._header._isMonthButtonHidden = false;
		}

		_hideYearPicker() {
			this._yearPicker = Object.assign({}, this._yearPicker);
			this._oMonth = Object.assign({}, this._oMonth);

			if (this._monthPicker._hidden) {
				this._oMonth._hidden = false;
			}
			this._yearPicker._hidden = true;
		}

		_isYearInRange(timestamp, yearsoffset, minYear, maxYear) {
			if (timestamp) {
				const oCalDate = CalendarDate.fromTimestamp(timestamp * 1000, this._primaryCalendarType);
				oCalDate.setMonth(0);
				oCalDate.setDate(1);
				oCalDate.setYear(oCalDate.getYear() + yearsoffset);
				return oCalDate.getYear() >= minYear && oCalDate.getYear() <= maxYear;
			}
		}

		get classes() {
			return {
				main: {
					"ui5-cal-root": true,
				},
				dayPicker: {
					".ui5-daypicker--hidden": !this._yearPicker._hidden || !this._monthPicker._hidden,
				},
				yearPicker: {
					"ui5-yearpicker--hidden": this._yearPicker._hidden,
				},
				monthPicker: {
					"ui5-monthpicker--hidden": this._monthPicker._hidden,
				},
			};
		}

		/**
		 * Checks if a date is in range between minimum and maximum date
		 * @param {object} value
		 * @public
		 */
		isInValidRange(value = "") {
			const pickedDate = CalendarDate.fromTimestamp(value).toLocalJSDate(),
				minDate = this._minDate && new Date(this._minDate),
				maxDate = this._maxDate && new Date(this._maxDate);

			if (minDate && maxDate) {
				if (minDate <= pickedDate && maxDate >= pickedDate) {
					return true;
				}
			} else if (minDate && !maxDate) {
				if (minDate <= pickedDate) {
					return true;
				}
			} else if (maxDate && !minDate) {
				if (maxDate >= pickedDate) {
					return true;
				}
			} else if (!maxDate && !minDate) {
				return true;
			}

			return false;
		}

		get styles() {
			return {
				main: {
					"height": `${this._calendarHeight ? `${this._calendarHeight}px` : "auto"}`,
					"width": `${this._calendarWidth ? `${this._calendarWidth}px` : "auto"}`,
				},
			};
		}

		static get dependencies() {
			return [
				CalendarHeader,
				DayPicker,
				MonthPicker,
				YearPicker,
			];
		}
	}

	Calendar.define();

	/**
	 * @lends sap.ui.webcomponents.main.types.InputType.prototype
	 * @public
	 */
	const InputTypes = {
		/**
		 * <ui5-input type="text"></ui5-input> defines a one-line text input field:
		 * @public
		 * @type {Text}
		 */
		Text: "Text",

		/**
		 * The <ui5-input type="email"></ui5-input> is used for input fields that must contain an e-mail address.
		 * @public
		 * @type {Email}
		 */
		Email: "Email",

		/**
		 * The <ui5-input type="number"></ui5-input> defines a numeric input field.
		 * @public
		 * @type {Number}
		 */
		Number: "Number",

		/**
		 * <ui5-input type="password"></ui5-input> defines a password field.
		 * @public
		 * @type {Password}
		 */
		Password: "Password",

		/**
		 * The <ui5-input type="url"></ui5-input> is used for input fields that should contain a telephone number.
		 * @public
		 * @type {Tel}
		 */
		Tel: "Tel",

		/**
		 * The <i5-input type="url"></ui5-input> is used for input fields that should contain a URL address.
		 * @public
		 * @type {URL}
		 */
		URL: "URL",
	};

	/**
	 * @class
	 * Defines input types
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.InputType
	 * @public
	 * @enum {string}
	 */
	class InputType extends DataType {
		static isValid(value) {
			return !!InputTypes[value];
		}
	}

	InputType.generateTypeAccessors(InputTypes);

	const block0$o = (context) => { return scopedHtml`<div class="ui5-input-root" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}"><div class="ui5-input-content"><input id="${ifDefined(context._id)}-inner" class="ui5-input-inner" type="${ifDefined(context.inputType)}" inner-input ?inner-input-with-icon="${context.icon.length}" ?disabled="${context.disabled}" ?readonly="${context._readonly}" .value="${ifDefined(context.value)}" placeholder="${ifDefined(context.placeholder)}" maxlength="${ifDefined(context.maxlength)}" role="${ifDefined(context.accInfo.input.role)}" aria-owns="${ifDefined(context.accInfo.input.ariaOwns)}" ?aria-invalid="${context.accInfo.input.ariaInvalid}" aria-haspopup="${ifDefined(context.accInfo.input.ariaHasPopup)}" aria-describedby="${ifDefined(context.accInfo.input.ariaDescribedBy)}" aria-autocomplete="${ifDefined(context.accInfo.input.ariaAutoComplete)}" aria-expanded="${ifDefined(context.accInfo.input.ariaExpanded)}" aria-label="${ifDefined(context.accInfo.input.ariaLabel)}" aria-required="${ifDefined(context.required)}" @input="${context._handleInput}" @change="${context._handleChange}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @click=${context._click} @focusin=${context.innerFocusIn} data-sap-no-tab-ref data-sap-focus-ref step="${ifDefined(context.step)}" />${ context.icon.length ? block1$i() : undefined }${ context.showSuggestions ? block2$h(context) : undefined }${ context.accInfo.input.ariaDescription ? block3$a(context) : undefined }${ context.hasValueState ? block4$9(context) : undefined }</div><slot name="formSupport"></slot></div>`; };
	const block1$i = (context) => { return scopedHtml`<div class="ui5-input-icon-root"><slot name="icon"></slot></div>`; };
	const block2$h = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}-suggestionsText" class="ui5-hidden-text">${ifDefined(context.suggestionsText)}</span><span id="${ifDefined(context._id)}-selectionText" class="ui5-hidden-text" aria-live="polite" role="status"></span><span id="${ifDefined(context._id)}-suggestionsCount" class="ui5-hidden-text" aria-live="polite">${ifDefined(context.availableSuggestionsCount)}</span>`; };
	const block3$a = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}-descr" class="ui5-hidden-text">${ifDefined(context.accInfo.input.ariaDescription)}</span>`; };
	const block4$9 = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}-valueStateDesc" class="ui5-hidden-text">${ifDefined(context.ariaValueStateHiddenText)}</span>`; };


	const main$o = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$o(context);
	};

	const block0$p = (context) => { return scopedHtml`${ context.showSuggestions ? block1$j(context) : undefined }${ context.hasValueStateMessage ? block17(context) : undefined } `; };
	const block1$j = (context) => { return scopedHtml`<ui5-responsive-popover no-arrow _disable-initial-focus placement-type="Bottom" horizontal-align="Left" style="${styleMap(context.styles.suggestionsPopover)}" @ui5-after-open="${ifDefined(context._afterOpenPopover)}" @ui5-after-close="${ifDefined(context._afterClosePopover)}" @scroll="${context._scroll}">${ context._isPhone ? block2$i(context) : undefined }${ !context._isPhone ? block7$5(context) : undefined }<ui5-list separators="${ifDefined(context.suggestionSeparators)}">${ repeat(context.suggestionsTexts, (item, index) => item._id || index, (item, index) => block12$1(item)) }</ui5-list>${ context._isPhone ? block16(context) : undefined }</ui5-responsive-popover>`; };
	const block2$i = (context) => { return scopedHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context._closeRespPopover}"></ui5-button></div><div class="row"><div class="input-root-phone"><input class="ui5-input-inner-phone" type="${ifDefined(context.inputType)}" .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" @input="${context._handleInput}" @change="${context._handleChange}" /></div></div>${ context.hasValueStateMessage ? block3$b(context) : undefined }</div>`; };
	const block3$b = (context) => { return scopedHtml`<div class="row ${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.suggestionPopoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block4$a(context) : block5$8(context) }</div>`; };
	const block4$a = (context) => { return scopedHtml`${ifDefined(context.valueStateText)}`; };
	const block5$8 = (context) => { return scopedHtml`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block6$7(item)) }`; };
	const block6$7 = (item, index, context) => { return scopedHtml`${ifDefined(item)}`; };
	const block7$5 = (context) => { return scopedHtml`${ context.hasValueStateMessage ? block8$4(context) : undefined }`; };
	const block8$4 = (context) => { return scopedHtml`<div slot="header" class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style=${styleMap(context.styles.suggestionPopoverHeader)}>${ context.shouldDisplayDefaultValueStateMessage ? block9$3(context) : block10$2(context) }</div>`; };
	const block9$3 = (context) => { return scopedHtml`${ifDefined(context.valueStateText)}`; };
	const block10$2 = (context) => { return scopedHtml`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block11$1(item)) }`; };
	const block11$1 = (item, index, context) => { return scopedHtml`${ifDefined(item)}`; };
	const block12$1 = (item, index, context) => { return scopedHtml`${ item.group ? block13(item) : block14(item) }`; };
	const block13 = (item, index, context) => { return scopedHtml`<ui5-li-groupheader data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}</ui5-li-groupheader>`; };
	const block14 = (item, index, context) => { return scopedHtml`<ui5-li-suggestion-item image="${ifDefined(item.image)}" icon="${ifDefined(item.icon)}" info="${ifDefined(item.info)}" type="${ifDefined(item.type)}" info-state="${ifDefined(item.infoState)}" @ui5-_item-press="${ifDefined(item.fnOnSuggestionItemPress)}" data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}${ item.description ? block15(item) : undefined }</ui5-li-suggestion-item>`; };
	const block15 = (item, index, context) => { return scopedHtml`<span slot="richDescription">${unsafeHTML(item.description)}</span>`; };
	const block16 = (context) => { return scopedHtml`<div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${context._closeRespPopover}">OK</ui5-button></div>`; };
	const block17 = (context) => { return scopedHtml`<ui5-popover skip-registry-update _disable-initial-focus prevent-focus-restore no-padding no-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom"><div slot="header" class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block18(context) : block19(context) }</div></ui5-popover>`; };
	const block18 = (context) => { return scopedHtml`${ifDefined(context.valueStateText)}`; };
	const block19 = (context) => { return scopedHtml`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block20(item)) }`; };
	const block20 = (item, index, context) => { return scopedHtml`${ifDefined(item)}`; };


	const main$p = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$p(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var styles$6 = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:inline-block}:host{width:var(--_ui5_input_width);min-width:var(--_ui5_input_width);height:var(--_ui5_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:\"72override\",var(--sapFontFamily);font-style:normal;background-color:var(--sapField_Background);border:1px solid var(--sapField_BorderColor);border-radius:var(--_ui5_input_wrapper_border_radius);box-sizing:border-box}:host([focused]){outline:var(--_ui5_input_focus_border_width) dotted var(--sapContent_FocusColor);outline-offset:-3px}:host([value-state]:not([value-state=None])[focused]){outline:var(--_ui5_input_focus_border_width) dotted var(--sapContent_FocusColor);outline-offset:-4px}.ui5-input-root{width:100%;height:100%;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit}:host([disabled]){opacity:var(--_ui5_input_disabled_opacity);cursor:default;pointer-events:none;background:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor)}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;line-height:normal;padding:var(--_ui5_input_inner_padding);box-sizing:border-box;min-width:3rem;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit}[inner-input][inner-input-with-icon]{padding:var(--_ui5_input_inner_padding_with_icon)}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-moz-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}:host([disabled]) [inner-input]:-ms-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]:-ms-input-placeholder{visibility:hidden}[inner-input]:-ms-input-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit}:host([readonly]){border-color:var(--sapField_ReadOnly_BorderColor);background:var(--sapField_ReadOnly_Background)}:host(:not([value-state]):not([readonly]):hover){background-color:var(--sapField_Hover_Background);border:1px solid var(--sapField_Hover_BorderColor)}:host([value-state=None]:not([readonly]):hover){background-color:var(--sapField_Hover_Background);border:1px solid var(--sapField_Hover_BorderColor)}:host([value-state]:not([value-state=None])){border-width:var(--_ui5_input_state_border_width)}:host([value-state=Error]) [inner-input],:host([value-state=Warning]) [inner-input]{font-style:var(--_ui5_input_error_warning_font_style)}:host([value-state=Error]) [inner-input]{font-weight:var(--_ui5_input_error_font_weight)}:host([value-state=Error]:not([readonly])){background-color:var(--sapField_InvalidBackground);border-color:var(--sapField_InvalidColor)}:host([value-state=Error]:not([readonly]):not([disabled])),:host([value-state=Information]:not([readonly]):not([disabled])),:host([value-state=Warning]:not([readonly]):not([disabled])){border-style:var(--_ui5_input_error_warning_border_style)}:host([value-state=Warning]:not([readonly])){background-color:var(--sapField_WarningBackground);border-color:var(--sapField_WarningColor)}:host([value-state=Success]:not([readonly])){background-color:var(--sapField_SuccessBackground);border-color:var(--sapField_SuccessColor);border-width:1px}:host([value-state=Information]:not([readonly])){background-color:var(--sapField_InformationBackground);border-color:var(--sapField_InformationColor);border-width:var(--_ui5-input-information_border_width)}[inner-input]::-ms-clear{height:0;width:0}.ui5-input-icon-root{min-width:var(--_ui5_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot=icon]){padding:var(--_ui5_input_icon_padding)}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var ValueStateMessageCss = ".ui5-valuestatemessage-popover{min-height:1rem;box-shadow:none}.ui5-valuestatemessage-root{box-sizing:border-box;display:inline-block;color:var(--sapTextColor);font-size:var(--sapFontSmallSize);font-family:\"72override\",var(--sapFontFamily);padding:.3rem .625rem;overflow:hidden;text-overflow:ellipsis;min-width:6.25rem;border:var(--_ui5_value_state_message_border)}.ui5-valuestatemessage--success{background:var(--sapSuccessBackground)}.ui5-valuestatemessage--warning{background:var(--sapWarningBackground)}.ui5-valuestatemessage--error{background:var(--sapErrorBackground)}.ui5-valuestatemessage--information{background:var(--sapInformationBackground)}";

	/**
	 * @public
	 */
	const metadata$n = {
		tag: "ui5-input",
		languageAware: true,
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.Input.prototype */ {

			/**
			 * Defines the icon to be displayed in the <code>ui5-input</code>.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			icon: {
				type: HTMLElement,
			},

			/**
			 * Defines the <code>ui5-input</code> suggestion items.
			 * <br><br>
			 * Example:
			 * <br><br>
			 * &lt;ui5-input show-suggestions><br>
			 * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text="Item #1">&lt;/ui5-suggestion-item><br>
			 * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text="Item #2">&lt;/ui5-suggestion-item><br>
			 * &lt;/ui5-input>
			 * <br>
			 * <ui5-input show-suggestions>
			 * <ui5-suggestion-item text="Item #1"></ui5-suggestion-item>
			 * <ui5-suggestion-item text="Item #2"></ui5-suggestion-item>
			 * </ui5-input>
			 * <br><br>
			 * <b>Note:</b> The suggestion would be displayed only if the <code>showSuggestions</code>
			 * property is set to <code>true</code>.
			 * <br><br>
			 * <b>Note:</b> The &lt;ui5-suggestion-item> is recommended to be used as a suggestion item.
			 * Importing the Input Suggestions Support feature:
			 * <br>
			 * <code>import "@ui5/webcomponents/dist/features/InputSuggestions.js";</code>
			 * <br>
			 * also automatically imports the &lt;ui5-suggestion-item> for your convenience.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				propertyName: "suggestionItems",
				type: HTMLElement,
			},

			/**
			 * The slot is used for native <code>input</code> HTML element to enable form submit,
			 * when <code>name</code> property is set.
			 * @type {HTMLElement[]}
			 * @private
			 */
			formSupport: {
				type: HTMLElement,
			},

			/**
			 * Defines the value state message that will be displayed as pop up under the <code>ui5-input</code>.
			 * <br><br>
			 *
			 * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.
			 * <br>
			 * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,
			 * when the <code>ui5-input</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.
			 * <br>
			 * <b>Note:</b> If the <code>ui5-input</code> has <code>suggestionItems</code>,
			 * the <code>valueStateMessage</code> would be displayed as part of the same popover, if used on desktop, or dialog - on phone.
			 * @type {HTMLElement[]}
			 * @since 1.0.0-rc.6
			 * @slot
			 * @public
			 */
			valueStateMessage: {
				type: HTMLElement,
			},
		},
		properties: /** @lends  sap.ui.webcomponents.main.Input.prototype */  {

			/**
			 * Defines whether the <code>ui5-input</code> is in disabled state.
			 * <br><br>
			 * <b>Note:</b> A disabled <code>ui5-input</code> is completely noninteractive.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Defines if characters within the suggestions are to be highlighted
			 * in case the input value matches parts of the suggestions text.
			 * <br><br>
			 * <b>Note:</b> takes effect when <code>showSuggestions</code> is set to <code>true</code>
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @sicne 1.0.0-rc.8
			 */
			highlight: {
				type: Boolean,
			},

			/**
			 * Defines a short hint intended to aid the user with data entry when the
			 * <code>ui5-input</code> has no value.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			placeholder: {
				type: String,
			},

			/**
			 * Defines whether the <code>ui5-input</code> is read-only.
			 * <br><br>
			 * <b>Note:</b> A read-only <code>ui5-input</code> is not editable,
			 * but still provides visual feedback upon user interaction.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			readonly: {
				type: Boolean,
			},

			/**
			 * Defines whether the <code>ui5-input</code> is required.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.3
			 */
			required: {
				type: Boolean,
			},

			/**
			 * Defines the HTML type of the <code>ui5-input</code>.
			 * Available options are: <code>Text</code>, <code>Email</code>,
			 * <code>Number</code>, <code>Password</code>, <code>Tel</code>, and <code>URL</code>.
			 * <br><br>
			 * <b>Notes:</b>
			 * <ul>
			 * <li>The particular effect of this property differs depending on the browser
			 * and the current language settings, especially for type <code>Number</code>.</li>
			 * <li>The property is mostly intended to be used with touch devices
			 * that use different soft keyboard layouts depending on the given input type.</li>
			 * </ul>
			 *
			 * @type {InputType}
			 * @defaultvalue "Text"
			 * @public
			 */
			type: {
				type: InputType,
				defaultValue: InputType.Text,
			},

			/**
			 * Defines the value of the <code>ui5-input</code>.
			 * <br><br>
			 * <b>Note:</b> The property is updated upon typing.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			value: {
				type: String,
			},

			/**
			 * Defines the value state of the <code>ui5-input</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>None</code></li>
			 * <li><code>Error</code></li>
			 * <li><code>Warning</code></li>
			 * <li><code>Success</code></li>
			 * <li><code>Information</code></li>
			 * </ul>
			 *
			 * @type {ValueState}
			 * @defaultvalue "None"
			 * @public
			 */
			valueState: {
				type: ValueState,
				defaultValue: ValueState.None,
			},

			/**
			 * Determines the name with which the <code>ui5-input</code> will be submitted in an HTML form.
			 *
			 * <br><br>
			 * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * <br><br>
			 * <b>Note:</b> When set, a native <code>input</code> HTML element
			 * will be created inside the <code>ui5-input</code> so that it can be submitted as
			 * part of an HTML form. Do not use this property unless you need to submit a form.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			name: {
				type: String,
			},

			/**
			 * Defines whether the <code>ui5-input</code> should show suggestions, if such are present.
			 * <br><br>
			 * <b>Note:</b>
			 * Don`t forget to import the <code>InputSuggestions</code> module from <code>"@ui5/webcomponents/dist/features/InputSuggestions.js"</code> to enable this functionality.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showSuggestions: {
				type: Boolean,
			},

			/**
			 * Sets the maximum number of characters available in the input field.
			 *
			 * @type {Integer}
			 * @since 1.0.0-rc.5
			 * @public
			 */
			maxlength: {
				type: Integer,
			},

			/**
			 * Defines the aria-label attribute for the input
			 *
			 * @type {String}
			 * @since 1.0.0-rc.8
			 * @private
			 * @defaultvalue ""
			 */
			ariaLabel: {
				type: String,
			},

			/**
			 * Receives id(or many ids) of the elements that label the input
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			/**
			 * @private
			 */
			focused: {
				type: Boolean,
			},

			_input: {
				type: Object,
			},

			_inputAccInfo: {
				type: Object,
			},

			_wrapperAccInfo: {
				type: Object,
			},

			_inputWidth: {
				type: Integer,
			},

			_listWidth: {
				type: Integer,
			},

			_isPopoverOpen: {
				type: Boolean,
				noAttribute: true,
			},

			_inputIconFocused: {
				type: Boolean,
				noAttribute: true,
			},
		},
		events: /** @lends  sap.ui.webcomponents.main.Input.prototype */ {
			/**
			 * Fired when the input operation has finished by pressing Enter or on focusout.
			 *
			 * @event
			 * @public
			 */
			change: {},

			/**
			 * Fired when the value of the <code>ui5-input</code> changes at each keystroke,
			 * and when a suggestion item has been selected.
			 *
			 * @event
			 * @public
			 */
			input: {},

			/**
			 * Fired when user presses Enter key on the <code>ui5-input</code>.
			 * <br><br>
			 * <b>Note:</b> The event is fired independent of whether there was a change before or not.
			 * If change was performed, the event is fired after the change event.
			 * The event is also fired when an item of the select list is selected by pressing Enter.
			 *
			 * @event
			 * @public
			 */
			submit: {},

			/**
			 * Fired when a suggestion item, that is displayed in the suggestion popup, is selected.
			 *
			 * @event sap.ui.webcomponents.main.Input#suggestion-item-select
			 * @param {HTMLElement} item The selected item
			 * @public
			 */
			"suggestion-item-select": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the user navigates to a suggestion item via the ARROW keys,
			 * as a preview, before the final selection.
			 *
			 * @event sap.ui.webcomponents.main.Input#suggestion-item-preview
			 * @param {HTMLElement} item The previewed suggestion item
			 * @param {HTMLElement} targetRef The DOM ref of the suggestion item.
			 * @public
			 * @since 1.0.0-rc.8
			 */
			"suggestion-item-preview": {
				detail: {
					item: { type: HTMLElement },
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the user scrolls the suggestion popover.
			 *
			 * @event sap.ui.webcomponents.main.Input#suggestion-scroll
			 * @param {Integer} scrollTop The current scroll position
			 * @param {HTMLElement} scrollContainer The scroll container
			 * @public
			 * @since 1.0.0-rc.8
			 */
			"suggestion-scroll": {
				detail: {
					scrollTop: { type: Integer },
					scrollContainer: { type: HTMLElement },
				},
			},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-input</code> component allows the user to enter and edit text or numeric values in one line.
	 * <br>
	 * Additionally, you can provide <code>suggestionItems</code>,
	 * that are displayed in a popover right under the input.
	 * <br><br>
	 * The text field can be editable or read-only (<code>readonly</code> property),
	 * and it can be enabled or disabled (<code>enabled</code> property).
	 * To visualize semantic states, such as "error" or "warning", the <code>valueState</code> property is provided.
	 * When the user makes changes to the text, the change event is fired,
	 * which enables you to react on any text change.
	 * <br><br>
	 * <b>Note:</b> If you are using the <code>ui5-input</code> as a single npm module,
	 * don't forget to import the <code>InputSuggestions</code> module from
	 * "@ui5/webcomponents/dist/features/InputSuggestions.js"
	 * to enable the suggestions functionality.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Input.js";</code>
	 * <br>
	 * <code>import "@ui5/webcomponents/dist/features/InputSuggestions.js";</code> (optional - for input suggestions support)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Input
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-input
	 * @appenddocs SuggestionItem
	 * @public
	 */
	class Input extends UI5Element {
		static get metadata() {
			return metadata$n;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$o;
		}

		static get staticAreaTemplate() {
			return main$p;
		}

		static get styles() {
			return styles$6;
		}

		static get staticAreaStyles() {
			return [ResponsivePopoverCommonCss, ValueStateMessageCss];
		}

		constructor() {
			super();
			// Indicates if there is selected suggestionItem.
			this.hasSuggestionItemSelected = false;

			// Represents the value before user moves selection from suggestion item to another
			// and its value is updated after each move.
			// Note: Used to register and fire "input" event upon [SPACE] or [ENTER].
			// Note: The property "value" is updated upon selection move and can`t be used.
			this.valueBeforeItemSelection = "";

			// Represents the value before user moves selection between the suggestion items
			// and its value remains the same when the user navigates up or down the list.
			// Note: Used to cancel selection upon [ESC].
			this.valueBeforeItemPreview = "";

			// Indicates if the user selection has been canceled with [ESC].
			this.suggestionSelectionCanceled = false;

			// tracks the value between focus in and focus out to detect that change event should be fired.
			this.previousValue = undefined;

			// Indicates, if the component is rendering for first time.
			this.firstRendering = true;

			// The value that should be highlited.
			this.highlightValue = "";

			// all sementic events
			this.EVENT_SUBMIT = "submit";
			this.EVENT_CHANGE = "change";
			this.EVENT_INPUT = "input";
			this.EVENT_SUGGESTION_ITEM_SELECT = "suggestion-item-select";

			// all user interactions
			this.ACTION_ENTER = "enter";
			this.ACTION_USER_INPUT = "input";

			// Suggestions array initialization
			this.suggestionsTexts = [];

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");

			this._handleResizeBound = this._handleResize.bind(this);
		}

		onEnterDOM() {
			ResizeHandler.register(this, this._handleResizeBound);
		}

		onExitDOM() {
			ResizeHandler.deregister(this, this._handleResizeBound);
		}

		onBeforeRendering() {
			if (this.showSuggestions) {
				this.enableSuggestions();
				this.suggestionsTexts = this.Suggestions.defaultSlotProperties(this.highlightValue);
			}

			const FormSupport = getFeature("FormSupport");
			if (FormSupport) {
				FormSupport.syncNativeHiddenInput(this);
			} else if (this.name) {
				console.warn(`In order for the "name" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
			}
		}

		async onAfterRendering() {
			if (!this.firstRendering && !isPhone() && this.Suggestions) {
				const shouldOpenSuggestions = this.shouldOpenSuggestions();

				this.Suggestions.toggle(shouldOpenSuggestions, {
					preventFocusRestore: !this.hasSuggestionItemSelected,
				});

				RenderScheduler.whenFinished().then(async () => {
					this._listWidth = await this.Suggestions._getListWidth();
				});

				if (!isPhone() && shouldOpenSuggestions) {
					// Set initial focus to the native input

					(await this.getInputDOMRef()).focus();
				}
			}

			if (!this.firstRendering && this.hasValueStateMessage) {
				this.toggle(this.shouldDisplayOnlyValueStateMessage);
			}

			this.firstRendering = false;
		}

		_onkeydown(event) {
			if (isUp(event)) {
				return this._handleUp(event);
			}

			if (isDown(event)) {
				return this._handleDown(event);
			}

			if (isSpace(event)) {
				return this._handleSpace(event);
			}

			if (isEnter(event)) {
				return this._handleEnter(event);
			}

			if (isEscape(event)) {
				return this._handleEscape(event);
			}

			if (this.showSuggestions) {
				this.Suggestions._deselectItems();
			}

			this._keyDown = true;
		}

		_onkeyup(event) {
			this._keyDown = false;
		}

		/* Event handling */
		_handleUp(event) {
			if (this.Suggestions && this.Suggestions.isOpened()) {
				this.Suggestions.onUp(event);
			}
		}

		_handleDown(event) {
			if (this.Suggestions && this.Suggestions.isOpened()) {
				this.Suggestions.onDown(event);
			}
		}

		_handleSpace(event) {
			if (this.Suggestions) {
				this.Suggestions.onSpace(event);
			}
		}

		_handleEnter(event) {
			const itemPressed = !!(this.Suggestions && this.Suggestions.onEnter(event));
			if (!itemPressed) {
				this.fireEventByAction(this.ACTION_ENTER);
			}
		}

		_handleEscape() {
			if (this.showSuggestions && this.Suggestions && this.Suggestions._isItemOnTarget()) {
				// Restore the value.
				this.value = this.valueBeforeItemPreview;

				// Mark that the selection has been canceled, so the popover can close
				// and not reopen, due to receiving focus.
				this.suggestionSelectionCanceled = true;

				// Close suggestion popover
				this._closeRespPopover(true);
			}
		}

		async _onfocusin(event) {
			const inputDomRef = await this.getInputDOMRef();

			if (event.target !== inputDomRef) {
				return;
			}

			this.focused = true; // invalidating property
			this.previousValue = this.value;
			this.valueBeforeItemPreview = this.value;

			this._inputIconFocused = event.target && event.target === this.querySelector("[ui5-icon]");
		}

		_onfocusout(event) {
			const focusedOutToSuggestions = this.Suggestions && event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.contains(this.Suggestions.responsivePopover);
			const focusedOutToValueStateMessage = event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.querySelector(".ui5-valuestatemessage-root");

			// if focusout is triggered by pressing on suggestion item or value state message popover, skip invalidation, because re-rendering
			// will happen before "itemPress" event, which will make item "active" state not visualized
			if (focusedOutToSuggestions	|| focusedOutToValueStateMessage) {
				event.stopImmediatePropagation();
				return;
			}

			const toBeFocused = event.relatedTarget;

			if (toBeFocused && toBeFocused.classList.contains(this._id)) {
				return;
			}

			this.closePopover();

			this.previousValue = "";
			this.focused = false; // invalidating property
		}

		_click(event) {
			if (isPhone() && !this.readonly && this.Suggestions) {
				this.Suggestions.open(this);
				this.isRespPopoverOpen = true;
			}
		}

		_handleChange(event) {
			this.fireEvent(this.EVENT_CHANGE);
		}

		_scroll(event) {
			const detail = event.detail;
			this.fireEvent("suggestion-scroll", {
				scrollTop: detail.scrollTop,
				scrollContainer: detail.targetRef,
			});
		}

		async _handleInput(event) {
			const inputDomRef = await this.getInputDOMRef();

			this.suggestionSelectionCanceled = false;

			if (this.value && this.type === InputType.Number && !isBackSpace(event) && !inputDomRef.value) {
				// For input with type="Number", if the delimiter is entered second time, the inner input is firing event with empty value
				return;
			}

			if (event.target === inputDomRef) {
				// stop the native event, as the semantic "input" would be fired.
				event.stopImmediatePropagation();
			}

			/* skip calling change event when an input with a placeholder is focused on IE
				- value of the host and the internal input should be differnt in case of actual input
				- input is called when a key is pressed => keyup should not be called yet
			*/
			const skipFiring = (inputDomRef.value === this.value) && isIE() && !this._keyDown && !!this.placeholder;

			!skipFiring && this.fireEventByAction(this.ACTION_USER_INPUT);

			this.hasSuggestionItemSelected = false;

			if (this.Suggestions) {
				this.Suggestions.updateSelectedItemPosition(null);
			}
		}

		_handleResize() {
			this._inputWidth = this.offsetWidth;
		}

		_closeRespPopover(preventFocusRestore) {
			this.Suggestions.close(preventFocusRestore);
		}

		async _afterOpenPopover() {
			// Set initial focus to the native input
			if (isPhone()) {
				(await this.getInputDOMRef()).focus();
			}
		}

		_afterClosePopover() {
			this.announceSelectedItem();

			// close device's keyboard and prevent further typing
			if (isPhone()) {
				this.blur();
			}
		}

		toggle(isToggled) {
			if (isToggled && !this.isRespPopoverOpen) {
				this.openPopover();
			} else {
				this.closePopover();
			}
		}

		/**
		 * Checks if the value state popover is open.
		 * @returns {Boolean} true if the popover is open, false otherwise
		 * @public
		 */
		isOpen() {
			return !!this._isPopoverOpen;
		}

		async openPopover() {
			const popover = await this._getPopover();

			if (popover) {
				this._isPopoverOpen = true;
				popover.openBy(this);
			}
		}

		async closePopover() {
			const popover = await this._getPopover();

			popover && popover.close();
		}

		async _getPopover() {
			const staticAreaItem = await this.getStaticAreaItemDomRef();
			return staticAreaItem && staticAreaItem.querySelector("[ui5-popover]");
		}

		enableSuggestions() {
			if (this.Suggestions) {
				this.Suggestions.highlight = this.highlight;
				return;
			}

			const Suggestions = getFeature("InputSuggestions");
			if (Suggestions) {
				this.Suggestions = new Suggestions(this, "suggestionItems", this.highlight);
			} else {
				throw new Error(`You have to import "@ui5/webcomponents/dist/features/InputSuggestions.js" module to use ui5-input suggestions`);
			}
		}

		shouldOpenSuggestions() {
			return !!(this.suggestionItems.length
				&& this.focused
				&& this.showSuggestions
				&& !this.hasSuggestionItemSelected
				&& !this.suggestionSelectionCanceled);
		}

		selectSuggestion(item, keyboardUsed) {
			if (item.group) {
				return;
			}

			const itemText = item.text || item.textContent; // keep textContent for compatibility
			const fireInput = keyboardUsed
				? this.valueBeforeItemSelection !== itemText : this.value !== itemText;

			this.hasSuggestionItemSelected = true;

			if (fireInput) {
				this.value = itemText;
				this.valueBeforeItemSelection = itemText;
				this.fireEvent(this.EVENT_INPUT);
				this.fireEvent(this.EVENT_CHANGE);
			}

			this.valueBeforeItemPreview = "";
			this.suggestionSelectionCanceled = false;

			this.fireEvent(this.EVENT_SUGGESTION_ITEM_SELECT, { item });
		}

		previewSuggestion(item) {
			this.valueBeforeItemSelection = this.value;
			this.updateValueOnPreview(item);
			this.announceSelectedItem();
			this._previewItem = item;
		}

		/**
		 * Updates the input value on item preview.
		 * @param {Object} item The item that is on preview
		 */
		updateValueOnPreview(item) {
			const noPreview = item.type === "Inactive" || item.group;
			const itemValue = noPreview ? "" : (item.effectiveTitle || item.textContent);
			this.value = itemValue;
		}

		/**
		 * The suggestion item on preview.
		 * @type { ui5-suggestion-item }
		 * @readonly
		 * @public
		 */
		get previewItem() {
			if (!this._previewItem) {
				return null;
			}

			return this.getSuggestionByListItem(this._previewItem);
		}

		async fireEventByAction(action) {
			await this.getInputDOMRef();

			if (this.disabled || this.readonly) {
				return;
			}

			const inputValue = await this.getInputValue();
			const isSubmit = action === this.ACTION_ENTER;
			const isUserInput = action === this.ACTION_USER_INPUT;

			const input = await this.getInputDOMRef();
			const cursorPosition = input.selectionStart;

			this.value = inputValue;
			this.highlightValue = inputValue;
			this.valueBeforeItemPreview = inputValue;

			if (isSafari()) {
				// When setting the value by hand, Safari moves the cursor when typing in the middle of the text (See #1761)
				setTimeout(() => {
					input.selectionStart = cursorPosition;
					input.selectionEnd = cursorPosition;
				}, 0);
			}

			if (isUserInput) { // input
				this.fireEvent(this.EVENT_INPUT);
				// Angular two way data binding
				this.fireEvent("value-changed");
				return;
			}

			if (isSubmit) { // submit
				this.fireEvent(this.EVENT_SUBMIT);
			}

			// In IE, pressing the ENTER does not fire change
			const valueChanged = (this.previousValue !== undefined) && (this.previousValue !== this.value);
			if (isIE() && isSubmit && valueChanged) {
				this.fireEvent(this.EVENT_CHANGE);
			}
		}

		async getInputValue() {
			const domRef = this.getDomRef();

			if (domRef) {
				return (await this.getInputDOMRef()).value;
			}
			return "";
		}

		async getInputDOMRef() {
			if (isPhone() && this.Suggestions && this.suggestionItems.length) {
				await this.Suggestions._respPopover();
				return this.Suggestions && this.Suggestions.responsivePopover.querySelector(".ui5-input-inner-phone");
			}

			return this.getDomRef().querySelector(`input`);
		}

		getLabelableElementId() {
			return this.getInputId();
		}

		getSuggestionByListItem(item) {
			const key = parseInt(item.getAttribute("data-ui5-key"));
			return this.suggestionItems[key];
		}

		/**
		 * Returns if the suggestions popover is scrollable.
		 * The method returns <code>Promise</code> that resolves to true,
		 * if the popup is scrollable and false otherwise.
		 * @returns {Promise}
		 */
		isSuggestionsScrollable() {
			if (!this.Suggestions) {
				return Promise.resolve(false);
			}

			return this.Suggestions._isScrollable();
		}

		getInputId() {
			return `${this._id}-inner`;
		}

		/* Suggestions interface  */
		onItemFocused() {}

		onItemMouseOver(event) {
			const item = event.target;
			const suggestion = this.getSuggestionByListItem(item);
			suggestion && suggestion.fireEvent("mouseover", {
				item: suggestion,
				targetRef: item,
			});
		}

		onItemMouseOut(event) {
			const item = event.target;
			const suggestion = this.getSuggestionByListItem(item);
			suggestion && suggestion.fireEvent("mouseout", {
				item: suggestion,
				targetRef: item,
			});
		}

		onItemSelected(item, keyboardUsed) {
			this.selectSuggestion(item, keyboardUsed);
		}

		onItemPreviewed(item) {
			this.previewSuggestion(item);
			this.fireEvent("suggestion-item-preview", {
				item: this.getSuggestionByListItem(item),
				targetRef: item,
			});
		}

		onOpen() {}

		onClose() {}

		valueStateTextMappings() {
			const i18nBundle = this.i18nBundle;

			return {
				"Success": i18nBundle.getText(VALUE_STATE_SUCCESS),
				"Information": i18nBundle.getText(VALUE_STATE_INFORMATION),
				"Error": i18nBundle.getText(VALUE_STATE_ERROR),
				"Warning": i18nBundle.getText(VALUE_STATE_WARNING),
			};
		}

		announceSelectedItem() {
			const invisibleText = this.shadowRoot.querySelector(`#${this._id}-selectionText`);

			if (this.Suggestions && this.Suggestions._isItemOnTarget()) {
				invisibleText.textContent = this.itemSelectionAnnounce;
			} else {
				invisibleText.textContent = "";
			}
		}

		get _readonly() {
			return this.readonly && !this.disabled;
		}

		get _headerTitleText() {
			return this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
		}

		get inputType() {
			return this.type.toLowerCase();
		}

		get suggestionsTextId() {
			return this.showSuggestions ? `${this._id}-suggestionsText` : "";
		}

		get valueStateTextId() {
			return this.hasValueState ? `${this._id}-valueStateDesc` : "";
		}

		get suggestionsCount() {
			return this.showSuggestions ? `${this._id}-suggestionsCount` : "";
		}

		get accInfo() {
			const ariaHasPopupDefault = this.showSuggestions ? "true" : undefined;
			const ariaAutoCompleteDefault = this.showSuggestions ? "list" : undefined;
			const ariaDescribedBy = this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this.suggestionsCount} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId} ${this.suggestionsCount}`.trim();

			return {
				"input": {
					"ariaDescribedBy": ariaDescribedBy || undefined,
					"ariaInvalid": this.valueState === ValueState.Error ? "true" : undefined,
					"ariaHasPopup": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,
					"ariaAutoComplete": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,
					"role": this._inputAccInfo && this._inputAccInfo.role,
					"ariaOwns": this._inputAccInfo && this._inputAccInfo.ariaOwns,
					"ariaExpanded": this._inputAccInfo && this._inputAccInfo.ariaExpanded,
					"ariaDescription": this._inputAccInfo && this._inputAccInfo.ariaDescription,
					"ariaLabel": (this._inputAccInfo && this._inputAccInfo.ariaLabel) || getEffectiveAriaLabelText(this),
				},
			};
		}

		get ariaValueStateHiddenText() {
			if (!this.hasValueStateMessage) {
				return;
			}

			if (this.shouldDisplayDefaultValueStateMessage) {
				return this.valueStateText;
			}

			return this.valueStateMessageText.map(el => el.textContent).join(" ");
		}

		get itemSelectionAnnounce() {
			return this.Suggestions ? this.Suggestions.itemSelectionAnnounce : undefined;
		}

		get classes() {
			return {
				popoverValueState: {
					"ui5-valuestatemessage-root": true,
					"ui5-responsive-popover-header": !this.isOpen(),
					"ui5-valuestatemessage--success": this.valueState === ValueState.Success,
					"ui5-valuestatemessage--error": this.valueState === ValueState.Error,
					"ui5-valuestatemessage--warning": this.valueState === ValueState.Warning,
					"ui5-valuestatemessage--information": this.valueState === ValueState.Information,
				},
			};
		}

		get styles() {
			return {
				popoverHeader: {
					"width": `${this._inputWidth}px`,
				},
				suggestionPopoverHeader: {
					"display": this._listWidth === 0 ? "none" : "inline-block",
					"width": `${this._listWidth}px`,
					"padding": "0.5625rem 1rem",
				},
				suggestionsPopover: {
					"max-width": `${this._inputWidth}px`,
				},
			};
		}

		get suggestionSeparators() {
			return "None";
		}

		get valueStateMessageText() {
			return this.getSlottedNodes("valueStateMessage").map(el => el.cloneNode(true));
		}

		get shouldDisplayOnlyValueStateMessage() {
			return this.hasValueStateMessage && !this.shouldOpenSuggestions() && this.focused;
		}

		get shouldDisplayDefaultValueStateMessage() {
			return !this.valueStateMessage.length && this.hasValueStateMessage;
		}

		get hasValueState() {
			return this.valueState !== ValueState.None;
		}

		get hasValueStateMessage() {
			return this.hasValueState && this.valueState !== ValueState.Success
				&& (!this._inputIconFocused // Handles the cases when valueStateMessage is forwarded (from datepicker e.g.)
				|| (this._isPhone && this.Suggestions)); // Handles Input with suggestions on mobile
		}

		get valueStateText() {
			return this.valueStateTextMappings()[this.valueState];
		}

		get suggestionsText() {
			return this.i18nBundle.getText(INPUT_SUGGESTIONS);
		}

		get availableSuggestionsCount() {
			if (this.showSuggestions) {
				switch (this.suggestionsTexts.length) {
				case 0:
					return this.i18nBundle.getText(INPUT_SUGGESTIONS_NO_HIT);

				case 1:
					return this.i18nBundle.getText(INPUT_SUGGESTIONS_ONE_HIT);

				default:
					return this.i18nBundle.getText(INPUT_SUGGESTIONS_MORE_HITS, this.suggestionsTexts.length);
				}
			}

			return undefined;
		}

		get step() {
			return this.type === InputType.Number ? "any" : undefined;
		}

		get _isPhone() {
			return isPhone();
		}

		static get dependencies() {
			const Suggestions = getFeature("InputSuggestions");

			return [Popover].concat(Suggestions ? Suggestions.dependencies : []);
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	Input.define();

	const block0$q = (context) => { return scopedHtml`<div class="ui5-date-picker-root" style="${styleMap(context.styles.main)}" @keydown="${context._onkeydown}" @focusout="${context._onfocusout}"><!-- INPUT --><ui5-input id="${ifDefined(context._id)}-inner" class="ui5-date-picker-input" placeholder="${ifDefined(context._placeholder)}" type="${ifDefined(context.type)}" value="${ifDefined(context.value)}" ?disabled="${context.disabled}" ?required="${context.required}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" @ui5-change="${ifDefined(context._handleInputChange)}" @ui5-input="${ifDefined(context._handleInputLiveChange)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(context.accInfo)}">${ context.valueStateMessage.length ? block1$k() : undefined }${ !context.readonly ? block2$j(context) : undefined }</ui5-input><slot name="formSupport"></slot></div>`; };
	const block1$k = (context) => { return scopedHtml`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`; };
	const block2$j = (context) => { return scopedHtml`<ui5-icon slot="icon" name="${ifDefined(context.openIconName)}" tabindex="-1" accessible-name="${ifDefined(context.openIconTitle)}" show-tooltip @click="${context.togglePicker}" input-icon ?pressed="${context._isPickerOpen}" dir="${ifDefined(context.effectiveDir)}"></ui5-icon>`; };


	const main$q = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$q(context);
	};

	const block0$r = (context) => { return scopedHtml`<ui5-responsive-popover id="${ifDefined(context._id)}-responsive-popover" allow-target-overlap="${ifDefined(context._respPopoverConfig.allowTargetOverlap)}" stay-open-on-scroll="${ifDefined(context._respPopoverConfig.stayOpenOnScroll)}" placement-type="Bottom" horizontal-align="Left" ?disable-scrolling="${context._isIE}" no-arrow with-padding no-stretch ?_hide-header=${ifDefined(context._shouldHideHeader)} @keydown="${context._onkeydown}" @ui5-before-open="${ifDefined(context._respPopoverConfig.beforeOpen)}" @ui5-after-open="${ifDefined(context._respPopoverConfig.afterOpen)}" @ui5-before-close="${ifDefined(context._respPopoverConfig.beforeClose)}" @ui5-after-close="${ifDefined(context._respPopoverConfig.afterClose)}">${ context.showHeader ? block1$l(context) : undefined }<ui5-calendar id="${ifDefined(context._id)}-calendar" primary-calendar-type="${ifDefined(context._calendar.primaryCalendarType)}" format-pattern="${ifDefined(context._calendar.formatPattern)}" timestamp="${ifDefined(context._calendar.timestamp)}" .selectedDates="${ifDefined(context._calendar.selectedDates)}" .selection="${ifDefined(context._calendar.selection)}" .minDate="${ifDefined(context._calendar.minDate)}" .maxDate="${ifDefined(context._calendar.maxDate)}" @ui5-selected-dates-change="${ifDefined(context._calendar.onSelectedDatesChange)}" ?hide-week-numbers="${context.hideWeekNumbers}"></ui5-calendar>${ context.showFooter ? block2$k() : undefined }</ui5-responsive-popover>`; };
	const block1$l = (context) => { return scopedHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.closePicker}"></ui5-button></div></div>`; };
	const block2$k = (context) => { return scopedHtml``; };


	const main$r = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$r(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var datePickerCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}[input-icon]{color:var(--sapContent_IconColor);cursor:pointer;outline:none;padding:var(--_ui5_input_icon_padding);border-left:1px solid transparent;min-width:1rem;min-height:1rem}[input-icon][pressed]{background:var(--sapButton_Selected_Background);color:var(--sapButton_Active_TextColor)}[input-icon]:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}[input-icon]:not([pressed]):not(:active):hover{background:var(--sapButton_Lite_Hover_Background)}[input-icon]:hover{border-left:var(--_ui5_select_hover_icon_left_border)}[input-icon][dir=rtl]:hover{border-left:none;border-right:var(--_ui5_select_hover_icon_left_border)}[input-icon][dir=rtl]{border-left:none;border-right:1px solid transparent}:host(:not([hidden])){display:inline-block}:host{color:var(--sapField_TextColor);background-color:var(--sapField_Background)}:host .ui5-date-picker-input{width:100%;min-width:inherit;color:inherit;background-color:inherit}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var datePickerPopoverCss = "[ui5-calendar]{width:100%}";

	/**
	 * @public
	 */
	const metadata$o = {
		tag: "ui5-date-picker",
		altTag: "ui5-datepicker",
		languageAware: true,
		managedSlots: true,
		properties: /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */ {
			/**
			 * Defines a formatted date value.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			value: {
				type: String,
			},

			/**
			 * Defines the value state of the <code>ui5-date-picker</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>None</code></li>
			 * <li><code>Error</code></li>
			 * <li><code>Warning</code></li>
			 * <li><code>Success</code></li>
			 * <li><code>Information</code></li>
			 * </ul>
			 *
			 * @type {ValueState}
			 * @defaultvalue "None"
			 * @public
			 */
			valueState: {
				type: ValueState,
				defaultValue: ValueState.None,
			},

			/**
			 * Determines the format, displayed in the input field.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			formatPattern: {
				type: String,
			},

			/**
			 * Determines the minimum date available for selection.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @since 1.0.0-rc.6
			 * @public
			 */
			minDate: {
				type: String,
			},

			/**
			 * Determines the maximum date available for selection.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @since 1.0.0-rc.6
			 * @public
			 */
			maxDate: {
				type: String,
			},

			/**
			 * Determines the calendar type.
			 * The input value is formated according to the calendar type
			 * and the picker shows the months and years from the specified calendar.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Gregorian</code></li>
			 * <li><code>Islamic</code></li>
			 * <li><code>Japanese</code></li>
			 * <li><code>Buddhist</code></li>
			 * <li><code>Persian</code></li>
			 * </ul>
			 *
			 * @type {CalendarType}
			 * @defaultvalue "Gregorian"
			 * @public
			 */
			primaryCalendarType: {
				type: CalendarType,
			},

			/**
			 * Defines whether the <code>ui5-date-picker</code> is required.
			 *
			 * @since 1.0.0-rc.9
			 * @type {Boolean}
			 * @defaultvalue false
			 * @public
			 */
			required: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-date-picker</code> is displayed as disabled.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-date-picker</code> is displayed as read-only.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			readonly: {
				type: Boolean,
			},

			/**
			 * Defines a short hint, intended to aid the user with data entry when the
			 * <code>ui5-date-picker</code> has no value.
			 *
			 * <br><br>
			 * <b>Note:</b> When no placeholder is set, the format pattern is displayed as a placeholder.
			 * Passing an empty string as the value of this property will make the <code>ui5-date-picker</code> appear empty - without placeholder or format pattern.
			 *
			 * @type {string}
			 * @defaultvalue undefined
			 * @public
			 */
			placeholder: {
				type: String,
				defaultValue: undefined,
			},

			/**
			 * Determines the name with which the <code>ui5-date-picker</code> will be submitted in an HTML form.
			 *
			 * <br><br>
			 * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:
			 * <code>import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";</code>
			 *
			 * <br><br>
			 * <b>Note:</b> When set, a native <code>input</code> HTML element
			 * will be created inside the <code>ui5-date-picker</code> so that it can be submitted as
			 * part of an HTML form. Do not use this property unless you need to submit a form.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			name: {
				type: String,
			},

			/**
			 * Defines the visibility of the week numbers column.
			 * <br><br>
			 *
			 * <b>Note:<b> For calendars other than Gregorian,
			 * the week numbers are not displayed regardless of what is set.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			 */
			hideWeekNumbers: {
				type: Boolean,
			},

			/**
			 * Defines the aria-label attribute for the <code>ui5-date-picker</code>.
			 *
			 * @type {String}
			 * @since 1.0.0-rc.9
			 * @private
			 * @defaultvalue ""
			 */
			ariaLabel: {
				type: String,
			},

			/**
			 * Receives id(or many ids) of the elements that label the <code>ui5-date-picker</code>.
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.9
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			_isPickerOpen: {
				type: Boolean,
				noAttribute: true,
			},

			_respPopoverConfig: {
				type: Object,
			},

			_calendar: {
				type: Object,
			},
		},

		slots: /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */ {
			/**
			 * Defines the value state message that will be displayed as pop up under the <code>ui5-date-picker</code>.
			 * <br><br>
			 *
			 * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.
			 * <br>
			 * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,
			 * when the <code>ui5-date-picker</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.
			 * @type {HTMLElement}
			 * @since 1.0.0-rc.7
			 * @slot
			 * @public
			 */
			valueStateMessage: {
				type: HTMLElement,
			},
		},

		events: /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */ {

			/**
			 * Fired when the input operation has finished by pressing Enter or on focusout.
			 *
			 * @event
			 * @public
			*/
			change: {},

			/**
			 * Fired when the value of the <code>ui5-date-picker</code> is changed at each key stroke.
			 *
			 * @event
			 * @public
			*/
			input: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-date-picker</code> component provides an input field with assigned calendar which opens on user action.
	 * The <code>ui5-date-picker</code> allows users to select a localized date using touch,
	 * mouse, or keyboard input. It consists of two parts: the date input field and the
	 * date picker.
	 *
	 * <h3>Usage</h3>
	 *
	 * The user can enter a date by:
	 * <ul>
	 * <li>Using the calendar that opens in a popup</li>
	 * <li>Typing it in directly in the input field</li>
	 * </ul>
	 * <br><br>
	 * When the user makes an entry and chooses the enter key, the calendar shows the corresponding date.
	 * When the user directly triggers the calendar display, the actual date is displayed.
	 *
	 * <h3>Formatting</h3>
	 *
	 * If a date is entered by typing it into
	 * the input field, it must fit to the used date format.
	 * <br><br>
	 * Supported format options are pattern-based on Unicode LDML Date Format notation.
	 * For more information, see <ui5-link target="_blank" href="http://unicode.org/reports/tr35/#Date_Field_Symbol_Table" class="api-table-content-cell-link">UTS #35: Unicode Locale Data Markup Language</ui5-link>.
	 * <br><br>
	 * For example, if the <code>format-pattern</code> is "yyyy-MM-dd",
	 * a valid value string is "2015-07-30" and the same is displayed in the input.
	 *
	 * <h3>Keyboard Handling</h3>
	 * The <code>ui5-date-picker</code> provides advanced keyboard handling.
	 * If the <code>ui5-date-picker</code> is focused,
	 * you can open or close the drop-down by pressing <code>F4</code>, <code>ALT+UP</code> or <code>ALT+DOWN</code> keys.
	 * Once the drop-down is opened, you can use the <code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code> arrow keys
	 * to navigate through the dates and select one by pressing the <code>Space</code> or <code>Enter</code> keys. Moreover you can
	 * use TAB to reach the buttons for changing month and year.
	 * <br>
	 *
	 * If the <code>ui5-date-picker</code> is focused and the picker dialog is not opened the user can
	 * increment or decrement the corresponding field of the JS date object referenced by <code>dateValue</code> propery
	 * by using the following shortcuts:
	 * <br>
	 * <ul>
	 * <li>[PAGEDOWN] - Decrements the corresponding day of the month by one</li>
	 * <li>[SHIFT] + [PAGEDOWN] - Decrements the corresponding month by one</li>
	 * <li>[SHIFT] + [CTRL] + [PAGEDOWN] - Decrements the corresponding year by one</li>
	 * <li>[PAGEUP] - Increments the corresponding day of the month by one</li>
	 * <li>[SHIFT] + [PAGEUP] - Increments the corresponding month by one</li>
	 * <li>[SHIFT] + [CTRL] + [PAGEUP] - Increments the corresponding year by one</li>
	 * </ul>
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/DatePicker";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.DatePicker
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-date-picker
	 * @public
	 */
	class DatePicker extends UI5Element {
		static get metadata() {
			return metadata$o;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$q;
		}

		static get staticAreaTemplate() {
			return main$r;
		}

		static get styles() {
			return datePickerCss;
		}

		static get staticAreaStyles() {
			return [ResponsivePopoverCommonCss, datePickerPopoverCss];
		}

		constructor() {
			super();

			this._respPopoverConfig = {
				allowTargetOverlap: true,
				stayOpenOnScroll: true,
				afterClose: () => {
					this._isPickerOpen = false;

					if (isPhone()) {
						// close device's keyboard and prevent further typing
						this.blur();
					} else if (this._focusInputAfterClose) {
						this._getInput().focus();
						this._focusInputAfterClose = false;
					}

					const calendar = this.calendar;
					if (calendar) {
						calendar._hideMonthPicker();
						calendar._hideYearPicker();
					}
				},
				afterOpen: async () => {
					await RenderScheduler.whenFinished();
					const calendar = this.calendar;

					if (!calendar) {
						return;
					}

					const dayPicker = calendar.shadowRoot.querySelector(`#${calendar._id}-daypicker`);
					const selectedDay = dayPicker.shadowRoot.querySelector(".ui5-dp-item--selected");
					const today = dayPicker.shadowRoot.querySelector(".ui5-dp-item--now");
					let focusableDay = selectedDay || today;
					if (!selectedDay && (this.minDate || this.maxDate) && !this.isInValidRange((new Date().getTime()))) {
						focusableDay = this.findFirstFocusableDay(dayPicker);
					}

					if (this._focusInputAfterOpen) {
						this._focusInputAfterOpen = false;
						this._getInput().focus();
					} else if (focusableDay) {
						focusableDay.focus();

						let focusableDayIdx = parseInt(focusableDay.getAttribute("data-sap-index"));
						const focusableItem = dayPicker.focusableDays.find(item => parseInt(item._index) === focusableDayIdx);
						focusableDayIdx = focusableItem ? dayPicker.focusableDays.indexOf(focusableItem) : focusableDayIdx;

						dayPicker._itemNav.current = focusableDayIdx;
						dayPicker._itemNav.update();
					}
				},
			};

			this._calendar = {
				onSelectedDatesChange: this._handleCalendarChange.bind(this),
				selection: CalendarSelection.Single,
				selectedDates: [],
			};

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		findFirstFocusableDay(daypicker) {
			const today = new Date();
			if (!this.isInValidRange(today.getTime())) {
				const focusableItems = Array.from(daypicker.shadowRoot.querySelectorAll(".ui5-dp-item"));
				return focusableItems.filter(x => !x.classList.contains("ui5-dp-item--disabled"))[0];
			}
		}

		onBeforeRendering() {
			this._calendar.primaryCalendarType = this._primaryCalendarType;
			this._calendar.formatPattern = this._formatPattern;

			if (this.minDate && !this.isValid(this.minDate)) {
				this.minDate = null;
				console.warn(`In order for the "minDate" property to have effect, you should enter valid date format`); // eslint-disable-line
			}

			if (this.maxDate && !this.isValid(this.maxDate)) {
				this.maxDate = null;
				console.warn(`In order for the "maxDate" property to have effect, you should enter valid date format`); // eslint-disable-line
			}

			if (this._checkValueValidity(this.value)) {
				this._changeCalendarSelection();
			} else if (this.value !== "") {
				this._calendar.selectedDates = [];
			}

			const FormSupport = getFeature("FormSupport");
			if (FormSupport) {
				FormSupport.syncNativeHiddenInput(this);
			} else if (this.name) {
				console.warn(`In order for the "name" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`); // eslint-disable-line
			}

			if (this.minDate) {
				this._calendar.minDate = this.minDate;
			}

			if (this.maxDate) {
				this._calendar.maxDate = this.maxDate;
			}
		}

		_getTimeStampFromString(value) {
			const jsDate = this.getFormat().parse(value);
			if (jsDate) {
				return CalendarDate.fromLocalJSDate(jsDate, this._primaryCalendarType).toUTCJSDate().valueOf();
			}
			return undefined;
		}

		_onkeydown(event) {
			if (isShow(event)) {
				event.preventDefault(); // Prevent scroll on Alt/Option + Arrow Up/Down
				if (this.isOpen()) {
					if (isF4(event)) {
						if (this.calendar._monthPicker._hidden) {
							this.calendar._showYearPicker();
						}
					} else {
						this._toggleAndFocusInput();
					}
				} else {
					this._toggleAndFocusInput();
				}
			}

			if (this.isOpen()) {
				return;
			}

			if (isEnter(event)) {
				this._handleEnterPressed();
			}

			if (isPageUpShiftCtrl(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(true, true, false, false);
			} else if (isPageUpShift(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(true, false, true, false);
			} else if (isPageUp(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(true, false, false, true);
			}

			if (isPageDownShiftCtrl(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(false, true, false, false);
			} else if (isPageDownShift(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(false, false, true, false);
			} else if (isPageDown(event)) {
				event.preventDefault();
				this._changeDateValueWrapper(false, false, false, true);
			}
		}

		/**
		 * This method is used in the derived classes
		 */
		_handleEnterPressed() {}

		/**
		 * This method is used in the derived classes
		 */
		_onfocusout() {}

		/**
		 * Adds or extracts a given number of measuring units from the "dateValue" property value
		 * @param {boolean} forward if true indicates addition
		 * @param {boolean} years indicates that the measuring unit is in years
		 * @param {boolean} months indicates that the measuring unit is in months
		 * @param {boolean} days indicates that the measuring unit is in days
		 * @param {int} step number of measuring units to substract or add defaults to 1
		 */
		_changeDateValueWrapper(forward, years, months, days, step = 1) {
			let date = this.dateValue;
			date = this._changeDateValue(date, forward, years, months, days, step);
			this.value = this.formatValue(date);
		}

		/**
		 * Adds or extracts a given number of measuring units from the "dateValue" property value
		 *
		 * @param {boolean} date js date object to be changed
		 * @param {boolean} years indicates that the measuring unit is in years
		 * @param {boolean} months indicates that the measuring unit is in months
		 * @param {boolean} days indicates that the measuring unit is in days
		 * @param {boolean} forward if true indicates addition
		 * @param {int} step number of measuring units to substract or add defaults ot 1
		 * @returns {Object} JS date object
		 */
		_changeDateValue(date, forward, years, months, days, step = 1) {
			if (!date) {
				return;
			}

			let calDate = CalendarDate.fromLocalJSDate(date, this._primaryCalendarType);
			const oldCalDate = new CalendarDate(calDate, this._primaryCalendarType);
			const incrementStep = forward ? step : -step;

			if (incrementStep === 0 || (!days && !months && !years)) {
				return;
			}

			if (days) {
				calDate.setDate(calDate.getDate() + incrementStep);
			} else if (months) {
				calDate.setMonth(calDate.getMonth() + incrementStep);
				const monthDiff = (calDate.getYear() - oldCalDate.getYear()) * 12 + (calDate.getMonth() - oldCalDate.getMonth());

				if (calDate.getMonth() === oldCalDate.getMonth() || monthDiff !== incrementStep) {
					// first condition example: 31th of March increment month with -1 results in 2th of March
					// second condition example: 31th of January increment month with +1 results in 2th of March
					calDate.setDate(0);
				}
			} else if (years) {
				calDate.setYear(calDate.getYear() + incrementStep);

				if (calDate.getMonth() !== oldCalDate.getMonth()) {
					// day doesn't exist in this month (February 29th)
					calDate.setDate(0);
				}
			}

			if (calDate.valueOf() < this._minDate) {
				calDate = CalendarDate.fromTimestamp(this._minDate, this._primaryCalendarType);
			} else if (calDate.valueOf() > this._maxDate) {
				calDate = CalendarDate.fromTimestamp(this._maxDate, this._primaryCalendarType);
			}

			return calDate.toLocalJSDate();
		}

		_toggleAndFocusInput() {
			this.togglePicker();
			this._getInput().focus();
		}

		_getInput() {
			return this.shadowRoot.querySelector("[ui5-input]");
		}

		async _handleInputChange() {
			let nextValue = await this._getInput().getInputValue();
			const emptyValue = nextValue === "";
			const isValid = emptyValue || this._checkValueValidity(nextValue);

			if (isValid) {
				nextValue = this.normalizeValue(nextValue);
				this.valueState = ValueState.None;
			} else {
				this.valueState = ValueState.Error;
			}


			this.value = nextValue;
			this.fireEvent("change", { value: nextValue, valid: isValid });
			// Angular two way data binding
			this.fireEvent("value-changed", { value: nextValue, valid: isValid });
		}

		async _handleInputLiveChange() {
			const nextValue = await this._getInput().getInputValue();
			const emptyValue = nextValue === "";
			const isValid = emptyValue || this._checkValueValidity(nextValue);

			this.value = nextValue;
			this.fireEvent("input", { value: nextValue, valid: isValid });
		}

		_checkValueValidity(value) {
			return this.isValid(value) && this.isInValidRange(this._getTimeStampFromString(value));
		}

		_click(event) {
			if (isPhone()) {
				this.responsivePopover.open(this);
				event.preventDefault(); // prevent immediate selection of any item
			}
		}

		/**
		 * Checks if a value is valid against the current date format of the DatePicker.
		 * @param {string} value A value to be tested against the current date format
		 * @public
		 */
		isValid(value = "") {
			return !!(value && this.getFormat().parse(value));
		}

		/**
		 * Checks if a date is in range between minimum and maximum date.
		 * @param {object} value
		 * @public
		 */
		isInValidRange(value = "") {
			if (value === "") {
				return true;
			}

			const pickedDate = new Date(value),
				minDate = new Date(this._minDate),
				maxDate = new Date(this._maxDate);

			if (minDate && maxDate) {
				if (minDate <= pickedDate && maxDate >= pickedDate) {
					return true;
				}
			} else if (minDate && !maxDate) {
				if (minDate <= pickedDate) {
					return true;
				}
			} else if (maxDate && !minDate) {
				if (maxDate >= pickedDate) {
					return true;
				}
			} else if (!maxDate && !minDate) {
				return true;
			}

			return false;
		}

		// because the parser understands more than one format
		// but we need values in one format
		normalizeValue(value) {
			if (value === "") {
				return value;
			}

			return this.getFormat().format(this.getFormat().parse(value));
		}

		get validValue() {
			if (this.isValid(this.value)) {
				return this.value;
			}
			return this.getFormat().format(new Date());
		}

		get calendar() {
			return this.responsivePopover.querySelector(`#${this._id}-calendar`);
		}

		get _calendarDate() {
			const millisecondsUTC = this.getFormat().parse(this.validValue, true).getTime();
			const oCalDate = CalendarDate.fromTimestamp(
				millisecondsUTC - (millisecondsUTC % (24 * 60 * 60 * 1000)),
				this._primaryCalendarType
			);
			return oCalDate;
		}

		get _primaryCalendarType() {
			const localeData = getCachedLocaleDataInstance(getLocale());
			return this.primaryCalendarType || getCalendarType$1() || localeData.getPreferredCalendarType();
		}

		get _formatPattern() {
			return this.formatPattern || "medium"; // get from config
		}

		get _isPattern() {
			return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
		}

		get _displayFormat() {
			return this.getFormat().oFormatOptions.pattern;
		}

		get _placeholder() {
			return this.placeholder !== undefined ? this.placeholder : this._displayFormat;
		}

		get _headerTitleText() {
			return this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
		}

		get phone() {
			return isPhone();
		}

		get showHeader() {
			return this.phone;
		}

		get showFooter() {
			return this.phone;
		}

		get _isIE() {
			return isIE();
		}

		getFormat() {
			let dateFormat;
			if (this._isPattern) {
				dateFormat = DateFormat.getInstance({
					pattern: this._formatPattern,
					calendarType: this._primaryCalendarType,
				});
			} else {
				dateFormat = DateFormat.getInstance({
					style: this._formatPattern,
					calendarType: this._primaryCalendarType,
				});
			}
			return dateFormat;
		}

		get accInfo() {
			return {
				"ariaDescribedBy": `${this._id}-date`,
				"ariaHasPopup": "true",
				"ariaAutoComplete": "none",
				"role": "combobox",
				"ariaOwns": `${this._id}-responsive-popover`,
				"ariaExpanded": this.isOpen(),
				"ariaDescription": this.dateAriaDescription,
				"ariaLabel": getEffectiveAriaLabelText(this),
			};
		}

		get _maxDate() {
			return this.maxDate ? this._getTimeStampFromString(this.maxDate) : this._getMaxCalendarDate();
		}

		get _minDate() {
			return this.minDate ? this._getTimeStampFromString(this.minDate) : this._getMinCalendarDate();
		}

		_getMinCalendarDate() {
			return getMinCalendarDate(this._primaryCalendarType);
		}

		_getMaxCalendarDate() {
			return getMaxCalendarDate(this._primaryCalendarType);
		}

		get openIconTitle() {
			return this.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);
		}

		get openIconName() {
			return "appointment-2";
		}

		get dateAriaDescription() {
			return this.i18nBundle.getText(DATEPICKER_DATE_ACC_TEXT);
		}

		/**
		 * Defines whether the dialog on mobile should have header
		 * @private
		 */
		get _shouldHideHeader() {
			return false;
		}

		async _respPopover() {
			const staticAreaItem = await this.getStaticAreaItemDomRef();
			return staticAreaItem.querySelector("[ui5-responsive-popover]");
		}

		_canOpenPicker() {
			return !this.disabled && !this.readonly;
		}

		_handleCalendarChange(event) {
			const iNewValue = event.detail.dates && event.detail.dates[0];

			if (this._calendar.selectedDates.indexOf(iNewValue) !== -1) {
				this.closePicker();
				return false;
			}

			const fireChange = this._handleCalendarSelectedDatesChange(event, iNewValue);

			if (fireChange) {
				this.fireEvent("change", { value: this.value, valid: true });
				// Angular two way data binding
				this.fireEvent("value-changed", { value: this.value, valid: true });
			}

			this.closePicker();
		}

		_handleCalendarSelectedDatesChange(event, newValue) {
			this._updateValueCalendarSelectedDatesChange(newValue);

			this._calendar.timestamp = newValue;
			this._calendar.selectedDates = [...event.detail.dates];
			this._focusInputAfterClose = true;

			if (this.isInValidRange(this._getTimeStampFromString(this.value))) {
				this.valueState = ValueState.None;
			} else {
				this.valueState = ValueState.Error;
			}

			return true;
		}

		_updateValueCalendarSelectedDatesChange(newValue) {
			this.value = this.getFormat().format(
				new Date(CalendarDate.fromTimestamp(
					newValue * 1000,
					this._primaryCalendarType
				).valueOf()),
				true
			);
		}

		/**
		 * Formats a Java Script date object into a string representing a locale date
		 * according to the <code>formatPattern</code> property of the DatePicker instance
		 * @param {object} oDate A Java Script date object to be formatted as string
		 * @public
		 */
		formatValue(oDate) {
			return this.getFormat().format(oDate);
		}

		/**
		 * Closes the picker.
		 * @public
		 */
		closePicker() {
			this.responsivePopover.close();
		}

		/**
		 * Opens the picker.
		 * @param {object} options A JSON object with additional configuration.<br>
		 * <code>{ focusInput: true }</code> By default, the focus goes in the picker after opening it.
		 * Specify this option to focus the input field.
		 * @public
		 */
		async openPicker(options) {
			this._isPickerOpen = true;
			this.responsivePopover = await this._respPopover();
			this._changeCalendarSelection();

			if (options && options.focusInput) {
				this._focusInputAfterOpen = true;
			}

			this.responsivePopover.open(this);
		}

		togglePicker() {
			if (this.isOpen()) {
				this.closePicker();
			} else if (this._canOpenPicker()) {
				this.openPicker();
			}
		}

		_changeCalendarSelection() {
			if (this._calendarDate.getYear() < 1) {
				// 0 is a valid year, but we cannot display it
				return;
			}

			const timestamp = this._calendarDate.valueOf() / 1000;
			this._calendar = Object.assign({}, this._calendar);
			this._calendar.timestamp = timestamp;
			this._calendar.selectedDates = this.value ? [timestamp] : [];
		}

		/**
		 * Checks if the picker is open.
		 * @returns {Boolean} true if the picker is open, false otherwise
		 * @public
		 */
		isOpen() {
			return !!this._isPickerOpen;
		}

		/**
		 * Gets some semantic details about an event originated in the control.
		 * @param {*} event An event object
		 * @returns {Object} Semantic details
		 */
		getSemanticTargetInfo(event) {
			const oDomTarget = getDomTarget(event);
			let isInput = false;

			if (oDomTarget && oDomTarget.className.indexOf("ui5-input-inner") > -1) {
				isInput = true;
			}

			return { isInput };
		}

		/**
		 * Currently selected date represented as JavaScript Date instance.
		 *
		 * @readonly
		 * @type { Date }
		 * @public
		 */
		get dateValue() {
			return this.getFormat().parse(this.value);
		}

		get styles() {
			return {
				main: {
					width: "100%",
				},
			};
		}

		get type() {
			return InputType.Text;
		}

		static get dependencies() {
			return [
				Icon,
				ResponsivePopover,
				Calendar,
				Input,
				Button,
			];
		}

		static async onDefine() {
			await Promise.all([
				fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),
				fetchI18nBundle("@ui5/webcomponents"),
			]);
		}
	}

	const getDomTarget = event => {
		let target,
			composedPath;

		if (typeof event.composedPath === "function") {
			composedPath = event.composedPath();
		}

		if (Array.isArray(composedPath) && composedPath.length) {
			target = composedPath[0];
		}

		return target;
	};

	DatePicker.define();

	const block0$s = (context) => { return scopedHtml`<div class="ui5-duration-picker-root"><ui5-input value="${ifDefined(context.value)}" ?disabled="${context.disabled}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" @ui5-change="${ifDefined(context._handleInputChange)}" @ui5-input="${ifDefined(context._handleInputLiveChange)}" @keydown="${context._onkeydown}" class="ui5-duration-picker-input">${ !context.readonly ? block1$m(context) : undefined }${ context.valueStateMessage.length ? block2$l() : undefined }</ui5-input></div>`; };
	const block1$m = (context) => { return scopedHtml`<ui5-icon slot="icon" name="fob-watch" tabindex="-1" show-tooltip @click="${context.togglePicker}" input-icon ?pressed="${context._isPickerOpen}" class="ui5-duration-picker-input-icon-button"></ui5-icon>`; };
	const block2$l = (context) => { return scopedHtml`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`; };


	const main$s = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$s(context);
	};

	const name$9 = "navigation-up-arrow";
	const pathData$9 = "M86.5 380q-9 9-22.5 9t-22.5-9q-10-10-10-23t10-23l193-197q4-2 5-3 2-1 2.5-1.5t2.5-1.5q6-2 11-2 2 0 3 .5t2 .5q4 0 6 1t3.5 2 3.5 2q1 1 1.5 1t1.5 1 2 1l192 196q10 10 10 23t-10 23q-9 9-22.5 9t-22.5-9l-154-155q-16-10-32 0z";
	const ltr$9 = false;
	const collection$9 = "SAP-icons";

	registerIcon(name$9, { pathData: pathData$9, ltr: ltr$9, collection: collection$9});

	const name$a = "navigation-down-arrow";
	const pathData$a = "M425.5 137q9-9 22.5-9t22.5 9q10 10 10 23t-10 23l-193 197q-4 2-5 3-2 1-2.5 1.5t-2.5 1.5q-6 2-11 2-2 0-3-.5t-2-.5q-4 0-6-1t-3.5-2-3.5-2q-1-1-1.5-1t-1.5-1-2-1l-192-196q-10-10-10-23t10-23q9-9 22.5-9t22.5 9l154 155q16 10 32 0z";
	const ltr$a = false;
	const collection$a = "SAP-icons";

	registerIcon(name$a, { pathData: pathData$a, ltr: ltr$a, collection: collection$a});

	const block0$t = (context) => { return scopedHtml`<div id="${ifDefined(context._id)}" ?disabled= "${ifDefined(context.disabled)}" value = "${ifDefined(context.value)}" label = "${ifDefined(context.label)}" ?expanded= "${ifDefined(context._expanded)}" @click = ${ifDefined(context._onclick)} @keydown=${context._onkeydown} class = "${classMap(context.classes.root)}" data-sap-focus-ref @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" tabindex="0" @wheel="${context._handleWheel}"><div class="ui5-wheelslider-header-block"><div id="${ifDefined(context._id)}--label" class="ui5-wheelslider-label">${ifDefined(context.label)}</div><div class="ui5-wheelslider-invisible-text"></div><ui5-button class="ui5-wheelslider-arrow" icon="navigation-up-arrow" @click=${context._onArrowUp} tabindex="-1"></ui5-button></div><div id="${ifDefined(context._id)}--inner" class="ui5-wheelslider-inner"><div id="${ifDefined(context._id)}--selection-frame" class="ui5-wheelslider-selection-frame"></div><div id="${ifDefined(context._id)}--wrapper" class="ui5-wheelslider-wrapper">${ context._expanded ? block1$n(context) : block3$c(context) }</div></div><div class="ui5-wheelslider-footer-block"><ui5-button class="ui5-wheelslider-arrow" icon="navigation-down-arrow" @click=${context._onArrowDown} tabindex="-1"></ui5-button></div></div>`; };
	const block1$n = (context) => { return scopedHtml`<ul id="${ifDefined(context._id)}--items-list">${ repeat(context._itemsToShow, (item, index) => item._id || index, (item, index) => block2$m(item, index)) }</ul>`; };
	const block2$m = (item, index, context) => { return scopedHtml`<li class="ui5-wheelslider-item" data-item-index="${index}" style="list-style-type: none;">${ifDefined(item)}</li>`; };
	const block3$c = (context) => { return scopedHtml`<ul id="${ifDefined(context._id)}--items-list"><li class="ui5-wheelslider-item" style="list-style-type: none;">${ifDefined(context.value)}</li></ul>`; };


	const main$t = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$t(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var WheelSliderCss = ".ui5-wheelslider-root{overflow:hidden;height:100%;vertical-align:middle;text-align:center;box-sizing:border-box;font-family:\"72override\",var(--sapFontFamily);justify-content:space-between;flex-direction:column;display:inline-flex;width:var(--_ui5_wheelslider_item_width)}.ui5-wheelslider-root .ui5-wheelslider-label{box-sizing:border-box;height:2rem;line-height:2rem;width:var(--_ui5_wheelslider_item_width);font-size:var(--sapFontSmallSize);color:var(--_ui5_wheelslider_label_text_color);text-align:center;vertical-align:middle;visibility:hidden}.ui5-wheelslider-root .ui5-wheelslider-arrow{visibility:hidden;box-sizing:border-box;height:1.5rem;user-select:none;outline:none}.ui5-wheelslider-root[expanded] .ui5-wheelslider-arrow{visibility:var(--_ui5_wheelslider_arrows_visibility);box-sizing:border-box;border-color:transparent;cursor:pointer}.ui5-wheelslider-root[expanded] .ui5-wheelslider-arrow:hover{visibility:var(--_ui5_wheelslider_arrows_visibility);box-sizing:border-box;border-color:inherit;cursor:pointer}.ui5-wheelslider-root .ui5-wheelslider-inner{position:relative;overflow:hidden;height:100%;box-sizing:border-box;user-select:none;list-style:none;margin-top:0}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner{margin-top:0}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-item{height:var(--_ui5_wheelslider_item_height);line-height:var(--_ui5_wheelslider_item_height);width:var(--_ui5_wheelslider_item_width);box-sizing:border-box;background:var(--_ui5_wheelslider_selected_item_background_color);border:.625px solid var(--_ui5_wheelslider_item_border_color);font-size:var(--_ui5_wheelslider_item_text_size);color:var(--_ui5_wheelslider_collapsed_item_text_color);text-align:center;border-radius:var(--_ui_wheelslider_item_border_radius);cursor:pointer}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-item:hover{background:var(--_ui_wheelslider_item_hover_color);border-color:var(--_ui5_wheelslider_item_hovered_border_color)}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-item:focus{outline:1px dotted #000;outline-offset:-3px}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-selection-frame{width:var(--_ui5_wheelslider_item_width);height:var(--_ui5_wheelslider_item_height);position:absolute;box-sizing:border-box;visibility:hidden;z-index:1}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-wrapper>ul{transition:all .4s;margin:0;padding:0;position:absolute;top:var(--_ui5_wheelslider_selection_frame_margin_top);height:3000px;cursor:pointer;list-style-type:none}.ui5-wheelslider-root.ui5-phone .ui5-wheelslider-inner .ui5-wheelslider-wrapper>ul{top:var(--_ui5_wheelslider_mobile_selection_frame_margin_top)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-wrapper>ul{list-style-type:none;top:0;padding-top:calc(var(--_ui5_wheelslider_item_height)*2)}.ui5-wheelslider-root.ui5-phone[expanded] .ui5-wheelslider-inner .ui5-wheelslider-wrapper>ul{list-style-type:none;top:0;padding-top:calc(var(--_ui5_wheelslider_item_height)*4)}.ui5-wheelslider-root .ui5-wheelslider-inner .ui5-wheelslider-wrapper{height:var(--_ui5_wheelslider_height);position:relative;overflow:hidden;outline:none}.ui5-wheelslider-root.ui5-phone .ui5-wheelslider-inner .ui5-wheelslider-wrapper{height:var(--_ui5_wheelslider_mobile_height)}.ui5-wheelslider-root[expanded]{height:100%;cursor:default;margin:0;justify-content:space-between;flex-direction:column;display:inline-flex}.ui5-wheelslider-root[expanded] .ui5-wheelslider-label{display:block;visibility:visible}.ui5-wheelslider-root .ui5-wheelslider-inner{max-height:100%;height:var(--_ui5_wheelslider_height)}.ui5-wheelslider-root.ui5-phone .ui5-wheelslider-inner{height:var(--_ui5_wheelslider_mobile_height)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-item{background:var(--_ui5_wheelslider_item_background_color);color:var(--_ui5_wheelslider_item_text_color);border:1px solid var(--_ui5_wheelslider_item_border_color);border-radius:var(--_ui_wheelslider_item_border_radius);offset-position:auto;cursor:auto}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-item:hover{background:var(--sapList_Hover_Background);border-color:var(--_ui5_wheelslider_item_hovered_border_color)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-item:active{background:var(--_ui5_wheelslider_active_item_background_color);color:var(--_ui5_wheelslider_active_item_text_color)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-item:focus{outline:1px dotted #000;outline-offset:-3px}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-selection-frame{visibility:visible;-webkit-box-shadow:inset 0 0 0 2px var(--_ui5_wheelslider_selection_frame_color);-moz-box-shadow:inset 0 0 0 2px var(--_ui5_wheelslider_selection_frame_color);box-shadow:inset 0 0 0 2px var(--_ui5_wheelslider_selection_frame_color);border-radius:var(--_ui_wheelslider_item_border_radius);margin-top:var(--_ui5_wheelslider_selection_frame_margin_top)}.ui5-wheelslider-root.ui5-phone[expanded] .ui5-wheelslider-inner .ui5-wheelslider-selection-frame{margin-top:var(--_ui5_wheelslider_mobile_selection_frame_margin_top)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-selection-frame:hover+ul>li.ui5-wheelslider-item.ui5-wheelslider-itemSelected{background:var(--_ui_wheelslider_item_hover_color)}.ui5-wheelslider-root[expanded] .ui5-wheelslider-inner .ui5-wheelslider-selection-frame:active+ul>li.ui5-wheelslider-item.ui5-wheelslider-itemSelected{background:var(--_ui5_wheelslider_selected_item_background_color);color:#d3d3d3}.ui5-wheelslider-root:focus{outline:none}";

	/**
	 * @private
	 */
	const metadata$p = {
		tag: "ui5-wheelslider",
		properties: /** @lends sap.ui.webcomponents.main.WheelSlider.prototype */ {
			/**
			 * Defines whether the <code>ui5-wheelslider</code> is disabled
			 * (default is set to <code>false</code>).
			 * A disabled <code>ui5-wheelslider</code> can't be pressed or
			 * focused, and it is not in the tab chain.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Defines the currently selected value
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			value: {
				type: String,
				defaultValue: "0",
			},

			/**
			 * Defines the label of the wheelslider.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			label: {
				type: String,
				defaultValue: "",
			},

			/**
			 * Indicates if the wheelslider is expanded.
			 * @type {boolean}
			 * @defaultvalue false
			 * @private
			 */
			_expanded: {
				type: Boolean,
			},

			_items: {
				type: String,
				multiple: true,
			},

			_itemsToShow: {
				type: String,
				multiple: true,
			},

			/**
			 * Indicates if the wheelslider has a cyclic behaviour.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			cyclic: {
				type: Boolean,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.WheelSlider.prototype */ {

		},
		events: /** @lends sap.ui.webcomponents.main.WheelSlider.prototype */ {
			/**
			 * Fires when the wheel slider is expanded.
			 */
			expand: {},

			/**
			 * Fires when the wheel slider is collapsed.
			 */
			collapse: {},

			/**
			 *  Fires when new value is selected.
			 */
			select: {
				value: {
					type: String,
				},
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 *
	 * <h3>Usage</h3>
	 *
	 * For the <code>ui5-wheelslider</code>
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents/dist/WheelSlider.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.WheelSlider
	 * @extends UI5Element
	 * @tagname ui5-wheelslider
	 * @public
	 * @since 1.0.0-rc.6
	 */
	class WheelSlider extends UI5Element {
		static get metadata() {
			return metadata$p;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return WheelSliderCss;
		}

		static get template() {
			return main$t;
		}

		constructor() {
			super();
			this._currentElementIndex = 0;
			this._itemCellHeight = 0;
			this._itemsToShow = [];
			this._scroller = new ScrollEnablement(this);
			this._scroller.attachEvent("scroll", this._updateScrolling.bind(this));
			this._scroller.attachEvent("mouseup", this._handleScrollTouchEnd.bind(this));
			this._scroller.attachEvent("touchend", this._handleScrollTouchEnd.bind(this));
		}

		onBeforeRendering() {
			if (!this._expanded && this.cyclic) {
				const index = this._currentElementIndex % this._items.length;
				this._currentElementIndex = (this._timesMultipliedOnCyclic() / 2) * this._items.length + index;
			}

			if (!this.value) {
				this.value = this._items[0];
			}

			this._buildItemsToShow();
			this._updateItemCellHeight();
		}

		static get dependencies() {
			return [Button];
		}

		onAfterRendering() {
			if (!this._scroller.scrollContainer) {
				this._scroller.scrollContainer = this.shadowRoot.querySelector(`#${this._id}--wrapper`);
			}

			if (!this._expanded) {
				this._scroller.scrollTo(0, 0);
			}

			if (this._expanded) {
				const elements = this.shadowRoot.querySelectorAll(".ui5-wheelslider-item");
				for (let i = 0; i < elements.length; i++) {
					if (elements[i].textContent === this.value) {
						this._selectElementByIndex(Number(elements[i].dataset.itemIndex) + this._getCurrentRepetition() * this._items.length);
						return true;
					}
				}

				this._selectElement(elements[0]);
			}
		}

		get classes() {
			return {
				root: {
					"ui5-wheelslider-root": true,
					"ui5-phone": isPhone(),
				},
			};
		}

		expandSlider() {
			this._expanded = true;
			this.fireEvent("expand", {});
		}

		collapseSlider() {
			this._expanded = false;
			this.fireEvent("collapse", {});
		}

		_updateItemCellHeight() {
			if (this.shadowRoot.querySelectorAll(".ui5-wheelslider-item").length) {
				const itemComputedStyle = getComputedStyle(this.shadowRoot.querySelector(".ui5-wheelslider-item"));
				const itemHeightValue = itemComputedStyle.getPropertyValue("--_ui5_wheelslider_item_height");
				const onlyDigitsValue = itemHeightValue.replace("rem", "");

				this._itemCellHeight = Number(onlyDigitsValue);
			}
		}

		_updateScrolling() {
			const sizeOfOneElementInPixels = this._itemCellHeight * 16,
				scrollWhere = this._scroller.scrollContainer.scrollTop;
			let offsetIndex;

			if (!scrollWhere) {
				return;
			}

			offsetIndex = Math.round(scrollWhere / sizeOfOneElementInPixels);

			if (this.value === this._itemsToShow[offsetIndex]) {
				return;
			}

			if (this.cyclic) {
				const newIndex = this._handleArrayBorderReached(offsetIndex);
				if (offsetIndex !== newIndex) {
					offsetIndex = newIndex;
				}
			}

			this.value = this._itemsToShow[offsetIndex];
			this._currentElementIndex = offsetIndex;
		}

		_handleScrollTouchEnd() {
			if (this._expanded) {
				this._selectElementByIndex(this._currentElementIndex);
			}
		}

		_selectElement(element) {
			if (element && this._items.indexOf(element.textContent) > -1) {
				this._currentElementIndex = Number(element.dataset.itemIndex);
				this._selectElementByIndex(this._currentElementIndex);
			}
		}

		_getCurrentRepetition() {
			if (this._currentElementIndex) {
				return Math.floor(this._currentElementIndex / this._items.length);
			}

			return 0;
		}

		_selectElementByIndex(currentIndex) {
			let index = currentIndex;
			const itemsCount = this._itemsToShow.length;
			const sizeOfCellInCompactInRem = 2;
			const sizeOfCellInCozyInRem = 2.875;
			const sizeOfCellInCompactInPixels = sizeOfCellInCompactInRem * 16;
			const sizeOfCellInCozyInPixels = sizeOfCellInCozyInRem * 16;
			const scrollBy = this.isCompact ? sizeOfCellInCompactInPixels * index : sizeOfCellInCozyInPixels * index;

			if (this.cyclic) {
				index = this._handleArrayBorderReached(index);
			}

			if (index < itemsCount && index > -1) {
				this._scroller.scrollTo(0, scrollBy);
				this._currentElementIndex = index;
				this.value = this._items[index - (this._getCurrentRepetition() * this._items.length)];
				this.fireEvent("select", { value: this.value });
			}
		}

		_timesMultipliedOnCyclic() {
			const minElementsInCyclicWheelSlider = 70;
			const repetitionCount = Math.round(minElementsInCyclicWheelSlider / this._items.length);
			const minRepetitionCount = 3;

			return Math.max(minRepetitionCount, repetitionCount);
		}

		_buildItemsToShow() {
			this._itemsToShow = this._items;
			if (this.cyclic) {
				if (this._itemsToShow.length < this._items.length * this._timesMultipliedOnCyclic()) {
					for (let i = 0; i < this._timesMultipliedOnCyclic(); i++) {
						this._itemsToShow = this._itemsToShow.concat(this._items);
					}
				}
			}
		}

		_handleArrayBorderReached(currentIndex) {
			const arrayLength = this._itemsToShow.length;
			const maxVisibleElementsOnOneSide = 7;
			let index = currentIndex;

			if (maxVisibleElementsOnOneSide > index) {
				index += this._items.length * 2;
			} else if (index > arrayLength - maxVisibleElementsOnOneSide) {
				index -= this._items.length * 2;
			}

			return index;
		}

		_handleWheel(e) {
			if (!e) {
				return;
			}

			e.stopPropagation();
			e.preventDefault();

			if (e.timeStamp === this._prevWheelTimestamp || !this._expanded) {
				return;
			}

			if (e.deltaY > 0) {
				this._itemUp();
			} else if (e.deltaY < 0) {
				this._itemDown();
			}

			this._prevWheelTimestamp = e.timeStamp;
		}

		_onclick(e) {
			if (!e.target.classList.contains("ui5-wheelslider-item")) {
				return;
			}

			if (this._expanded) {
				this.value = e.target.textContent;
				this._selectElement(e.target);
				this.fireEvent("select", { value: this.value });
			} else {
				this._expanded = true;
			}
		}

		_onArrowDown(e) {
			e.preventDefault();
			this._itemDown();
		}

		_onArrowUp(e) {
			e.preventDefault();
			this._itemUp();
		}

		_itemDown() {
			const nextElementIndex = this._currentElementIndex + 1;
			this._selectElementByIndex(nextElementIndex);
		}

		_itemUp() {
			const nextElementIndex = this._currentElementIndex - 1;
			this._selectElementByIndex(nextElementIndex);
		}

		_onkeydown(е) {
			if (!this._expanded) {
				return;
			}

			if (isUp(е)) {
				this._onArrowUp(е);
			}

			if (isDown(е)) {
				this._onArrowDown(е);
			}

			if (isPageDown(е)) {
				this._selectLimitCell(е, false);
			}

			if (isPageUp(е)) {
				this._selectLimitCell(е, true);
			}
		}

		_selectLimitCell(event, isMax) {
			event.preventDefault();
			const intexIncrease = this.cyclic ? this._items.length : 0;
			if (isMax) {
				this._selectElementByIndex(this._items.length - 1 + intexIncrease);
			} else {
				this._selectElementByIndex(intexIncrease);
			}
		}

		_onfocusin(e) {
			e.preventDefault();
			this.expandSlider();
		}

		_onfocusout(e) {
			e.preventDefault();
			this.collapseSlider();
		}
	}

	WheelSlider.define();

	const name$b = "fob-watch";
	const pathData$b = "M32 288q0-42 15-80t40.5-67.5 61-49T224 66V32h-64V0h192v32h-64v34q53 7 94 36l34-34 46 46-32 32q23 29 36.5 64.5T480 288q0 46-17.5 87t-48 71.5-71 48T256 512q-46 0-87-17.5t-71.5-48-48-71.5T32 288zm224 192q40 0 75-15t61-41.5 41-61.5 15-74q0-40-15-75t-41-61-61-41-75-15-75 15-61 41-41 61-15 75q0 39 15 74t41 61.5 61 41.5 75 15zm-17-272q0-16 16-16t16 16v80h97q16 0 16 16 0 6-4.5 11t-11.5 5H255q-7 0-11.5-5t-4.5-11v-96z";
	const ltr$b = false;
	const collection$b = "SAP-icons";

	registerIcon(name$b, { pathData: pathData$b, ltr: ltr$b, collection: collection$b});

	const block0$u = (context) => { return scopedHtml`<ui5-responsive-popover allow-target-overlap="${ifDefined(context._respPopover.allowTargetOverlap)}" placement-type="${ifDefined(context._respPopover.placementType)}" _hide-header no-arrow no-stretch horizontal-align="${ifDefined(context._respPopover.horizontalAlign)}" stay-open-on-scroll="${ifDefined(context._respPopover.stayOpenOnScroll)}" @ui5-after-close="${ifDefined(context._respPopover._onAfterClose)}" @keydown="${context._handleKeysDown}"><div class="${classMap(context.classes.container)}" @keydown="${context._handleContainerKeysDown}">${ !context.hideHours ? block1$o(context) : undefined }${ !context.hideMinutes ? block2$n(context) : undefined }${ !context.hideSeconds ? block3$d(context) : undefined }</div><div slot="footer" class="ui5-duration-picker-footer" @keydown=${context._onfooterkeydown}><ui5-button id="submit" design="Emphasized" @click="${context.submitPickers}">${ifDefined(context.submitButtonLabel)}</ui5-button><ui5-button id="close" design="Transparent" @click="${context.togglePicker}">${ifDefined(context.cancelButtonLabel)}</ui5-button></div></ui5-responsive-popover>`; };
	const block1$o = (context) => { return scopedHtml`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.hoursArray)}" value="${ifDefined(context.selectedHours)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-hours-wheelslider" label = "${ifDefined(context.hoursSliderTitle)}"></ui5-wheelslider>`; };
	const block2$n = (context) => { return scopedHtml`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.minutesArray)}" value="${ifDefined(context.selectedMinutes)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-minutes-wheelslider" label = "${ifDefined(context.minutesSliderTitle)}"></ui5-wheelslider>`; };
	const block3$d = (context) => { return scopedHtml`<ui5-wheelslider cyclic="true" ._items="${ifDefined(context.secondsArray)}" value="${ifDefined(context.selectedSeconds)}" class="ui5-duration-picker-wheelslider ui5-duration-picker-seconds-wheelslider" label = "${ifDefined(context.secondsSliderTitle)}"></ui5-wheelslider>`; };


	const main$u = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$u(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var DurationPickerCss = ":host(:not([hidden])){display:inline-block}:host{color:var(--sapField_TextColor);background-color:var(--sapField_Background)}:host .ui5-duration-picker-input{width:100%;color:inherit;background-color:inherit}.ui5-duration-picker-input-icon-button:hover{cursor:pointer;background:var(--sapButton_Hover_Background)}.ui5-duration-picker-input-icon-button:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}.ui5-duration-picker-input-icon-button[pressed]{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var DurationPickerPopoverCss = ".ui5-duration-picker-sliders-container{display:flex;justify-content:center;align-items:stretch;direction:ltr;padding:.5rem;min-width:18rem}.ui5-duration-picker-sliders-container.ui5-phone{height:90vh}.ui5-duration-picker-wheelslider{padding-left:.25rem;padding-right:.25rem}.ui5-duration-picker-footer{height:fit-content;display:flex;justify-content:flex-end;width:100%}.ui5-duration-picker-footer>[ui5-button]{margin:1%;min-width:20%}";

	/**
	 * @public
	 */
	const metadata$q = {
		tag: "ui5-duration-picker",
		languageAware: true,
		managedSlots: true,
		properties: /** @lends sap.ui.webcomponents.main.DurationPicker.prototype */ {
			/**
			 * Defines a formatted time value.
			 *
			 * @type {string}
			 * @defaultvalue "00:00:00"
			 * @public
			 */
			value: {
				type: String,
				defaultValue: "00:00:00",
			},

			/**
			 * Defines the selection step for the minutes
			 * @type {Integer}
			 * @public
			 * @defaultValue 1
			 * @since 1.0.0-rc.8
			 */
			minutesStep: {
				type: Integer,
				defaultValue: 1,
			},

			/**
			 * Defines the selection step for the seconds
			 * @type {Integer}
			 * @public
			 * @defaultValue 1
			 * @since 1.0.0-rc.8
			 */
			secondsStep: {
				type: Integer,
				defaultValue: 1,
			},

			/**
			 * Defines a formatted maximal time that the user will be able to adjust.
			 *
			 * @type {string}
			 * @defaultvalue "23:59:59"
			 * @public
			 */
			maxValue: {
				type: String,
				defaultValue: "23:59:59",
			},

			/**
			 * Defines whether a slider for seconds will be available. By default there are sliders for hours, minutes and seconds.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			hideSeconds: {
				type: Boolean,
			},

			/**
			 * Defines whether the slider for minutes will be available. By default there are sliders for hours, minutes and seconds.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			 */
			hideMinutes: {
				type: Boolean,
			},

			/**
			 * Defines whether the slider for hours will be available. By default there are sliders for hours, minutes and seconds.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 * @since 1.0.0-rc.8
			 */
			hideHours: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-duration-picker</code> is displayed as disabled.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			disabled: {
				type: Boolean,
			},

			/**
			 * Determines whether the <code>ui5-duration-picker</code> is displayed as readonly.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			readonly: {
				type: Boolean,
			},

			/**
			 * Visualizes the validation state of the Web Component, for example
			 * <code>Error</code>, <code>Warning</code> and
			 * <code>Success</code>.
			 *
			 * <ul>
			 * <li><code>None</code></li>
			 * <li><code>Error</code></li>
			 * <li><code>Warning</code></li>
			 * <li><code>Success</code></li>
			 * <li><code>Information</code></li>
			 * </ul>
			 *
			 * @type {string}
			 * @defaultvalue "None"
			 * @public
			 */
			valueState: {
				type: ValueState,
				defaultValue: ValueState.None,
			},

			/**
			 * @private
			 */
			_isPickerOpen: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			_maxValue: {
				type: String,
				multiple: true,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.DurationPicker.prototype */ {
			/**
			 * Defines the value state message that will be displayed as pop up under the <code>ui5-duration-picker</code>.
			 * <br><br>
			 *
			 * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.
			 * <br>
			 * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,
			 * when the <code>ui5-duration-picker</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.
			 * @type {HTMLElement}
			 * @since 1.0.0-rc.9
			 * @slot
			 * @public
			 */
			valueStateMessage: {
				type: HTMLElement,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.DurationPicker.prototype */ {
			/**
			 * Fired when the input operation has finished by pressing Enter or on focusout.
			 *
			 * @event
			 * @public
			*/
			change: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 * The <code>ui5-duration-picker</code> component provides an input field with assigned sliders which opens on user action.
	 * The <code>ui5-duration-picker</code> allows users to select a time duration.
	 * It consists of two parts: the time input field and the sliders.
	 *
	 *
	 * <h3>Usage</h3>
	 *
	 *
	 * The Duration Picker is used for input of time. Users are able to select hours, minutes and seconds.
	 * The user can enter a time by:
	 * <ul>
	 * <li>Using the sliders that opens in a popup</li>
	 * <li>Typing it in directly in the input field</li>
	 * </ul>
	 * <br><br>
	 * When the user makes an entry and chooses the enter key, the sliders shows the corresponding time.
	 * When the user directly triggers the sliders display, the actual time is displayed.
	 *
	 * For the <code>ui5-duration-picker</code>
	 *
	 * <h3>Keyboard handling</h3>
	 * [F4], [ALT]+[UP], [ALT]+[DOWN] Open/Close picker dialog and move focus to it.
	 * <br>
	 * When closed:
	 * <ul>
	 * <li>[PAGEUP] - Increments hours by 1. If max value is reached, the slider doesn't increment.</li>
	 * <li>[PAGEDOWN] - Decrements the corresponding field by 1. If min value is reached, the slider doesn't increment.</li>
	 * <li>[SHIFT]+[PAGEUP] Increments minutes by 1.</li>
	 * <li>[SHIFT]+ [PAGEDOWN] Decrements minutes by 1.</li>
	 * <li>[SHIFT]+[CTRL]+[PAGEUP] Increments seconds by 1.</li>
	 * <li>[SHIFT]+[CTRL]+ [PAGEDOWN] Decrements seconds by 1.</li>
	 * </ul>
	 * When opened:
	 * <ul>
	 * <li>[UP] If focus is on one of the selection lists: Select the value which is above the current value. If the first value is selected, select the last value in the list.</li>
	 * <li>[DOWN] If focus is on one of the selection lists: Select the value which is below the current value. If the last value is selected, select the first value in the list.</li>
	 * <li>[LEFT] If focus is on one of the selection lists: Move focus to the selection list which is left of the current selection list. If focus is at the first selection list, move focus to the last selection list.</li>
	 * <li>[RIGHT] If focus is on one of the selection lists: Move focus to the selection list which is right of the current selection list. When focus is at the last selection list, move focus to the first selection list.</li>
	 * <li>[PAGEUP] If focus is on one of the selection lists: Move focus to the first entry of this list.</li>
	 * <li>[PAGEDOWN] If focus is on one of the selection lists: Move focus to the last entry of this list.</li>
	 * </ul>
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents/dist/DurationPicker.js";</code>
	 *
	 * @constructor
	 * @since 1.0.0-rc.7
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.DurationPicker
	 * @extends UI5Element
	 * @tagname ui5-duration-picker
	 * @public
	 */
	class DurationPicker extends UI5Element {
		static get metadata() {
			return metadata$q;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return DurationPickerCss;
		}

		static get template() {
			return main$s;
		}

		static get staticAreaTemplate() {
			return main$u;
		}

		static get staticAreaStyles() {
			return [ResponsivePopoverCommonCss, DurationPickerPopoverCss];
		}

		constructor() {
			super();

			this.i18nBundle = getI18nBundle("@ui5/webcomponents");

			this._respPopover = {
				placementType: PopoverPlacementType.Bottom,
				horizontalAlign: PopoverHorizontalAlign.Left,
				allowTargetOverlap: true,
				stayOpenOnScroll: true,
				_onAfterClose: () => {
					this._isPickerOpen = false;
				},
			};

			this._slidersDomRefs = [];
		}

		onBeforeRendering() {
			this.checkValue();
		}

		checkValue() {
			this._setValue("maxValue");
			this.setSelectedValues();
			this.normalizaValue();
		}

		normalizaValue() {
			this.value = `${!this.hideHours ? this.selectedHours || "00" : ""}${!this.hideHours && !this.hideMinutes ? ":" : ""}${!this.hideMinutes ? this.selectedMinutes || "00" : ""}${!this.hideSeconds ? `:${this.selectedSeconds || "00"}` : ""}`;
		}

		/**
		 * reads string from format hh:mm:ss and returns an array which contains the hours, minutes and seconds
		 * @param {string} value string in formathh:mm:ss
		 */
		readFormattedValue(value) {
			value = value.replace(/\s/g, ""); // Remove spaces
			return value.split(":");
		}

		getSecondsFromFormattedValue(destructuredValues) {
			if (this.hideSeconds) {
				return "";
			}

			if (this.hideHours && this.hideMinutes) {
				return destructuredValues[0];
			}

			if (this.hideHours || this.hideMinutes) {
				return destructuredValues[1];
			}

			return destructuredValues[2];
		}

		getMinutesFromFormattedValue(destructuredValues) {
			if (this.hideMinutes) {
				return "";
			}

			if (this.hideHours) {
				return destructuredValues[0];
			}

			return destructuredValues[1];
		}

		setSelectedValues() {
			const destructuredValues = this.readFormattedValue(this.value || "");
			let currentHours = this.hideHours ? "" : destructuredValues[0],
				currentMinutes = this.getMinutesFromFormattedValue(destructuredValues), // this.hideHours && !this.hideMinutes ? destructuredValues[0] : "",
				currentSeconds = this.getSecondsFromFormattedValue(destructuredValues); //  this.hideHours && this.hideHours ? destructuredValues[0] : {};

			if (currentHours > -1) {
				if (parseInt(currentHours) > parseInt(this._maxValue[0])) {
					currentHours = this._maxValue[0];
				}

				this.selectedHours = this._formatSelectedValue(currentHours, parseInt(this.readFormattedValue(this.maxValue)));
			}

			if (currentMinutes > -1) {
				if (currentMinutes && parseInt(currentMinutes) % this.minutesStep !== 0) {
					currentMinutes = this.findNearestStep(currentMinutes, this.minutesStep);
				}
				if (this._maxValue[0] && this.selectedHours === this._maxValue[0]) {
					currentMinutes = currentMinutes > this._maxValue[1] ? this._maxValue[1] : currentMinutes;
				} else if (parseInt(currentMinutes) > parseInt(this._maxValue[1])) {
					currentMinutes = this._maxValue[1];
				}

				this.selectedMinutes = this._formatSelectedValue(currentMinutes, 59);
			}

			if (currentSeconds > -1) {
				if (currentSeconds && parseInt(currentSeconds) % this.secondsStep !== 0) {
					currentSeconds = this.findNearestStep(currentSeconds, this.secondsStep);
				}
				if (this._maxValue[0] && this._maxValue[1] && this.selectedHours >= this._maxValue[0] && this.selectedSeconds >= this._maxValue[1]) {
					currentSeconds = currentSeconds > this._maxValue[2] ? this._maxValue[2] : currentSeconds;
				} else if (parseInt(currentSeconds) > parseInt(this._maxValue[2])) {
					currentSeconds = this._maxValue[2];
				}

				this.selectedSeconds = this._formatSelectedValue(currentSeconds, 59);
			}
		}

		_formatSelectedValue(currentValue, maximum = Infinity) {
			if (currentValue.length === 1) {
				return `0${currentValue}`;
			}

			if (parseInt(currentValue) < 0 || parseInt(currentValue) > maximum) {
				return "00";
			}

			return currentValue;
		}

		/**
		 * Reads maxValue and stores it as array _maxValue
		 * @param {string} name the name of the property to read(could be used for _minValue e.g.)
		 * @private
		 */
		_setValue(name) {
			const _value = this[name];
			if (!_value) {
				return;
			}
			const temp = this.readFormattedValue(_value);
			this[`_${name}`] = temp;
		}

		findNearestStep(currentValue, step) {
			const curr = parseInt(currentValue);
			const biggerClosest = this._getClosest(curr, step, true),
				lowerClosest = this._getClosest(curr, step, false);

			const diffToBiggerClosest = biggerClosest - curr,
				diffToLowerClosest = curr - lowerClosest;

			return diffToBiggerClosest > diffToLowerClosest ? lowerClosest.toString() : biggerClosest.toString();
		}

		/**
		 * Finds the nearest lower/bigger number to the givent curr
		 * @param {Integer} curr the starting number
		 * @param {Boolean} larger defines if we are searching for bigger or lower number
		 */
		_getClosest(curr, step, larger = true) {
			while (curr % step !== 0) {
				curr = larger ? ++curr : --curr;
			}

			return curr;
		}

		async _handleContainerKeysDown(event) {
			if (isLeft(event)) {
				let expandedSliderIndex = 0;
				for (let i = 0; i < this._slidersDomRefs.length; i++) {
					if (this._slidersDomRefs[i]._expanded) {
						expandedSliderIndex = i;
					}
				}
				if (this._slidersDomRefs[expandedSliderIndex - 1]) {
					this._slidersDomRefs[expandedSliderIndex - 1].focus();
				} else {
					this._slidersDomRefs[this._slidersDomRefs.length - 1].focus();
				}
			} else if (isRight(event)) {
				let expandedSliderIndex = 0;

				for (let i = 0; i < this._slidersDomRefs.length; i++) {
					if (this._slidersDomRefs[i]._expanded) {
						expandedSliderIndex = i;
					}
				}
				if (this._slidersDomRefs[expandedSliderIndex + 1]) {
					this._slidersDomRefs[expandedSliderIndex + 1].focus();
				} else {
					this._slidersDomRefs[0].focus();
				}
			}
		}

		_onkeydown(event) {
			if (isShow(event)) {
				event.preventDefault();
				this.togglePicker();
			}

			if (isPageUpShiftCtrl(event)) {
				event.preventDefault();
				this._incrementValue(true, false, false, true);
			} else if (isPageUpShift(event)) {
				event.preventDefault();
				this._incrementValue(true, false, true, false);
			} else if (isPageUp(event)) {
				event.preventDefault();
				this._incrementValue(true, true, false, false);
			}

			if (isPageDownShiftCtrl(event)) {
				event.preventDefault();
				this._incrementValue(false, false, false, true);
			} else if (isPageDownShift(event)) {
				event.preventDefault();
				this._incrementValue(false, false, true, false);
			} else if (isPageDown(event)) {
				event.preventDefault();
				this._incrementValue(false, true, false, false);
			}
		}

		_incrementValue(increment, hours, minutes, seconds) {
			const values = this.readFormattedValue(this.value);
			const incrementStep = increment ? 1 : -1;

			if (hours && !this.hideHours) {
				values[0] = Number(values[0]) + incrementStep;
			} else if (minutes && !this.hideMinutes) {
				values[1] = Number(values[1]) + incrementStep;
			} else if (seconds && !this.hideSeconds) {
				values[2] = Number(values[2]) + incrementStep;
			} else {
				return;
			}

			this.value = `${!this.hideHours ? values[0] : ""}${!this.hideHours && !this.hideMinutes ? ":" : ""}${!this.hideMinutes ? values[1] : ""}${!this.hideSeconds ? `:${values[2]}` : ""}`;
			this.fireEvent("change", { value: this.value });
		}


		generateTimeItemsArray(arrayLength, step = 1) {
			const resultArray = [];
			for (let i = 0; i < arrayLength; i++) {
				let tempString = i.toString();
				if (tempString.length === 1) {
					tempString = `0${tempString}`;
				}

				if (tempString % step === 0) {
					resultArray.push(tempString);
				}
			}

			return resultArray;
		}

		submitPickers() {
			const prevValue = this.value;
			this.value = `${!this.hideHours ? this.hoursSlider.value : ""}${!this.hideHours && !this.hideMinutes ? ":" : ""}${!this.hideMinutes ? this.minutesSlider.value : ""}${!this.hideSeconds ? `:${this.secondsSlider.value}` : ""}`;
			this.togglePicker();
			if (prevValue !== this.value) {
				this.fireEvent("change", { value: this.value });
			}
		}

		_handleInputChange(event) {
			const prevValue = this.value;
			this.value = event.target.value.replace(/[^\d:]/g, "");
			this.checkValue();

			if (prevValue !== this.value) {
				this.fireEvent("change", { value: this.value });
			}
		}

		_handleKeysDown(event) {
			if (isShow(event)) {
				event.preventDefault();
				this.togglePicker();
			}
		}

		async _handleInputLiveChange() {
			await this._getResponsivePopover();

			if (this.responsivePopover.opened) {
				this.togglePicker();
			}
		}

		async togglePicker() {
			await this._getResponsivePopover();

			if (this.responsivePopover.opened) {
				this._isPickerOpen = false;
				this.responsivePopover.close();
			} else {
				this._isPickerOpen = true;
				this.responsivePopover.open(this);
				this._slidersDomRefs = await this.slidersDomRefs();
			}
		}

		async _getResponsivePopover() {
			if (this.responsivePopover) {
				return this.responsivePopover;
			}

			const staticAreaItem = await this.getStaticAreaItemDomRef();
			this.responsivePopover = staticAreaItem.querySelector("[ui5-responsive-popover]");
			return this.responsivePopover;
		}

		async slidersDomRefs() {
			await this._getResponsivePopover();
			return this.responsivePopover.default.length ? [...this.responsivePopover.default[0].children].filter(x => x.isUI5Element) : this.responsivePopover.default;
		}


		get hours() {
			return this.selectedHours;
		}

		get minutes() {
			return this.selectedMinutes;
		}

		get seconds() {
			return this.selectedSeconds;
		}

		get hoursArray() {
			const _maxHours = parseInt(this.readFormattedValue(this.maxValue)[0]);
			const _currHours = parseInt(this.selectedHours) + 1;
			let hours;

			if (_maxHours) {
				hours = _maxHours + 1;
			} else if (_currHours < 24) {
				hours = 24;
			} else {
				hours = _currHours;
			}

			return this.generateTimeItemsArray(hours);
		}

		get minutesArray() {
			const currentMinutes = parseInt(this.readFormattedValue(this.maxValue)[1]);
			const minutes = currentMinutes && currentMinutes > 0 && currentMinutes < 60 ? currentMinutes + 1 : 60;
			return this.generateTimeItemsArray(minutes, this.minutesStep);
		}

		get secondsArray() {
			const currentSeconds = parseInt(this.readFormattedValue(this.maxValue)[2]);
			const seconds = currentSeconds && currentSeconds > 0 && currentSeconds < 60 ? currentSeconds + 1 : 60;
			return this.generateTimeItemsArray(seconds, this.secondsStep);
		}

		get secondsSlider() {
			return this.responsivePopover && this.responsivePopover.querySelector(".ui5-duration-picker-seconds-wheelslider");
		}

		get minutesSlider() {
			return this.responsivePopover && this.responsivePopover.querySelector(".ui5-duration-picker-minutes-wheelslider");
		}

		get hoursSlider() {
			return this.responsivePopover && this.responsivePopover.querySelector(".ui5-duration-picker-hours-wheelslider");
		}

		get hoursSliderTitle() {
			return this.i18nBundle.getText(TIMEPICKER_HOURS_LABEL);
		}

		get minutesSliderTitle() {
			return this.i18nBundle.getText(TIMEPICKER_MINUTES_LABEL);
		}

		get secondsSliderTitle() {
			return this.i18nBundle.getText(TIMEPICKER_SECONDS_LABEL);
		}

		get submitButtonLabel() {
			return this.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);
		}

		get cancelButtonLabel() {
			return this.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);
		}

		get classes() {
			return {
				container: {
					"ui5-duration-picker-sliders-container": true,
					"ui5-phone": isPhone(),
				},
			};
		}

		static get dependencies() {
			return [
				Icon,
				WheelSlider,
				ResponsivePopover,
				Input,
				Button,
			];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	DurationPicker.define();

	/**
	 * @lends sap.ui.webcomponents.main.types.PanelAccessibleRole.prototype
	 * @public
	 */
	const PanelAccessibleRoles = {

		/**
		 * Represents the ARIA role <code>complementary</code>. A section of the page, designed to be complementary to the main content at a similar level in the DOM hierarchy.
		 * @public
		 * @type {Complementary}
		 */
		Complementary: "Complementary",

		/**
		 * Represents the ARIA role <code>Form</code>. A landmark region that contains a collection of items and objects that, as a whole, create a form.
		 * @public
		 * @type {Form}
		 */
		Form: "Form",

		/**
		 * Represents the ARIA role <code>Region</code>. A section of a page, that is important enough to be included in a page summary or table of contents.
		 * @public
		 * @type {Region}
		 */
		Region: "Region",
	};

	/**
	 * @class
	 * Available Panel Accessible Landmark Roles.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.PanelAccessibleRole
	 * @public
	 * @enum {string}
	 */
	class PanelAccessibleRole extends DataType {
		static isValid(value) {
			return !!PanelAccessibleRoles[value];
		}
	}

	PanelAccessibleRole.generateTypeAccessors(PanelAccessibleRoles);

	const block0$v = (context) => { return scopedHtml`<div data-sap-ui-fastnavgroup="true" class="ui5-panel-root" role="${ifDefined(context.accRole)}"><!-- header: either header or h1 with header text --><div @click="${context._headerClick}" @keydown="${context._headerKeyDown}" @keyup="${context._headerKeyUp}" class="ui5-panel-header" tabindex="${ifDefined(context.headerTabIndex)}" role="${ifDefined(context.accInfo.role)}" aria-expanded="${ifDefined(context.accInfo.ariaExpanded)}" aria-controls="${ifDefined(context.accInfo.ariaControls)}" aria-label="${ifDefined(context.accInfo.ariaLabel)}" aria-labelledby="${ifDefined(context.accInfo.ariaLabelledby)}">${ !context.fixed ? block1$p(context) : undefined }${ context._hasHeader ? block2$o() : block3$e(context) }</div><div id="aria-labelledby-texts"></div><span id="${ifDefined(context._id)}-headerText" class="ui5-hidden-text">${ifDefined(context.headerAriaLabelledByText)}</span><!-- content area --><div class="ui5-panel-content" id="${ifDefined(context._id)}-content" tabindex="-1" style="${styleMap(context.styles.content)}"><slot></slot></div></div>`; };
	const block1$p = (context) => { return scopedHtml`<div class="ui5-panel-header-button-root"><ui5-button design="Transparent" class="ui5-panel-header-button ${classMap(context.classes.headerBtn)}" icon="slim-arrow-right" ?non-focusable="${context.nonFocusableButton}" @click="${context._toggleButtonClick}" ._buttonAccInfo="${ifDefined(context.accInfo.button)}" aria-label="${ifDefined(context.accInfo.ariaLabelButton)}" aria-labelledby="${ifDefined(context.accInfo.ariaLabelledbyButton)}"></ui5-button></div>`; };
	const block2$o = (context) => { return scopedHtml`<slot name="header"></slot>`; };
	const block3$e = (context) => { return scopedHtml`<div id="${ifDefined(context._id)}-header-title" role="heading" aria-level="${ifDefined(context.headerAriaLevel)}" class="ui5-panel-header-title" aria-labelledby="${ifDefined(context._id)}-headerText">${ifDefined(context.headerText)}</div>`; };


	const main$v = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$v(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var panelCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:block}:host{font-family:\"72override\",var(--sapFontFamily);background-color:var(--sapGroup_TitleBackground);border-bottom:1px solid var(--sapGroup_TitleBorderColor)}:host([fixed]) .ui5-panel-header{padding-left:1rem}.ui5-panel-header{height:var(--_ui5_panel_header_height);width:100%;display:flex;justify-content:flex-start;align-items:center;outline:none;box-sizing:border-box;padding-right:1rem;padding-left:.25rem;border-bottom:1px solid transparent}.ui5-panel-header-button-animated{transition:transform .4s ease-out}:host(:not([_has-header])) .ui5-panel-header-button{pointer-events:none}:host(:not([_has-header]):not([fixed])){cursor:pointer}:host(:not([_has-header]):not([fixed])) .ui5-panel-header:focus{outline:var(--_ui5_panel_focus_border);outline-offset:-3px}:host(:not([collapsed])) .ui5-panel-header-button{transform:rotate(90deg)}:host([fixed]) .ui5-panel-header-title{width:100%}.ui5-panel-header-title{width:calc(100% - var(--_ui5_panel_button_root_width));overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-family:\"72override\",var(--sapFontHeaderFamily);font-size:var(--sapFontHeader5Size);font-weight:400;color:var(--sapGroup_TitleTextColor)}.ui5-panel-content{padding:.625rem 1rem 1.375rem 1rem;background-color:var(--sapGroup_ContentBackground);outline:none}.ui5-panel-header-button-root{display:flex;justify-content:center;align-items:center;flex-shrink:0;width:var(--_ui5_panel_button_root_width);margin-right:.25rem}";

	/**
	 * @public
	 */
	const metadata$r = {
		tag: "ui5-panel",
		languageAware: true,
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.Panel.prototype */ {

			/**
			 * Defines the <code>ui5-panel</code> header area.
			 * <br><br>
			 * <b>Note:</b> When a header is provided, the <code>headerText</code> property is ignored.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			header: {
				type: HTMLElement,
			},

			/**
			 * Determines the content of the <code>ui5-panel</code>.
			 * The content is visible only when the <code>ui5-panel</code> is expanded.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: HTMLElement,
			},
		},
		properties: /** @lends sap.ui.webcomponents.main.Panel.prototype */ {

			/**
			 * This property is used to set the header text of the <code>ui5-panel</code>.
			 * The text is visible in both expanded and collapsed states.
			 * <br><br>
			 * <b>Note:</b> This property is overridden by the <code>header</code> slot.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			headerText: {
				type: String,
			},

			/**
			 * Determines whether the <code>ui5-panel</code> is in a fixed state that is not
			 * expandable/collapsible by user interaction.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			fixed: {
				type: Boolean,
			},

			/**
			 * Indicates whether the <code>ui5-panel</code> is collapsed and only the header is displayed.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			collapsed: {
				type: Boolean,
			},

			/**
			 * Sets the accessible aria role of the <code>ui5-panel</code>.
			 * Depending on the usage, you can change the role from the default <code>Form</code>
			 * to <code>Region</code> or <code>Complementary</code>.
			 *
			 * @type {PanelAccessibleRole}
			 * @defaultvalue "Form"
			 * @public
			 */
			accessibleRole: {
				type: PanelAccessibleRole,
				defaultValue: PanelAccessibleRole.Form,
			},

			/**
			 * Defines the "aria-level" of <code>ui5-panel</code> heading,
			 * set by the <code>headerText</code>.
			 * <br><br>
			 * Available options are: <code>"H6"</code> to <code>"H1"</code>.
			 * @type {TitleLevel}
			 * @defaultvalue "H2"
			 * @public
			*/
			headerLevel: {
				type: TitleLevel,
				defaultValue: TitleLevel.H2,
			},

			/**
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabel: {
				type: String,
			},

			/**
			 * Receives id(or many ids) of the elements that label the panel
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.8
			 */
			ariaLabelledby: {
				type: String,
				defaultValue: "",
			},

			/**
			 * Receives id(or many ids) of the elements that label the header of the panel
			 *
			 * @type {String}
			 * @defaultvalue ""
			 * @private
			 * @since 1.0.0-rc.9
			 */
			headerAriaLabelledby: {
				type: String,
			},

			/**
			 * @private
			 */
			_hasHeader: {
				type: Boolean,
			},

			_header: {
				type: Object,
			},

			_contentExpanded: {
				type: Boolean,
				noAttribute: true,
			},

			_animationRunning: {
				type: Boolean,
				noAttribute: true,
			},

			_buttonAccInfo: {
				type: Object,
			},
		},
		events: {

			/**
			 * Fired when the ui5-panel is expanded/collapsed by user interaction.
			 *
			 * @event
			 * @public
			 */
			toggle: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-panel</code> component is a container which has a header and a
	 * content area and is used
	 * for grouping and displaying information. It can be collapsed to save space on the screen.
	 *
	 * <h3>Guidelines:</h3>
	 * <ul>
	 * <li>Nesting two or more panels is not recommended.</li>
	 * <li>Do not stack too many panels on one page.</li>
	 * </ul>
	 *
	 * <h3>Structure</h3>
	 * A panel consists of a title bar with a header text or custom header.
	 * <br>
	 * The content area can contain an arbitrary set of controls.
	 * The header is clickable and can be used to toggle between the expanded and collapsed state.
	 * It includes an icon which rotates depending on the state.
	 * <br>
	 * The custom header can be set through the <code>header</code> slot and it may contain arbitraray content, such as: title, buttons or any other HTML elements.
	 * <br><b>Note:</b> the custom header is not clickable out of the box, but in this case the icon is interactive and allows to show/hide the content area.
	 *
	 * <h3>Responsive Behavior</h3>
	 * <ul>
	 * <li>If the width of the panel is set to 100% (default), the panel and its children are
	 * resized responsively,
	 * depending on its parent container.</li>
	 * <li>If the panel has a fixed height, it will take up the space even if the panel is
	 * collapsed.</li>
	 * <li>When the panel is expandable (the <code>fixed</code> property is set to <code>false</code>),
	 * an arrow icon (pointing to the right) appears in front of the header.</li>
	 * <li>When the animation is activated, expand/collapse uses a smooth animation to open or
	 * close the content area.</li>
	 * <li>When the panel expands/collapses, the arrow icon rotates 90 degrees
	 * clockwise/counter-clockwise.</li>
	 * </ul>
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import "@ui5/webcomponents/dist/Panel";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Panel
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-panel
	 * @public
	 */
	class Panel extends UI5Element {
		static get metadata() {
			return metadata$r;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$v;
		}

		static get styles() {
			return panelCss;
		}

		constructor() {
			super();

			this._header = {};
			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		onBeforeRendering() {
			// If the animation is running, it will set the content expanded state at the end
			if (!this._animationRunning) {
				this._contentExpanded = !this.collapsed;
			}

			this._hasHeader = !!this.header.length;
		}

		shouldToggle(node) {
			const customContent = this.header.length;
			if (customContent) {
				return node.classList.contains("ui5-panel-header-button");
			}
			return true;
		}

		shouldAnimate() {
			return getAnimationMode$1() !== AnimationMode.None;
		}

		_headerClick(event) {
			if (!this.shouldToggle(event.target)) {
				return;
			}

			this._toggleOpen();
		}

		_toggleButtonClick(event) {
			if (event.x === 0 && event.y === 0) {
				event.stopImmediatePropagation();
			}
		}

		_headerKeyDown(event) {
			if (!this.shouldToggle(event.target)) {
				return;
			}


			if (isEnter(event)) {
				this._toggleOpen();
			}

			if (isSpace(event)) {
				event.preventDefault();
			}
		}

		_headerKeyUp(event) {
			if (!this.shouldToggle(event.target)) {
				return;
			}

			if (isSpace(event)) {
				this._toggleOpen();
			}
		}

		_toggleOpen() {
			if (this.fixed) {
				return;
			}

			this.collapsed = !this.collapsed;

			if (!this.shouldAnimate()) {
				this.fireEvent("toggle");
				return;
			}

			this._animationRunning = true;

			const elements = this.getDomRef().querySelectorAll(".ui5-panel-content");
			const animations = [];

			[].forEach.call(elements, oElement => {
				if (this.collapsed) {
					animations.push(slideUp({
						element: oElement,
					}).promise());
				} else {
					animations.push(slideDown({
						element: oElement,
					}).promise());
				}
			});

			Promise.all(animations).then(_ => {
				this._animationRunning = false;
				this._contentExpanded = !this.collapsed;
				this.fireEvent("toggle");
			});
		}

		_headerOnTarget(target) {
			return target.classList.contains("sapMPanelWrappingDiv");
		}

		get classes() {
			return {
				headerBtn: {
					"ui5-panel-header-button-animated": this.shouldAnimate(),
				},
			};
		}

		get toggleButtonTitle() {
			return this.i18nBundle.getText(PANEL_ICON);
		}

		get expanded() {
			return !this.collapsed;
		}

		get accRole() {
			return this.accessibleRole.toLowerCase();
		}

		get accInfo() {
			return {
				"button": {
					"ariaExpanded": this._hasHeader ? this.expanded : undefined,
					"ariaControls": this._hasHeader ? `${this._id}-content` : undefined,
					"title": this.toggleButtonTitle,
				},
				"ariaExpanded": this.nonFixedInternalHeader ? this.expanded : undefined,
				"ariaControls": this.nonFixedInternalHeader ? `${this._id}-content` : undefined,
				"ariaLabelledby": this.nonFocusableButton ? this.ariaLabelledbyReference : undefined,
				"ariaLabel": this.nonFocusableButton ? this.ariaLabelTxt : undefined,
				"ariaLabelledbyButton": this.nonFocusableButton ? undefined : this.ariaLabelledbyReference,
				"ariaLabelButton": this.nonFocusableButton ? undefined : this.ariaLabelTxt,
				"role": this.nonFixedInternalHeader ? "button" : undefined,
			};
		}

		get ariaLabelledbyReference() {
			if (this.ariaLabelledby || this.ariaLabel) {
				return undefined;
			}

			return (this.nonFocusableButton && this.headerText) ? `${this._id}-header-title` : undefined;
		}

		get ariaLabelTxt() {
			return getEffectiveAriaLabelText(this);
		}

		get header() {
			return this.getDomRef().querySelector(`#${this._id}-header-title`);
		}

		get headerAriaLevel() {
			return this.headerLevel.slice(1);
		}

		get headerTabIndex() {
			return (this.header.length || this.fixed) ? "-1" : "0";
		}

		get headerAriaLabelledByText() {
			if (!this.headerAriaLabelledby) {
				return;
			}
			return getAriaLabelledByTexts(this.header, findNodeOwner(this), this.headerAriaLabelledby);
		}

		get nonFixedInternalHeader() {
			return !this._hasHeader && !this.fixed;
		}

		get nonFocusableButton() {
			return !this.header.length;
		}

		get shouldRenderH1() {
			return !this.header.length && (this.headerText || !this.fixed);
		}

		get styles() {
			return {
				content: {
					display: this._contentExpanded ? "block" : "none",
				},
			};
		}

		static get dependencies() {
			return [Button];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}
	}

	Panel.define();

	var sap_belize$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.aefb1ce2c6da1ec6.json";

	var sap_belize_hcb$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.a600029b97ee1615.json";

	var sap_belize_hcw$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.fec24840f8197c8e.json";

	var sap_fiori_3_dark$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.7361bb9c9ffdb9ed.json";

	var sap_fiori_3_hcb$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.9c159cf6281b11cb.json";

	var sap_fiori_3_hcw$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/parameters-bundle.css.7404d071dc9ac373.json";

	const isInlined$2 = obj => typeof (obj) === "object";

	if (isInlined$2(sap_belize$2) || isInlined$2(sap_belize_hcb$2) || isInlined$2(sap_belize_hcw$2) || isInlined$2(sap_fiori_3_dark$2) || isInlined$2(sap_fiori_3_hcb$2) || isInlined$2(sap_fiori_3_hcw$2)) {
		console.warn(`Inefficient bundling detected: consider bundling theme properties imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}

	registerThemeProperties("@ui5/webcomponents-fiori", "sap_belize", sap_belize$2);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_belize_hcb", sap_belize_hcb$2);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_belize_hcw", sap_belize_hcw$2);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3_dark", sap_fiori_3_dark$2);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3_hcb", sap_fiori_3_hcb$2);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3_hcw", sap_fiori_3_hcw$2);

	var ar$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ar.a8678fe487a2d879.json";

	var bg$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_bg.f8dccc6401accb50.json";

	var ca$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ca.6090a1376734a395.json";

	var cs$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_cs.f78419447ded8905.json";

	var da$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_da.389603c67ccf7914.json";

	var de$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_de.6a52428ce59f2ab8.json";

	var el$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_el.592cc29e427b73a5.json";

	var en$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_en.e877c6bbdfafbaf3.json";

	var es$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_es.25a13e314c1833e8.json";

	var et$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_et.6af9e51c51faa5d7.json";

	var fi$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fi.020adb89f211831f.json";

	var fr$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fr.a47fe5b5a90277af.json";

	var hi$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hi.35688023ec439c59.json";

	var hr$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hr.ef41879255034838.json";

	var hu$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hu.eb73eb4022126a30.json";

	var it$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_it.44707ab18ba24a59.json";

	var iw$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_iw.fe9bba8ce254e345.json";

	var ja$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ja.43630ab1c4ca7cef.json";

	var kk$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_kk.4190269023cdb4c0.json";

	var ko$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ko.e007d3e82525a0f1.json";

	var lt$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lt.3aafba504eefc40d.json";

	var lv$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lv.d002ea15a5a52a07.json";

	var ms$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ms.4305aa9531ca7d79.json";

	var nl$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_nl.ceb855a1efc1ae74.json";

	var no$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_no.817eae7c33d98ebe.json";

	var pl$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pl.844a936751d8be89.json";

	var pt$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pt.ed6fc759b1b1072d.json";

	var ro$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ro.d8a8d97254a99c11.json";

	var ru$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ru.08645fc23b7455f1.json";

	var sh$1 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sh.0d09a98d180f0aba.json";

	var sk$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sk.14342d73b4ae64c2.json";

	var sl$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sl.911645dc5ce3c040.json";

	var sv$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sv.d4edec2f8cba6e57.json";

	var th$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_th.ab2e323a55905e60.json";

	var tr$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_tr.80f6c09f443fe61c.json";

	var uk$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_uk.1ac00f1c80c586b7.json";

	var vi$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_vi.f4891a8ce6f036b3.json";

	var zh_CN$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_CN.cf1c8642d0022f81.json";

	var zh_TW$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_TW.53270fdb8cdd2c6a.json";

	const bundleMap$1 = {
		ar: ar$2,
		bg: bg$2,
		ca: ca$2,
		cs: cs$2,
		da: da$2,
		de: de$2,
		el: el$2,
		en: en$2,
		es: es$2,
		et: et$2,
		fi: fi$2,
		fr: fr$2,
		hi: hi$2,
		hr: hr$2,
		hu: hu$2,
		it: it$2,
		iw: iw$1,
		ja: ja$2,
		kk: kk$2,
		ko: ko$2,
		lt: lt$2,
		lv: lv$2,
		ms: ms$2,
		nl: nl$2,
		no: no$1,
		pl: pl$2,
		pt: pt$2,
		ro: ro$2,
		ru: ru$2,
		sh: sh$1,
		sk: sk$2,
		sl: sl$2,
		sv: sv$2,
		th: th$2,
		tr: tr$2,
		uk: uk$2,
		vi: vi$2,
		zh_CN: zh_CN$2,
		zh_TW: zh_TW$2,
	};

	const allEntriesInlined$2 = Object.entries(bundleMap$1).every(([_key, value]) => typeof (value) === "object");

	if (allEntriesInlined$2) {
		console.warn(`Inefficient bundling detected: consider bundling i18n imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}

	registerI18nBundle("@ui5/webcomponents-fiori", bundleMap$1);

	const rCSS = /[\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xff\u2028\u2029][0-9A-Fa-f]?/g; // eslint-disable-line

	const toHex = (iChar, iLength) => {
		let sHex = iChar.toString(16);
		if (iLength) {
			sHex = sHex.padStart(iLength, "0");
		}
		return sHex;
	};

	const fnCSS = sChar => {
		const iChar = sChar.charCodeAt(0);
		if (sChar.length === 1) {
			return `\\${toHex(iChar)}`;
		}

		return `\\${toHex(iChar)} ${sChar.substr(1)}`;
	};

	const encodeCSS = string => {
		return string.replace(rCSS, fnCSS);
	};

	const block0$w = (context) => { return scopedHtml`<div class="ui5-avatar-root" tabindex="${ifDefined(context.tabindex)}" data-sap-focus-ref @keyup=${context._onkeyup} @keydown=${context._onkeydown} @focusout=${context._onfocusout} @focusin=${context._onfocusin} @click=${context._onclick}>${ context.image ? block1$q(context) : block2$p(context) }</div>`; };
	const block1$q = (context) => { return scopedHtml`<span class="ui5-avatar-img" style="${styleMap(context.styles.img)}" role="img" aria-label="${ifDefined(context.accessibleNameText)}"></span>`; };
	const block2$p = (context) => { return scopedHtml`${ context.icon ? block3$f(context) : block4$b(context) }`; };
	const block3$f = (context) => { return scopedHtml`<ui5-icon class="ui5-avatar-icon" name="${ifDefined(context.icon)}" accessible-name="${ifDefined(context.accessibleNameText)}"></ui5-icon>`; };
	const block4$b = (context) => { return scopedHtml`${ context.initials ? block5$9(context) : undefined }`; };
	const block5$9 = (context) => { return scopedHtml`<span class="ui5-avatar-initials">${ifDefined(context.validInitials)}</span>`; };


	const main$w = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$w(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var AvatarCss = ":host(:not([hidden])){display:inline-block;box-sizing:border-box}:host(:not([hidden]).ui5_hovered){opacity:.7}:host([focused]){outline:var(--_ui5_avatar_outline);outline-offset:var(--_ui5_avatar_focus_offset)}:host([interactive]){cursor:pointer}:host{height:3rem;width:3rem;border-radius:50%;border:var(--ui5-avatar-initials-border);outline:none;color:var(--ui5-avatar-initials-color)}:host([shape=Square]){border-radius:.25rem}:host([shape=Square]) .ui5-avatar-root{border-radius:inherit}:host([shape=Square]) .ui5-avatar-img{border-radius:inherit}:host([_size=XS]),:host([size=XS]){height:2rem;width:2rem;min-height:2rem;min-width:2rem;font-size:.75rem}:host([_size=S]),:host([size=S]){min-height:3rem;min-width:3rem;font-size:1.125rem}:host([_size=M]),:host([size=M]){min-height:4rem;min-width:4rem;font-size:1.625rem}:host([_size=L]),:host([size=L]){min-height:5rem;min-width:5rem;font-size:2rem}:host([_size=XL]),:host([size=XL]){min-height:7rem;min-width:7rem;font-size:2.75rem}:host .ui5-avatar-icon{height:1.5rem;width:1.5rem}:host([_size=XS]) .ui5-avatar-icon,:host([size=XS]) .ui5-avatar-icon{height:1rem;width:1rem}:host([_size=S]) .ui5-avatar-icon,:host([size=S]) .ui5-avatar-icon{height:1.5rem;width:1.5rem}:host([_size=M]) .ui5-avatar-icon,:host([size=M]) .ui5-avatar-icon{height:2rem;width:2rem}:host([_size=L]) .ui5-avatar-icon,:host([size=L]) .ui5-avatar-icon{height:2.5rem;width:2.5rem}:host([_size=XL]) .ui5-avatar-icon,:host([size=XL]) .ui5-avatar-icon{height:3rem;width:3rem}:host(:not([image])){background-color:var(--ui5-avatar-accent6)}:host([_background-color=Accent1]),:host([background-color=Accent1]){background-color:var(--ui5-avatar-accent1)}:host([_background-color=Accent2]),:host([background-color=Accent2]){background-color:var(--ui5-avatar-accent2)}:host([_background-color=Accent3]),:host([background-color=Accent3]){background-color:var(--ui5-avatar-accent3)}:host([_background-color=Accent4]),:host([background-color=Accent4]){background-color:var(--ui5-avatar-accent4)}:host([_background-color=Accent5]),:host([background-color=Accent5]){background-color:var(--ui5-avatar-accent5)}:host([_background-color=Accent6]),:host([background-color=Accent6]){background-color:var(--ui5-avatar-accent6)}:host([_background-color=Accent7]),:host([background-color=Accent7]){background-color:var(--ui5-avatar-accent7)}:host([_background-color=Accent8]),:host([background-color=Accent8]){background-color:var(--ui5-avatar-accent8)}:host([_background-color=Accent9]),:host([background-color=Accent9]){background-color:var(--ui5-avatar-accent9)}:host([_background-color=Accent10]),:host([background-color=Accent10]){background-color:var(--ui5-avatar-accent10)}:host([_background-color=Placeholder]),:host([background-color=Placeholder]){background-color:var(--ui5-avatar-placeholder)}:host(:not([image])) .ui5-avatar-icon{color:inherit}:host([image-fit-type=Contain]) .ui5-avatar-img{background-size:contain}.ui5-avatar-root{display:flex;align-items:center;justify-content:center;outline:none}.ui5-avatar-img,.ui5-avatar-root{height:100%;width:100%;border-radius:50%}.ui5-avatar-img{background-repeat:no-repeat;background-position:50%;background-size:cover}.ui5-avatar-initials{color:inherit}";

	/**
	 * Different types of AvatarSize.
	 * @lends sap.ui.webcomponents.main.types.AvatarSize.prototype
	 * @public
	 */
	const AvatarSizes = {
		/**
		 * component size - 2rem
		 * font size - 1rem
		 * @public
		 * @type {XS}
		 */
		XS: "XS",

		/**
		 * component size - 3rem
		 * font size - 1.5rem
		 * @public
		 * @type {S}
		 */
		S: "S",

		/**
		 * component size - 4rem
		 * font size - 2rem
		 * @public
		 * @type {M}
		 */
		M: "M",

		/**
		 * component size - 5rem
		 * font size - 2.5rem
		 * @public
		 * @type {L}
		 */
		L: "L",

		/**
		 * component size - 7rem
		 * font size - 3rem
		 * @public
		 * @type {XL}
		 */
		XL: "XL",
	};

	/**
	 * @class
	 * Different types of AvatarSize.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.AvatarSize
	 * @public
	 * @enum {string}
	 */
	class AvatarSize extends DataType {
		static isValid(value) {
			return !!AvatarSizes[value];
		}
	}

	AvatarSize.generateTypeAccessors(AvatarSizes);

	/**
	 * Different types of AvatarShape.
	 * @lends sap.ui.webcomponents.main.types.AvatarShape.prototype
	 * @public
	 */
	const AvatarShapes = {
		/**
		 * Circular shape.
		 * @public
		 * @type {Circle}
		 */
		Circle: "Circle",

		/**
		 * Square shape.
		 * @public
		 * @type {Square}
		 */
		Square: "Square",
	};

	/**
	 * @class
	 * Different types of AvatarShape.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.AvatarShape
	 * @public
	 * @enum {string}
	 */
	class AvatarShape extends DataType {
		static isValid(value) {
			return !!AvatarShapes[value];
		}
	}

	AvatarShape.generateTypeAccessors(AvatarShapes);

	/**
	 * Different types of AvatarFitType.
	 * @lends sap.ui.webcomponents.main.types.AvatarFitType.prototype
	 * @public
	 */
	const AvatarFitTypes = {
		/**
		 *
		 * @type {Cover}
		 * @public
		 */
		Cover: "Cover",

		/**
		 * @type {Contain}
		 * @public
		 */
		Contain: "Contain",
	};

	/**
	 * @class
	 * Different types of AvatarFitType.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.AvatarFitType
	 * @public
	 * @enum {string}
	 */
	class AvatarFitType extends DataType {
		static isValid(value) {
			return !!AvatarFitTypes[value];
		}
	}

	AvatarFitType.generateTypeAccessors(AvatarFitTypes);

	/**
	 * Different types of AvatarBackgroundColor.
	 * @lends sap.ui.webcomponents.main.types.AvatarBackgroundColor.prototype
	 * @public
	 */
	const AvatarBackGroundColors = {
		/**
		 *
		 * @public
		 * @type {Accent1}
		 */
		Accent1: "Accent1",

		/**
		 *
		 * @public
		 * @type {Accent2}
		 */
		Accent2: "Accent2",

		/**
		 *
		 * @public
		 * @type {Accent3}
		 */
		Accent3: "Accent3",

		/**
		 *
		 * @public
		 * @type {Accent4}
		 */
		Accent4: "Accent4",

		/**
		 *
		 * @public
		 * @type {Accent5}
		 */
		Accent5: "Accent5",

		/**
		 *
		 * @public
		 * @type {Accent6}
		 */
		Accent6: "Accent6",

		/**
		 *
		 * @public
		 * @type {Accent7}
		 */
		Accent7: "Accent7",

		/**
		 *
		 * @public
		 * @type {Accent8}
		 */
		Accent8: "Accent8",

		/**
		 *
		 * @public
		 * @type {Accent9}
		 */
		Accent9: "Accent9",

		/**
		 *
		 * @public
		 * @type {Accent10}
		 */
		Accent10: "Accent10",

		/**
		 *
		 * @public
		 * @type {Placeholder}
		 */
		Placeholder: "Placeholder",
	};

	/**
	 * @class
	 * Different types of AvatarBackgroundColor.
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.types.AvatarBackgroundColor
	 * @public
	 * @enum {string}
	 */
	class AvatarBackgroundColor extends DataType {
		static isValid(value) {
			return !!AvatarBackGroundColors[value];
		}
	}

	AvatarBackgroundColor.generateTypeAccessors(AvatarBackGroundColors);

	/**
	 * @public
	 */
	const metadata$s = {
		tag: "ui5-avatar",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.main.Avatar.prototype */ {

			/**
			 * Defines if the avatar is interactive (focusable and pressable)
			 * @type {boolean}
			 * @defaultValue false
			 * @public
			 */
			interactive: {
				type: Boolean,
			},

			/**
			 * Indicates if the elements is on focus
			 * @private
			 */
			focused: {
				type: Boolean,
			},

			/**
			 * Defines the source path to the desired image.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			image: {
				type: String,
			},

			/**
			 * Defines the name of the UI5 Icon, that would be displayed.
			 * <br>
			 * <b>Note:</b> If <code>image</code> is set, the property would be ignored.
			 * <br>
			 * <b>Note:</b> You should import the desired icon first, then use its name as "icon".
			 * <br><br>
			 * import "@ui5/webcomponents-icons/dist/{icon_name}.js"
			 * <br>
			 * <pre>&lt;ui5-avatar icon-src="employee"></pre>
			 *
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines the displayed initials.
			 * <br>
			 * Up to two Latin letters can be displayed as initials in a <code>ui5-avatar</code>.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			initials: {
				type: String,
			},

			/**
			 * Defines the shape of the <code>ui5-avatar</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Circle</code></li>
			 * <li><code>Square</code></li>
			 * <ul>
			 * @type {AvatarShape}
			 * @defaultvalue "Circle"
			 * @public
			 */
			shape: {
				type: String,
				defaultValue: AvatarShape.Circle,
			},

			/**
			 * Defines predefined size of the <code>ui5-avatar</code>.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>XS</code></li>
			 * <li><code>S</code></li>
			 * <li><code>M</code></li>
			 * <li><code>L</code></li>
			 * <li><code>XL</code></li>
			 * <ul>
			 * @type {AvatarSize}
			 * @defaultvalue "S"
			 * @public
			 */
			size: {
				type: String,
				defaultValue: AvatarSize.S,
			},

			/**
			 * @private
			 */
			_size: {
				type: String,
				defaultValue: AvatarSize.S,
			},

			/**
			 * Defines the fit type of the desired image.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Cover</code></li>
			 * <li><code>Contain</code></li>
			 * <ul>
			 * @type {AvatarFitType}
			 * @defaultvalue "Cover"
			 * @public
			 */
			imageFitType: {
				type: String,
				defaultValue: AvatarFitType.Cover,
			},

			/**
			 * Defines the background color of the desired image.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>Accent1</code></li>
			 * <li><code>Accent2</code></li>
			 * <li><code>Accent3</code></li>
			 * <li><code>Accent4</code></li>
			 * <li><code>Accent5</code></li>
			 * <li><code>Accent6</code></li>
			 * <li><code>Accent7</code></li>
			 * <li><code>Accent8</code></li>
			 * <li><code>Accent9</code></li>
			 * <li><code>Accent10</code></li>
			 * <li><code>Placeholder</code></li>
			 * <ul>
			 * @type {AvatarBackgroundColor}
			 * @defaultvalue "Accent6"
			 * @public
			 */
			backgroundColor: {
				type: String,
				defaultValue: AvatarBackgroundColor.Accent6,
			},

			/**
			 * @private
			 */
			_backgroundColor: {
				type: String,
				defaultValue: AvatarBackgroundColor.Accent6,
			},

			/**
			 * Defines the text alternative of the <code>ui5-avatar</code>.
			 * If not provided a default text alternative will be set, if present.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 * @since 1.0.0-rc.7
			 */
			accessibleName: {
				type: String,
			},

			_tabIndex: {
				type: String,
				noAttribute: true,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.Avatar.prototype */ {
		},
		events: /** @lends sap.ui.webcomponents.main.Avatar.prototype */ {
			/**
			* Fired on mouseup, space and enter if avatar is interactive
			*
			* @event
			* @private
			* @since 1.0.0-rc.11
			*/
			click: {},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * An image-like control that has different display options for representing images and icons
	 * in different shapes and sizes, depending on the use case.
	 *
	 * The shape can be circular or square. There are several predefined sizes, as well as an option to
	 * set a custom size.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents/dist/Avatar.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Avatar
	 * @extends UI5Element
	 * @tagname ui5-avatar
	 * @since 1.0.0-rc.6
	 * @public
	 */
	class Avatar extends UI5Element {
		constructor() {
			super();
			this.i18nBundle = getI18nBundle("@ui5/webcomponents");
		}

		static get metadata() {
			return metadata$s;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return AvatarCss;
		}

		static get template() {
			return main$w;
		}

		static get dependencies() {
			return [Icon];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents");
		}

		get tabindex() {
			return this._tabIndex || (this.interactive ? "0" : "-1");
		}

		/**
		 * Returns the effective avatar size.
		 * @readonly
		 * @type { String }
		 * @defaultValue "S"
		 * @private
		 */
		get _effectiveSize() {
			// we read the attribute, because the "size" property will always have a default value
			return this.getAttribute("size") || this._size;
		}

		/**
		 * Returns the effective background color.
		 * @readonly
		 * @type { String }
		 * @defaultValue "Accent6"
		 * @private
		 */
		get _effectiveBackgroundColor() {
			// we read the attribute, because the "background-color" property will always have a default value
			return this.getAttribute("background-color") || this._backgroundColor;
		}

		get validInitials() {
			const validInitials = /^[a-zA-Z]{1,2}$/;

			if (this.initials && validInitials.test(this.initials)) {
				return this.initials;
			}

			return null;
		}

		get accessibleNameText() {
			if (this.accessibleName) {
				return this.accessibleName;
			}

			return this.i18nBundle.getText(AVATAR_TOOLTIP) || undefined;
		}

		get styles() {
			return {
				img: {
					"background-image": `url("${encodeCSS(this.image)}")`,
				},
			};
		}

		_onclick(event) {
			event.isMarked = "avatar";
			if (this.interactive) {
				event.preventDefault();
				// Prevent the native event and fire custom event because otherwise the noConfict event won't be thrown
				this.fireEvent("click");
			}
		}

		_onkeydown(event) {
			if (this.interactive && isEnter(event)) {
				this.fireEvent("click");
			}
		}

		_onkeyup(event) {
			if (this.interactive && !event.shiftKey && isSpace(event)) {
				this.fireEvent("click");
			}
		}

		_onfocusout() {
			this.focused = false;
		}

		_onfocusin() {
			if (this.interactive) {
				this.focused = true;
			}
		}
	}

	Avatar.define();

	const block0$x = (context) => { return scopedHtml`<li tabindex="${ifDefined(context._tabIndex)}" class="${classMap(context.classes.main)}" dir="${ifDefined(context.effectiveDir)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" @keyup="${context._onkeyup}" @keydown="${context._onkeydown}" @mouseup="${context._onmouseup}" @mousedown="${context._onmousedown}" @touchstart="${context._ontouchstart}" @touchend="${context._ontouchend}" @click="${context._onclick}" aria-selected="${ifDefined(context.ariaSelected)}" role="${ifDefined(context._accInfo.role)}" aria-expanded="${ifDefined(context._accInfo.ariaExpanded)}" aria-level="${ifDefined(context._accInfo.ariaLevel)}" style="list-style-type: none;">${ context.placeSelectionElementBefore ? block1$r(context) : undefined }<div id="${ifDefined(context._id)}-content" class="ui5-li-content">${ context.displayImage ? block5$a(context) : undefined }${ context.displayIconBegin ? block6$8(context) : undefined }<div class="ui5-li-text-wrapper"><span part="title" class="ui5-li-title"><slot></slot></span>${ context.description ? block7$6(context) : undefined }${ !context.typeActive ? block9$4(context) : undefined }</div>${ !context.description ? block10$3(context) : undefined }</div>${ context.displayIconEnd ? block12$2(context) : undefined }${ context.typeDetail ? block13$1(context) : undefined }${ context.placeSelectionElementAfter ? block14$1(context) : undefined }</li> `; };
	const block1$r = (context) => { return scopedHtml`${ context.modeSingleSelect ? block2$q(context) : undefined }${ context.modeMultiSelect ? block3$g(context) : undefined }${ context.modeDelete ? block4$c(context) : undefined }`; };
	const block2$q = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block3$g = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block4$c = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };
	const block5$a = (context) => { return scopedHtml`<ui5-avatar image="${ifDefined(context.image)}" image-fit-type="Contain" shape="Square" class="ui5-li-img"></ui5-avatar>`; };
	const block6$8 = (context) => { return scopedHtml`<ui5-icon part="icon" name="${ifDefined(context.icon)}" class="ui5-li-icon"></ui5-icon>`; };
	const block7$6 = (context) => { return scopedHtml`<div class="ui5-li-description-info-wrapper"><span part="description" class="ui5-li-desc">${ifDefined(context.description)}</span>${ context.info ? block8$5(context) : undefined }</div>`; };
	const block8$5 = (context) => { return scopedHtml`<span part="info" class="ui5-li-info">${ifDefined(context.info)}</span>`; };
	const block9$4 = (context) => { return scopedHtml`<span class="ui5-hidden-text">${ifDefined(context.type)}</span>`; };
	const block10$3 = (context) => { return scopedHtml`${ context.info ? block11$2(context) : undefined }`; };
	const block11$2 = (context) => { return scopedHtml`<span part="info" class="ui5-li-info">${ifDefined(context.info)}</span>`; };
	const block12$2 = (context) => { return scopedHtml`<ui5-icon part="icon" name="${ifDefined(context.icon)}" class="ui5-li-icon"></ui5-icon>`; };
	const block13$1 = (context) => { return scopedHtml`<div class="ui5-li-detailbtn"><ui5-button design="Transparent" icon="edit" @click="${context.onDetailClick}"></ui5-button></div>`; };
	const block14$1 = (context) => { return scopedHtml`${ context.modeSingleSelect ? block15$1(context) : undefined }${ context.modeMultiSelect ? block16$1(context) : undefined }${ context.modeDelete ? block17$1(context) : undefined }`; };
	const block15$1 = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block16$1 = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block17$1 = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };


	const main$x = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$x(context);
	};

	/**
	 * @public
	 */
	const metadata$t = {
		tag: "ui5-li",
		properties: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */ {

			/**
			 * Defines the description displayed right under the item text, if such is present.
			 * @type {string}
			 * @defaultvalue: ""
			 * @public
			 * @since 0.8.0
			 */
			description: {
				type: String,
			},

			/**
			 * Defines the <code>icon</code> source URI.
			 * <br><br>
			 * <b>Note:</b>
			 * SAP-icons font provides numerous buil-in icons. To find all the available icons, see the
			 * <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 *
			 * @type {string}
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines whether the <code>icon</code> should be displayed in the beginning of the list item or in the end.
			 * <br><br>
			 * <b>Note:</b> If <code>image</code> is set, the <code>icon</code> would be displayed after the <code>image</code>.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			iconEnd: {
				type: Boolean,
			},

			/**
			 * Defines the <code>image</code> source URI.
			 * <br><br>
			 * <b>Note:</b> The <code>image</code> would be displayed in the beginning of the list item.
			 *
			 * @type {string}
			 * @public
			 */
			image: {
				type: String,
			},

			/**
			 * Defines the <code>info</code>, displayed in the end of the list item.
			 * @type {string}
			 * @public
			 * @since 0.13.0
			 */
			info: {
				type: String,
			},

			/**
			 * Defines the state of the <code>info</code>.
			 * <br>
			 * Available options are: <code>"None"</code> (by default), <code>"Success"</code>, <code>"Warning"</code>, <code>"Information"</code> and <code>"Erorr"</code>.
			 * @type {ValueState}
			 * @defaultvalue "None"
			 * @public
			 * @since 0.13.0
			 */
			infoState: {
				type: ValueState,
				defaultValue: ValueState.None,
			},

			/**
			 * Indicates if the list item has text content.
			 * @type {boolean}
			 * @private
			 */
			hasTitle: {
				type: Boolean,
			},
		},
		slots: /** @lends sap.ui.webcomponents.main.StandardListItem.prototype */ {
			/**
			 * Defines the text of the <code>ui5-li</code>.
			 * <br><br>
			 * <b>Note:</b> Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
	};

	/**
	 * @class
	 * The <code>ui5-li</code> represents the simplest type of item for a <code>ui5-list</code>.
	 *
	 * This is a list item,
	 * providing the most common use cases such as <code>text</code>,
	 * <code>image</code> and <code>icon</code>.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.StandardListItem
	 * @extends ListItem
	 * @tagname ui5-li
	 * @public
	 */
	class StandardListItem extends ListItem {
		static get template() {
			return main$x;
		}

		static get metadata() {
			return metadata$t;
		}

		onBeforeRendering(...params) {
			super.onBeforeRendering(...params);
			this.hasTitle = !!this.textContent;
		}

		get displayImage() {
			return !!this.image;
		}

		get displayIconBegin() {
			return (this.icon && !this.iconEnd);
		}

		get displayIconEnd() {
			return (this.icon && this.iconEnd);
		}

		static get dependencies() {
			return [
				...ListItem.dependencies,
				Icon,
				Avatar,
			];
		}
	}

	StandardListItem.define();

	const name$c = "search";
	const pathData$c = "M470 426q10 9 10 22.5T470 471q-9 9-22 9t-23-9L308 353q-45 31-100 31-36 0-68-13.5T84 333t-38-56-14-69q0-36 14-68t38-56 56-38 68-14 68 14 56 38 38 56 14 68q0 28-8.5 53T353 308zm-262-74q30 0 56-11t45.5-30.5 31-46T352 208t-11.5-56-31-45.5-45.5-31T208 64t-56.5 11.5-46 31T75 152t-11 56 11 56.5 30.5 46 46 30.5 56.5 11z";
	const ltr$c = true;
	const collection$c = "SAP-icons";

	registerIcon(name$c, { pathData: pathData$c, ltr: ltr$c, collection: collection$c});

	const name$d = "bell";
	const pathData$d = "M32 416q0-7 15-21t31-40.5 25.5-67.5-1.5-101q-5-29 3-54.5t25-45 42-33T225 35q0-15 7-25t24-10q14 0 23 9t9 23q0 2-1 3 26 5 50 18t41 33 24.5 45.5T404 186q-12 60-1.5 101t27.5 67.5 33.5 40.5 16.5 21q0 14-9 23t-23 9H320q0 26-19 45t-45 19-45-19-19-45H64q-14 0-23-9t-9-23zm39 0h369q-10-11-25.5-30.5t-28-48.5-18-68 4.5-89q5-25-2.5-44T354 106q-19-23-42-32.5T256 64q-32 0-57.5 9.5T154 106q-10 11-18 30t-3 44q9 50 4 89t-16 68-25.5 48.5T71 416z";
	const ltr$d = false;
	const collection$d = "SAP-icons";

	registerIcon(name$d, { pathData: pathData$d, ltr: ltr$d, collection: collection$d});

	const name$e = "overflow";
	const pathData$e = "M448 192q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zm-192-96q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zM64 192q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
	const ltr$e = false;
	const collection$e = "SAP-icons";

	registerIcon(name$e, { pathData: pathData$e, ltr: ltr$e, collection: collection$e});

	const name$f = "grid";
	const pathData$f = "M394 362h55q14 0 22.5 9t8.5 23v54q0 14-8.5 23t-22.5 9h-55q-14 0-22.5-9t-8.5-23v-54q0-14 8.5-23t22.5-9zM228 197h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54q0-14 8.5-23t22.5-9zm135-79V64q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5zm31 79h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54q0-14 8.5-23t22.5-9zM63 32h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 118V64q0-14 8.5-23T63 32zM32 229q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 283v-54zm31 133h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 448v-54q0-14 8.5-23t22.5-9zM228 32h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5V64q0-14 8.5-23t22.5-9zm-31 362q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54z";
	const ltr$f = false;
	const collection$f = "SAP-icons";

	registerIcon(name$f, { pathData: pathData$f, ltr: ltr$f, collection: collection$f});

	const SHELLBAR_LABEL = {key: "SHELLBAR_LABEL", defaultText: "Shell Bar"};const SHELLBAR_LOGO = {key: "SHELLBAR_LOGO", defaultText: "Logo"};const SHELLBAR_COPILOT = {key: "SHELLBAR_COPILOT", defaultText: "CoPilot"};const SHELLBAR_NOTIFICATIONS = {key: "SHELLBAR_NOTIFICATIONS", defaultText: "{0} Notifications"};const SHELLBAR_PROFILE = {key: "SHELLBAR_PROFILE", defaultText: "Profile"};const SHELLBAR_PRODUCTS = {key: "SHELLBAR_PRODUCTS", defaultText: "Products"};const SHELLBAR_SEARCH = {key: "SHELLBAR_SEARCH", defaultText: "Search"};const SHELLBAR_OVERFLOW = {key: "SHELLBAR_OVERFLOW", defaultText: "More"};const SHELLBAR_CANCEL = {key: "SHELLBAR_CANCEL", defaultText: "Cancel"};

	const block0$y = (context) => { return scopedHtml`<div class="${classMap(context.classes.wrapper)}" dir="${ifDefined(context.effectiveDir)}" role="banner" aria-label="${ifDefined(context._shellbarText)}" part="root"><div class="ui5-shellbar-overflow-container ui5-shellbar-overflow-container-left">${ context.startButton.length ? block1$s() : undefined }${ context.hasFocusableLogo ? block2$r(context) : undefined }${ context.showArrowDown ? block3$h(context) : undefined }<h2 class="ui5-shellbar-secondary-title">${ifDefined(context.secondaryTitle)}</h2></div><div class="ui5-shellbar-overflow-container ui5-shellbar-overflow-container-middle">${ context.showCoPilot ? block6$9(context) : block9$5() }</div><div class="ui5-shellbar-overflow-container ui5-shellbar-overflow-container-right"><div class="ui5-shellbar-overflow-container-right-child">${ context.hasSearchField ? block10$4(context) : undefined }${ repeat(context.customItemsInfo, (item, index) => item._id || index, (item, index) => block13$2(item, index, context)) }${ context.showNotifications ? block14$2(context) : undefined }<ui5-button id="${ifDefined(context._id)}-item-5" style="${styleMap(context.styles.items.overflow)}" class="${classMap(context.classes.items.overflow)} ui5-shellbar-button ui5-shellbar-overflow-button-shown ui5-shellbar-overflow-button" icon="sap-icon://overflow" @click="${context._handleOverflowPress}" aria-label="${ifDefined(context._overflowText)}" title="${ifDefined(context._overflowText)}" ._buttonAccInfo="${ifDefined(context.accInfo.overflow)}" data-ui5-stable="overflow"></ui5-button>${ context.hasProfile ? block15$2(context) : undefined }${ context.showProductSwitch ? block16$2(context) : undefined }</div></div></div> `; };
	const block1$s = (context) => { return scopedHtml`<slot name="startButton"></slot>`; };
	const block2$r = (context) => { return scopedHtml`<span class="ui5-shellbar-logo" role="button" aria-label="${ifDefined(context._logoText)}" title="${ifDefined(context._logoText)}" @click="${context._logoPress}" @keydown="${context._logoKeydown}" @keyup="${context._logoKeyup}" tabindex="0" data-ui5-stable="logo"><slot name="logo"></slot></span>`; };
	const block3$h = (context) => { return scopedHtml`<button tabindex="${ifDefined(context.menuBtnTabindex)}" class="${classMap(context.classes.button)}" @click="${context._header.press}" aria-haspopup="${ifDefined(context.menuBtnHasPopup)}" aria-expanded="${ifDefined(context.menuPopoverExpanded)}">${ context.hasNonFocusableLogo ? block4$d(context) : undefined }${ context.primaryTitle ? block5$b(context) : undefined }<span class="ui5-shellbar-menu-button-arrow"></span></button>`; };
	const block4$d = (context) => { return scopedHtml`<span class="ui5-shellbar-logo" aria-label="${ifDefined(context._logoText)}" title="${ifDefined(context._logoText)}"><slot name="logo"></slot></span>`; };
	const block5$b = (context) => { return scopedHtml`<h1 class="ui5-shellbar-menu-button-title"><bdi class="${classMap(context.classes.title)}">${ifDefined(context.primaryTitle)}</bdi></h1>`; };
	const block6$9 = (context) => { return scopedHtml`<div class="ui5-shellbar-copilot-wrapper" tabindex="0" aria-label="${ifDefined(context._copilotText)}" title="${ifDefined(context._copilotText)}" @keydown="${context._coPilotKeydown}" @keyup="${context._coPilotKeyup}" ?active="${context.coPilotActive}" data-ui5-stable="copilot"><svg @click="${context._coPilotClick}" focusable="false" width="44" role="presentation" aria-hidden="true" height="44" viewBox="-150 -150 300 300" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="ui5-shellbar-coPilot">${blockSVG1$2(context)}</svg></div>`; };
	const block7$7 = (context) => { return scopedSvg`<animateTransform attributeName="transform" type="rotate" from="54" to="416" dur="15s" repeatCount="indefinite"/>`; };
	const block8$6 = (context) => { return scopedSvg`<animateTransform attributeName="transform" type="rotate" from="90" to="450" dur="30s" repeatCount="indefinite"/>`; };
	const block9$5 = (context) => { return scopedHtml`<span class="ui5-shellbar-co-pilot-placeholder"></span>`; };
	const block10$4 = (context) => { return scopedHtml`${ context._fullWidthSearch ? block11$3(context) : undefined }<div class="ui5-shellbar-search-field" style="${styleMap(context.styles.searchField)}">${ !context._fullWidthSearch ? block12$3() : undefined }</div><ui5-button id="${ifDefined(context._id)}-item-1" class="${classMap(context.classes.items.search)} ui5-shellbar-button ui5-shellbar-search-button" icon="sap-icon://search" data-ui5-text="Search" data-ui5-notification-count="${ifDefined(context.notificationCount)}" @click=${context._handleSearchIconPress} aria-label="${ifDefined(context._searchText)}" title="${ifDefined(context._searchText)}" ._buttonAccInfo="${ifDefined(context.accInfo.search)}"></ui5-button>`; };
	const block11$3 = (context) => { return scopedHtml`<div class="ui5-shellbar-search-full-width-wrapper" style="${styleMap(context.styles.searchField)}"><div class="ui5-shellbar-search-full-field"><slot name="searchField"></slot></div><ui5-button @click=${context._handleCancelButtonPress} class="ui5-shellbar-button">Cancel</ui5-button></div>`; };
	const block12$3 = (context) => { return scopedHtml`<slot name="searchField"></slot>`; };
	const block13$2 = (item, index, context) => { return scopedHtml`<ui5-button id="${ifDefined(item.id)}" style="${ifDefined(item.style)}" class="${ifDefined(item.classes)}" icon="${ifDefined(item.icon)}" title="${ifDefined(item.title)}" data-count="${ifDefined(item.count)}" data-ui5-notification-count="${ifDefined(context.notificationCount)}" data-ui5-external-action-item-id="${ifDefined(item.refItemid)}" data-ui5-stable="${ifDefined(item.stableDomRef)}" @click=${item.press}></ui5-button>`; };
	const block14$2 = (context) => { return scopedHtml`<ui5-button id="${ifDefined(context._id)}-item-2" style="${styleMap(context.styles.items.notification)}" class="${classMap(context.classes.items.notification)} ui5-shellbar-button ui5-shellbar-bell-button" icon="sap-icon://bell" data-ui5-text="Notifications" data-ui5-notification-count="${ifDefined(context.notificationCount)}" @click=${context._handleNotificationsPress} aria-label="${ifDefined(context._notificationsText)}" title="${ifDefined(context._notificationsText)}" ._buttonAccInfo="${ifDefined(context.accInfo.notifications)}" data-ui5-stable="notifications"></ui5-button>`; };
	const block15$2 = (context) => { return scopedHtml`<ui5-button profile-btn id="${ifDefined(context._id)}-item-3" @click=${context._handleProfilePress} style="${styleMap(context.styles.items.profile)}" aria-label="${ifDefined(context._profileText)}" title="${ifDefined(context._profileText)}" ._buttonAccInfo="${ifDefined(context.accInfo.profile)}" class="ui5-shellbar-button ui5-shellbar-image-button" data-ui5-stable="profile"><slot name="profile"></slot></ui5-button>`; };
	const block16$2 = (context) => { return scopedHtml`<ui5-button id="${ifDefined(context._id)}-item-4" style="${styleMap(context.styles.items.product)}" class="${classMap(context.classes.items.product)} ui5-shellbar-button ui5-shellbar-button-product-switch" icon="sap-icon://grid" data-ui5-text="Product Switch" @click=${context._handleProductSwitchPress} aria-label="${ifDefined(context._productsText)}" title="${ifDefined(context._productsText)}" ._buttonAccInfo="${ifDefined(context.accInfo.products)}" data-ui5-stable="product-switch"></ui5-button>`; };

	const blockSVG1$2 = (context) => {return scopedSvg`<defs><linearGradient id="f" x1="0%" x2="100%" y1="100%" y2="0%"><stop offset="0%" stop-color="#c0d9f2" stop-opacity=".87"/><stop offset="80%" stop-color="#fff" stop-opacity=".87"/></linearGradient><linearGradient id="e" x1="0%" x2="100%" y1="100%" y2="0%"><stop offset="0%" stop-color="#b4d2ff" stop-opacity=".16"/><stop offset="80%" stop-color="#fff" stop-opacity=".16"/></linearGradient><linearGradient id="c" x1="0%" x2="100%" y1="100%" y2="0%"><stop offset="0%" stop-color="#b4d2ff" stop-opacity=".1"/><stop offset="80%" stop-color="#fff" stop-opacity=".1"/></linearGradient><path id="d" d="M98.158 0c.158 17.395-9.107 31.335-18.609 45.928-9.21 14.153-18.933 25.29-33.377 34.045C31.427 88.918 17.25 94.39 0 94.273c-17.155-.115-30.823-6.582-45.798-14.949-15.216-8.497-27.76-16.77-37.253-31.375C-92.668 33.158-98.487 17.571-97.179 0c1.233-16.978 12.691-29.086 21.044-43.957 8.456-15.059 12.272-32.152 26.873-41.367 14.76-9.322 31.83-7.68 49.262-6.77 16.897.88 31.86 3.06 46.42 11.693 14.452 8.568 23.18 20.866 32.26 34.976C88.05-30.91 98.014-17.277 98.157 0z"><animate attributeName="d" values="${ifDefined(context.coPilot.animationValues)}" dur="30s" repeatCount="indefinite"/><animateTransform attributeName="transform" type="scale" values="1;1.05;1.05;1.02;1" dur="0.15s" begin="a.mousedown" repeatCount="1" additive="sum"/></path><mask id="b"><circle r="120" fill="#fff"/><circle r="76"/></mask></defs><g mask="url(#b)"><g transform="rotate(54)"><use xlink:href="#d" fill="url(#c)">${ context.coPilot.animated ? block7$7() : undefined }</use></g><use xlink:href="#d" fill="url(#e)" transform="rotate(74)"/><g transform="rotate(90)"><use xlink:href="#d" fill="url(#f)">${ context.coPilot.animated ? block8$6() : undefined }</use></g></g><circle cx="0" cy="0" r="76" class="ui5-shellbar-co-pilot-circle" id="a"/>`};

	const main$y = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$y(context);
	};

	const block0$z = (context) => { return scopedHtml`<ui5-popover class="ui5-shellbar-menu-popover" placement-type="Bottom" @ui5-before-open=${ifDefined(context._menuPopoverBeforeOpen)} @ui5-after-close=${ifDefined(context._menuPopoverAfterClose)}><ui5-list separators="None" mode="SingleSelect" @ui5-item-press=${ifDefined(context._menuItemPress)}>${ repeat(context._menuPopoverItems, (item, index) => item._id || index, (item, index) => block1$t(item)) }</ui5-list></ui5-popover><ui5-popover class="ui5-shellbar-overflow-popover" placement-type="Bottom" horizontal-align="${ifDefined(context.popoverHorizontalAlign)}" no-arrow @ui5-before-open=${ifDefined(context._overflowPopoverBeforeOpen)} @ui5-after-close=${ifDefined(context._overflowPopoverAfterClose)}><ui5-list separators="None" @ui5-item-press="${ifDefined(context._actionList.itemPress)}">${ repeat(context._hiddenIcons, (item, index) => item._id || index, (item, index) => block2$s(item)) }</ui5-list></ui5-popover>`; };
	const block1$t = (item, index, context) => { return scopedHtml`${ifDefined(item)}`; };
	const block2$s = (item, index, context) => { return scopedHtml`<ui5-li data-ui5-external-action-item-id="${ifDefined(item.refItemid)}" icon="${ifDefined(item.icon)}" type="Active" @ui5-_press="${ifDefined(item.press)}">${ifDefined(item.text)}</ui5-li>`; };


	const main$z = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$z(context);
	};

	var defaultTheme$1 = ":root{--_ui5_bar_base_height:2.75rem;--_ui5_bar_subheader_height:3rem;--_ui5_fcl_solid_bg:var(--sapShell_Background);--_ui5_fcl_column_border:none;--_ui5_fcl_decoration_top:linear-gradient(0deg,var(--sapHighlightColor),#f3f4f5);--_ui5_fcl_decoration_bottom:linear-gradient(180deg,var(--sapHighlightColor),#f3f4f5);--_ui5_product_switch_item_width:11.25rem;--_ui5_product_switch_item_height:7rem;--_ui5_product_switch_item_outline_width:.0625rem;--_ui5_product_switch_item_outline_color:var(--sapContent_FocusColor);--_ui5_product_switch_item_outline:var(--_ui5_product_switch_item_outline_width) var(--_ui5_product_switch_item_outline_color) dotted;--_ui5_product_switch_item_active_outline_color:var(--sapContent_ContrastFocusColor);--_ui5_product_switch_item_outline_offset:-.1875rem;--_ui5_product_switch_item_outline_offset_positive:.1875rem;--_ui5_TimelineItem_arrow_size:1.625rem;--_ui5_TimelineItem_bubble_outline_width:0.0625rem;--_ui5_TimelineItem_bubble_outline_top:-0.125rem;--_ui5_TimelineItem_bubble_outline_right:-0.125rem;--_ui5_TimelineItem_bubble_outline_bottom:-0.125rem;--_ui5_TimelineItem_bubble_outline_left:-0.625rem;--_ui5_TimelineItem_bubble_rtl_left_offset:-0.125rem;--_ui5_TimelineItem_bubble_rtl_right_offset:-0.625rem;--ui5_upload_collection_level_2Size:1.375rem;--ui5_upload_collection_level_5Size:1rem;--ui5_upload_collection_drag_overlay_border:0.125rem dashed var(--sapContent_ForegroundBorderColor);--ui5_upload_collection_drop_overlay_border:0.125rem solid var(--sapContent_DragAndDropActiveColor);--ui5_upload_collection_drop_overlay_background:transparent;--_ui5_wiz_tab_focus_outline:1px dotted var(--sapContent_FocusColor);--_ui5_wiz_tab_selected_bg:var(--sapSelectedColor);--_ui5_wiz_tab_border:1px solid var(--sapSelectedColor);--_ui5_wiz_tab_selection_line:var(--sapSelectedColor);--_ui5_wiz_tab_icon_color:var(--sapSelectedColor);--_ui5_wiz_tab_active_separator_color:var(--sapSelectedColor)}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_bar_base_height:2.5rem;--_ui5_bar_subheader_height:2.25rem}";

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3", defaultTheme$1);
	var styles$7 = ":host(:not([hidden])){display:inline-block;width:100%}.ui5-shellbar-root{position:relative;display:flex;justify-content:space-between;align-items:center;background:var(--sapShellColor);height:2.75rem;font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;box-sizing:border-box}.ui5-shellbar-button,.ui5-shellbar-image-button,.ui5-shellbar-menu-button,::slotted([ui5-button][slot=startButton]){height:2.25rem;padding:0;margin-left:.5rem;border:none;background:transparent;outline-color:var(--sapShell_TextColor);color:var(--sapShell_TextColor);box-sizing:border-box;cursor:pointer;border-radius:.25rem;position:relative;font-size:.75rem;font-weight:700;white-space:normal;overflow:initial;text-overflow:clip}.ui5-shellbar-button,.ui5-shellbar-menu-button,::slotted([ui5-button][slot=startButton]){outline:none}.ui5-shellbar-button:hover,.ui5-shellbar-image-button:hover,.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:hover,::slotted([ui5-button][slot=startButton]:hover){background:var(--sapShell_Hover_Background)}.ui5-shellbar-button[active],.ui5-shellbar-image-button:active,.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:active,::slotted([ui5-button][slot=startButton][active]){background:var(--sapShell_Active_Background);color:var(--sapShell_Active_TextColor)}.ui5-shellbar-button[focused]:after,.ui5-shellbar-image-button:focus:after,.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:focus:after,::slotted([ui5-button][slot=startButton][focused]):after{content:\"\";position:absolute;width:calc(100% - .375rem);height:calc(100% - .375rem);border:1px dotted var(--sapContent_ContrastFocusColor);pointer-events:none;left:2px;top:2px;z-index:1}slot[name=profile]{min-width:0}::slotted([ui5-avatar][slot=profile]){min-width:0;width:2rem;height:2rem;padding:.25rem;pointer-events:none}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive::-moz-focus-inner{border:none}.ui5-shellbar-menu-button-title{display:inline-block;font-family:\"72override\",var(--sapFontFamily);margin:0;font-size:.75rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex:auto}:host(:not([primary-title])) .ui5-shellbar-menu-button{min-width:2.25rem;justify-content:center}:host(:not([primary-title])) .ui5-shellbar-menu-button span{margin-left:0}:host([breakpoint-size=S]) .ui5-shellbar-menu-button span{margin-left:.5rem}.ui5-shellbar-secondary-title{display:inline-block;margin:0 .5rem;font-size:var(--sapFontSmallSize);color:var(--sapShell_TextColor);line-height:1rem;font-weight:400;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.ui5-shellbar-menu-button--interactive .ui5-shellbar-menu-button-arrow{display:inline-block;margin-left:.5rem;width:10px;height:10px;width:0;height:0;color:var(--sapShell_InteractiveTextColor);border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid var(--sapShell_TextColor)}.ui5-shellbar-overflow-container{display:flex;justify-content:center;align-items:center;height:100%;overflow:hidden}.ui5-shellbar-overflow-container-middle{align-self:center;height:2.5rem;width:3rem;flex-shrink:0}@keyframes Behind_layer{0%{transform:rotate(1turn)}}@keyframes Top_layer{0%{transform:rotate(-1turn)}}:host([breakpoint-size=S]) .ui5-shellbar-root{padding:.25rem 1rem}:host([breakpoint-size=S]) .ui5-shellbar-search-full-width-wrapper{padding:.25rem 1rem}:host([breakpoint-size=S]) ::slotted([ui5-button][slot=startButton]){margin-right:0}:host([breakpoint-size=M]) .ui5-shellbar-root{padding:.25rem 2rem}:host([breakpoint-size=M]) .ui5-shellbar-search-full-width-wrapper{padding:.25rem 2rem}:host([breakpoint-size=L]) .ui5-shellbar-root{padding:.25rem 2rem}:host([breakpoint-size=XL]) .ui5-shellbar-root{padding:.25rem 3rem}:host([breakpoint-size=XXL]) .ui5-shellbar-root{padding:.25rem 3rem}.ui5-shellbar-logo{cursor:pointer;max-height:2rem}.ui5-shellbar-logo:focus{outline:1px dotted var(--sapContent_ContrastFocusColor)}.ui5-shellbar-button{width:2.5rem}.ui5-shellbar-image-buttonImage{border-radius:50%;width:1.75rem;height:1.75rem;display:flex;background-size:cover}.ui5-shellbar-image-button{display:flex;justify-content:center;align-items:center;min-width:2.25rem;height:2.25rem;display:inline-flex;padding:0}.ui5-shellbar-overflow-container-left{flex-basis:50%;max-width:calc(50% - 1.5rem);justify-content:flex-start;margin-right:.5rem}.ui5-shellbar-menu-button{white-space:nowrap;overflow:hidden;display:flex;align-items:center;padding:.25rem .5rem;cursor:text;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}:host(:not([with-logo])) .ui5-shellbar-menu-button{margin-left:0}.ui5-shellbar-overflow-container-right{display:block;overflow:hidden;box-sizing:border-box;white-space:nowrap;flex:1}:host(:not([show-search-field])) .ui5-shellbar-overflow-container-right{margin-left:8rem}.ui5-shellbar-overflow-container-right .ui5-shellbar-overflow-container-right-child{display:flex;float:right}.ui5-shellbar-overflow-button{display:none}:host([breakpoint-size=M]) .ui5-shellbar-secondary-title{display:none}:host([breakpoint-size=S]) .ui5-shellbar-secondary-title{display:none}:host([breakpoint-size=S]) .ui5-shellbar-logo+.ui5-shellbar-menu-button-title,:host([breakpoint-size=S]) .ui5-shellbar-menu-button+.ui5-shellbar-menu-button-title{display:none}:host([breakpoint-size=S]) .ui5-shellbar-overflow-container-right{margin-left:0}.ui5-shellbar-overflow-button-shown{display:inline-block}.ui5-shellbar-hidden-button,.ui5-shellbar-invisible-button{visibility:hidden}.ui5-shellbar-coPilot{background-color:transparent;cursor:pointer}:host([breakpoint-size=L]) .ui5-shellbar-with-searchfield .ui5-shellbar-overflow-container-right{margin-left:1rem}:host([breakpoint-size=XL]) .ui5-shellbar-with-searchfield .ui5-shellbar-overflow-container-right{margin-left:1rem}:host(:not([notification-count])) .ui5-shellbar-bell-button{position:relative}.ui5-shellbar-button[data-count]:before,:host([notification-count]) .ui5-shellbar-bell-button:before{position:absolute;width:auto;height:1rem;min-width:1rem;background:var(--sapContent_BadgeBackground);color:var(--sapShell_TextColor);top:.125rem;left:1.5rem;padding:.25rem;border-radius:1rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);font-family:\"72override\",var(--sapFontFamily);z-index:2;box-sizing:border-box}:host([notification-count]) .ui5-shellbar-bell-button:before{content:attr(data-ui5-notification-count)}.ui5-shellbar-button[data-count]:before{content:attr(data-count)}.ui5-shellbar-menu-button{margin-left:.5rem}.ui5-shellbar-search-field{width:240px;min-width:240px;margin-left:.5rem}.ui5-shellbar-search-full-width-wrapper .ui5-shellbar-search-full-field{height:2.25rem;width:100%}.ui5-shellbar-search-full-width-wrapper{position:absolute;top:0;left:0;background:var(--sapShellColor);height:100%;width:100%;z-index:100;display:flex;align-items:center;box-sizing:border-box}.ui5-shellbar-search-full-width-wrapper .ui5-shellbar-button{width:auto}::slotted([ui5-input]){background-color:var(--sapShellColor);border:1px solid var(--sapShell_InteractiveBorderColor);color:var(--sapShell_TextColor);height:100%;width:100%}::slotted([ui5-input][focused]){outline:1px dotted var(--sapContent_ContrastFocusColor)}::slotted([slot=logo]){max-height:2rem;pointer-events:none}[ui5-input][value-state]:not([readonly]){background:var(--sapShellColor);border:1px solid var(--sapShell_InteractiveBorderColor)}[ui5-input]:not([value-state]):not([readonly]):hover,[ui5-input][value-state]:not([readonly]):hover{background:var(--sapShell_Hover_Background);border:1px solid var(--sapShell_InteractiveBorderColor)}[ui5-input][value-state]:not([value-state=None])[focused]{outline:1px dotted var(--sapContent_ContrastFocusColor)}.ui5-shellbar-copilot-wrapper{position:relative;outline:none;box-sizing:border-box}.ui5-shellbar-copilot-wrapper:hover{background:var(--sapShell_Hover_Background)}.ui5-shellbar-copilot-wrapper:active,.ui5-shellbar-copilot-wrapper[active]{background:var(--sapShell_Active_Background)}.ui5-shellbar-copilot-wrapper:focus:after{content:\"\";position:absolute;width:100%;height:calc(100% - .75rem);border:1px dotted var(--sapContent_ContrastFocusColor);pointer-events:none;left:0;top:.25rem;z-index:1}.ui5-shellbar-co-pilot-placeholder{width:2.75rem;height:2.75rem}.ui5-shellbar-co-pilot-circle{fill:var(--sapShellColor)}:host [dir=rtl] ::slotted([ui5-button][slot=startButton]){margin-left:.5rem;margin-right:0}:host [dir=rtl] .ui5-shellbar-menu-button{margin-right:.5rem;margin-left:0}[dir=rtl] .ui5-shellbar-menu-button--interactive .ui5-shellbar-menu-button-arrow{margin-right:.5rem;margin-left:0}:host(:not([show-search-field])) [dir=rtl] .ui5-shellbar-overflow-container-right{margin-right:8rem;margin-left:0}[dir=rtl] .ui5-shellbar-overflow-container-right{margin-left:0}[dir=rtl] .ui5-shellbar-overflow-container-right .ui5-shellbar-overflow-container-right-child{float:left}:host([breakpoint-size=S]) [dir=rtl] .ui5-shellbar-overflow-container-right{margin-right:0}::slotted([ui5-button][slot=startButton]){margin-right:.5rem;margin-left:0;justify-content:center;align-items:center}::slotted([ui5-button][profile-btn]){width:auto}";

	/**
	 * @public
	 */
	const metadata$u = {
		tag: "ui5-shellbar",
		languageAware: true,
		properties: /** @lends sap.ui.webcomponents.fiori.ShellBar.prototype */ {

			/**
			 * Defines the <code>primaryTitle</code>.
			 * <br><br>
			 * <b>Note:</b> The <code>primaryTitle</code> would be hidden on S screen size (less than approx. 700px).
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			primaryTitle: {
				type: String,
			},

			/**
			 * Defines the <code>secondaryTitle</code>.
			 * <br><br>
			 * <b>Note:</b> The <code>secondaryTitle</code> would be hidden on S and M screen sizes (less than approx. 1300px).
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			secondaryTitle: {
				type: String,
			},

			/**
			 * Defines the <code>notificationCount</code>,
			 * displayed in the notification icon top-right corner.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			notificationCount: {
				type: String,
			},

			/**
			 * Defines, if the notification icon would be displayed.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showNotifications: {
				type: Boolean,
			},

			/**
			 * Defines, if the product switch icon would be displayed.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showProductSwitch: {
				type: Boolean,
			},

			/**
			 * Defines, if the product CoPilot icon would be displayed.
			 * <br><b>Note:</b> By default the co-pilot is displayed as static SVG.
			 * If you need an animated co-pilot, you can import the <code>"@ui5/webcomponents-fiori/dist/features/CoPilotAnimation.js"</code> module as add-on feature.
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showCoPilot: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			breakpointSize: {
				type: String,
			},

			/**
			 * @private
			 */
			showSearchField: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			coPilotActive: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			withLogo: {
				type: Boolean,
			},

			_itemsInfo: {
				type: Object,
			},

			_actionList: {
				type: Object,
			},

			_header: {
				type: Object,
			},

			_menuPopoverItems: {
				type: String,
				multiple: true,
			},
			_menuPopoverExpanded: {
				type: Boolean,
				noAttribute: true,
			},
			_overflowPopoverExpanded: {
				type: Boolean,
				noAttribute: true,
			},
			_fullWidthSearch: {
				type: Boolean,
				noAttribute: true,
			},
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.fiori.ShellBar.prototype */ {
			/**
			 * Defines the <code>ui5-shellbar</code> aditional items.
			 * <br><br>
			 * <b>Note:</b>
			 * You can use the &nbsp;&lt;ui5-shellbar-item>&lt;/ui5-shellbar-item>.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				propertyName: "items",
				type: HTMLElement,
				invalidateOnChildChange: true,
			},

			/**
			 * You can pass <code>ui5-avatar</code> to set the profile image/icon.
			 * If no profile slot is set - profile will be excluded from actions.
			 * @type {HTMLElement}
			 * @slot
			 * @since 1.0.0-rc.6
			 * @public
			 */
			profile: {
				type: HTMLElement,
			},

			/**
			 * Defines the logo of the <code>ui5-shellbar</code>.
			 * For example, you can use <code>ui5-avatar</code> or <code>img</code> elements as logo.
			 * @type {HTMLElement}
			 * @slot
			 * @since 1.0.0-rc.8
			 * @public
			 */
			logo: {
				type: HTMLElement,
			},

			/**
			 * Defines the items displayed in menu after a click on the primary title.
			 * <br><br>
			 * <b>Note:</b>
			 * You can use the &nbsp;&lt;ui5-li>&lt;/ui5-li> and its ancestors.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @since 0.10
			 * @public
			 */
			menuItems: {
				type: HTMLElement,
			},

			/**
			 * Defines the <code>ui5-input</code>, that will be used as a search field.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			searchField: {
				type: HTMLElement,
			},

			/**
			 * Defines a <code>ui5-button</code> in the bar that will be placed in the beginning.
			 * We encourage this slot to be used for a back or home button.
			 * It gets overstyled to match ShellBar's styling.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			startButton: {
				type: HTMLElement,
			},
		},
		events: /** @lends sap.ui.webcomponents.fiori.ShellBar.prototype */ {
			/**
			 *
			 * Fired, when the notification icon is activated.
			 *
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#notifications-click
			 * @param {HTMLElement} targetRef dom ref of the activated element
			 * @public
			 */
			"notifications-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired, when the profile slot is present.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#profile-click
			 * @param {HTMLElement} targetRef dom ref of the activated element
			 * @public
			 */
			"profile-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired, when the product switch icon is activated.
			 * <b>Note:</b> You can prevent closing of oveflow popover by calling <code>event.preventDefault()</code>.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#product-switch-click
			 * @param {HTMLElement} targetRef dom ref of the activated element
			 * @public
			 */
			"product-switch-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired, when the logo is activated.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#logo-click
			 * @param {HTMLElement} targetRef dom ref of the activated element
			 * @since 0.10
			 * @public
			 */
			"logo-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired, when the co pilot is activated.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#co-pilot-click
			 * @param {HTMLElement} targetRef dom ref of the activated element
			 * @since 0.10
			 * @public
			 */
			"co-pilot-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},

			/**
			 * Fired, when a menu item is activated
			 * <b>Note:</b> You can prevent closing of oveflow popover by calling <code>event.preventDefault()</code>.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBar#menu-item-click
			 * @param {HTMLElement} item dom ref of the activated list item
			 * @since 0.10
			 * @public
			 */
			"menu-item-click": {
				detail: {
					item: { type: HTMLElement },
				},
			},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-shellbar</code> is meant to serve as an application header
	 * and includes numerous built-in features, such as: logo, profile image/icon, title, search field, notifications and so on.
	 * <br><br>
	 *
	 * <h3>Stable DOM Refs</h3>
	 *
	 * You can use the following stable DOM refs for the <code>ui5-shellbar</code>:
	 * <ul>
	 * <li>logo</li>
	 * <li>copilot</li>
	 * <li>notifications</li>
	 * <li>overflow</li>
	 * <li>profile</li>
	 * <li>product-switch</li>
	 * </ul>
	 *
	 * In the context of <code>ui5-shellbar</code>, you can provide a custom stable DOM refs for:
	 * <ul>
	 * <li>Every <code>ui5-shellbar-item</code> that you provide.
	 * Example: <code><ui5-shellbar-item stable-dom-ref="messages"></ui5-shellbar-item></code></li>
	 * </ul>
	 *
	 * <h3>ES6 Module Import</h3>
	 * <code>import "@ui5/webcomponents-fiori/dist/ShellBar";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.ShellBar
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-shellbar
	 * @appenddocs ShellBarItem
	 * @public
	 * @since 0.8.0
	 */
	class ShellBar extends UI5Element {
		static get metadata() {
			return metadata$u;
		}

		static get styles() {
			return styles$7;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$y;
		}

		static get staticAreaTemplate() {
			return main$z;
		}

		static get FIORI_3_BREAKPOINTS() {
			return [
				599,
				1023,
				1439,
				1919,
				10000,
			];
		}

		static get FIORI_3_BREAKPOINTS_MAP() {
			return {
				"599": "S",
				"1023": "M",
				"1439": "L",
				"1919": "XL",
				"10000": "XXL",
			};
		}

		constructor() {
			super();

			this._itemsInfo = [];
			this._isInitialRendering = true;
			this._focusedItem = null;

			// marks if preventDefault() is called in item's press handler
			this._defaultItemPressPrevented = false;

			this._actionList = {
				itemPress: event => {
					if (!this._defaultItemPressPrevented) {
						this.overflowPopover.close();
					}

					this._defaultItemPressPrevented = false;
				},
			};

			this.menuItemsObserver = new MutationObserver(() => {
				this._updateClonedMenuItems();
			});

			this._header = {
				press: async () => {
					this._updateClonedMenuItems();

					if (this.hasMenuItems) {
						const menuPopover = await this._getMenuPopover();
						menuPopover.openBy(this.shadowRoot.querySelector(".ui5-shellbar-menu-button"));
					}
				},
			};

			this._handleResize = async event => {
				await this._getResponsivePopover();
				this.overflowPopover.close();
				this._overflowActions();
			};

			this.i18nBundle = getI18nBundle("@ui5/webcomponents-fiori");
		}

		_menuItemPress(event) {
			this.fireEvent("menu-item-click", {
				item: event.detail.item,
			}, true);
		}

		_logoPress() {
			this.fireEvent("logo-click", {
				targetRef: this.shadowRoot.querySelector(".ui5-shellbar-logo"),
			});
		}

		_menuPopoverBeforeOpen() {
			this._menuPopoverExpanded = true;
		}

		_menuPopoverAfterClose() {
			this._menuPopoverExpanded = false;
		}

		_overflowPopoverBeforeOpen() {
			this._overflowPopoverExpanded = true;
		}

		_overflowPopoverAfterClose() {
			this._overflowPopoverExpanded = false;
		}

		_logoKeyup(event) {
			if (isSpace(event)) {
				this._logoPress();
			}
		}

		_logoKeydown(event) {
			if (isSpace(event)) {
				event.preventDefault();
				return;
			}

			if (isEnter(event)) {
				this._logoPress();
			}
		}

		_fireCoPilotClick() {
			this.fireEvent("co-pilot-click", {
				targetRef: this.shadowRoot.querySelector(".ui5-shellbar-coPilot"),
			});
		}

		_coPilotClick() {
			this._fireCoPilotClick();
		}

		_coPilotKeydown(event) {
			if (isSpace(event)) {
				this.coPilotActive = true;
				event.preventDefault();
				return;
			}

			if (isEnter(event)) {
				this.coPilotActive = true;
				this._fireCoPilotClick();
			}
		}

		_coPilotKeyup(event) {
			if (isSpace(event)) {
				this._fireCoPilotClick();
			}
			this.coPilotActive = false;
		}

		onBeforeRendering() {
			const animationsOn = getAnimationMode$1() === AnimationMode.Full;
			const coPilotAnimation = getFeature("CoPilotAnimation");
			this.coPilot = coPilotAnimation && animationsOn ? coPilotAnimation : { animated: false };
			this.withLogo = this.hasLogo;

			this._hiddenIcons = this._itemsInfo.filter(info => {
				const isHidden = (info.classes.indexOf("ui5-shellbar-hidden-button") !== -1);
				const isSet = info.classes.indexOf("ui5-shellbar-invisible-button") === -1;
				const isOverflowIcon = info.classes.indexOf("ui5-shellbar-overflow-button") !== -1;
				const isImageIcon = info.classes.indexOf("ui5-shellbar-image-button") !== -1;
				const shouldStayOnScreen = isOverflowIcon || (isImageIcon && this.hasProfile);

				return isHidden && isSet && !shouldStayOnScreen;
			});

			this._observeMenuItems();
		}

		onAfterRendering() {
			this._overflowActions();

			this._fullWidthSearch = this._showFullWidthSearch;
		}

		/**
		 * Closes the overflow area.
		 * Useful to manually close the overflow after having suppressed automatic closing with preventDefault() of ShellbarItem's press event
		 * @public
		 */
		closeOverflow() {
			if (this.overflowPopover) {
				this.overflowPopover.close();
			}
		}

		_handleBarBreakpoints() {
			const width = this.getBoundingClientRect().width;
			const breakpoints = ShellBar.FIORI_3_BREAKPOINTS;

			const size = breakpoints.find(bp1 => width < bp1) || ShellBar.FIORI_3_BREAKPOINTS[ShellBar.FIORI_3_BREAKPOINTS.length - 1];
			const mappedSize = ShellBar.FIORI_3_BREAKPOINTS_MAP[size];

			if (this.breakpointSize !== mappedSize) {
				this.breakpointSize = mappedSize;
			}

			return mappedSize;
		}

		_handleSizeS() {
			const hasIcons = this.showNotifications || this.showProductSwitch || this.searchField.length || this.items.length;

			const newItems = this._getAllItems(hasIcons).map(info => {
				const isOverflowIcon = info.classes.indexOf("ui5-shellbar-overflow-button") !== -1;
				const isImageIcon = info.classes.indexOf("ui5-shellbar-image-button") !== -1;
				const shouldStayOnScreen = isOverflowIcon || (isImageIcon && this.hasProfile);

				return Object.assign({}, info, {
					classes: `${info.classes} ${shouldStayOnScreen ? "" : "ui5-shellbar-hidden-button"} ui5-shellbar-button`,
					style: `order: ${shouldStayOnScreen ? 1 : -1}`,
				});
			});

			this._updateItemsInfo(newItems);
		}

		_handleActionsOverflow() {
			const rightContainerRect = this.shadowRoot.querySelector(".ui5-shellbar-overflow-container-right").getBoundingClientRect();
			let overflowSelector = ".ui5-shellbar-button:not(.ui5-shellbar-overflow-button):not(.ui5-shellbar-invisible-button)";

			if (this.showSearchField) {
				overflowSelector += ",.ui5-shellbar-search-field";
			}

			const elementsToOverflow = this.shadowRoot.querySelectorAll(overflowSelector);
			const isRTL = this.effectiveDir === "rtl";

			let overflowCount = [].filter.call(elementsToOverflow, icon => {
				const iconRect = icon.getBoundingClientRect();

				if (isRTL) {
					return (iconRect.left + iconRect.width) > (rightContainerRect.left + rightContainerRect.width);
				}

				return iconRect.left < rightContainerRect.left;
			});

			overflowCount = overflowCount.length;

			const items = this._getAllItems(!!overflowCount).filter(item => item.show);

			const itemsByPriority = items.sort((item1, item2) => {
				if (item1.priority > item2.priority) {
					return 1;
				}

				if (item1.priority < item2.priority) {
					return -1;
				}

				return 0;
			});

			for (let i = 0; i < itemsByPriority.length; i++) {
				if (i < overflowCount) {
					itemsByPriority[i].classes = `${itemsByPriority[i].classes} ui5-shellbar-hidden-button`;
					itemsByPriority[i].style = `order: -1`;
				}
			}

			return itemsByPriority;
		}

		_overflowActions() {
			const size = this._handleBarBreakpoints();

			if (size === "S") {
				return this._handleSizeS();
			}

			const newItems = this._handleActionsOverflow();
			this._updateItemsInfo(newItems);
		}

		_toggleActionPopover() {
			const overflowButton = this.shadowRoot.querySelector(".ui5-shellbar-overflow-button");
			this.overflowPopover.openBy(overflowButton);
		}

		onEnterDOM() {
			ResizeHandler.register(this, this._handleResize);
		}

		onExitDOM() {
			this.menuItemsObserver.disconnect();
			ResizeHandler.deregister(this, this._handleResize);
		}

		_handleSearchIconPress(event) {
			this.showSearchField = !this.showSearchField;

			if (!this.showSearchField) {
				return;
			}

			const input = this.searchField[0];

			// update the state immediately
			if (input) {
				input.focused = true;
			}

			// move the focus later
			setTimeout(() => {
				if (input) {
					input.focus();
				}
			}, 100);
		}

		_handleCustomActionPress(event) {
			const refItemId = event.target.getAttribute("data-ui5-external-action-item-id");

			if (refItemId) {
				const shellbarItem = this.items.find(item => {
					return item.shadowRoot.querySelector(`#${refItemId}`);
				});

				const prevented = !shellbarItem.fireEvent("item-click", { targetRef: event.target }, true);

				this._defaultItemPressPrevented = prevented;
			}
		}

		_handleOverflowPress(event) {
			this._toggleActionPopover();
		}

		_handleNotificationsPress(event) {
			const notificationIconRef = this.shadowRoot.querySelector(".ui5-shellbar-bell-button");

			this._defaultItemPressPrevented = !this.fireEvent("notifications-click", {
				targetRef: notificationIconRef.classList.contains("ui5-shellbar-hidden-button") ? event.target : notificationIconRef,
			}, true);
		}

		_handleProfilePress(event) {
			this.fireEvent("profile-click", {
				targetRef: this.shadowRoot.querySelector(".ui5-shellbar-image-button"),
			});
		}

		_handleCancelButtonPress() {
			this.showSearchField = false;
		}

		_handleProductSwitchPress(event) {
			const buttonRef = this.shadowRoot.querySelector(".ui5-shellbar-button-product-switch");

			this._defaultItemPressPrevented = !this.fireEvent("product-switch-click", {
				targetRef: buttonRef.classList.contains("ui5-shellbar-hidden-button") ? event.target : buttonRef,
			}, true);
		}

		/**
		 * Returns all items that will be placed in the right of the bar as icons / dom elements.
		 * @param {Boolean} showOverflowButton Determines if overflow button should be visible (not overflowing)
		 */
		_getAllItems(showOverflowButton) {
			let domOrder = -1;

			const items = [
				{
					icon: "search",
					text: "Search",
					classes: `${this.searchField.length ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-search-button ui5-shellbar-button`,
					priority: 4,
					domOrder: this.searchField.length ? (++domOrder) : -1,
					style: `order: ${this.searchField.length ? 1 : -10}`,
					id: `${this._id}-item-${1}`,
					press: this._handleSearchIconPress.bind(this),
					show: !!this.searchField.length,
				},
				...this.items.map((item, index) => {
					return {
						icon: item.icon,
						id: item._id,
						count: item.count || undefined,
						refItemid: item._id,
						text: item.text,
						classes: "ui5-shellbar-custom-item ui5-shellbar-button",
						priority: 1,
						domOrder: (++domOrder),
						style: `order: ${2}`,
						show: true,
						press: this._handleCustomActionPress.bind(this),
						custom: true,
						title: item.title,
						stableDomRef: item.stableDomRef,
					};
				}),
				{
					icon: "bell",
					text: "Notifications",
					classes: `${this.showNotifications ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-bell-button ui5-shellbar-button`,
					priority: 3,
					style: `order: ${this.showNotifications ? 3 : -10}`,
					id: `${this._id}-item-${2}`,
					show: this.showNotifications,
					domOrder: this.showNotifications ? (++domOrder) : -1,
					press: this._handleNotificationsPress.bind(this),
				},
				{
					icon: "overflow",
					text: "Overflow",
					classes: `${showOverflowButton ? "" : "ui5-shellbar-hidden-button"} ui5-shellbar-overflow-button-shown ui5-shellbar-overflow-button ui5-shellbar-button`,
					priority: 5,
					order: 4,
					style: `order: ${showOverflowButton ? 4 : -1}`,
					domOrder: showOverflowButton ? (++domOrder) : -1,
					id: `${this.id}-item-${5}`,
					press: this._handleOverflowPress.bind(this),
					show: true,
				},
				{
					text: "Person",
					classes: `${this.hasProfile ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-image-button ui5-shellbar-button`,
					priority: 4,
					style: `order: ${this.hasProfile ? 5 : -10};`,
					profile: true,
					id: `${this._id}-item-${3}`,
					domOrder: this.hasProfile ? (++domOrder) : -1,
					show: this.hasProfile,
					press: this._handleProfilePress.bind(this),
				},
				{
					icon: "grid",
					text: "Product Switch",
					classes: `${this.showProductSwitch ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-button ui5-shellbar-button-product-switch`,
					priority: 2,
					style: `order: ${this.showProductSwitch ? 6 : -10}`,
					id: `${this._id}-item-${4}`,
					show: this.showProductSwitch,
					domOrder: this.showProductSwitch ? (++domOrder) : -1,
					press: this._handleProductSwitchPress.bind(this),
				},
			];
			return items;
		}

		_updateItemsInfo(newItems) {
			const isDifferent = JSON.stringify(this._itemsInfo) !== JSON.stringify(newItems);
			if (isDifferent) {
				this._itemsInfo = newItems;
			}
		}

		_updateClonedMenuItems() {
			this._menuPopoverItems = [];

			this.menuItems.forEach(item => {
				// clone the menuItem and remove the slot="menuItems",
				// otherwise would not be slotted in the internal ui5-li
				const clonedItem = item.cloneNode(true);
				clonedItem.removeAttribute("slot");

				this._menuPopoverItems.push(clonedItem);
			});
		}

		_observeMenuItems() {
			this.menuItems.forEach(item => {
				this.menuItemsObserver.observe(item, {
					characterData: true,
					childList: true,
					subtree: true,
					attributes: true,
				});
			});
		}

		async _getResponsivePopover() {
			const staticAreaItem = await this.getStaticAreaItemDomRef();
			this.overflowPopover = staticAreaItem.querySelector(".ui5-shellbar-overflow-popover");
			this.menuPopover = staticAreaItem.querySelector(".ui5-shellbar-menu-popover");
		}

		async _getMenuPopover() {
			const staticAreaItem = await this.getStaticAreaItemDomRef();
			return staticAreaItem.querySelector(".ui5-shellbar-menu-popover");
		}

		isIconHidden(name) {
			const itemInfo = this._itemsInfo.find(item => item.icon === name);

			if (!itemInfo) {
				return false;
			}

			return itemInfo.classes.indexOf("ui5-shellbar-hidden-button") !== -1;
		}

		get classes() {
			return {
				wrapper: {
					"ui5-shellbar-root": true,
					"ui5-shellbar-with-searchfield": this.searchField.length,
				},
				button: {
					"ui5-shellbar-menu-button--interactive": this.hasMenuItems,
					"ui5-shellbar-menu-button": true,
				},
				items: {
					notification: {
						"ui5-shellbar-hidden-button": this.isIconHidden("bell"),
					},
					product: {
						"ui5-shellbar-hidden-button": this.isIconHidden("grid"),
					},
					search: {
						"ui5-shellbar-hidden-button": this.isIconHidden("search"),
					},
					overflow: {
						"ui5-shellbar-hidden-button": this.isIconHidden("overflow"),
					},
				},
			};
		}

		get styles() {
			return {
				items: {
					notification: {
						"order": this.isIconHidden("bell") ? "-1" : "3",
					},
					overflow: {
						"order": this.isIconHidden("overflow") ? "-1" : "4",
					},
					profile: {
						"order": this.hasProfile ? "5" : "-1",
					},
					product: {
						"order": this.isIconHidden("grid") ? "-1" : "6",
					},
				},
				searchField: {
					"display": this.correctSearchFieldStyles,
				},
			};
		}

		get correctSearchFieldStyles() {
			if (this.showSearchField) {
				if (this._fullWidthSearch) {
					return "flex";
				}

				return "block";
			}

			return "none";
		}

		get customItemsInfo() {
			return this._itemsInfo.filter(itemInfo => !!itemInfo.custom);
		}

		get nonFocusableLogo() {
			return this.breakpointSize === "S" && this.hasMenuItems;
		}

		get hasFocusableLogo() {
			return this.hasLogo && !this.nonFocusableLogo;
		}

		get hasNonFocusableLogo() {
			return this.hasLogo && this.nonFocusableLogo;
		}

		get hasLogo() {
			return !!this.logo.length;
		}

		get showArrowDown() {
			return this.primaryTitle || this.hasInteractvieLogo;
		}

		get popoverHorizontalAlign() {
			return this.effectiveDir === "rtl" ? "Left" : "Right";
		}

		get hasSearchField() {
			return !!this.searchField.length;
		}

		get hasProfile() {
			return !!this.profile.length;
		}

		get hasMenuItems() {
			return this.menuItems.length > 0;
		}

		get menuBtnHasPopup() {
			return this.hasMenuItems ? true : undefined;
		}

		get menuBtnTabindex() {
			return this.hasMenuItems ? "0" : "-1";
		}

		get menuPopoverExpanded() {
			return this.hasMenuItems ? this._menuPopoverExpanded : undefined;
		}

		get _shellbarText() {
			return this.i18nBundle.getText(SHELLBAR_LABEL);
		}

		get _logoText() {
			return this.i18nBundle.getText(SHELLBAR_LOGO);
		}

		get _copilotText() {
			return this.i18nBundle.getText(SHELLBAR_COPILOT);
		}

		get _notificationsText() {
			return this.i18nBundle.getText(SHELLBAR_NOTIFICATIONS, this.notificationCount);
		}

		get _cancelBtnText() {
			return this.i18nBundle.getText(SHELLBAR_CANCEL);
		}

		get _showFullWidthSearch() {
			const size = this._handleBarBreakpoints();
			const searchBtnHidden = !!this.shadowRoot.querySelector(".ui5-shellbar-search-button.ui5-shellbar-hidden-button");

			return ((size === "S") || searchBtnHidden);
		}

		get _profileText() {
			return this.i18nBundle.getText(SHELLBAR_PROFILE);
		}

		get _productsText() {
			return this.i18nBundle.getText(SHELLBAR_PRODUCTS);
		}

		get _searchText() {
			return this.i18nBundle.getText(SHELLBAR_SEARCH);
		}

		get _overflowText() {
			return this.i18nBundle.getText(SHELLBAR_OVERFLOW);
		}

		get accInfo() {
			return {
				notifications: {
					"title": this._notificationsText,
				},
				profile: {
					"title": this._profileText,
				},
				products: {
					"title": this._productsText,
				},
				search: {
					"ariaExpanded": this.showSearchField,
					"title": this._searchText,
				},
				overflow: {
					"title": this._overflowText,
					"ariaHaspopup": true,
					"ariaExpanded": this._overflowPopoverExpanded,
				},
			};
		}

		static get dependencies() {
			return [
				Button,
				List,
				Popover,
				StandardListItem,
			];
		}

		static async onDefine() {
			await fetchI18nBundle("@ui5/webcomponents-fiori");
		}
	}

	ShellBar.define();

	const block0$A = (context) => { return scopedHtml`<span id="${ifDefined(context._id)}"></span>`; };


	const main$A = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$A(context);
	};

	/**
	 * @public
	 */
	const metadata$v = {
		tag: "ui5-shellbar-item",
		properties: /** @lends sap.ui.webcomponents.fiori.ShellBarItem.prototype */ {
			/**
			 * Defines the name of the item's icon.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines the item text.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			text: {
				type: String,
			},

			/**
			 * Defines the count displayed in the top-right corner.
			 * @type {string}
			 * @defaultValue ""
			 * @since 1.0.0-rc.6
			 * @public
			 */
			count: {
				type: String,
			},

			/**
			 * Defines the stable selector that you can use via getStableDomRef method.
			 * @public
			 * @since 1.0.0-rc.8
			 */
			stableDomRef: {
				type: String,
			},
		},

		events: /** @lends sap.ui.webcomponents.fiori.ShellBarItem.prototype */ {
			/**
			 * Fired, when the item is pressed.
			 *
			 * @event sap.ui.webcomponents.fiori.ShellBarItem#item-click
			 * @param {HTMLElement} targetRef dom ref of the clicked element
			 * @public
			 */
			"item-click": {
				detail: {
					targetRef: { type: HTMLElement },
				},
			},
		},
	};

	/**
	 * @class
	 * The <code>ui5-shellbar-item</code> represents a custom item, that
	 * might be added to the <code>ui5-shellbar</code>.
	 * <br><br>
	 * <h3>ES6 Module Import</h3>
	 * <code>import "@ui5/webcomponents-fiori/dist/ShellBarItem";</code>
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.ShellBarItem
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-shellbar-item
	 * @public
	 */
	class ShellBarItem extends UI5Element {
		static get metadata() {
			return metadata$v;
		}

		static get render() {
			return litRender;
		}

		static get template() {
			return main$A;
		}
	}

	ShellBarItem.define();

	const block0$B = (context) => { return scopedHtml`<div class="ui5-product-switch-root" @focusin=${context._onfocusin}><slot></slot></div>`; };


	const main$B = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$B(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3", defaultTheme$1);
	var ProductSwitchCss = ":host{font-family:\"72override\",var(--sapFontFamily);font-size:var(--sapFontSize)}.ui5-product-switch-root{display:flex;flex-wrap:wrap;width:752px;padding:1.25rem .75rem}:host([desktop-columns=\"3\"]) .ui5-product-switch-root{width:564px}@media only screen and (max-width:900px){.ui5-product-switch-root{width:564px}}@media only screen and (max-width:600px){.ui5-product-switch-root,:host([desktop-columns=\"3\"]) .ui5-product-switch-root{flex-direction:column;padding:0;width:100%}}";

	/**
	 * @public
	 */
	const metadata$w = {
		tag: "ui5-product-switch",
		properties: /** @lends sap.ui.webcomponents.fiori.ProductSwitch.prototype */ {
			/**
			 * Indicates how many columns are displayed.
			 * @private
			 */
			desktopColumns: {
				type: Integer,
			},
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.fiori.ProductSwitch.prototype */ {
			/**
			 * Defines the items of the <code>ui5-product-switch</code>.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				propertyName: "items",
				type: HTMLElement,
			},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-product-switch</code> is an SAP Fiori specific web component that is used in <code>ui5-shellbar</code>
	 * and allows the user to easily switch between products.
	 * <br><br>
	 * <h3>ES6 Module Import</h3>
	 * <code>import "@ui5/webcomponents-fiori/dist/ProductSwitch.js";</code>
	 * <br>
	 * <code>import "@ui5/webcomponents-fiori/dist/ProductSwitchItem.js";</code> (for <code>ui5-product-switch-item</code>)
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.ProductSwitch
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-product-switch
	 * @appenddocs ProductSwitchItem
	 * @public
	 * @since 1.0.0-rc.5
	 */
	class ProductSwitch extends UI5Element {
		constructor() {
			super();

			this._itemNavigation = new ItemNavigation(this, {
				rowSize: 4,
				getItemsCallback: () => this.items,
			});
		}

		static get metadata() {
			return metadata$w;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return ProductSwitchCss;
		}

		static get template() {
			return main$B;
		}

		static get ROW_MIN_WIDTH() {
			return {
				ONE_COLUMN: 600,
				THREE_COLUMN: 900,
			};
		}

		onEnterDOM() {
			this._handleResizeBound = this._handleResize.bind(this);

			ResizeHandler.register(document.body, this._handleResizeBound);
		}

		onExitDOM() {
			ResizeHandler.deregister(document.body, this._handleResizeBound);
		}

		onBeforeRendering() {
			this.desktopColumns = this.items.length > 6 ? 4 : 3;
		}

		_handleResize() {
			const documentWidth = document.body.clientWidth;

			if (documentWidth <= this.constructor.ROW_MIN_WIDTH.ONE_COLUMN) {
				this._itemNavigation.rowSize = 1;
			} else if (documentWidth <= this.constructor.ROW_MIN_WIDTH.THREE_COLUMN || this.items.length <= 6) {
				this._itemNavigation.rowSize = 3;
			} else {
				this._itemNavigation.rowSize = 4;
			}
		}

		_onfocusin(event) {
			const target = event.target;

			this._itemNavigation.update(target);
		}
	}

	ProductSwitch.define();

	const block0$C = (context) => { return scopedHtml`${ context.targetSrc ? block1$u(context) : block5$c(context) }`; };
	const block1$u = (context) => { return scopedHtml`<a class="ui5-product-switch-item-root" data-sap-focus-ref @focusout="${context._onfocusout}" @focusin="${context._onfocusin}" @mousedown="${context._onmousedown}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" tabindex=${ifDefined(context._tabIndex)} href="${ifDefined(context.targetSrc)}" target="${ifDefined(context.target)}">${ context.icon ? block2$t(context) : undefined }<span class="ui5-product-switch-item-text-content">${ context.heading ? block3$i(context) : undefined }${ context.subtitle ? block4$e(context) : undefined }</span></a>`; };
	const block2$t = (context) => { return scopedHtml`<ui5-icon class="ui5-product-switch-item-icon" name="${ifDefined(context.icon)}"></ui5-icon>`; };
	const block3$i = (context) => { return scopedHtml`<span class="ui5-product-switch-item-heading">${ifDefined(context.heading)}</span>`; };
	const block4$e = (context) => { return scopedHtml`<span class="ui5-product-switch-item-subtitle">${ifDefined(context.subtitle)}</span>`; };
	const block5$c = (context) => { return scopedHtml`<div class="ui5-product-switch-item-root" data-sap-focus-ref @focusout="${context._onfocusout}" @focusin="${context._onfocusin}" @mousedown="${context._onmousedown}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" tabindex=${ifDefined(context._tabIndex)}>${ context.icon ? block6$a(context) : undefined }<span class="ui5-product-switch-item-text-content">${ context.heading ? block7$8(context) : undefined }${ context.subtitle ? block8$7(context) : undefined }</span></div>`; };
	const block6$a = (context) => { return scopedHtml`<ui5-icon class="ui5-product-switch-item-icon" name="${ifDefined(context.icon)}"></ui5-icon>`; };
	const block7$8 = (context) => { return scopedHtml`<span class="ui5-product-switch-item-heading">${ifDefined(context.heading)}</span>`; };
	const block8$7 = (context) => { return scopedHtml`<span class="ui5-product-switch-item-subtitle">${ifDefined(context.subtitle)}</span>`; };


	const main$C = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$C(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3", defaultTheme$1);
	var ProductSwitchItemCss = ":host{width:var(--_ui5_product_switch_item_width);height:var(--_ui5_product_switch_item_height);margin:.25rem;border-radius:.25rem;box-sizing:border-box;background:var(--sapList_Background)}:host(:hover){background:var(--sapList_Hover_Background)}:host([active]){background:var(--sapList_Active_Background)}:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-icon,:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-heading,:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{color:var(--sapList_Active_TextColor)}:host([focused]){outline:var(--_ui5_product_switch_item_outline);outline-offset:var(--_ui5_product_switch_item_outline_offset)}:host([active][focused]){outline-color:var(--_ui5_product_switch_item_active_outline_color)}.ui5-product-switch-item-root{user-select:none;-ms-user-select:none;width:100%;height:100%;flex-direction:column;display:flex;align-items:center;text-decoration:none;outline:none;box-sizing:border-box;padding:.5rem;padding-top:4rem;cursor:pointer;border:var(--_ui5_product_switch_item_border)}:host([icon]) .ui5-product-switch-item-root{padding-top:.5rem}.ui5-product-switch-item-root .ui5-product-switch-item-icon{width:3rem;height:3rem;padding:.75rem;margin-bottom:.5rem;box-sizing:border-box;color:var(--sapContent_IconColor);pointer-events:none}.ui5-product-switch-item-root .ui5-product-switch-item-text-content{display:flex;align-items:center;flex-direction:column;max-width:10.25rem}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-heading,.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{line-height:1.25rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;pointer-events:none}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-heading{font-size:var(--sapFontHeader6Size);color:var(--sapGroup_TitleTextColor)}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{font-size:var(--sapFontSmallSize);color:var(--sapContent_LabelColor)}@media only screen and (max-width:600px){:host{margin:0;width:100%;max-width:600px;height:5rem;border-radius:0}.ui5-product-switch-item-root{padding:0 1rem;flex-direction:row}:host([icon]) .ui5-product-switch-item-root{padding-top:0}.ui5-product-switch-item-root .ui5-product-switch-item-icon{padding:.875rem;color:var(--sapContent_NonInteractiveIconColor);margin:0 .75rem 0 0}.ui5-product-switch-item-root .ui5-product-switch-item-text-content{align-items:flex-start;max-width:100%}:host([icon]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content{max-width:calc(100% - 3.75rem)}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-heading,.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{line-height:normal}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{font-size:var(--sapFontSize);padding-top:.75rem}}[ui5-product-switch-item][focused]{outline:none;position:relative}[ui5-product-switch-item][focused] .ui5-product-switch-item-root:after{content:\"\";position:absolute;border-color:var(--_ui5_product_switch_item_outline_color);border-width:var(--_ui5_product_switch_item_outline_width);border-style:dotted;top:var(--_ui5_product_switch_item_outline_offset_positive);bottom:var(--_ui5_product_switch_item_outline_offset_positive);left:var(--_ui5_product_switch_item_outline_offset_positive);right:var(--_ui5_product_switch_item_outline_offset_positive)}[ui5-product-switch-item][active][focused] .ui5-product-switch-item-root:after{border-color:var(--_ui5_product_switch_item_active_outline_color)}";

	/**
	 * @public
	 */
	const metadata$x = {
		tag: "ui5-product-switch-item",
		properties: /** @lends sap.ui.webcomponents.fiori.ProductSwitchItem.prototype */ {
			/**
			  * Defines the title of the <code>ui5-product-switch-item</code>.
			  * @type {string}
			  * @defaultvalue ""
			  * @public
			  */
			heading: {
				type: String,
			},

			/**
			 * Defines the subtitle of the <code>ui5-product-switch-item</code>.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			subtitle: {
				type: String,
			},

			/**
			 * Defines the icon to be displayed as a graphical element within the <code>ui5-product-switch-item</code>.
			 * <br><br>
			 * Example:
			 * <br>
			 * <pre>ui5-product-switch-item icon="palette"</pre>
			 *
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines a target where the <code>targetSrc</code> content must be open.
			 * <br><br>
			 * Available options are:
			 * <ul>
			 * <li><code>_self</code></li>
			 * <li><code>_top</code></li>
			 * <li><code>_blank</code></li>
			 * <li><code>_parent</code></li>
			 * <li><code>_search</code></li>
			 * </ul>
			 *
			 * @type {string}
			 * @defaultvalue "_self"
			 * @public
			 */
			target: {
				type: String,
				defaultValue: "_self",
			},

			/**
			 * Defines the <code>ui5-product-switch-item</code> target URI. Supports standard hyperlink behavior.
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			targetSrc: {
				type: String,
			},

			/**
			 * Used to switch the active state (pressed or not) of the <code>ui5-product-switch-item</code>.
			 * @private
			 */
			active: {
				type: Boolean,
			},

			/**
			 * Indicates whether the element is focused.
			 * @private
			 */
			focused: {
				type: Boolean,
			},

			_tabIndex: {
				type: String,
				defaultValue: "-1",
				noAttribute: true,
			},
		},
		slots: /** @lends  sap.ui.webcomponents.fiori.ProductSwitchItem.prototype */ {
		},
		events: /** @lends sap.ui.webcomponents.fiori.ProductSwitchItem.prototype */ {
			/**
			 * Fired when the <code>ui5-product-switch-item</code> is activated either with a
			 * click/tap or by using the Enter or Space key.
			 *
			 * @event
			 * @public
			 */
			click: {},
			_focused: {},
		},
	};

	/**
	 * @class
	 * <h3 class="comment-api-title">Overview</h3>
	 * The <code>ui5-product-switch-item</code> web component represents the items displayed in the
	 * <code>ui5-product-switch</code> web component.
	 * <br><br>
	 * <b>Note:</b> <code>ui5-product-switch-item</code> is not supported when used outside of <code>ui5-product-switch</code>.
	 * <br><br>
	 * <h3>ES6 Module Import</h3>
	 * <code>import "@ui5/webcomponents-fiori/dist/ProductSwitchItem.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.ProductSwitchItem
	 * @extends sap.ui.webcomponents.base.UI5Element
	 * @tagname ui5-product-switch-item
	 * @public
	 * @since 1.0.0-rc.5
	 */
	class ProductSwitchItem extends UI5Element {
		constructor() {
			super();

			this._deactivate = () => {
				if (this.active) {
					this.active = false;
				}
			};
		}

		static get metadata() {
			return metadata$x;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return ProductSwitchItemCss;
		}

		static get template() {
			return main$C;
		}

		onEnterDOM() {
			document.addEventListener("mouseup", this._deactivate);
		}

		onExitDOM() {
			document.removeEventListener("mouseup", this._deactivate);
		}

		_onmousedown() {
			this.active = true;
		}

		_onkeydown(event) {
			if (isSpace(event) || isEnter(event)) {
				this.active = true;
			}

			if (isSpace(event)) {
				event.preventDefault();
			}

			if (isEnter(event)) {
				this._fireItemClick();
			}
		}

		_onkeyup(event) {
			if (isSpace(event) || isEnter(event)) {
				this.active = false;
			}

			if (isSpace(event)) {
				this._fireItemClick();
			}
		}

		_onfocusout() {
			this.active = false;
			this.focused = false;
		}

		_onfocusin(event) {
			this.focused = true;

			this.fireEvent("_focused", event);
		}

		_fireItemClick() {
			this.fireEvent("click", { item: this });
		}

		static get dependencies() {
			return [Icon];
		}
	}

	ProductSwitchItem.define();

	/**
	 * @public
	 */
	const metadata$y = {
		tag: "ui5-tree-item",
		properties: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {

			/**
			 * Defines the text of the tree item.
			 *
			 * @public
			 * @type {String}
			 * @defaultValue ""
			 */
			text: {
				type: String,
			},

			/**
			 * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			expanded: {
				type: Boolean,
			},

			/**
			 * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.
			 * <br>
			 * <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons.
			 * Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button.
			 * It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			hasChildren: {
				type: Boolean,
			},

			/**
			 * Defines whether the tree node is selected by the user. Only has effect if the <code>ui5-tree</code> is in one of the
			 * following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			selected: {
				type: Boolean,
			},

			/**
			 * If set, an icon will be displayed before the text, representing the tree item.
			 *
			 * @public
			 * @type {String}
			 * @defaultValue ""
			 */
			icon: {
				type: String,
			},
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {

			/**
			 * Defines the items of this <code>ui5-tree-item</code>.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				propertyName: "items",
				type: HTMLElement,
				invalidateOnChildChange: true,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 * This is the item to use inside a <code>ui5-tree</code>.
	 * You can represent an arbitrary tree structure by recursively nesting tree items.
	 *
	 * <h3>Usage</h3>
	 * <code>ui5-tree-item</code> is an abstract element, representing a node in a <code>ui5-tree</code>. The tree itself is rendered as a list,
	 * and each <code>ui5-tree-item</code> is represented by a list item(<code>ui5-li-tree</code>) in that list. Therefore, you should only use
	 * <code>ui5-tree-item</code> directly in your apps. The <code>ui5-li-tree</code> list item is internal for the list, and not intended for public use.
	 *
	 * <h3>ES6 Module Import</h3>
	 * <code>import @ui5/webcomponents/dist/TreeItem.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.TreeItem
	 * @extends UI5Element
	 * @tagname ui5-tree-item
	 * @public
	 * @since 1.0.0-rc.8
	 */
	class TreeItem extends UI5Element {
		static get metadata() {
			return metadata$y;
		}

		get requiresToggleButton() {
			return this.hasChildren || this.items.length > 0;
		}

		/**
		 * Call this method to manually switch the <code>expanded</code> state of a tree item.
		 *
		 * @public
		 */
		toggle() {
			this.expanded = !this.expanded;
		}
	}

	TreeItem.define();

	const name$g = "navigation-right-arrow";
	const pathData$g = "M296 268q11-12 0-23L139 86q-10-10-10-23t10-22q9-10 22-10t23 10l191 193q9 9 9 22.5t-9 22.5L183 471q-10 10-23 10t-23-10q-9-9-9-22.5t9-22.5z";
	const ltr$g = false;
	const collection$g = "SAP-icons";

	registerIcon(name$g, { pathData: pathData$g, ltr: ltr$g, collection: collection$g});

	const block0$D = (context) => { return scopedHtml`<li tabindex="${ifDefined(context._tabIndex)}" class="${classMap(context.classes.main)}" dir="${ifDefined(context.effectiveDir)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" @keyup="${context._onkeyup}" @keydown="${context._onkeydown}" @mouseup="${context._onmouseup}" @mousedown="${context._onmousedown}" @touchstart="${context._ontouchstart}" @touchend="${context._ontouchend}" @click="${context._onclick}" aria-selected="${ifDefined(context.ariaSelected)}" role="${ifDefined(context._accInfo.role)}" aria-expanded="${ifDefined(context._accInfo.ariaExpanded)}" aria-level="${ifDefined(context._accInfo.ariaLevel)}" style="list-style-type: none;"><div class="ui5-li-tree-toggle-box" style="padding-left: ${ifDefined(context.effectiveLevel)}rem; padding-left: calc(var(--_ui5-tree-indent-step) * ${ifDefined(context.effectiveLevel)});">${ context._showToggleButtonBeginning ? block1$v(context) : undefined }</div>${ context.placeSelectionElementBefore ? block2$u(context) : undefined }<div id="${ifDefined(context._id)}-content" class="ui5-li-content">${ context.icon ? block6$b(context) : undefined }${ context._showTitle ? block7$9() : undefined }</div>${ context._showToggleButtonEnd ? block8$8(context) : undefined }${ context.typeDetail ? block9$6(context) : undefined }${ context.placeSelectionElementAfter ? block10$5(context) : undefined }</li> `; };
	const block1$v = (context) => { return scopedHtml`<ui5-icon class="ui5-li-tree-toggle-icon" name="${ifDefined(context._toggleIconName)}" @click="${context._toggleClick}"></ui5-icon>`; };
	const block2$u = (context) => { return scopedHtml`${ context.modeSingleSelect ? block3$j(context) : undefined }${ context.modeMultiSelect ? block4$f(context) : undefined }${ context.modeDelete ? block5$d(context) : undefined }`; };
	const block3$j = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block4$f = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block5$d = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };
	const block6$b = (context) => { return scopedHtml`<ui5-icon part="icon" name="${ifDefined(context.icon)}" class="ui5-li-icon"></ui5-icon>`; };
	const block7$9 = (context) => { return scopedHtml`<div part="title" class="ui5-li-title"><slot></slot></div>`; };
	const block8$8 = (context) => { return scopedHtml`<ui5-icon class="ui5-li-tree-toggle-icon" name="${ifDefined(context._toggleIconName)}" @click="${context._toggleClick}"></ui5-icon>`; };
	const block9$6 = (context) => { return scopedHtml`<div class="ui5-li-detailbtn"><ui5-button design="Transparent" icon="edit" @click="${context.onDetailClick}"></ui5-button></div>`; };
	const block10$5 = (context) => { return scopedHtml`${ context.modeSingleSelect ? block11$4(context) : undefined }${ context.modeMultiSelect ? block12$4(context) : undefined }${ context.modeDelete ? block13$3(context) : undefined }`; };
	const block11$4 = (context) => { return scopedHtml`<ui5-radiobutton ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?selected="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></ui5-radiobutton>`; };
	const block12$4 = (context) => { return scopedHtml`<ui5-checkbox ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></ui5-checkbox>`; };
	const block13$3 = (context) => { return scopedHtml`<div class="ui5-li-deletebtn"><ui5-button id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></ui5-button></div>`; };


	const main$D = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$D(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var treeListItemCss = ":host(:not([hidden])){display:block;cursor:pointer;position:relative}:host([_minimal]) .ui5-li-tree-toggle-box{width:0}:host([_minimal]) .ui5-li-icon{padding:0}:host([_minimal]) .ui5-li-content{justify-content:center}:host([_minimal]) .ui5-li-root-tree{padding:0}:host([_minimal][show-toggle-button]):after{content:\"\";width:0;height:0;border-left:.375rem solid transparent;border-bottom:.375rem solid var(--sapContent_IconColor);position:absolute;right:.1875rem;bottom:.125rem}.ui5-li-root-tree{padding-left:0}:host(:not([level=\"1\"])),:host([selected][has-border]:not([level=\"1\"])){border-bottom:none}:host([_toggle-button-end][selected]:not([level=\"1\"])){border-bottom:var(--ui5-listitem-selected-border-bottom)}:host([_toggle-button-end]:not([selected])) .ui5-li-root-tree:hover{background:var(--sapList_Hover_Background);cursor:pointer}:host(:not([level=\"1\"])) .ui5-li-root-tree{background:var(--sapList_AlternatingBackground)}:host([_toggle-button-end]:not([level=\"1\"])) .ui5-li-root-tree{background:var(--ui5-listitem-background-color)}:host([_toggle-button-end][selected]:not([level=\"1\"])) .ui5-li-root-tree{background:var(--sapList_SelectionBackgroundColor)}.ui5-li-tree-toggle-box{width:var(--_ui5-tree-toggle-box-width);height:var(--_ui5-tree-toggle-box-height);display:flex;align-items:center;justify-content:center}.ui5-li-tree-toggle-icon{width:var(--_ui5-tree-toggle-icon-size);height:var(--_ui5-tree-toggle-icon-size)}:host([actionable]) .ui5-li-tree-toggle-icon{color:var(--sapButton_TextColor)}:host([active][actionable]) .ui5-li-tree-toggle-icon{color:var(--sapList_Active_TextColor)}";

	/**
	 * @public
	 */
	const metadata$z = {
		tag: "ui5-li-tree",
		properties: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {

			/**
			 * Defines the indentation of the tree list item. Use level 1 for tree list items, representing top-level tree nodes.
			 *
			 * @type {Integer}
			 * @public
			 * @defaultValue 1
			 */
			level: {
				type: Integer,
				defaultValue: 1,
			},

			/**
			 * If set, an icon will be displayed before the text of the tree list item.
			 *
			 * @public
			 * @type {String}
			 * @defaultValue ""
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines whether the tree list item should display an expand/collapse button.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			showToggleButton: {
				type: Boolean,
			},

			/**
			 * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.
			 *
			 * @type {boolean}
			 * @defaultvalue false
			 * @public
			 */
			expanded: {
				type: Boolean,
			},

			/**
			 * Defines whether the toggle button is shown at the end, rather than at the beginning of the item
			 *
			 * @protected
			 * @since 1.0.0-rc.8
			 */
			_toggleButtonEnd: {
				type: Boolean,
			},

			/**
			 * Defines whether the item shows minimal details - only icon (no text or toggle button)
			 *
			 * @protected
			 * @since 1.0.0-rc.8
			 */
			_minimal: {
				type: Boolean,
			},

		},
		slots: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {
			/**
			 * Defines the text of the <code>ui5-li-tree</code>.
			 * <br><br>
			 * <b>Note:</b> Аlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
			 *
			 * @type {Node[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: Node,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.TreeListItem.prototype */ {

			/**
			 * Fired when the user interacts with the expand/collapse button of the tree list item.
			 * @event
			 * @param {HTMLElement} item the toggled item.
			 * @public
			 */
			toggle: {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the user drills down into the tree hierarchy by pressing the right arrow on the tree node.
			 *
			 * @event sap.ui.webcomponents.main.TreeListItem#step-in
			 * @param {HTMLElement} item the item on which right arrow was pressed.
			 * @public
			 */
			"step-in": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the user goes up the tree hierarchy by pressing the left arrow on the tree node.
			 *
			 * @event sap.ui.webcomponents.main.TreeListItem#step-out
			 * @param {HTMLElement} item the item on which left arrow was pressed.
			 * @public
			 */
			"step-out": {
				detail: {
					item: { type: HTMLElement },
				},
			},
		},
	};

	/**
	 * @class
	 * The <code>ui5-li-tree</code> represents a node in a tree structure, shown as a <code>ui5-list</code>.
	 * <br>
	 * <i>Note:</i> Do not use <code>ui5-li-tree</code> directly in your apps. Use <code>ui5-tree-item</code> instead, as it can be nested inside a <code>ui5-tree</code>.
	 * On the other hand, <code>ui5-li-tree</code> can only be slotted inside a <code>ui5-list</code>, being a list item. It may be useful if you want to build a custom tree component, for example.
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.TreeListItem
	 * @extends ListItem
	 * @tagname ui5-li-tree
	 * @public
	 * @since 1.0.0-rc.8
	 */
	class TreeListItem extends ListItem {
		static get template() {
			return main$D;
		}

		static get styles() {
			return [ListItem.styles, treeListItemCss];
		}

		static get metadata() {
			return metadata$z;
		}

		static get dependencies() {
			return [
				...ListItem.dependencies,
				Icon,
			];
		}

		onBeforeRendering() {
			this.actionable = false;
		}

		get classes() {
			const allClasses = super.classes;
			allClasses.main["ui5-li-root-tree"] = true;
			return allClasses;
		}

		get effectiveLevel() {
			return this.level - 1;
		}

		get hasParent() {
			return this.level > 1;
		}

		get _toggleIconName() {
			return this.expanded ? "navigation-down-arrow" : "navigation-right-arrow";
		}

		get _showToggleButtonBeginning() {
			return this.showToggleButton && !this._minimal && !this._toggleButtonEnd;
		}

		get _showToggleButtonEnd() {
			return this.showToggleButton && !this._minimal && this._toggleButtonEnd;
		}

		get _showTitle() {
			return this.textContent.length && !this._minimal;
		}

		get _accInfo() {
			return {
				role: "treeitem",
				ariaExpanded: this.showToggleButton ? this.expanded : undefined,
				ariaLevel: this.level,
			};
		}

		_toggleClick(event) {
			event.stopPropagation();
			this.fireEvent("toggle", { item: this });
		}

		_onkeydown(event) {
			super._onkeydown(event);

			if (this.showToggleButton && isRight(event)) {
				if (!this.expanded) {
					this.fireEvent("toggle", { item: this });
				} else {
					this.fireEvent("step-in", { item: this });
				}
			}

			if (isLeft(event)) {
				if (this.expanded) {
					this.fireEvent("toggle", { item: this });
				} else if (this.hasParent) {
					this.fireEvent("step-out", { item: this });
				}
			}
		}
	}

	TreeListItem.define();

	const block0$E = (context) => { return scopedHtml`<ui5-list .mode="${ifDefined(context.mode)}" .headerText="${ifDefined(context.headerText)}" .footerText="${ifDefined(context.footerText)}" .noDataText="${ifDefined(context.noDataText)}" .role="${ifDefined(context._role)}" @ui5-item-click="${ifDefined(context._onListItemClick)}" @ui5-item-delete="${ifDefined(context._onListItemDelete)}" @ui5-selection-change="${ifDefined(context._onListSelectionChange)}" class="ui5-tree-root"><slot name="header" slot="header"></slot>${ repeat(context._listItems, (item, index) => item._id || index, (item, index) => block1$w(item, index, context)) }</ui5-list> `; };
	const block1$w = (item, index, context) => { return scopedHtml`<ui5-li-tree type="Active" level="${ifDefined(item.level)}" icon="${ifDefined(item.treeItem.icon)}" ?_toggle-button-end="${ifDefined(context._toggleButtonEnd)}" ?_minimal="${ifDefined(context._minimal)}" .treeItem="${ifDefined(item.treeItem)}" .expanded="${ifDefined(item.treeItem.expanded)}" .selected="${ifDefined(item.treeItem.selected)}" .showToggleButton="${ifDefined(item.treeItem.requiresToggleButton)}" @ui5-toggle="${ifDefined(context._onListItemToggle)}" @ui5-step-in="${ifDefined(context._onListItemStepIn)}" @ui5-step-out="${ifDefined(context._onListItemStepOut)}">${ifDefined(item.treeItem.text)}</ui5-li-tree>`; };


	const main$E = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$E(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents", "sap_fiori_3", defaultTheme);
	var TreeCss = ".ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0}:host(:not([hidden])){display:block;width:100%}.ui5-tree-root{height:100%;width:100%}";

	/**
	 * @public
	 */
	const metadata$A = {
		tag: "ui5-tree",
		properties: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {
			/**
			 * Defines the mode of the <code>ui5-tree</code>. Since the tree uses a <code>ui5-list</code> to display its structure,
			 * the tree modes are exactly the same as the list modes, and are all applicable.
			 * <br><br>
			 * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,
			 * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.
			 *
			 * @public
			 * @type {ListMode}
			 * @defaultValue "None"
			 */
			mode: {
				type: ListMode,
				defaultValue: ListMode.None,
			},

			/**
			 * Defines the text that is displayed when the <code>ui5-tree</code> contains no items.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			noDataText: {
				type: String,
			},

			/**
			 * Defines the <code>ui5-tree</code> header text.
			 * <br><br>
			 * <b>Note:</b> If the <code>header</code> slot is set, this property is ignored.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			headerText: {
				type: String,
			},

			/**
			 * Defines the <code>ui5-tree</code> footer text.
			 *
			 * @type {string}
			 * @defaultvalue ""
			 * @public
			 */
			footerText: {
				type: String,
			},

			/**
			 * An array, containing a flat structure of list items to render
			 *
			 * @private
			 */
			_listItems: {
				type: Object,
				multiple: true,
			},

			/**
			 * Shows the toggle button at the end, rather than at the beginning of the items
			 *
			 * @protected
			 * @since 1.0.0-rc.8
			 */
			_toggleButtonEnd: {
				type: Boolean,
			},

			/**
			 * Represents the tree in a very minimal state - icons only with no text and no toggle buttons
			 *
			 * @protected
			 * @since 1.0.0-rc.8
			 */
			_minimal: {
				type: Boolean,
			},
		},
		managedSlots: true,
		slots: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {

			/**
			 * Defines the items of the <code>ui5-tree</code>. Tree items may have other tree items as children.
			 * <br><br>
			 * <b>Note:</b> Use <code>ui5-tree-item</code> for the intended design.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			"default": {
				type: HTMLElement,
				propertyName: "items",
				invalidateOnChildChange: true,
			},

			/**
			 * Defines the <code>ui5-tree</code> header.
			 * <br><br>
			 * <b>Note:</b> When the <code>header</code> slot is set, the
			 * <code>headerText</code> property is ignored.
			 *
			 * @type {HTMLElement[]}
			 * @slot
			 * @public
			 */
			header: {
				type: HTMLElement,
			},
		},
		events: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {

			/**
			 * Fired when a tree item is expanded or collapsed.
			 * <i>Note:</i> You can call <code>preventDefault()</code> on the event object to suppress the event, if needed.
			 * This may be handy for example if you want to dynamically load tree items upon the user expanding a node.
			 * Even if you prevented the event's default behavior, you can always manually call <code>toggle()</code> on a tree item.
			 *
			 * @event sap.ui.webcomponents.main.Tree#item-toggle
			 * @param {HTMLElement} item the toggled item.
			 * @public
			 */
			"item-toggle": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when a tree item is activated.
			 *
			 * @event sap.ui.webcomponents.main.Tree#item-click
			 * @param {HTMLElement} item the clicked item.
			 * @public
			 */
			"item-click": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when the Delete button of any tree item is pressed.
			 * <br><br>
			 * <b>Note:</b> A Delete button is displayed on each item,
			 * when the <code>ui5-tree</code> <code>mode</code> property is set to <code>Delete</code>.
			 *
			 * @event sap.ui.webcomponents.main.Tree#item-delete
			 * @param {HTMLElement} item the deleted item.
			 * @public
			 */
			"item-delete": {
				detail: {
					item: { type: HTMLElement },
				},
			},

			/**
			 * Fired when selection is changed by user interaction
			 * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.
			 *
			 * @event sap.ui.webcomponents.main.Tree#selection-change
			 * @param {Array} selectedItems An array of the selected items.
			 * @param {Array} previouslySelectedItems An array of the previously selected items.
			 * @public
			 */
			"selection-change": {
				detail: {
					selectedItems: { type: Array },
					previouslySelectedItems: { type: Array },
				},
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 * The <code>ui5-tree</code> component provides a tree structure for displaying data in a hierarchy.
	 *
	 * <h3>Keyboard Handling</h3>
	 * <code>ui5-tree</code> provides advanced keyboard handling. You can use the up/down arrow keys to navigate to the previous/next item in the list,
	 * representing the tree, regardless of nesting, but also the left/right arrow keys to drill down and go up the tree. If you press the right arrow
	 * on a tree node, it will expand, if not expanded. If you press the right arrow key once more, the first child of this node will be selected.
	 * If you press the left arrow on a tree node, it will collapse, if expanded. If you press the left arrow key once more, the parent node of this
	 * tree node will be selected.
	 *
	 * <h3>ES6 Module Import</h3>
	 * <code>import @ui5/webcomponents/dist/Tree.js";</code>
	 * <br>
	 * <code>import @ui5/webcomponents/dist/TreeItem.js";</code> (for its respective item element)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.main.Tree
	 * @extends UI5Element
	 * @tagname ui5-tree
	 * @appenddocs TreeItem
	 * @public
	 * @since 1.0.0-rc.8
	 */
	class Tree extends UI5Element {
		static get metadata() {
			return metadata$A;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return TreeCss;
		}

		static get template() {
			return main$E;
		}

		static get dependencies() {
			return [
				List,
				TreeListItem,
				TreeItem,
			];
		}

		onBeforeRendering() {
			this._listItems = [];
			buildTree(this, 1, this._listItems);
		}

		get list() {
			return this.getDomRef();
		}

		get _role() {
			return "tree";
		}

		_onListItemStepIn(event) {
			const listItem = event.detail.item;
			const treeItem = listItem.treeItem;
			if (treeItem.items.length > 0) {
				const firstChild = treeItem.items[0];
				const firstChildListItem = this.list.getSlottedNodes("items").find(li => li.treeItem === firstChild);
				firstChildListItem && this.list.focusItem(firstChildListItem);
			}
		}

		_onListItemStepOut(event) {
			const listItem = event.detail.item;
			const treeItem = listItem.treeItem;
			if (treeItem.parentElement !== this) {
				const parent = treeItem.parentElement;
				const parentListItem = this.list.getSlottedNodes("items").find(li => li.treeItem === parent);
				parentListItem && this.list.focusItem(parentListItem);
			}
		}

		_onListItemToggle(event) {
			const listItem = event.detail.item;
			const treeItem = listItem.treeItem;
			const defaultPrevented = !this.fireEvent("item-toggle", { item: treeItem }, true);
			if (!defaultPrevented) {
				treeItem.toggle();
			}
		}

		_onListItemClick(event) {
			const listItem = event.detail.item;
			const treeItem = listItem.treeItem;
			this.fireEvent("item-click", { item: treeItem });
		}

		_onListItemDelete(event) {
			const listItem = event.detail.item;
			const treeItem = listItem.treeItem;
			this.fireEvent("item-delete", { item: treeItem });
		}

		_onListSelectionChange(event) {
			const previouslySelectedItems = event.detail.previouslySelectedItems.map(item => item.treeItem);
			const selectedItems = event.detail.selectedItems.map(item => item.treeItem);

			previouslySelectedItems.forEach(item => {
				item.selected = false;
			});
			selectedItems.forEach(item => {
				item.selected = true;
			});

			this.fireEvent("selection-change", {
				previouslySelectedItems,
				selectedItems,
			});
		}

		/**
		 * Returns the corresponding list item for a given tree item
		 *
		 * @param item The tree item
		 * @protected
		 */
		_getListItemForTreeItem(item) {
			return this.list.items.find(listItem => listItem.treeItem === item);
		}

		/**
		 * Perform Depth-First-Search walk on the tree and run a callback on each node
		 *
		 * @public
		 * @param {function} callback function to execute on each node of the tree with 2 arguments: the node and the level
		 */
		walk(callback) {
			walkTree(this, 1, callback);
		}
	}

	const walkTree = (el, level, callback) => {
		el.items.forEach(item => {
			callback(item, level);
			if (item.items.length > 0) {
				walkTree(item, level + 1, callback);
			}
		});
	};

	const buildTree = (el, level, result) => {
		el.items.forEach(item => {
			const listItem = {
				treeItem: item,
				level,
			};

			result.push(listItem);
			if (item.expanded && item.items.length > 0) {
				buildTree(item, level + 1, result);
			}
		});
	};

	Tree.define();

	const block0$F = (context) => { return scopedHtml`<div class="ui5-sn-root">${ context.showHeader ? block1$x() : undefined }${ context.items.length ? block2$v(context) : undefined }<div class="ui5-sn-spacer"></div>${ context.fixedItems.length ? block6$c(context) : undefined }</div> `; };
	const block1$x = (context) => { return scopedHtml`<slot name="header"></slot>`; };
	const block2$v = (context) => { return scopedHtml`<ui5-tree id="ui5-sn-items-tree" mode="None" ?_minimal="${ifDefined(context.collapsed)}" _toggle-button-end @ui5-item-click="${ifDefined(context.handleTreeItemClick)}">${ repeat(context._items, (item, index) => item._id || index, (item, index) => block3$k(item, index, context)) }</ui5-tree>`; };
	const block3$k = (item, index, context) => { return scopedHtml`<ui5-tree-item icon="${ifDefined(item.item.icon)}" .associatedItem="${ifDefined(item.item)}" text="${ifDefined(item.item.text)}" ?has-children="${item.item.items.length}" ?expanded="${item.item.expanded}" ?selected="${item.selected}">${ !context.collapsed ? block4$g(item) : undefined }</ui5-tree-item>`; };
	const block4$g = (item, index, context) => { return scopedHtml`${ repeat(item.item.items, (item, index) => item._id || index, (item, index) => block5$e(item)) }`; };
	const block5$e = (item, index, context) => { return scopedHtml`<ui5-tree-item .associatedItem="${ifDefined(item)}" text="${ifDefined(item.text)}" icon="${ifDefined(item.icon)}" ?selected="${item.selected}"></ui5-tree-item>`; };
	const block6$c = (context) => { return scopedHtml`<div><div class="ui5-sn-bottom-content-border"><span></span></div><ui5-tree id="ui5-sn-fixed-items-tree" mode="None" ?_minimal="${ifDefined(context.collapsed)}" _toggle-button-end @ui5-item-click="${ifDefined(context.handleTreeItemClick)}">${ repeat(context._fixedItems, (item, index) => item._id || index, (item, index) => block7$a(item, index, context)) }</ui5-tree></div>`; };
	const block7$a = (item, index, context) => { return scopedHtml`<ui5-tree-item icon="${ifDefined(item.item.icon)}" .associatedItem="${ifDefined(item.item)}" text="${ifDefined(item.item.text)}" ?has-children="${item.item.items.length}" ?expanded="${item.item.expanded}" ?selected="${item.selected}">${ !context.collapsed ? block8$9(item) : undefined }</ui5-tree-item>`; };
	const block8$9 = (item, index, context) => { return scopedHtml`${ repeat(item.item.items, (item, index) => item._id || index, (item, index) => block9$7(item)) }`; };
	const block9$7 = (item, index, context) => { return scopedHtml`<ui5-tree-item .associatedItem="${ifDefined(item)}" text="${ifDefined(item.text)}" ?selected="${item.selected}"></ui5-tree-item>`; };


	const main$F = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$F(context);
	};

	const block0$G = (context) => { return scopedHtml`<ui5-responsive-popover vertical-align="Top"><ui5-list mode="None" @ui5-item-click="${ifDefined(context.handleListItemClick)}"><ui5-li ?selected="${context._popoverContent.mainItemSelected}" .associatedItem="${ifDefined(context._popoverContent.mainItem)}">${ifDefined(context._popoverContent.mainItem.text)}</ui5-li>${ repeat(context._popoverContent.subItems, (item, index) => item._id || index, (item, index) => block1$y(item)) }</ui5-list></ui5-responsive-popover>`; };
	const block1$y = (item, index, context) => { return scopedHtml`<ui5-li ?selected="${item.selected}" .associatedItem="${ifDefined(item)}">${ifDefined(item.text)}</ui5-li>`; };


	const main$G = (context, tags, suffix) => {
		setTags(tags);
		setSuffix(suffix);
		return block0$G(context);
	};

	registerThemeProperties("@ui5/webcomponents-theme-base", "sap_fiori_3", defaultThemeBase);
	registerThemeProperties("@ui5/webcomponents-fiori", "sap_fiori_3", defaultTheme$1);
	var SideNavigationCss = ":host(:not([hidden])){display:inline-block;width:15rem;height:100%;border-right:var(--sapList_BorderWidth) solid var(--sapList_GroupHeaderBorderColor);transition:width .25s;--_ui5-tree-toggle-box-width:1rem}:host([collapsed]){width:3rem;min-width:3rem}.ui5-sn-bottom-content-border{width:100%;padding:0 .5rem;margin:.25rem 0;display:flex;justify-content:center;box-sizing:border-box}.ui5-sn-bottom-content-border>span{width:90%;height:.125rem;background:var(--sapList_GroupHeaderBorderColor)}.ui5-sn-root{height:100%;display:flex;flex-direction:column;background:var(--sapList_Background)}.ui5-sn-spacer{flex:auto;min-height:3rem}";

	/**
	 * @public
	 */
	const metadata$B = {
		tag: "ui5-side-navigation",
		managedSlots: true,
		properties: /** @lends sap.ui.webcomponents.fiori.SideNavigation.prototype */ {
			/**
			 * Defines whether the <code>ui5-side-navigation</code> is expanded or collapsed.
			 *
			 * @public
			 * @type {boolean}
			 * @defaultvalue false
			 */
			collapsed: {
				type: Boolean,
			},

			/**
			 * @private
			 */
			_popoverContent: {
				type: Object,
			},
		},
		slots: /** @lends sap.ui.webcomponents.fiori.SideNavigation.prototype */ {
			/**
			 * Defines the main items of the <code>ui5-side-navigation</code>. Use the <code>ui5-side-navigation-item</code> component
			 * for the top-level items, and the <code>ui5-side-navigation-sub-item</code> component for second-level items, nested
			 * inside the items.
			 *
			 * @public
			 * @slot
			 */
			"default": {
				propertyName: "items",
				invalidateOnChildChange: true,
				type: HTMLElement,
			},

			/**
			 * Defines the header of the <code>ui5-side-navigation</code>.
			 *
			 * <br><br>
			 * <b>Note:</b> The header is displayed when the component is expanded - the property <code>collapsed</code> is false;
			 *
			 * @public
			 * @since 1.0.0-rc.11
			 * @slot
			 */
			header: {
				type: HTMLElement,
			},

			/**
			 * Defines the fixed items at the bottom of the <code>ui5-side-navigation</code>. Use the <code>ui5-side-navigation-item</code> component
			 * for the fixed items, and optionally the <code>ui5-side-navigation-sub-item</code> component to provide second-level items inside them.
			 *
			 * <b>Note:</b> In order to achieve the best user experience, it is recommended that you keep the fixed items "flat" (do not pass sub-items)
			 *
			 * @public
			 * @slot
			 */
			fixedItems: {
				type: HTMLElement,
				invalidateOnChildChange: true,
			},
		},
		events: /** @lends sap.ui.webcomponents.fiori.SideNavigation.prototype */ {
			/**
			 * Fired when the selection has changed via user interaction
			 *
			 * @event sap.ui.webcomponents.fiori.SideNavigation#selection-change
			 * @param {HTMLElement} item the clicked item.
			 * @public
			 */
			"selection-change": {
				item: {
					type: HTMLElement,
				},
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>SideNavigation</code> is used as a standard menu in applications.
	 * It consists of three containers: header (top-aligned), main navigation section (top-aligned) and the secondary section (bottom-aligned).
	 * <ul>
	 * <li>The header is meant for displaying user related information - profile data, avatar, etc.</li>
	 * <li>The main navigation section is related to the user’s current work context</li>
	 * <li>The secondary section is mostly used to link additional information that may be of interest (legal information, developer communities, external help, contact information and so on). </li>
	 * </ul>
	 *
	 * <h3>Usage</h3>
	 *
	 * Use the available <code>ui5-side-navigation-item</code> and <code>ui5-side-navigation-sub-item</code> components to build your menu.
	 * The items can consist of text only or an icon with text. The use or non-use of icons must be consistent for all items on one level.
	 * You must not combine entries with and without icons on the same level. We strongly recommend that you do not use icons on the second level.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents-fiori/dist/SideNavigation.js";</code>
	 * <br>
	 * <code>import "@ui5/webcomponents-fiori/dist/SideNavigationItem.js";</code> (for <code>ui5-side-navigation-item</code>)
	 * <br>
	 * <code>import "@ui5/webcomponents-fiori/dist/SideNavigationSubItem.js";</code> (for <code>ui5-side-navigation-sub-item</code>)
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.SideNavigation
	 * @extends UI5Element
	 * @tagname ui5-side-navigation
	 * @since 1.0.0-rc.8
	 * @appenddocs SideNavigationItem SideNavigationSubItem
	 * @public
	 */
	class SideNavigation extends UI5Element {
		static get metadata() {
			return metadata$B;
		}

		static get render() {
			return litRender;
		}

		static get styles() {
			return SideNavigationCss;
		}

		static get template() {
			return main$F;
		}

		static get staticAreaTemplate() {
			return main$G;
		}

		static get dependencies() {
			return [
				List,
				StandardListItem,
				Tree,
				TreeItem,
				ResponsivePopover,
			];
		}

		onBeforeRendering() {
			this._items = this.items.map(item => {
				return {
					item,
					selected: ((item.items.some(subItem => subItem.selected) && this.collapsed) || item.selected),
				};
			});

			this._fixedItems = this.fixedItems.map(item => {
				return {
					item,
					selected: ((item.items.some(subItem => subItem.selected) && this.collapsed) || item.selected),
				};
			});
		}

		_setSelectedItem(item) {
			this._walk(current => {
				current.selected = false;
			});
			item.selected = true;

			this.fireEvent("selection-change", { item });
		}

		_buildPopoverContent(item) {
			this._popoverContent = {
				mainItem: item,
				mainItemSelected: item.selected && !item.items.some(subItem => subItem.selected),
				subItems: item.items,
			};
		}

		handleTreeItemClick(event) {
			const treeItem = event.detail.item;
			const item = treeItem.associatedItem;

			if (!item.wholeItemToggleable) {
				item.fireEvent("click");
			} else {
				item.expanded = !item.expanded;
			}

			if (item.selected && !this.collapsed) {
				return;
			}

			if (this.collapsed && item.items.length) {
				this._buildPopoverContent(item);
				const currentTree = this._itemsTree === event.target ? this._itemsTree : this._fixedItemsTree;
				this.openPicker(currentTree._getListItemForTreeItem(treeItem));
			} else {
				this._setSelectedItem(item);
			}
		}

		handleListItemClick(event) {
			const listItem = event.detail.item;
			const item = listItem.associatedItem;

			if (item.selected) {
				return;
			}

			this._setSelectedItem(item);
			this.closePicker();
		}

		async getPicker() {
			return (await this.getStaticAreaItemDomRef()).querySelector("[ui5-responsive-popover]");
		}

		async openPicker(opener) {
			const responsivePopover = await this.getPicker();
			responsivePopover.open(opener);
		}

		async closePicker(opener) {
			const responsivePopover = await this.getPicker();
			responsivePopover.close();
		}

		get hasHeader() {
			return !!this.header.length;
		}

		get showHeader() {
			return this.hasHeader && !this.collapsed;
		}

		get _itemsTree() {
			return this.getDomRef().querySelector("#ui5-sn-items-tree");
		}

		get _fixedItemsTree() {
			return this.getDomRef().querySelector("#ui5-sn-fixed-items-tree");
		}

		_walk(callback) {
			this.items.forEach(current => {
				callback(current);

				current.items.forEach(currentSubitem => {
					callback(currentSubitem);
				});
			});

			this.fixedItems.forEach(current => {
				callback(current);

				current.items.forEach(currentSubitem => {
					callback(currentSubitem);
				});
			});
		}
	}

	SideNavigation.define();

	/**
	 * @public
	 */
	const metadata$C = {
		tag: "ui5-side-navigation-item",
		managedSlots: true,
		properties: /** @lends sap.ui.webcomponents.fiori.SideNavigationItem.prototype */ {
			/**
			 * Defines the text of the item.
			 *
			 * @public
			 * @type {string}
			 * @defaultvalue ""
			 */
			text: {
				type: String,
			},

			/**
			 * Defines the icon of the item.
			 * <br><br>
			 *
			 * The SAP-icons font provides numerous options.
			 * <br>
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 * @public
			 * @type {string}
			 * @defaultvalue ""
			 */
			icon: {
				type: String,
			},

			/**
			 * Defines if the item is expanded
			 *
			 * @public
			 * @type {boolean}
			 * @defaultvalue false
			 */
			expanded: {
				type: Boolean,
			},

			/**
			 * Defines whether the subitem is selected
			 *
			 * @public
			 * @type {boolean}
			 * @defaultvalue false
			 */
			selected: {
				type: Boolean,
			},

			/**
			 * Defines whether pressing the whole item or only pressing the icon will show/hide the items's sub items(if present).
			 * If set to true, pressing the whole item will toggle the sub items, and it won't fire the <code>click</code> event.
			 * By default, only pressing the arrow icon will toggle the sub items & the click event will be fired if the item is pressed outside of the icon.
			 *
			 * @public
			 * @type {boolean}
			 * @defaultvalue false
			 * @since 1.0.0-rc.11
			 */
			wholeItemToggleable: {
				type: Boolean,
			},
		},

		events: {
			/**
			 * @public
			 * @event
			 * @since 1.0.0-rc.9
			 */
			click: {

			},
		},

		slots: /** @lends sap.ui.webcomponents.fiori.SideNavigationItem.prototype */ {
			/**
			 * If you wish to nest menus, you can pass inner menu items to the default slot.
			 *
			 * @type {HTMLElement[]}
			 * @public
			 * @slot
			 */
			"default": {
				propertyName: "items",
				invalidateOnChildChange: true,
				type: HTMLElement,
			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-side-navigation-item</code> is used within <code>ui5-side-navigation</code> only.
	 * Via the <code>ui5-side-navigation-item</code> you control the content of the <code>SideNavigation</code>.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents-fiori/dist/SideNavigationItem.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.SideNavigationItem
	 * @extends UI5Element
	 * @tagname ui5-side-navigation-item
	 * @public
	 * @since 1.0.0-rc.8
	 */
	class SideNavigationItem extends UI5Element {
		static get metadata() {
			return metadata$C;
		}
	}

	SideNavigationItem.define();

	/**
	 * @public
	 */
	const metadata$D = {
		tag: "ui5-side-navigation-sub-item",
		properties: /** @lends sap.ui.webcomponents.fiori.SideNavigationSubItem.prototype */ {
			/**
			 * Defines the text of the item.
			 *
			 * @public
			 * @type {string}
			 * @defaultvalue ""
			 */
			text: {
				type: String,
			},

			/**
			 * Defines whether the subitem is selected.
			 *
			 * @public
			 * @type {boolean}
			 * @defaultvalue false
			 */
			selected: {
				type: Boolean,
			},

			/**
			 * Defines the icon of the item.
			 * <br><br>
			 *
			 * The SAP-icons font provides numerous options.
			 * <br>
			 * See all the available icons in the <ui5-link target="_blank" href="https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html" class="api-table-content-cell-link">Icon Explorer</ui5-link>.
			 * @public
			 * @type {string}
			 * @defaultvalue ""
			 */
			icon: {
				type: String,
			},
		},

		events: {
			/**
			 * @public
			 * @event
			 * @since 1.0.0-rc.9
			 */
			click: {

			},
		},
	};

	/**
	 * @class
	 *
	 * <h3 class="comment-api-title">Overview</h3>
	 *
	 * The <code>ui5-side-navigation-sub-item</code> is intended to be used inside a <code>ui5-side-navigation-item</code> only.
	 *
	 * <h3>ES6 Module Import</h3>
	 *
	 * <code>import @ui5/webcomponents-fiori/dist/SideNavigationSubItem.js";</code>
	 *
	 * @constructor
	 * @author SAP SE
	 * @alias sap.ui.webcomponents.fiori.SideNavigationSubItem
	 * @extends UI5Element
	 * @tagname ui5-side-navigation-sub-item
	 * @public
	 * @since 1.0.0-rc.8
	 */
	class SideNavigationSubItem extends UI5Element {
		static get metadata() {
			return metadata$D;
		}
	}

	SideNavigationSubItem.define();

	var ar$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ar.3cb0c9150a0d3b65.json";

	var bg$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_bg.c5b5f09d4cdc05c2.json";

	var ca$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ca.21eddad79e57b196.json";

	var cs$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_cs.254cf5a554d6c3cf.json";

	var da$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_da.292202a074417518.json";

	var de$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_de.8a37d0d12d5f3fdb.json";

	var el$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_el.20e733cf13266e95.json";

	var en$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_en.2116c2eb907f4239.json";

	var es$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_es.4b7a0782bf89db91.json";

	var et$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_et.32a3ecb2ab90d7e1.json";

	var fi$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fi.59f4c565254f8bd7.json";

	var fr$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_fr.4823ab3f68b56fff.json";

	var hi$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hi.169377676442a6c3.json";

	var hr$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hr.7b0f01264adee46e.json";

	var hu$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_hu.b7073837581b601d.json";

	var it$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_it.7aa517f8f41868e7.json";

	var iw$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_iw.f8e9297bda991f89.json";

	var ja$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ja.94a03c1b60503735.json";

	var kk$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_kk.8108317e69a7b684.json";

	var ko$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ko.30d4f96289f472cb.json";

	var lt$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lt.3132c6a3e0a20741.json";

	var lv$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_lv.6d37db7bca572e88.json";

	var ms$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ms.96b31d30dbb8df67.json";

	var nl$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_nl.55a55c21aa99f942.json";

	var no$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_no.b9dc8ffcbe8a355c.json";

	var pl$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pl.6cd59d32e72c298e.json";

	var pt$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_pt.2c1d8ef6246adb51.json";

	var ro$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ro.fb81096a3806a008.json";

	var ru$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_ru.d749fe9a4410804b.json";

	var sh$2 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sh.916eebfe6e3f1a59.json";

	var sk$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sk.8974857bc54ff0cd.json";

	var sl$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sl.641196e022a3f742.json";

	var sv$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_sv.80f494abf30df0c1.json";

	var th$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_th.379bcb24bcfc7df4.json";

	var tr$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_tr.afe04d29d9dba0d7.json";

	var uk$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_uk.4afab4a3f061d588.json";

	var vi$3 = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_vi.2c80623c96bff00a.json";

	var zhCN = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_CN.aacf4602bca2861e.json";

	var zhTW = "/_Resources/Static/Packages/Yalento.Neos.League/dist/messagebundle_zh_TW.e049f5a95536f343.json";

	const bundleMap$2 = {
		ar: ar$3,
		bg: bg$3,
		ca: ca$3,
		cs: cs$3,
		da: da$3,
		de: de$3,
		el: el$3,
		en: en$3,
		es: es$3,
		et: et$3,
		fi: fi$3,
		fr: fr$3,
		hi: hi$3,
		hr: hr$3,
		hu: hu$3,
		it: it$3,
		iw: iw$2,
		ja: ja$3,
		kk: kk$3,
		ko: ko$3,
		lt: lt$3,
		lv: lv$3,
		ms: ms$3,
		nl: nl$3,
		no: no$2,
		pl: pl$3,
		pt: pt$3,
		ro: ro$3,
		ru: ru$3,
		sh: sh$2,
		sk: sk$3,
		sl: sl$3,
		sv: sv$3,
		th: th$3,
		tr: tr$3,
		uk: uk$3,
		vi: vi$3,
		zh_CN: zhCN,
		zh_TW: zhTW,
	};

	const allEntriesInlined$3 = Object.entries(bundleMap$2).every(([_key, value]) => typeof (value) === "object");

	/* eslint-disable */
	if (allEntriesInlined$3) {
		console.warn(`Inefficient bundling detected: consider bundling i18n imports as URLs instead of inlining them.
See rollup-plugin-url or webpack file-loader for more information.
Suggested pattern: "assets\\\/.*\\\.json"`);
	}
	/* eslint-enable */

	registerI18nBundle("@ui5/webcomponents-icons", bundleMap$2);

	const registerIconBundle = async (collectionName, bundleData) => {
		let resolveFn;
		const collectionFetched = new Promise(resolve => {
			resolveFn = resolve;
		});
		registerCollectionPromise(collectionName, collectionFetched);

		if (typeof bundleData !== "object") { // not inlined from build -> fetch it
			bundleData = await fetchJsonOnce(getEffectiveAssetPath(bundleData));
		}
		fillRegistry(bundleData);
		resolveFn();
	};

	const fillRegistry = bundleData => {
		Object.keys(bundleData.data).forEach(iconName => {
			const iconData = bundleData.data[iconName];

			registerIcon(iconName, {
				pathData: iconData.path,
				ltr: iconData.ltr,
				accData: iconData.acc,
				collection: bundleData.collection,
			 });
		});
	};

	var SAPIcons = "/_Resources/Static/Packages/Yalento.Neos.League/dist/SAP-icons.6dfb44c5a9373ee7.json";

	registerIconBundle("SAP-icons", SAPIcons);

}());
